{"version":3,"file":"login.js","sources":["../../../../Umbraco.Web.UI.Login/node_modules/@hey-api/client-fetch/dist/index.js","../../../../Umbraco.Web.UI.Login/src/api/client.gen.ts","../../../../Umbraco.Web.UI.Login/src/api/sdk.gen.ts","../../../../Umbraco.Web.UI.Login/src/utils/is-problem-details.function.ts","../../../../Umbraco.Web.UI.Login/src/contexts/auth.repository.ts","../../../../Umbraco.Web.UI.Login/src/contexts/auth.context.ts","../../../../Umbraco.Web.UI.Login/src/controllers/slim-backoffice-initializer.ts","../../../../Umbraco.Web.UI.Login/src/umbraco-package.ts","../../../../Umbraco.Web.UI.Login/src/auth.element.ts","../../../../Umbraco.Web.UI.Login/src/components/layouts/auth-layout.element.ts","../../../../Umbraco.Web.UI.Login/src/components/layouts/confirmation-layout.element.ts","../../../../Umbraco.Web.UI.Login/src/components/layouts/error-layout.element.ts","../../../../Umbraco.Web.UI.Login/src/components/layouts/new-password-layout.element.ts","../../../../Umbraco.Web.UI.Login/src/components/pages/invite.page.element.ts","../../../../Umbraco.Web.UI.Login/src/components/pages/login.page.element.ts","../../../../Umbraco.Web.UI.Login/src/utils/load-custom-view.function.ts","../../../../Umbraco.Web.UI.Login/src/components/pages/mfa.page.element.ts","../../../../Umbraco.Web.UI.Login/src/components/pages/new-password.page.element.ts","../../../../Umbraco.Web.UI.Login/src/components/pages/reset-password.page.element.ts","../../../../Umbraco.Web.UI.Login/src/components/back-to-login-button.element.ts"],"sourcesContent":["var j=async(t,r)=>{let e=typeof r==\"function\"?await r(t):r;if(e)return t.scheme===\"bearer\"?`Bearer ${e}`:t.scheme===\"basic\"?`Basic ${btoa(e)}`:e},z=(t,r,e)=>{typeof e==\"string\"||e instanceof Blob?t.append(r,e):t.append(r,JSON.stringify(e));},I=(t,r,e)=>{typeof e==\"string\"?t.append(r,e):t.append(r,JSON.stringify(e));},k={bodySerializer:t=>{let r=new FormData;return Object.entries(t).forEach(([e,i])=>{i!=null&&(Array.isArray(i)?i.forEach(a=>z(r,e,a)):z(r,e,i));}),r}},R={bodySerializer:t=>JSON.stringify(t,(r,e)=>typeof e==\"bigint\"?e.toString():e)},$={bodySerializer:t=>{let r=new URLSearchParams;return Object.entries(t).forEach(([e,i])=>{i!=null&&(Array.isArray(i)?i.forEach(a=>I(r,e,a)):I(r,e,i));}),r.toString()}},U=t=>{switch(t){case \"label\":return \".\";case \"matrix\":return \";\";case \"simple\":return \",\";default:return \"&\"}},_=t=>{switch(t){case \"form\":return \",\";case \"pipeDelimited\":return \"|\";case \"spaceDelimited\":return \"%20\";default:return \",\"}},D=t=>{switch(t){case \"label\":return \".\";case \"matrix\":return \";\";case \"simple\":return \",\";default:return \"&\"}},O=({allowReserved:t,explode:r,name:e,style:i,value:a})=>{if(!r){let n=(t?a:a.map(l=>encodeURIComponent(l))).join(_(i));switch(i){case \"label\":return `.${n}`;case \"matrix\":return `;${e}=${n}`;case \"simple\":return n;default:return `${e}=${n}`}}let o=U(i),s=a.map(n=>i===\"label\"||i===\"simple\"?t?n:encodeURIComponent(n):y({allowReserved:t,name:e,value:n})).join(o);return i===\"label\"||i===\"matrix\"?o+s:s},y=({allowReserved:t,name:r,value:e})=>{if(e==null)return \"\";if(typeof e==\"object\")throw new Error(\"Deeply-nested arrays/objects aren\\u2019t supported. Provide your own `querySerializer()` to handle these.\");return `${r}=${t?e:encodeURIComponent(e)}`},q=({allowReserved:t,explode:r,name:e,style:i,value:a})=>{if(a instanceof Date)return `${e}=${a.toISOString()}`;if(i!==\"deepObject\"&&!r){let n=[];Object.entries(a).forEach(([f,p])=>{n=[...n,f,t?p:encodeURIComponent(p)];});let l=n.join(\",\");switch(i){case \"form\":return `${e}=${l}`;case \"label\":return `.${l}`;case \"matrix\":return `;${e}=${l}`;default:return l}}let o=D(i),s=Object.entries(a).map(([n,l])=>y({allowReserved:t,name:i===\"deepObject\"?`${e}[${n}]`:n,value:l})).join(o);return i===\"label\"||i===\"matrix\"?o+s:s};var H=/\\{[^{}]+\\}/g,B=({path:t,url:r})=>{let e=r,i=r.match(H);if(i)for(let a of i){let o=false,s=a.substring(1,a.length-1),n=\"simple\";s.endsWith(\"*\")&&(o=true,s=s.substring(0,s.length-1)),s.startsWith(\".\")?(s=s.substring(1),n=\"label\"):s.startsWith(\";\")&&(s=s.substring(1),n=\"matrix\");let l=t[s];if(l==null)continue;if(Array.isArray(l)){e=e.replace(a,O({explode:o,name:s,style:n,value:l}));continue}if(typeof l==\"object\"){e=e.replace(a,q({explode:o,name:s,style:n,value:l}));continue}if(n===\"matrix\"){e=e.replace(a,`;${y({name:s,value:l})}`);continue}let f=encodeURIComponent(n===\"label\"?`.${l}`:l);e=e.replace(a,f);}return e},A=({allowReserved:t,array:r,object:e}={})=>a=>{let o=[];if(a&&typeof a==\"object\")for(let s in a){let n=a[s];if(n!=null)if(Array.isArray(n)){let l=O({allowReserved:t,explode:true,name:s,style:\"form\",value:n,...r});l&&o.push(l);}else if(typeof n==\"object\"){let l=q({allowReserved:t,explode:true,name:s,style:\"deepObject\",value:n,...e});l&&o.push(l);}else {let l=y({allowReserved:t,name:s,value:n});l&&o.push(l);}}return o.join(\"&\")},P=t=>{if(!t)return \"stream\";let r=t.split(\";\")[0]?.trim();if(r){if(r.startsWith(\"application/json\")||r.endsWith(\"+json\"))return \"json\";if(r===\"multipart/form-data\")return \"formData\";if([\"application/\",\"audio/\",\"image/\",\"video/\"].some(e=>r.startsWith(e)))return \"blob\";if(r.startsWith(\"text/\"))return \"text\"}},E=async({security:t,...r})=>{for(let e of t){let i=await j(e,r.auth);if(!i)continue;let a=e.name??\"Authorization\";switch(e.in){case \"query\":r.query||(r.query={}),r.query[a]=i;break;case \"cookie\":r.headers.append(\"Cookie\",`${a}=${i}`);break;case \"header\":default:r.headers.set(a,i);break}return}},S=t=>W({baseUrl:t.baseUrl,path:t.path,query:t.query,querySerializer:typeof t.querySerializer==\"function\"?t.querySerializer:A(t.querySerializer),url:t.url}),W=({baseUrl:t,path:r,query:e,querySerializer:i,url:a})=>{let o=a.startsWith(\"/\")?a:`/${a}`,s=(t??\"\")+o;r&&(s=B({path:r,url:s}));let n=e?i(e):\"\";return n.startsWith(\"?\")&&(n=n.substring(1)),n&&(s+=`?${n}`),s},x=(t,r)=>{let e={...t,...r};return e.baseUrl?.endsWith(\"/\")&&(e.baseUrl=e.baseUrl.substring(0,e.baseUrl.length-1)),e.headers=C(t.headers,r.headers),e},C=(...t)=>{let r=new Headers;for(let e of t){if(!e||typeof e!=\"object\")continue;let i=e instanceof Headers?e.entries():Object.entries(e);for(let[a,o]of i)if(o===null)r.delete(a);else if(Array.isArray(o))for(let s of o)r.append(a,s);else o!==void 0&&r.set(a,typeof o==\"object\"?JSON.stringify(o):o);}return r},h=class{_fns;constructor(){this._fns=[];}clear(){this._fns=[];}getInterceptorIndex(r){return typeof r==\"number\"?this._fns[r]?r:-1:this._fns.indexOf(r)}exists(r){let e=this.getInterceptorIndex(r);return !!this._fns[e]}eject(r){let e=this.getInterceptorIndex(r);this._fns[e]&&(this._fns[e]=null);}update(r,e){let i=this.getInterceptorIndex(r);return this._fns[i]?(this._fns[i]=e,r):false}use(r){return this._fns=[...this._fns,r],this._fns.length-1}},v=()=>({error:new h,request:new h,response:new h}),N=A({allowReserved:false,array:{explode:true,style:\"form\"},object:{explode:true,style:\"deepObject\"}}),Q={\"Content-Type\":\"application/json\"},w=(t={})=>({...R,headers:Q,parseAs:\"auto\",querySerializer:N,...t});var J=(t={})=>{let r=x(w(),t),e=()=>({...r}),i=s=>(r=x(r,s),e()),a=v(),o=async s=>{let n={...r,...s,fetch:s.fetch??r.fetch??globalThis.fetch,headers:C(r.headers,s.headers)};n.security&&await E({...n,security:n.security}),n.body&&n.bodySerializer&&(n.body=n.bodySerializer(n.body)),(n.body===void 0||n.body===\"\")&&n.headers.delete(\"Content-Type\");let l=S(n),f={redirect:\"follow\",...n},p=new Request(l,f);for(let c of a.request._fns)c&&(p=await c(p,n));let T=n.fetch,u=await T(p);for(let c of a.response._fns)c&&(u=await c(u,p,n));let m={request:p,response:u};if(u.ok){if(u.status===204||u.headers.get(\"Content-Length\")===\"0\")return {data:{},...m};let c=(n.parseAs===\"auto\"?P(u.headers.get(\"Content-Type\")):n.parseAs)??\"json\";if(c===\"stream\")return {data:u.body,...m};let b=await u[c]();return c===\"json\"&&(n.responseValidator&&await n.responseValidator(b),n.responseTransformer&&(b=await n.responseTransformer(b))),{data:b,...m}}let g=await u.text();try{g=JSON.parse(g);}catch{}let d=g;for(let c of a.error._fns)c&&(d=await c(g,u,p,n));if(d=d||{},n.throwOnError)throw d;return {error:d,...m}};return {buildUrl:S,connect:s=>o({...s,method:\"CONNECT\"}),delete:s=>o({...s,method:\"DELETE\"}),get:s=>o({...s,method:\"GET\"}),getConfig:e,head:s=>o({...s,method:\"HEAD\"}),interceptors:a,options:s=>o({...s,method:\"OPTIONS\"}),patch:s=>o({...s,method:\"PATCH\"}),post:s=>o({...s,method:\"POST\"}),put:s=>o({...s,method:\"PUT\"}),request:o,setConfig:i,trace:s=>o({...s,method:\"TRACE\"})}};export{J as createClient,w as createConfig,k as formDataBodySerializer,R as jsonBodySerializer,$ as urlSearchParamsBodySerializer};//# sourceMappingURL=index.js.map\n//# sourceMappingURL=index.js.map","// This file is auto-generated by @hey-api/openapi-ts\r\n\r\nimport type { ClientOptions } from './types.gen';\r\nimport { type Config, type ClientOptions as DefaultClientOptions, createClient, createConfig } from '@hey-api/client-fetch';\r\n\r\n/**\r\n * The `createClientConfig()` function will be called on client initialization\r\n * and the returned object will become the client's initial configuration.\r\n *\r\n * You may want to initialize your client this way instead of calling\r\n * `setConfig()`. This is useful for example if you're using Next.js\r\n * to ensure your client always has the correct values.\r\n */\r\nexport type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> = (override?: Config<DefaultClientOptions & T>) => Config<Required<DefaultClientOptions> & T>;\r\n\r\nexport const client = createClient(createConfig<ClientOptions>());","// This file is auto-generated by @hey-api/openapi-ts\r\n\r\nimport type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';\r\nimport type { GetSecurityConfigurationData, GetSecurityConfigurationResponse, PostSecurityForgotPasswordData, PostSecurityForgotPasswordError, PostSecurityForgotPasswordResetData, PostSecurityForgotPasswordResetResponse, PostSecurityForgotPasswordResetError, PostSecurityForgotPasswordVerifyData, PostSecurityForgotPasswordVerifyResponse, PostSecurityForgotPasswordVerifyError, PostUserInviteData, PostUserInviteError, PostUserInviteCreatePasswordData, PostUserInviteCreatePasswordError, PostUserInviteResendData, PostUserInviteResendError, PostUserInviteVerifyData, PostUserInviteVerifyResponse, PostUserInviteVerifyError } from './types.gen';\r\nimport { client as _heyApiClient } from './client.gen';\r\n\r\nexport type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {\r\n    /**\r\n     * You can provide a client instance returned by `createClient()` instead of\r\n     * individual options. This might be also useful if you want to implement a\r\n     * custom client.\r\n     */\r\n    client?: Client;\r\n    /**\r\n     * You can pass arbitrary values through the `meta` object. This can be\r\n     * used to access values that aren't defined as part of the SDK function.\r\n     */\r\n    meta?: Record<string, unknown>;\r\n};\r\n\r\nexport const getSecurityConfiguration = <ThrowOnError extends boolean = false>(options?: Options<GetSecurityConfigurationData, ThrowOnError>) => {\r\n    return (options?.client ?? _heyApiClient).get<GetSecurityConfigurationResponse, unknown, ThrowOnError>({\r\n        security: [\r\n            {\r\n                scheme: 'bearer',\r\n                type: 'http'\r\n            }\r\n        ],\r\n        url: '/umbraco/management/api/v1/security/configuration',\r\n        ...options\r\n    });\r\n};\r\n\r\nexport const postSecurityForgotPassword = <ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordData, ThrowOnError>) => {\r\n    return (options?.client ?? _heyApiClient).post<unknown, PostSecurityForgotPasswordError, ThrowOnError>({\r\n        security: [\r\n            {\r\n                scheme: 'bearer',\r\n                type: 'http'\r\n            }\r\n        ],\r\n        url: '/umbraco/management/api/v1/security/forgot-password',\r\n        ...options,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...options?.headers\r\n        }\r\n    });\r\n};\r\n\r\nexport const postSecurityForgotPasswordReset = <ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordResetData, ThrowOnError>) => {\r\n    return (options?.client ?? _heyApiClient).post<PostSecurityForgotPasswordResetResponse, PostSecurityForgotPasswordResetError, ThrowOnError>({\r\n        security: [\r\n            {\r\n                scheme: 'bearer',\r\n                type: 'http'\r\n            }\r\n        ],\r\n        url: '/umbraco/management/api/v1/security/forgot-password/reset',\r\n        ...options,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...options?.headers\r\n        }\r\n    });\r\n};\r\n\r\nexport const postSecurityForgotPasswordVerify = <ThrowOnError extends boolean = false>(options?: Options<PostSecurityForgotPasswordVerifyData, ThrowOnError>) => {\r\n    return (options?.client ?? _heyApiClient).post<PostSecurityForgotPasswordVerifyResponse, PostSecurityForgotPasswordVerifyError, ThrowOnError>({\r\n        url: '/umbraco/management/api/v1/security/forgot-password/verify',\r\n        ...options,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...options?.headers\r\n        }\r\n    });\r\n};\r\n\r\nexport const postUserInvite = <ThrowOnError extends boolean = false>(options?: Options<PostUserInviteData, ThrowOnError>) => {\r\n    return (options?.client ?? _heyApiClient).post<unknown, PostUserInviteError, ThrowOnError>({\r\n        security: [\r\n            {\r\n                scheme: 'bearer',\r\n                type: 'http'\r\n            }\r\n        ],\r\n        url: '/umbraco/management/api/v1/user/invite',\r\n        ...options,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...options?.headers\r\n        }\r\n    });\r\n};\r\n\r\nexport const postUserInviteCreatePassword = <ThrowOnError extends boolean = false>(options?: Options<PostUserInviteCreatePasswordData, ThrowOnError>) => {\r\n    return (options?.client ?? _heyApiClient).post<unknown, PostUserInviteCreatePasswordError, ThrowOnError>({\r\n        url: '/umbraco/management/api/v1/user/invite/create-password',\r\n        ...options,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...options?.headers\r\n        }\r\n    });\r\n};\r\n\r\nexport const postUserInviteResend = <ThrowOnError extends boolean = false>(options?: Options<PostUserInviteResendData, ThrowOnError>) => {\r\n    return (options?.client ?? _heyApiClient).post<unknown, PostUserInviteResendError, ThrowOnError>({\r\n        security: [\r\n            {\r\n                scheme: 'bearer',\r\n                type: 'http'\r\n            }\r\n        ],\r\n        url: '/umbraco/management/api/v1/user/invite/resend',\r\n        ...options,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...options?.headers\r\n        }\r\n    });\r\n};\r\n\r\nexport const postUserInviteVerify = <ThrowOnError extends boolean = false>(options?: Options<PostUserInviteVerifyData, ThrowOnError>) => {\r\n    return (options?.client ?? _heyApiClient).post<PostUserInviteVerifyResponse, PostUserInviteVerifyError, ThrowOnError>({\r\n        url: '/umbraco/management/api/v1/user/invite/verify',\r\n        ...options,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...options?.headers\r\n        }\r\n    });\r\n};","import type { UmbProblemDetails } from '../types.js';\r\n\r\n/**\r\n * @deprecated Use `isProblemDetailsLike` from `@umbraco-cms/backoffice/resources` instead.\r\n */\r\nexport function isProblemDetails(obj: unknown): obj is UmbProblemDetails {\r\n\treturn (\r\n\t\ttypeof obj === 'object' && obj !== null && 'type' in obj && 'title' in obj && 'status' in obj && 'detail' in obj\r\n\t);\r\n}\r\n","import {\r\n\tLoginRequestModel,\r\n\tLoginResponse,\r\n\tMfaCodeResponse,\r\n\tNewPasswordResponse,\r\n\tResetPasswordResponse,\r\n\tValidateInviteCodeResponse,\r\n\tValidatePasswordResetCodeResponse,\r\n} from '../types.js';\r\nimport {\r\n\tpostSecurityForgotPassword,\r\n\tpostSecurityForgotPasswordReset,\r\n\tpostSecurityForgotPasswordVerify,\r\n\tpostUserInviteCreatePassword,\r\n\tpostUserInviteVerify,\r\n} from '../api/index.js';\r\nimport { isProblemDetails } from '../utils/is-problem-details.function.js';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport { UmbLocalizationController } from '@umbraco-cms/backoffice/localization-api';\r\n\r\nexport class UmbAuthRepository extends UmbRepositoryBase {\r\n\t#localize = new UmbLocalizationController(this);\r\n\r\n\tpublic async login(data: LoginRequestModel): Promise<LoginResponse> {\r\n\t\ttry {\r\n\t\t\tconst request = new Request('/umbraco/management/api/v1/security/back-office/login', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tusername: data.username,\r\n\t\t\t\t\tpassword: data.password,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tconst response = await fetch(request);\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\t// If the response code is 402, it means that the user has enabled 2-factor authentication\r\n\t\t\t\tif (response.status === 402) {\r\n\t\t\t\t\tconst responseData = await response.json();\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tstatus: response.status,\r\n\t\t\t\t\t\ttwoFactorView: responseData.twoFactorLoginView ?? '',\r\n\t\t\t\t\t\ttwoFactorProviders: responseData.enabledTwoFactorProviderNames ?? [],\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstatus: response.status,\r\n\t\t\t\t\terror: await this.#getErrorText(response),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: data.username,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 500,\r\n\t\t\t\terror: error instanceof Error ? error.message : this.#localize.term('auth_receivedErrorFromServer'),\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async validateMfaCode(code: string, provider: string): Promise<MfaCodeResponse> {\r\n\t\ttry {\r\n\t\t\tconst requestData = new Request('/umbraco/management/api/v1/security/back-office/verify-2fa', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcode,\r\n\t\t\t\t\tprovider,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tconst response = await fetch(requestData);\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\terror:\r\n\t\t\t\t\t\tresponse.status === 400 ? this.#localize.term('auth_mfaInvalidCode') : await this.#getErrorText(response),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn {};\r\n\t\t} catch (error) {\r\n\t\t\treturn {\r\n\t\t\t\terror: error instanceof Error ? error.message : this.#localize.term('auth_receivedErrorFromServer'),\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async resetPassword(email: string): Promise<ResetPasswordResponse> {\r\n\t\tconst { error } = await postSecurityForgotPassword({\r\n\t\t\tbody: {\r\n\t\t\t\temail,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (error) {\r\n\t\t\treturn {\r\n\t\t\t\terror: this.#getApiErrorDetailText(error, 'Could not reset the password'),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\tpublic async validatePasswordResetCode(\r\n\t\tuserId: string,\r\n\t\tresetCode: string\r\n\t): Promise<ValidatePasswordResetCodeResponse> {\r\n\t\tconst { data, error } = await postSecurityForgotPasswordVerify({\r\n\t\t\tbody: {\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tid: userId,\r\n\t\t\t\t},\r\n\t\t\t\tresetCode,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (error || !data) {\r\n\t\t\treturn {\r\n\t\t\t\terror: this.#getApiErrorDetailText(error, 'Could not validate the password reset code'),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tpublic async newPassword(password: string, resetCode: string, userId: string): Promise<NewPasswordResponse> {\r\n\t\tconst { error } = await postSecurityForgotPasswordReset({\r\n\t\t\tbody: {\r\n\t\t\t\tpassword,\r\n\t\t\t\tresetCode,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tid: userId,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (error) {\r\n\t\t\treturn {\r\n\t\t\t\terror: this.#getApiErrorDetailText(error, 'Could not reset the password'),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\tpublic async validateInviteCode(token: string, userId: string): Promise<ValidateInviteCodeResponse> {\r\n\t\tconst { data, error } = await postUserInviteVerify({\r\n\t\t\tbody: {\r\n\t\t\t\ttoken,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tid: userId,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (error || !data) {\r\n\t\t\treturn {\r\n\t\t\t\terror: this.#getApiErrorDetailText(error, 'Could not validate the invite code'),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tpublic async newInvitedUserPassword(password: string, token: string, userId: string): Promise<NewPasswordResponse> {\r\n\t\tconst { error } = await postUserInviteCreatePassword({\r\n\t\t\tbody: {\r\n\t\t\t\tpassword,\r\n\t\t\t\ttoken,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tid: userId,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (error) {\r\n\t\t\treturn {\r\n\t\t\t\terror: this.#getApiErrorDetailText(error, 'Could not create a password for the invited user'),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\t#getApiErrorDetailText(error: unknown, fallbackText?: string): string | undefined {\r\n\t\tif (isProblemDetails(error)) {\r\n\t\t\treturn error.detail ?? error.title ?? undefined;\r\n\t\t}\r\n\r\n\t\tif (false === error instanceof Error) {\r\n\t\t\treturn fallbackText ?? 'An unknown error occurred.';\r\n\t\t}\r\n\r\n\t\t// Ignore cancel errors (user cancelled the request)\r\n\t\tif (error.name === 'CancelError') {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn error.message;\r\n\t}\r\n\r\n\tasync #getErrorText(response: Response): Promise<string> {\r\n\t\tswitch (response.status) {\r\n\t\t\tcase 400:\r\n\t\t\tcase 401:\r\n\t\t\t\treturn this.#localize.term('auth_userFailedLogin');\r\n\r\n\t\t\tcase 402:\r\n\t\t\t\treturn this.#localize.term('auth_mfaText');\r\n\r\n\t\t\tcase 403:\r\n\t\t\t\treturn this.#localize.term('auth_userLockedOut');\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.#localize.term('auth_receivedErrorFromServer');\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tLoginRequestModel,\r\n\tLoginResponse,\r\n\tResetPasswordResponse,\r\n\tValidatePasswordResetCodeResponse,\r\n\tNewPasswordResponse,\r\n\tPasswordConfigurationModel,\r\n\tValidateInviteCodeResponse,\r\n\tMfaCodeResponse,\r\n} from '../types.js';\r\nimport { UmbAuthRepository } from './auth.repository.js';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\nexport class UmbAuthContext extends UmbContextBase {\r\n\treadonly supportsPersistLogin = false;\r\n\ttwoFactorView = '';\r\n\tisMfaEnabled = false;\r\n\tmfaProviders: string[] = [];\r\n\tpasswordConfiguration?: PasswordConfigurationModel;\r\n\r\n\t#authRepository = new UmbAuthRepository(this);\r\n\r\n\t#returnPath = '';\r\n\r\n\tset returnPath(value: string) {\r\n\t\tthis.#returnPath = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the return path from the query string.\r\n\t *\r\n\t * It will first look for a `ReturnUrl` parameter, then a `returnPath` parameter, and finally the `returnPath` property.\r\n\t *\r\n\t * @returns The return path from the query string.\r\n\t */\r\n\tget returnPath(): string {\r\n\t\tconst params = new URLSearchParams(window.location.search);\r\n\t\tlet returnPath = params.get('ReturnUrl') ?? params.get('returnPath') ?? this.#returnPath;\r\n\r\n\t\t// If return path is empty, return an empty string.\r\n\t\tif (!returnPath) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\t// Safely check that the return path is valid and doesn't link to an external site.\r\n\t\tconst url = new URL(returnPath, window.location.origin);\r\n\r\n\t\tif (url.origin !== window.location.origin) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\treturn url.toString();\r\n\t}\r\n\r\n\tlogin(data: LoginRequestModel): Promise<LoginResponse> {\r\n\t\treturn this.#authRepository.login(data);\r\n\t}\r\n\r\n\tresetPassword(username: string): Promise<ResetPasswordResponse> {\r\n\t\treturn this.#authRepository.resetPassword(username);\r\n\t}\r\n\r\n\tvalidatePasswordResetCode(userId: string, resetCode: string): Promise<ValidatePasswordResetCodeResponse> {\r\n\t\treturn this.#authRepository.validatePasswordResetCode(userId, resetCode);\r\n\t}\r\n\r\n\tnewPassword(password: string, resetCode: string, userId: string): Promise<NewPasswordResponse> {\r\n\t\treturn this.#authRepository.newPassword(password, resetCode, userId);\r\n\t}\r\n\r\n\tnewInvitedUserPassword(password: string, token: string, userId: string): Promise<NewPasswordResponse> {\r\n\t\treturn this.#authRepository.newInvitedUserPassword(password, token, userId);\r\n\t}\r\n\r\n\tvalidateInviteCode(token: string, userId: string): Promise<ValidateInviteCodeResponse> {\r\n\t\treturn this.#authRepository.validateInviteCode(token, userId);\r\n\t}\r\n\r\n\tvalidateMfaCode(code: string, provider: string): Promise<MfaCodeResponse> {\r\n\t\treturn this.#authRepository.validateMfaCode(code, provider);\r\n\t}\r\n}\r\n\r\nexport const UMB_AUTH_CONTEXT = new UmbContextToken<UmbAuthContext>('UmbAuthContext');\r\n","import { UmbBundleExtensionInitializer, UmbServerExtensionRegistrator } from '@umbraco-cms/backoffice/extension-api';\r\nimport {\r\n\tUmbAppEntryPointExtensionInitializer,\r\n\tumbExtensionsRegistry,\r\n} from '@umbraco-cms/backoffice/extension-registry';\r\nimport type { UmbElement } from '@umbraco-cms/backoffice/element-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UUIIconRegistryEssential } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbServerConnection, UmbServerContext } from '@umbraco-cms/backoffice/server';\r\nimport { firstValueFrom } from '@umbraco-cms/backoffice/external/rxjs';\r\n\r\n// We import what we need from the Backoffice app.\r\n// In the future the login screen app will be a part of the Backoffice app, and we will not need to import these.\r\nimport '@umbraco-cms/backoffice/localization';\r\n\r\n/**\r\n * This is the initializer for the slim backoffice.\r\n * It is responsible for initializing the backoffice and only the extensions that is needed to run the login screen.\r\n */\r\nexport class UmbSlimBackofficeController extends UmbControllerBase {\r\n\tconstructor(host: UmbElement) {\r\n\t\tsuper(host);\r\n\r\n\t\tnew UmbBundleExtensionInitializer(host, umbExtensionsRegistry);\r\n\r\n\t\t// Attach the UUIIconRegistry to the host so that it can be used in the login screen.\r\n\t\tnew UUIIconRegistryEssential().attach(host);\r\n\r\n\t\t// Add the essential styles to the host so that it can be used in the login screen.\r\n\t\thost.classList.add('uui-text');\r\n\t\thost.classList.add('uui-font');\r\n\t}\r\n\r\n\tasync register(host: UmbElement) {\r\n\t\t// Get the server URL and backoffice path from the host.\r\n\t\tconst serverUrl = window.location.origin;\r\n\t\tconst serverConnection = new UmbServerConnection(host, serverUrl);\r\n\r\n\t\t// Create the server context for the slim backoffice.\r\n\t\t// This is needed by the UmbServerExtensionRegistrator to register the extensions.\r\n\t\tnew UmbServerContext(this, {\r\n\t\t\tbackofficePath: '/umbraco',\r\n\t\t\tserverUrl,\r\n\t\t\tserverConnection: serverConnection,\r\n\t\t});\r\n\r\n\t\t// Register the public extensions for the slim backoffice.\r\n\t\tawait new UmbServerExtensionRegistrator(this, umbExtensionsRegistry).registerPublicExtensions().catch((error) => {\r\n\t\t\tconsole.error(`Failed to register public extensions for the slim backoffice.`, error);\r\n\t\t});\r\n\r\n\t\tconst initializer = new UmbAppEntryPointExtensionInitializer(host, umbExtensionsRegistry);\r\n\t\tawait firstValueFrom(initializer.loaded);\r\n\t}\r\n}\r\n","import type { ManifestBundle } from \"@umbraco-cms/backoffice/extension-api\";\r\n\r\nexport const name = 'Umbraco.Auth';\r\nexport const version = '1.0.0';\r\nexport const extensions: Array<ManifestBundle> = [\r\n  {\r\n    name: 'Auth Bundle',\r\n    alias: 'Umb.Auth.Bundle',\r\n    type: 'bundle',\r\n    js: () => import('./manifests.js'),\r\n  },\r\n];\r\n","import { html, customElement, property, ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { InputType, UUIFormLayoutItemElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nimport { UMB_AUTH_CONTEXT, UmbAuthContext } from './contexts';\r\nimport { UmbSlimBackofficeController } from './controllers';\r\n\r\n// We import the authStyles here so that we can inline it in the shadow DOM that is created outside of the UmbAuthElement.\r\nimport authStyles from './auth-styles.css?inline';\r\n\r\n// Import the main bundle\r\nimport { extensions } from './umbraco-package.js';\r\n\r\nconst createInput = (opts: {\r\n\tid: string;\r\n\ttype: InputType;\r\n\tname: string;\r\n\tautocomplete: AutoFill;\r\n\tlabel: string;\r\n\tinputmode: string;\r\n\tautofocus?: boolean;\r\n}) => {\r\n\tconst input = document.createElement('input');\r\n\tinput.type = opts.type;\r\n\tinput.name = opts.name;\r\n\tinput.autocomplete = opts.autocomplete;\r\n\tinput.id = opts.id;\r\n\tinput.required = true;\r\n\tinput.inputMode = opts.inputmode;\r\n\tinput.ariaLabel = opts.label;\r\n\tinput.autofocus = opts.autofocus || false;\r\n\r\n\treturn input;\r\n};\r\n\r\nconst createLabel = (opts: { forId: string; localizeAlias: string; localizeFallback: string }) => {\r\n\tconst label = document.createElement('label');\r\n\tconst umbLocalize: any = document.createElement('umb-localize');\r\n\tumbLocalize.key = opts.localizeAlias;\r\n\tumbLocalize.innerHTML = opts.localizeFallback;\r\n\tlabel.htmlFor = opts.forId;\r\n\tlabel.appendChild(umbLocalize);\r\n\r\n\treturn label;\r\n};\r\n\r\nconst createFormLayoutItem = (label: HTMLLabelElement, input: HTMLInputElement) => {\r\n\tconst formLayoutItem = document.createElement('uui-form-layout-item') as UUIFormLayoutItemElement;\r\n\tformLayoutItem.appendChild(label);\r\n\tformLayoutItem.appendChild(input);\r\n\r\n\treturn formLayoutItem;\r\n};\r\n\r\nconst createForm = (elements: HTMLElement[]) => {\r\n\tconst styles = document.createElement('style');\r\n\tstyles.innerHTML = authStyles;\r\n\tconst form = document.createElement('form');\r\n\tform.id = 'umb-login-form';\r\n\tform.name = 'login-form';\r\n\tform.spellcheck = false;\r\n\r\n\telements.push(styles);\r\n\telements.forEach((element) => form.appendChild(element));\r\n\r\n\treturn form;\r\n};\r\n\r\n@customElement('umb-auth')\r\nexport default class UmbAuthElement extends UmbLitElement {\r\n\t/**\r\n\t * Disables the local login form and only allows external login providers.\r\n\t *\r\n\t * @attr disable-local-login\r\n\t */\r\n\t@property({ type: Boolean, attribute: 'disable-local-login' })\r\n\tdisableLocalLogin = false;\r\n\r\n\t@property({ attribute: 'background-image' })\r\n\tbackgroundImage?: string;\r\n\r\n\t@property({ attribute: 'logo-image' })\r\n\tlogoImage?: string;\r\n\r\n\t@property({ attribute: 'logo-image-alternative' })\r\n\tlogoImageAlternative?: string;\r\n\r\n\t@property({ type: Boolean, attribute: 'username-is-email' })\r\n\tusernameIsEmail = false;\r\n\r\n\t@property({ type: Boolean, attribute: 'allow-password-reset' })\r\n\tallowPasswordReset = false;\r\n\r\n\t@property({ type: Boolean, attribute: 'allow-user-invite' })\r\n\tallowUserInvite = false;\r\n\r\n\t@property({ attribute: 'return-url' })\r\n\tset returnPath(value: string) {\r\n\t\tthis.#authContext.returnPath = value;\r\n\t}\r\n\tget returnPath() {\r\n\t\treturn this.#authContext.returnPath;\r\n\t}\r\n\r\n\t/**\r\n\t * Override the default flow.\r\n\t */\r\n\tprotected flow?: 'mfa' | 'reset-password' | 'invite-user';\r\n\r\n\t_form?: HTMLFormElement;\r\n\t_usernameLayoutItem?: UUIFormLayoutItemElement;\r\n\t_passwordLayoutItem?: UUIFormLayoutItemElement;\r\n\t_usernameInput?: HTMLInputElement;\r\n\t_passwordInput?: HTMLInputElement;\r\n\t_usernameLabel?: HTMLLabelElement;\r\n\t_passwordLabel?: HTMLLabelElement;\r\n\r\n\t#authContext = new UmbAuthContext(this, UMB_AUTH_CONTEXT);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t(this as unknown as EventTarget).addEventListener('umb-login-flow', (e) => {\r\n\t\t\tif (e instanceof CustomEvent) {\r\n\t\t\t\tthis.flow = e.detail.flow || undefined;\r\n\t\t\t}\r\n\t\t\tthis.requestUpdate();\r\n\t\t});\r\n\t}\r\n\r\n\tasync firstUpdated() {\r\n\t\t// Bind the (slim) Backoffice controller to this element so that we can use utilities from the Backoffice app.\r\n\t\tawait new UmbSlimBackofficeController(this).register(this);\r\n\r\n\t\t// Register the main package for Umbraco.Auth\r\n\t\tumbExtensionsRegistry.registerMany(extensions);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tthis.#initializeForm();\r\n\t\t\t});\r\n\t\t}, 100);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tsuper.disconnectedCallback();\r\n\t\tthis._usernameLayoutItem?.remove();\r\n\t\tthis._passwordLayoutItem?.remove();\r\n\t\tthis._usernameLabel?.remove();\r\n\t\tthis._usernameInput?.remove();\r\n\t\tthis._passwordLabel?.remove();\r\n\t\tthis._passwordInput?.remove();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the login form and adds it to the DOM in the default slot.\r\n\t * This is done to avoid having to deal with the shadow DOM, which is not supported in Google Chrome for autocomplete/autofill.\r\n\t *\r\n\t * @see Track this intent-to-ship for Chrome https://groups.google.com/a/chromium.org/g/blink-dev/c/RY9leYMu5hI?pli=1\r\n\t * @private\r\n\t */\r\n\t#initializeForm() {\r\n\t\tconst labelUsername = this.usernameIsEmail ? this.localize.term('auth_email') : this.localize.term('auth_username');\r\n\t\tconst labelPassword = this.localize.term('auth_password');\r\n\r\n\t\tthis._usernameInput = createInput({\r\n\t\t\tid: 'username-input',\r\n\t\t\ttype: 'text',\r\n\t\t\tname: 'username',\r\n\t\t\tautocomplete: 'username',\r\n\t\t\tlabel: labelUsername,\r\n\t\t\tinputmode: this.usernameIsEmail ? 'email' : '',\r\n\t\t\tautofocus: true,\r\n\t\t});\r\n\t\tthis._passwordInput = createInput({\r\n\t\t\tid: 'password-input',\r\n\t\t\ttype: 'password',\r\n\t\t\tname: 'password',\r\n\t\t\tautocomplete: 'current-password',\r\n\t\t\tlabel: labelPassword,\r\n\t\t\tinputmode: '',\r\n\t\t});\r\n\t\tthis._usernameLabel = createLabel({\r\n\t\t\tforId: 'username-input',\r\n\t\t\tlocalizeAlias: this.usernameIsEmail ? 'auth_email' : 'auth_username',\r\n\t\t\tlocalizeFallback: this.usernameIsEmail ? 'Email' : 'Username',\r\n\t\t});\r\n\t\tthis._passwordLabel = createLabel({\r\n\t\t\tforId: 'password-input',\r\n\t\t\tlocalizeAlias: 'auth_password',\r\n\t\t\tlocalizeFallback: 'Password',\r\n\t\t});\r\n\r\n\t\tthis._usernameLayoutItem = createFormLayoutItem(this._usernameLabel, this._usernameInput);\r\n\t\tthis._passwordLayoutItem = createFormLayoutItem(this._passwordLabel, this._passwordInput);\r\n\r\n\t\tthis._form = createForm([this._usernameLayoutItem, this._passwordLayoutItem]);\r\n\r\n\t\tthis.insertAdjacentElement('beforeend', this._form);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<umb-auth-layout\r\n\t\t\t\tbackground-image=${ifDefined(this.backgroundImage)}\r\n\t\t\t\tlogo-image=${ifDefined(this.logoImage)}\r\n\t\t\t\tlogo-image-alternative=${ifDefined(this.logoImageAlternative)}>\r\n\t\t\t\t${this._renderFlowAndStatus()}\r\n\t\t\t</umb-auth-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate _renderFlowAndStatus() {\r\n\t\tif (this.disableLocalLogin) {\r\n\t\t\treturn html`\r\n\t\t\t\t<umb-error-layout no-back-link>\r\n\t\t\t\t\t<umb-localize key=\"auth_localLoginDisabled\"\r\n\t\t\t\t\t\t>Unfortunately, it is not possible to log in directly. It has been disabled by a login\r\n\t\t\t\t\t\tprovider.</umb-localize\r\n\t\t\t\t\t>\r\n\t\t\t\t</umb-error-layout>\r\n\t\t\t`;\r\n\t\t}\r\n\r\n\t\tconst searchParams = new URLSearchParams(window.location.search);\r\n\t\tlet flow = this.flow || searchParams.get('flow')?.toLowerCase();\r\n\t\tconst status = searchParams.get('status');\r\n\r\n\t\tif (status === 'resetCodeExpired') {\r\n\t\t\treturn html` <umb-error-layout message=${this.localize.term('auth_resetCodeExpired')}> </umb-error-layout>`;\r\n\t\t}\r\n\r\n\t\tif (flow === 'invite-user' && status === 'false') {\r\n\t\t\treturn html` <umb-error-layout message=${this.localize.term('auth_userInviteExpiredMessage')}>\r\n\t\t\t</umb-error-layout>`;\r\n\t\t}\r\n\r\n\t\t// validate\r\n\t\tif (flow) {\r\n\t\t\tif (flow === 'mfa' && !this.#authContext.isMfaEnabled) {\r\n\t\t\t\tflow = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (flow) {\r\n\t\t\tcase 'mfa':\r\n\t\t\t\treturn html` <umb-mfa-page></umb-mfa-page>`;\r\n\t\t\tcase 'reset':\r\n\t\t\t\treturn html` <umb-reset-password-page></umb-reset-password-page>`;\r\n\t\t\tcase 'reset-password':\r\n\t\t\t\treturn html` <umb-new-password-page></umb-new-password-page>`;\r\n\t\t\tcase 'invite-user':\r\n\t\t\t\treturn html` <umb-invite-page></umb-invite-page>`;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn html` <umb-login-page\r\n\t\t\t\t\t?allow-password-reset=${this.allowPasswordReset}\r\n\t\t\t\t\t?username-is-email=${this.usernameIsEmail}>\r\n\t\t\t\t\t<slot></slot>\r\n\t\t\t\t\t<slot name=\"subheadline\" slot=\"subheadline\"></slot>\r\n\t\t\t\t</umb-login-page>`;\r\n\t\t}\r\n\t}\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-auth': UmbAuthElement;\r\n\t}\r\n}\r\n","import { css, customElement, html, nothing, property, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { CSSResultGroup, PropertyValueMap } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n/**\r\n * The auth layout component.\r\n *\r\n * @element umb-auth-layout\r\n * @slot - The content of the layout\r\n * @cssprop --umb-login-background - The background of the layout (default: #f4f4f4)\r\n * @cssprop --umb-login-primary-color - The color of the headline (default: #283a97)\r\n * @cssprop --umb-login-text-color - The color of the text (default: #000)\r\n * @cssprop --umb-login-header-font-size - The font-size of the headline (default: 3rem)\r\n * @cssprop --umb-login-header-font-size-large - The font-size of the headline on large screens (default: 4rem)\r\n * @cssprop --umb-login-header-secondary-font-size - The font-size of the secondary headline (default: 2.4rem)\r\n * @cssprop --umb-login-image - The background of the image wrapper (default: the value of the backgroundImage property)\r\n * @cssprop --umb-login-image-display - The display of the image wrapper (default: flex)\r\n * @cssprop --umb-login-image-border-radius - The border-radius of the image wrapper (default: 38px)\r\n * @cssprop --umb-login-content-background - The background of the content wrapper (default: none)\r\n * @cssprop --umb-login-content-display - The display of the content wrapper (default: flex)\r\n * @cssprop --umb-login-content-width - The width of the content wrapper (default: 100%)\r\n * @cssprop --umb-login-content-height - The height of the content wrapper (default: 100%)\r\n * @cssprop --umb-login-content-border-radius - The border-radius of the content wrapper (default: 0)\r\n * @cssprop --umb-login-align-items - The align-items of the main wrapper (default: unset)\r\n * @cssprop --umb-login-button-border-radius - The border-radius of the buttons (default: 45px)\r\n * @cssprop --umb-login-curves-color - The color of the curves (default: #f5c1bc)\r\n * @cssprop --umb-login-curves-display - The display of the curves (default: inline)\r\n * @cssprop --umb-logo-width - The width of the logo (default: auto)\r\n * @cssprop --umb-logo-height - The height of the logo (default: 55px)\r\n * @cssprop --umb-logo-top - The top position of the logo (default: 24px)\r\n * @cssprop --umb-logo-left - The left position of the logo (default: 24px)\r\n * @cssprop --umb-logo-display - The display of the logo (default: block)\r\n */\r\n@customElement('umb-auth-layout')\r\nexport class UmbAuthLayoutElement extends UmbLitElement {\r\n\t@property({ attribute: 'background-image' })\r\n\tbackgroundImage?: string;\r\n\r\n\t@property({ attribute: 'logo-image' })\r\n\tlogoImage?: string;\r\n\r\n\t@property({ attribute: 'logo-image-alternative' })\r\n\tlogoImageAlternative?: string;\r\n\r\n\tprotected updated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\r\n\t\tsuper.updated(_changedProperties);\r\n\r\n\t\tif (_changedProperties.has<keyof this>('backgroundImage')) {\r\n\t\t\tthis.style.setProperty('--logo-alternative-display', this.backgroundImage ? 'none' : 'unset');\r\n\t\t\tthis.style.setProperty('--image', `url('${this.backgroundImage}') no-repeat center center/cover`);\r\n\t\t}\r\n\t}\r\n\r\n\t#renderImageContainer() {\r\n\t\tif (!this.backgroundImage) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<div id=\"image-container\">\r\n\t\t\t\t<div id=\"image\">\r\n\t\t\t\t\t<svg\r\n\t\t\t\t\t\tid=\"curve-top\"\r\n\t\t\t\t\t\twidth=\"1746\"\r\n\t\t\t\t\t\theight=\"1374\"\r\n\t\t\t\t\t\tviewBox=\"0 0 1746 1374\"\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t<path d=\"M8 1C61.5 722.5 206.5 1366.5 1745.5 1366.5\" stroke=\"currentColor\" stroke-width=\"15\" />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t<svg\r\n\t\t\t\t\t\tid=\"curve-bottom\"\r\n\t\t\t\t\t\twidth=\"1364\"\r\n\t\t\t\t\t\theight=\"552\"\r\n\t\t\t\t\t\tviewBox=\"0 0 1364 552\"\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t<path d=\"M1 8C387 24 1109 11 1357 548\" stroke=\"currentColor\" stroke-width=\"15\" />\r\n\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\tthis.logoImage,\r\n\t\t\t\t\t\t(logoImage) => html`<img id=\"logo-on-image\" src=${logoImage} alt=\"logo\" aria-hidden=\"true\" />`\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderContent() {\r\n\t\treturn html`\r\n\t\t\t<div id=\"content-container\">\r\n\t\t\t\t<div id=\"content\">\r\n\t\t\t\t\t<slot></slot>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<div id=${this.backgroundImage ? 'main' : 'main-no-image'}>\r\n\t\t\t\t${this.#renderImageContainer()} ${this.#renderContent()}\r\n\t\t\t</div>\r\n\t\t\t${when(\r\n\t\t\t\tthis.logoImageAlternative,\r\n\t\t\t\t(logoImageAlternative) =>\r\n\t\t\t\t\thtml`<img id=\"logo-on-background\" src=${logoImageAlternative} alt=\"logo\" aria-hidden=\"true\" />`\r\n\t\t\t)}\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic styles: CSSResultGroup = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\t--uui-color-interactive: var(--umb-login-primary-color, #283a97);\r\n\t\t\t\t--uui-button-border-radius: var(--umb-login-button-border-radius, 45px);\r\n\t\t\t\t--uui-color-default: var(--uui-color-interactive);\r\n\t\t\t\t--uui-button-height: 42px;\r\n\t\t\t\t--uui-select-height: 38px;\r\n\r\n\t\t\t\t--input-height: 40px;\r\n\t\t\t\t--header-font-size: var(--umb-login-header-font-size, 3rem);\r\n\t\t\t\t--header-secondary-font-size: var(--umb-login-header-secondary-font-size, 2.4rem);\r\n\t\t\t\t--curves-color: var(--umb-login-curves-color, #f5c1bc);\r\n\t\t\t\t--curves-display: var(--umb-login-curves-display, inline);\r\n\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tbackground: var(--umb-login-background, #f4f4f4);\r\n\t\t\t\tcolor: var(--umb-login-text-color, #000);\r\n\t\t\t}\r\n\r\n\t\t\t#main-no-image,\r\n\t\t\t#main {\r\n\t\t\t\tmax-width: 1920px;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\theight: 100vh;\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t}\r\n\r\n\t\t\t#image-container {\r\n\t\t\t\tdisplay: var(--umb-login-image-display, none);\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t#content-container {\r\n\t\t\t\tbackground: var(--umb-login-content-background, none);\r\n\t\t\t\tdisplay: var(--umb-login-content-display, flex);\r\n\t\t\t\twidth: var(--umb-login-content-width, 100%);\r\n\t\t\t\theight: var(--umb-login-content-height, 100%);\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\toverflow: auto;\r\n\t\t\t\tborder-radius: var(--umb-login-content-border-radius, 0);\r\n\t\t\t}\r\n\r\n\t\t\t#content {\r\n\t\t\t\tmax-width: 360px;\r\n\t\t\t\tmargin: auto;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t#image {\r\n\t\t\t\tbackground: var(--umb-login-image, var(--image));\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tborder-radius: var(--umb-login-image-border-radius, 38px);\r\n\t\t\t\tposition: relative;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\tcolor: var(--curves-color);\r\n\t\t\t}\r\n\r\n\t\t\t#image svg {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\twidth: 45%;\r\n\t\t\t\theight: fit-content;\r\n\t\t\t\tdisplay: var(--curves-display);\r\n\t\t\t}\r\n\r\n\t\t\t#curve-top {\r\n\t\t\t\ttop: -9%;\r\n\t\t\t\tright: -9%;\r\n\t\t\t}\r\n\r\n\t\t\t#curve-bottom {\r\n\t\t\t\tbottom: -0.5%;\r\n\t\t\t\tleft: -0.1%;\r\n\t\t\t}\r\n\r\n\t\t\t#logo-on-image,\r\n\t\t\t#logo-on-background {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tdisplay: var(--umb-logo-display, block);\r\n\t\t\t\ttop: var(--umb-logo-top, 24px);\r\n\t\t\t\tleft: var(--umb-logo-left, 24px);\r\n\t\t\t\twidth: var(--umb-logo-width, auto);\r\n\t\t\t\theight: var(--umb-logo-height, 55px);\r\n\t\t\t}\r\n\r\n\t\t\t@media only screen and (min-width: 900px) {\r\n\t\t\t\t:host {\r\n\t\t\t\t\t--header-font-size: var(--umb-login-header-font-size-large, 4rem);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#main {\r\n\t\t\t\t\tpadding: 32px;\r\n\t\t\t\t\tpadding-right: 0;\r\n\t\t\t\t\talign-items: var(--umb-login-align-items, unset);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#image-container {\r\n\t\t\t\t\tdisplay: var(--umb-login-image-display, block);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#content-container {\r\n\t\t\t\t\tdisplay: var(--umb-login-content-display, flex);\r\n\t\t\t\t\tpadding: 16px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#logo-on-background {\r\n\t\t\t\t\tdisplay: var(--logo-alternative-display);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-auth-layout': UmbAuthLayoutElement;\r\n\t}\r\n}\r\n","import { CSSResultGroup, css, html, customElement, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\n\r\n@customElement('umb-confirmation-layout')\r\nexport default class UmbConfirmationLayoutElement extends UmbLitElement {\r\n  @property({ type: String })\r\n  header = '';\r\n\r\n  @property({ type: String })\r\n  message = '';\r\n\r\n  render() {\r\n    return html`\r\n      <header id=\"header\">\r\n        <h1>${this.header}</h1>\r\n        <span>${this.message}</span>\r\n      </header>\r\n\r\n      <umb-back-to-login-button></umb-back-to-login-button>\r\n\r\n      <slot></slot>\r\n    `;\r\n  }\r\n\r\n  static styles: CSSResultGroup = [\r\n    css`\r\n      :host {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: var(--uui-size-layout-1);\r\n      }\r\n\r\n      #header {\r\n        text-align: center;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: var(--uui-size-space-5);\r\n      }\r\n\r\n      #header span {\r\n        color: var(--uui-color-text-alt); /* TODO Change to uui color when uui gets a muted text variable */\r\n        font-size: 14px;\r\n      }\r\n\r\n      #header h1 {\r\n        margin: 0;\r\n        font-weight: 400;\r\n        font-size: var(--header-secondary-font-size);\r\n        color: var(--uui-color-interactive);\r\n        line-height: 1.2;\r\n      }\r\n\r\n      uui-button {\r\n        width: 100%;\r\n        margin-top: var(--uui-size-space-5);\r\n        --uui-button-padding-top-factor: 1.5;\r\n        --uui-button-padding-bottom-factor: 1.5;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'umb-confirmation-layout': UmbConfirmationLayoutElement;\r\n  }\r\n}\r\n","import { CSSResultGroup, css, html, customElement, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\n\r\n@customElement('umb-error-layout')\r\nexport default class UmbErrorLayoutElement extends UmbLitElement {\r\n  @property({ type: String })\r\n  header = '';\r\n\r\n  @property({ type: String })\r\n  message = '';\r\n\r\n  @property({ type: Boolean, attribute: 'no-back-link' })\r\n  noBackLink = false;\r\n\r\n  render() {\r\n    return html`\r\n      <header id=\"header\">\r\n        <h1>${this.header?.length ? this.header : html`<umb-localize key=\"auth_friendlyGreeting\">Hi there</umb-localize>`}</h1>\r\n        <span>${this.message}</span>\r\n      </header>\r\n      <slot></slot>\r\n      ${!this.noBackLink ? html`<umb-back-to-login-button></umb-back-to-login-button>`: ''}\r\n    `;\r\n  }\r\n\r\n  static styles: CSSResultGroup = [\r\n    css`\r\n      :host {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: var(--uui-size-layout-1);\r\n      }\r\n\r\n      #header {\r\n        text-align: center;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: var(--uui-size-space-5);\r\n      }\r\n\r\n      #header span {\r\n        color: var(--uui-color-text-alt); /* TODO Change to uui color when uui gets a muted text variable */\r\n        font-size: 14px;\r\n      }\r\n\r\n      #header h1 {\r\n        margin: 0;\r\n        font-weight: 400;\r\n        font-size: var(--header-secondary-font-size);\r\n        color: var(--uui-color-interactive);\r\n        line-height: 1.2;\r\n      }\r\n\r\n      ::slotted(uui-button) {\r\n        width: 100%;\r\n        margin-top: var(--uui-size-space-5);\r\n        --uui-button-padding-top-factor: 1.5;\r\n        --uui-button-padding-bottom-factor: 1.5;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'umb-error-layout': UmbErrorLayoutElement;\r\n  }\r\n}\r\n","import type { UUIButtonState, UUIInputPasswordElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { type CSSResultGroup, css, html, nothing, customElement, property, query, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\n\r\nimport { UMB_AUTH_CONTEXT } from '../../contexts';\r\n\r\n@customElement('umb-new-password-layout')\r\nexport default class UmbNewPasswordLayoutElement extends UmbLitElement {\r\n  @query('#password')\r\n  passwordElement!: UUIInputPasswordElement;\r\n\r\n  @query('#confirmPassword')\r\n  confirmPasswordElement!: UUIInputPasswordElement;\r\n\r\n  @property()\r\n  state: UUIButtonState = undefined;\r\n\r\n  @property()\r\n  error: string = '';\r\n\r\n  @property()\r\n  userId: string = '';\r\n\r\n  @property({ type: Boolean, attribute: 'is-invite' })\r\n  isInvite = false;\r\n\r\n  @state()\r\n  _passwordConfiguration?: typeof UMB_AUTH_CONTEXT.TYPE['passwordConfiguration'];\r\n\r\n  @state()\r\n  _passwordPattern = '';\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(UMB_AUTH_CONTEXT, (authContext) => {\r\n      // Build a pattern\r\n      let pattern = '';\r\n      this._passwordConfiguration = authContext?.passwordConfiguration;\r\n      if (this._passwordConfiguration?.requireDigit) {\r\n        pattern += '(?=.*\\\\d)';\r\n      }\r\n      if (this._passwordConfiguration?.requireLowercase) {\r\n        pattern += '(?=.*[a-z])';\r\n      }\r\n      if (this._passwordConfiguration?.requireUppercase) {\r\n        pattern += '(?=.*[A-Z])';\r\n      }\r\n      if (this._passwordConfiguration?.requireNonLetterOrDigit) {\r\n        pattern += '(?=.*\\\\W)';\r\n      }\r\n      pattern += `.{${this._passwordConfiguration?.minimumPasswordLength ?? 10},}`;\r\n      this._passwordPattern = pattern;\r\n    });\r\n  }\r\n\r\n  #onSubmit(event: Event) {\r\n    event.preventDefault();\r\n    if (!this._passwordConfiguration) return;\r\n\r\n    const form = event.target as HTMLFormElement;\r\n\r\n    this.passwordElement.setCustomValidity('');\r\n    this.confirmPasswordElement.setCustomValidity('');\r\n\r\n    if (!form) return;\r\n    if (!form.checkValidity()) return;\r\n\r\n    const formData = new FormData(form);\r\n    const password = formData.get('password') as string;\r\n    const passwordConfirm = formData.get('confirmPassword') as string;\r\n\r\n    let passwordIsInvalid = false;\r\n\r\n    if (this._passwordConfiguration.minimumPasswordLength > 0 && password.length < this._passwordConfiguration.minimumPasswordLength) {\r\n      passwordIsInvalid = true;\r\n    }\r\n\r\n    if (this._passwordConfiguration.requireNonLetterOrDigit) {\r\n      const hasNonLetterOrDigit = /\\W/.test(password);\r\n      if (!hasNonLetterOrDigit) {\r\n        passwordIsInvalid = true;\r\n      }\r\n    }\r\n\r\n    if (this._passwordConfiguration.requireDigit) {\r\n      const hasDigit = /\\d/.test(password);\r\n      if (!hasDigit) {\r\n        passwordIsInvalid = true;\r\n      }\r\n    }\r\n\r\n    if (this._passwordConfiguration.requireLowercase) {\r\n      const hasLowercase = /[a-z]/.test(password);\r\n      if (!hasLowercase) {\r\n        passwordIsInvalid = true;\r\n      }\r\n    }\r\n\r\n    if (this._passwordConfiguration.requireUppercase) {\r\n      const hasUppercase = /[A-Z]/.test(password);\r\n      if (!hasUppercase) {\r\n        passwordIsInvalid = true;\r\n      }\r\n    }\r\n\r\n    if (passwordIsInvalid) {\r\n      const passwordValidityText = this.localize.term(\r\n        'auth_errorInPasswordFormat',\r\n        this._passwordConfiguration.minimumPasswordLength,\r\n        this._passwordConfiguration.requireNonLetterOrDigit ? 1 : 0\r\n      ) ?? 'The password does not meet the minimum requirements!';\r\n      this.passwordElement.setCustomValidity(passwordValidityText);\r\n      return;\r\n    }\r\n\r\n    if (password !== passwordConfirm) {\r\n      const passwordValidityText = this.localize.term(\r\n        'auth_passwordMismatch'\r\n      ) ?? \"The confirmed password doesn't match the new password!\";\r\n      this.confirmPasswordElement.setCustomValidity(passwordValidityText);\r\n      return;\r\n    }\r\n\r\n    this.dispatchEvent(new CustomEvent('submit', {detail: {password}}));\r\n  }\r\n\r\n  renderHeader() {\r\n    if (this.isInvite) {\r\n      return html`\r\n        <h1>Hi!</h1>\r\n        <span>\r\n          <umb-localize key=\"auth_userInviteWelcomeMessage\">\r\n            Welcome to Umbraco! Just need to get your password setup and then you're good to go\r\n          </umb-localize>\r\n        </span>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <h1>\r\n          <umb-localize key=\"auth_newPassword\">New password</umb-localize>\r\n        </h1>\r\n        <span>\r\n            <umb-localize key=\"auth_setPasswordInstruction\">Please provide a new password.</umb-localize>\r\n        </span>\r\n      `;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <uui-form>\r\n        <form id=\"LoginForm\" name=\"login\" @submit=${this.#onSubmit}>\r\n          <header id=\"header\">${this.renderHeader()}</header>\r\n          <uui-form-layout-item>\r\n            <uui-label id=\"passwordLabel\" for=\"password\" slot=\"label\" required>\r\n              <umb-localize key=\"auth_newPassword\">New password</umb-localize>\r\n            </uui-label>\r\n            <uui-input-password\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              autocomplete=\"new-password\"\r\n              pattern=\"${this._passwordPattern}\"\r\n              .minlength=${this._passwordConfiguration?.minimumPasswordLength}\r\n              .minlengthMessage=${this.localize.term('auth_passwordMinLength', this._passwordConfiguration?.minimumPasswordLength ?? 10)}\r\n              .label=${this.localize.term('auth_newPassword')}\r\n              required\r\n              required-message=${this.localize.term('auth_passwordIsBlank')}>\r\n            </uui-input-password>\r\n          </uui-form-layout-item>\r\n\r\n          <uui-form-layout-item>\r\n            <uui-label id=\"confirmPasswordLabel\" for=\"confirmPassword\" slot=\"label\" required>\r\n              <umb-localize key=\"auth_confirmNewPassword\">Confirm new password</umb-localize>\r\n            </uui-label>\r\n            <uui-input-password\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              autocomplete=\"new-password\"\r\n              pattern=\"${this._passwordPattern}\"\r\n              .minlength=${this._passwordConfiguration?.minimumPasswordLength}\r\n              .minlengthMessage=${this.localize.term('auth_passwordMinLength', this._passwordConfiguration?.minimumPasswordLength ?? 10)}\r\n              .label=${this.localize.term('auth_confirmNewPassword')}\r\n              required\r\n              required-message=${this.localize.term('auth_required')}></uui-input-password>\r\n          </uui-form-layout-item>\r\n\r\n          ${this.#renderErrorMessage()}\r\n\r\n          <uui-button\r\n            type=\"submit\"\r\n            label=${this.localize.term('auth_continue')}\r\n            look=\"primary\"\r\n            color=\"default\"\r\n            .state=${this.state}></uui-button>\r\n        </form>\r\n      </uui-form>\r\n\r\n      <umb-back-to-login-button style=\"margin-top: var(--uui-size-space-6)\"></umb-back-to-login-button>\r\n    `;\r\n  }\r\n\r\n  #renderErrorMessage() {\r\n    if (!this.error || this.state !== 'failed') return nothing;\r\n\r\n    return html`<span class=\"text-danger\">${this.error}</span>`;\r\n  }\r\n\r\n  static styles: CSSResultGroup = [\r\n    css`\r\n      #header {\r\n        text-align: center;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: var(--uui-size-space-5);\r\n      }\r\n\r\n      #header span {\r\n        color: var(--uui-color-text-alt); /* TODO Change to uui color when uui gets a muted text variable */\r\n        font-size: 14px;\r\n      }\r\n\r\n      #header h1 {\r\n        margin: 0;\r\n        font-weight: 400;\r\n        font-size: var(--header-secondary-font-size);\r\n        color: var(--uui-color-interactive);\r\n        line-height: 1.2;\r\n      }\r\n\r\n      form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: var(--uui-size-space-5);\r\n      }\r\n\r\n      uui-form-layout-item {\r\n        margin: 0;\r\n      }\r\n\r\n      uui-input-password {\r\n        width: 100%;\r\n        height: var(--input-height);\r\n        border-radius: var(--uui-border-radius);\r\n      }\r\n\r\n      uui-button {\r\n        width: 100%;\r\n        margin-top: var(--uui-size-space-5);\r\n        --uui-button-padding-top-factor: 1.5;\r\n        --uui-button-padding-bottom-factor: 1.5;\r\n      }\r\n\r\n      .text-danger {\r\n        color: var(--uui-color-danger-standalone);\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'umb-new-password-layout': UmbNewPasswordLayoutElement;\r\n  }\r\n}\r\n","import type { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { html, customElement, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_AUTH_CONTEXT } from \"../../contexts\";\r\n\r\n@customElement('umb-invite-page')\r\nexport default class UmbInvitePageElement extends UmbLitElement {\r\n  #token = '';\r\n  #userId = '';\r\n\r\n  @state()\r\n  state: UUIButtonState = undefined;\r\n\r\n  @state()\r\n  error = '';\r\n\r\n  @state()\r\n  loading = true;\r\n\r\n  #authContext?: typeof UMB_AUTH_CONTEXT.TYPE;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(UMB_AUTH_CONTEXT, (authContext) => {\r\n      this.#authContext = authContext;\r\n      this.#init();\r\n    });\r\n  }\r\n\r\n  async #init() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const token = urlParams.get('inviteCode');\r\n    const userId = urlParams.get('userId');\r\n\r\n    if (!token || !userId) {\r\n      this.error = 'The invite has expired or is invalid';\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    if (!this.#authContext) return;\r\n\r\n    this.#token = token;\r\n    this.#userId = userId;\r\n\r\n    const response = await this.#authContext.validateInviteCode(this.#token, this.#userId);\r\n\r\n    if (response.error) {\r\n      this.error = response.error;\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    if (!response.passwordConfiguration) {\r\n      this.error = 'There is no password configuration for the invite code. Please contact the administrator.';\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    this.#authContext.passwordConfiguration = response.passwordConfiguration;\r\n    this.loading = false;\r\n  }\r\n\r\n  async #onSubmit(event: CustomEvent) {\r\n    event.preventDefault();\r\n    const password = event.detail.password;\r\n\r\n    if (!password) return;\r\n\r\n    if (!this.#authContext) return;\r\n\r\n    this.state = 'waiting';\r\n    const response = await this.#authContext.newInvitedUserPassword(password, this.#token, this.#userId);\r\n\r\n    if (response.error) {\r\n      this.error = response.error;\r\n      this.state = 'failed';\r\n      return;\r\n    }\r\n\r\n    this.state = 'success';\r\n    window.location.href = this.#authContext.returnPath;\r\n  }\r\n\r\n  render() {\r\n    return this.loading ? html`<uui-loader-bar></uui-loader-bar>` : (\r\n      this.error\r\n        ? html`\r\n          <umb-error-layout\r\n            header=${this.localize.term('auth_error')}\r\n            message=${this.error ?? this.localize.term('auth_defaultError')}>\r\n          </umb-error-layout>`\r\n      : html`\r\n        <umb-new-password-layout\r\n          @submit=${this.#onSubmit}\r\n          is-invite\r\n          .userId=${this.#userId}\r\n          .state=${this.state}\r\n          .error=${this.error}></umb-new-password-layout>`\r\n    );\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'umb-invite-page': UmbInvitePageElement;\r\n  }\r\n}\r\n","import type { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { css, type CSSResultGroup, html, nothing, when, customElement, property, queryAssignedElements, state } from '@umbraco-cms/backoffice/external/lit';\r\n\r\nimport { UMB_AUTH_CONTEXT } from '../../contexts';\r\n\r\n@customElement('umb-login-page')\r\nexport default class UmbLoginPageElement extends UmbLitElement {\r\n  @property({type: Boolean, attribute: 'username-is-email'})\r\n  usernameIsEmail = false;\r\n\r\n  @queryAssignedElements({flatten: true})\r\n  protected slottedElements?: HTMLFormElement[];\r\n\r\n  @property({type: Boolean, attribute: 'allow-password-reset'})\r\n  allowPasswordReset = false;\r\n\r\n  @state()\r\n  private _loginState?: UUIButtonState;\r\n\r\n  @state()\r\n  private _loginError = '';\r\n\r\n  @state()\r\n  supportPersistLogin = false;\r\n\r\n  #formElement?: HTMLFormElement;\r\n\r\n  #authContext?: typeof UMB_AUTH_CONTEXT.TYPE;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(UMB_AUTH_CONTEXT, (authContext) => {\r\n      this.#authContext = authContext;\r\n      this.supportPersistLogin = authContext?.supportsPersistLogin ?? false;\r\n    });\r\n  }\r\n\r\n  async #onSlotChanged() {\r\n    this.#formElement = this.slottedElements?.find((el) => el.id === 'umb-login-form');\r\n\r\n    if (!this.#formElement) return;\r\n\r\n    // We need to listen for the enter key to submit the form, because the uui-button does not support the native input fields submit event\r\n    this.#formElement.addEventListener('keypress', (e) => {\r\n      if (e.key === 'Enter') {\r\n        this.#onSubmitClick();\r\n      }\r\n    });\r\n    this.#formElement.onsubmit = this.#handleSubmit;\r\n  }\r\n\r\n  #handleSubmit = async (e: SubmitEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.#authContext) return;\r\n\r\n    const form = e.target as HTMLFormElement;\r\n    if (!form) return;\r\n\r\n    const formData = new FormData(form);\r\n\r\n    const username = formData.get('username') as string;\r\n    const password = formData.get('password') as string;\r\n    const persist = formData.has('persist');\r\n\r\n    if (!username || !password) {\r\n      this._loginError = this.localize.term('auth_userFailedLogin');\r\n      this._loginState = 'failed';\r\n      return;\r\n    }\r\n\r\n    this._loginState = 'waiting';\r\n\r\n    const response = await this.#authContext.login({\r\n      username,\r\n      password,\r\n      persist,\r\n    });\r\n\r\n    this._loginError = response.error || '';\r\n    this._loginState = response.error ? 'failed' : 'success';\r\n\r\n    // Check for 402 status code indicating that MFA is required\r\n    if (response.status === 402) {\r\n      this.#authContext.isMfaEnabled = true;\r\n      if (response.twoFactorView) {\r\n        this.#authContext.twoFactorView = response.twoFactorView;\r\n      }\r\n      if (response.twoFactorProviders) {\r\n        this.#authContext.mfaProviders = response.twoFactorProviders;\r\n      }\r\n\r\n      this.dispatchEvent(new CustomEvent('umb-login-flow', {composed: true, detail: {flow: 'mfa'}}));\r\n      return;\r\n    }\r\n\r\n    if (response.error) {\r\n      return;\r\n    }\r\n\r\n    const returnPath = this.#authContext.returnPath;\r\n\r\n    if (returnPath) {\r\n      location.href = returnPath;\r\n    }\r\n  };\r\n\r\n  get #greetingLocalizationKey() {\r\n    return [\r\n      'auth_greeting0',\r\n      'auth_greeting1',\r\n      'auth_greeting2',\r\n      'auth_greeting3',\r\n      'auth_greeting4',\r\n      'auth_greeting5',\r\n      'auth_greeting6',\r\n    ][new Date().getDay()];\r\n  }\r\n\r\n  #onSubmitClick = () => {\r\n    this.#formElement?.requestSubmit();\r\n  };\r\n\r\n  render() {\r\n    return html`\r\n      <header id=\"header\">\r\n        <h1 id=\"greeting\">\r\n          <umb-localize .key=${this.#greetingLocalizationKey}></umb-localize>\r\n        </h1>\r\n        <slot name=\"subheadline\"></slot>\r\n      </header>\r\n      <slot @slotchange=${this.#onSlotChanged}></slot>\r\n      <div id=\"secondary-actions\">\r\n        ${when(\r\n          this.supportPersistLogin,\r\n          () => html`\r\n            <uui-form-layout-item>\r\n              <uui-checkbox\r\n                name=\"persist\"\r\n                .label=${this.localize.term('auth_rememberMe')}>\r\n                <umb-localize key=\"auth_rememberMe\">Remember me</umb-localize>\r\n              </uui-checkbox>\r\n            </uui-form-layout-item>`\r\n        )}\r\n        ${when(\r\n          this.allowPasswordReset,\r\n          () =>\r\n            html`\r\n              <button type=\"button\" id=\"forgot-password\" @click=${this.#handleForgottenPassword}>\r\n                <umb-localize key=\"auth_forgottenPassword\">Forgotten password?</umb-localize>\r\n              </button>`\r\n        )}\r\n      </div>\r\n      <uui-button\r\n        type=\"submit\"\r\n        id=\"umb-login-button\"\r\n        look=\"primary\"\r\n        @click=${this.#onSubmitClick}\r\n        .label=${this.localize.term('auth_login')}\r\n        color=\"default\"\r\n        .state=${this._loginState}></uui-button>\r\n\r\n      ${this.#renderErrorMessage()}\r\n    `;\r\n  }\r\n\r\n  #renderErrorMessage() {\r\n    if (!this._loginError || this._loginState !== 'failed') return nothing;\r\n\r\n    return html`<span class=\"text-error text-danger\">${this._loginError}</span>`;\r\n  }\r\n\r\n  #handleForgottenPassword() {\r\n    this.dispatchEvent(new CustomEvent('umb-login-flow', {composed: true, detail: {flow: 'reset'}}));\r\n  }\r\n\r\n  static styles: CSSResultGroup = [\r\n    css`\r\n      :host {\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n\r\n      #header {\r\n        text-align: center;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: var(--uui-size-space-5);\r\n      }\r\n\r\n      #header span {\r\n        color: var(--uui-color-text-alt); /* TODO Change to uui color when uui gets a muted text variable */\r\n        font-size: 14px;\r\n      }\r\n\r\n      #greeting {\r\n        color: var(--uui-color-interactive);\r\n        text-align: center;\r\n        font-weight: 400;\r\n        font-size: var(--header-font-size);\r\n        margin: 0 0 var(--uui-size-layout-1);\r\n        line-height: 1.2;\r\n      }\r\n\r\n      #umb-login-button {\r\n        margin-top: var(--uui-size-space-4);\r\n        width: 100%;\r\n      }\r\n\r\n      #forgot-password {\r\n        cursor: pointer;\r\n        background: none;\r\n        border: 0;\r\n        height: 1rem;\r\n        color: var(--uui-color-text-alt); /* TODO Change to uui color when uui gets a muted text variable */\r\n        gap: var(--uui-size-space-1);\r\n        align-self: center;\r\n        text-decoration: none;\r\n        display: inline-flex;\r\n        line-height: 1;\r\n        font-size: 14px;\r\n        font-family: var(--uui-font-family),sans-serif;\r\n        margin-left: auto;\r\n        margin-bottom: var(--uui-size-space-3);\r\n      }\r\n\r\n      #forgot-password:hover {\r\n        color: var(--uui-color-interactive-emphasis);\r\n      }\r\n\r\n      .text-error {\r\n        margin-top: var(--uui-size-space-4);\r\n      }\r\n\r\n      .text-danger {\r\n        color: var(--uui-color-danger-standalone);\r\n      }\r\n\r\n      #secondary-actions {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'umb-login-page': UmbLoginPageElement;\r\n  }\r\n}\r\n","import { html, unsafeHTML } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n/**\r\n * Try to load a custom view.\r\n * Supports both HTML and JS files (JS files must have a default export).\r\n *\r\n * @param view The path to the custom view.\r\n * @returns A view part.\r\n */\r\nexport async function loadCustomView<T extends HTMLElement>(view: string): Promise<T | string> {\r\n\tif (view.endsWith('.html')) {\r\n\t\treturn fetch(view).then((response) => response.text());\r\n\t}\r\n\r\n\tconst module = await import(/* @vite-ignore */ view);\r\n\r\n\tif (!module.default) throw new Error('No default export found');\r\n\r\n\treturn new module.default() as T;\r\n}\r\n\r\nexport function renderCustomView<T extends HTMLElement>(view: T | string) {\r\n\tif (typeof view === 'string') {\r\n\t\treturn html`${unsafeHTML(view)}`;\r\n\t}\r\n\r\n\treturn view;\r\n}\r\n","import type {UUIButtonState, UUIInputElement} from '@umbraco-cms/backoffice/external/uui';\r\nimport {css, html, nothing, customElement, state, until} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\n\r\nimport { loadCustomView, renderCustomView } from '../../utils/load-custom-view.function.js';\r\nimport { UMB_AUTH_CONTEXT } from \"../../contexts\";\r\n\r\ntype MfaCustomViewElement = HTMLElement & {\r\n  providers?: string[];\r\n  returnPath?: string;\r\n};\r\n\r\n@customElement('umb-mfa-page')\r\nexport default class UmbMfaPageElement extends UmbLitElement {\r\n  @state()\r\n  protected providers: Array<{ name: string; value: string; selected: boolean }> = [];\r\n\r\n  @state()\r\n  private buttonState?: UUIButtonState;\r\n\r\n  @state()\r\n  private error: string | null = null;\r\n\r\n  #authContext?: typeof UMB_AUTH_CONTEXT.TYPE;\r\n\r\n  constructor() {\r\n    super();\r\n    this.consumeContext(UMB_AUTH_CONTEXT, authContext => {\r\n      this.#authContext = authContext;\r\n      this.#loadProviders();\r\n    });\r\n  }\r\n\r\n  #loadProviders() {\r\n    this.providers = this.#authContext?.mfaProviders.map((provider) => ({name: provider, value: provider, selected: false})) ?? [];\r\n\r\n    if (this.providers.length) {\r\n      this.providers[0].selected = true;\r\n    } else {\r\n      this.error = 'Error: No providers available';\r\n    }\r\n  }\r\n\r\n  async #handleSubmit(e: SubmitEvent) {\r\n    e.preventDefault();\r\n\r\n    if (!this.#authContext) return;\r\n\r\n    this.error = null;\r\n\r\n    const form = e.target as HTMLFormElement;\r\n    if (!form) return;\r\n\r\n    const codeInput = form.elements.namedItem('mfacode') as UUIInputElement;\r\n\r\n    if (codeInput) {\r\n      codeInput.error = false;\r\n      codeInput.errorMessage = '';\r\n      codeInput.setCustomValidity('');\r\n    }\r\n\r\n    if (!form.checkValidity()) return;\r\n\r\n    const formData = new FormData(form);\r\n\r\n    let provider = formData.get('provider') as string;\r\n\r\n    // If no provider given, use the first one (there probably is only one anyway)\r\n    if (!provider) {\r\n      // If there are no providers, we can't continue\r\n      if (!this.providers.length) {\r\n        this.error = 'No providers available';\r\n        return;\r\n      }\r\n\r\n      provider = this.providers[0].value;\r\n    }\r\n\r\n    if (!provider) {\r\n      this.error = 'No provider selected';\r\n      return;\r\n    }\r\n\r\n    const code = formData.get('token') as string;\r\n\r\n    this.buttonState = 'waiting';\r\n\r\n    const response = await this.#authContext.validateMfaCode(code, provider);\r\n    if (response.error) {\r\n      if (codeInput) {\r\n        codeInput.error = true;\r\n        codeInput.errorMessage = response.error;\r\n      } else {\r\n        this.error = response.error;\r\n      }\r\n      this.buttonState = 'failed';\r\n      return;\r\n    }\r\n\r\n    this.buttonState = 'success';\r\n\r\n    const returnPath = this.#authContext.returnPath;\r\n    if (returnPath) {\r\n      location.href = returnPath;\r\n    }\r\n  }\r\n\r\n  protected renderDefaultView() {\r\n    return html`\r\n      <uui-form>\r\n        <form id=\"LoginForm\" @submit=${this.#handleSubmit} novalidate>\r\n          <header id=\"header\">\r\n            <h1>\r\n              <umb-localize key=\"auth_mfaTitle\">One last step</umb-localize>\r\n            </h1>\r\n\r\n            <p>\r\n              <umb-localize key=\"auth_mfaText\">\r\n                You have enabled 2-factor authentication and must verify your identity.\r\n              </umb-localize>\r\n            </p>\r\n          </header>\r\n\r\n          <!-- if there's only one provider active, it will skip this step! -->\r\n          ${this.providers.length > 1\r\n            ? html`\r\n              <uui-form-layout-item>\r\n                <uui-label id=\"providerLabel\" for=\"provider\" slot=\"label\" required>\r\n                  <umb-localize key=\"auth_mfaMultipleText\">Please choose a 2-factor provider</umb-localize>\r\n                </uui-label>\r\n                <uui-select label=${this.localize.term('auth_mfaMultipleText')} id=\"provider\" name=\"provider\" .options=${this.providers} aria-required=\"true\" required></uui-select>\r\n              </uui-form-layout-item>\r\n            `\r\n            : nothing}\r\n\r\n          <uui-form-layout-item>\r\n            <uui-label id=\"mfacodeLabel\" for=\"mfacode\" slot=\"label\" required>\r\n              <umb-localize key=\"auth_mfaCodeInput\">Verification code</umb-localize>\r\n            </uui-label>\r\n\r\n            <uui-input\r\n              autofocus\r\n              id=\"mfacode\"\r\n              type=\"text\"\r\n              name=\"token\"\r\n              inputmode=\"numeric\"\r\n              autocomplete=\"one-time-code\"\r\n              placeholder=${this.localize.term('auth_mfaCodeInputHelp')}\r\n              aria-required=\"true\"\r\n              required\r\n              required-message=${this.localize.term('auth_mfaCodeInputHelp')}\r\n              label=${this.localize.term('auth_mfaCodeInput')}\r\n              style=\"width:100%;\">\r\n            </uui-input>\r\n          </uui-form-layout-item>\r\n\r\n          ${this.error ? html` <span class=\"text-danger\">${this.error}</span> ` : nothing}\r\n\r\n          <uui-button\r\n            .state=${this.buttonState}\r\n            button-style=\"success\"\r\n            look=\"primary\"\r\n            color=\"default\"\r\n            label=${this.localize.term('auth_validate')}\r\n            type=\"submit\"></uui-button>\r\n        </form>\r\n      </uui-form>\r\n\r\n      <umb-back-to-login-button style=\"margin-top: var(--uui-size-space-6)\"></umb-back-to-login-button>\r\n    `;\r\n  }\r\n\r\n  protected async renderCustomView() {\r\n    const view = this.#authContext?.twoFactorView;\r\n    if (!view) return nothing;\r\n\r\n    try {\r\n      const customView = await loadCustomView<MfaCustomViewElement>(view);\r\n      if (typeof customView === 'object') {\r\n        customView.providers = this.providers.map((provider) => provider.value);\r\n        customView.returnPath = this.#authContext?.returnPath ?? '';\r\n      }\r\n      return renderCustomView(customView);\r\n    } catch (e) {\r\n      const error = e instanceof Error ? e.message : 'Unknown error';\r\n      console.group('[MFA login] Failed to load custom view');\r\n      console.log('Element reference', this);\r\n      console.log('Custom view', view);\r\n      console.error('Failed to load custom view:', e);\r\n      console.groupEnd();\r\n      return html`<span class=\"text-danger\">${error}</span>`;\r\n    }\r\n  }\r\n\r\n  protected render() {\r\n    return this.#authContext?.twoFactorView\r\n        ? until(this.renderCustomView(), html`\r\n          <uui-loader-bar></uui-loader-bar>`)\r\n        : this.renderDefaultView();\r\n  }\r\n\r\n  static styles = [\r\n    css`\r\n      #header {\r\n        text-align: center;\r\n      }\r\n\r\n      #header h1 {\r\n        font-weight: 400;\r\n        font-size: var(--header-secondary-font-size);\r\n        color: var(--uui-color-interactive);\r\n        line-height: 1.2;\r\n      }\r\n\r\n      form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: var(--uui-size-layout-2);\r\n      }\r\n\r\n      #provider {\r\n        width: 100%;\r\n      }\r\n\r\n      uui-form-layout-item {\r\n        margin: 0;\r\n      }\r\n\r\n      uui-input,\r\n      uui-input-password {\r\n        width: 100%;\r\n        height: var(--input-height);\r\n        border-radius: var(--uui-border-radius);\r\n      }\r\n\r\n      uui-input {\r\n        width: 100%;\r\n      }\r\n\r\n      uui-button {\r\n        width: 100%;\r\n        --uui-button-padding-top-factor: 1.5;\r\n        --uui-button-padding-bottom-factor: 1.5;\r\n      }\r\n\r\n      .text-danger {\r\n        color: var(--uui-color-danger-standalone);\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'umb-mfa-page': UmbMfaPageElement;\r\n  }\r\n}\r\n","import type { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { html, customElement, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nimport { UMB_AUTH_CONTEXT } from \"../../contexts\";\r\n\r\n@customElement('umb-new-password-page')\r\nexport default class UmbNewPasswordPageElement extends UmbLitElement {\r\n  @state()\r\n  state: UUIButtonState = undefined;\r\n\r\n  @state()\r\n  page: 'new' | 'done' | 'error' = 'new';\r\n\r\n  @state()\r\n  error = '';\r\n\r\n  @state()\r\n  userId = '';\r\n\r\n  @state()\r\n  resetCode = '';\r\n\r\n  @state()\r\n  loading = true;\r\n\r\n  #authContext?: typeof UMB_AUTH_CONTEXT.TYPE;\r\n\r\n  constructor() {\r\n    super();\r\n    this.consumeContext(UMB_AUTH_CONTEXT, (authContext) => {\r\n      this.#authContext = authContext;\r\n      this.#init();\r\n    });\r\n  }\r\n\r\n  async #init() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const resetCode = urlParams.get('resetCode');\r\n    const userId = urlParams.get('userId');\r\n\r\n    if (!userId || !resetCode) {\r\n      this.page = 'error';\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    if (!this.#authContext) return;\r\n\r\n    this.resetCode = resetCode;\r\n    this.userId = userId;\r\n\r\n    const verifyResponse = await this.#authContext.validatePasswordResetCode(this.userId, this.resetCode);\r\n\r\n    if (verifyResponse.error) {\r\n      this.page = 'error';\r\n      this.error = verifyResponse.error;\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    if (!verifyResponse.passwordConfiguration) {\r\n      this.page = 'error';\r\n      this.error = 'Password configuration is missing';\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    this.#authContext.passwordConfiguration = verifyResponse.passwordConfiguration;\r\n\r\n    this.loading = false;\r\n  }\r\n\r\n  async #onSubmit(event: CustomEvent) {\r\n    event.preventDefault();\r\n\r\n    this.error = '';\r\n\r\n    if (!this.#authContext) return;\r\n\r\n    const password = event.detail.password;\r\n\r\n    this.state = 'waiting';\r\n    const response = await this.#authContext.newPassword(password, this.resetCode, this.userId);\r\n\r\n    if (response.error) {\r\n      this.state = 'failed';\r\n      this.error = response.error;\r\n      return;\r\n    }\r\n\r\n    this.state = 'success';\r\n    this.page = 'done';\r\n  }\r\n\r\n  #renderRoutes() {\r\n    switch (this.page) {\r\n      case 'new':\r\n        return html`\r\n          <umb-new-password-layout\r\n            @submit=${this.#onSubmit}\r\n            .userId=${this.userId!}\r\n            .state=${this.state}\r\n            .error=${this.error}></umb-new-password-layout>`;\r\n      case 'error':\r\n        return html`\r\n          <umb-error-layout\r\n            header=${this.localize.term('auth_error')}\r\n            message=${this.error ?? this.localize.term('auth_defaultError')}>\r\n          </umb-error-layout>`;\r\n      case 'done':\r\n        return html`\r\n          <umb-confirmation-layout\r\n            header=${this.localize.term('auth_success')}\r\n            message=${this.localize.term('auth_setPasswordConfirmation')}>\r\n          </umb-confirmation-layout>`;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.loading ? html`<uui-loader-bar></uui-loader-bar>` : this.#renderRoutes();\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'umb-new-password-page': UmbNewPasswordPageElement;\r\n  }\r\n}\r\n","import type { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { type CSSResultGroup, css, html, nothing, customElement, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nimport { UMB_AUTH_CONTEXT } from '../../contexts';\r\n\r\n@customElement('umb-reset-password-page')\r\nexport default class UmbResetPasswordPageElement extends UmbLitElement {\r\n\t@state()\r\n\tresetCallState: UUIButtonState = undefined;\r\n\r\n\t@state()\r\n\terror = '';\r\n\r\n\t#handleResetSubmit = async (e: SubmitEvent) => {\r\n\t\te.preventDefault();\r\n\t\tconst form = e.target as HTMLFormElement;\r\n\r\n\t\tif (!form) return;\r\n\t\tif (!form.checkValidity()) return;\r\n\r\n\t\tconst formData = new FormData(form);\r\n\t\tconst username = formData.get('email') as string;\r\n\r\n\t\tthis.resetCallState = 'waiting';\r\n\t\tconst authContext = await this.getContext(UMB_AUTH_CONTEXT);\r\n\t\tif (!authContext) {\r\n\t\t\tthis.resetCallState = 'failed';\r\n\t\t\tthis.error = 'Authentication context not available.';\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst response = await authContext.resetPassword(username);\r\n\t\tthis.resetCallState = response.error ? 'failed' : 'success';\r\n\t\tthis.error = response.error || '';\r\n\t};\r\n\r\n\t#renderResetPage() {\r\n\t\treturn html`\r\n\t\t\t<uui-form>\r\n\t\t\t\t<form id=\"LoginForm\" name=\"login\" @submit=\"${this.#handleResetSubmit}\">\r\n\t\t\t\t\t<header id=\"header\">\r\n\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t<umb-localize key=\"auth_forgottenPassword\">Forgotten password?</umb-localize>\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<umb-localize key=\"auth_forgottenPasswordInstruction\">\r\n\t\t\t\t\t\t\t\tAn email will be sent to the address specified with a link to reset your password\r\n\t\t\t\t\t\t\t</umb-localize>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</header>\r\n\r\n\t\t\t\t\t<uui-form-layout-item>\r\n\t\t\t\t\t\t<uui-label for=\"email\" slot=\"label\" required>\r\n\t\t\t\t\t\t\t<umb-localize key=\"auth_email\">Email</umb-localize>\r\n\t\t\t\t\t\t</uui-label>\r\n\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t.label=${this.localize.term('auth_email')}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\trequired-message=${this.localize.term('auth_required')}>\r\n\t\t\t\t\t\t</uui-input>\r\n\t\t\t\t\t</uui-form-layout-item>\r\n\r\n\t\t\t\t\t${this.#renderErrorMessage()}\r\n\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t.label=${this.localize.term('auth_submit')}\r\n\t\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t.state=${this.resetCallState}></uui-button>\r\n\t\t\t\t</form>\r\n\t\t\t</uui-form>\r\n\r\n\t\t\t<umb-back-to-login-button style=\"margin-top: var(--uui-size-space-6)\"></umb-back-to-login-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderErrorMessage() {\r\n\t\tif (!this.error || this.resetCallState !== 'failed') return nothing;\r\n\r\n\t\treturn html`<span class=\"text-danger\">${this.error}</span>`;\r\n\t}\r\n\r\n\t#renderConfirmationPage() {\r\n\t\treturn html`\r\n\t\t\t<umb-confirmation-layout\r\n\t\t\t\theader=${this.localize.term('auth_forgottenPassword')}\r\n\t\t\t\tmessage=${this.localize.term('auth_requestPasswordResetConfirmation')}>\r\n\t\t\t</umb-confirmation-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn this.resetCallState === 'success' ? this.#renderConfirmationPage() : this.#renderResetPage();\r\n\t}\r\n\r\n\tstatic styles: CSSResultGroup = [\r\n\t\tcss`\r\n\t\t\t#header {\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tgap: var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\t#header span {\r\n\t\t\t\tcolor: var(--uui-color-text-alt); /* TODO Change to uui color when uui gets a muted text variable */\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t}\r\n\r\n\t\t\t#header h1 {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tfont-weight: 400;\r\n\t\t\t\tfont-size: var(--header-secondary-font-size);\r\n\t\t\t\tcolor: var(--uui-color-interactive);\r\n\t\t\t\tline-height: 1.2;\r\n\t\t\t}\r\n\r\n\t\t\tform {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tgap: var(--uui-size-layout-2);\r\n\t\t\t}\r\n\r\n\t\t\tuui-form-layout-item {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\r\n\t\t\tuui-input,\r\n\t\t\tuui-input-password {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: var(--input-height);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t}\r\n\r\n\t\t\tuui-input {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\tuui-button {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\t--uui-button-padding-top-factor: 1.5;\r\n\t\t\t\t--uui-button-padding-bottom-factor: 1.5;\r\n\t\t\t}\r\n\r\n\t\t\t#resend {\r\n\t\t\t\tdisplay: inline-flex;\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\talign-self: center;\r\n\t\t\t\tgap: var(--uui-size-space-1);\r\n\t\t\t}\r\n\r\n\t\t\t#resend a {\r\n\t\t\t\tcolor: var(--uui-color-selected);\r\n\t\t\t\tfont-weight: 600;\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t}\r\n\r\n\t\t\t#resend a:hover {\r\n\t\t\t\tcolor: var(--uui-color-interactive-emphasis);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-reset-password-page': UmbResetPasswordPageElement;\r\n\t}\r\n}\r\n","import { CSSResultGroup, css, html, customElement } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-back-to-login-button')\r\nexport default class UmbBackToLoginButtonElement extends UmbLitElement {\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<button type=\"button\" @click=${this.#handleClick}>\r\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\td=\"M7.82843 10.9999H20V12.9999H7.82843L13.1924 18.3638L11.7782 19.778L4 11.9999L11.7782 4.22168L13.1924 5.63589L7.82843 10.9999Z\"></path>\r\n\t\t\t\t</svg>\r\n\t\t\t\t<span><umb-localize key=\"auth_returnToLogin\">Return to login form</umb-localize></span>\r\n\t\t\t</button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#handleClick() {\r\n\t\tthis.dispatchEvent(new CustomEvent('umb-login-flow', { composed: true, detail: { flow: 'login' } }));\r\n\t}\r\n\r\n\tstatic styles: CSSResultGroup = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t}\r\n\t\t\tbutton {\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tbackground: none;\r\n\t\t\t\tborder: 0;\r\n\t\t\t\theight: 1rem;\r\n\t\t\t\tcolor: var(--uui-color-text-alt); /* TODO Change to uui color when uui gets a muted text variable */\r\n\t\t\t\tgap: var(--uui-size-space-1);\r\n\t\t\t\talign-self: center;\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t\tdisplay: inline-flex;\r\n\t\t\t\tline-height: 1;\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\tfont-family: var(--uui-font-family),sans-serif;\r\n\t\t\t}\r\n\t\t\tbutton svg {\r\n\t\t\t\twidth: 1rem;\r\n\t\t\t}\r\n\t\t\tbutton:hover {\r\n\t\t\t\tcolor: var(--uui-color-interactive-emphasis);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-back-to-login-button': UmbBackToLoginButtonElement;\r\n\t}\r\n}\r\n"],"names":["j","r","e","R","U","_","D","O","i","l","o","s","y","q","f","p","H","B","A","a","n","P","E","S","W","x","C","h","v","N","Q","w","J","c","T","u","m","b","g","d","client","createClient","createConfig","postSecurityForgotPassword","options","_heyApiClient","postSecurityForgotPasswordReset","postSecurityForgotPasswordVerify","postUserInviteCreatePassword","postUserInviteVerify","isProblemDetails","obj","UmbAuthRepository","UmbRepositoryBase","#localize","UmbLocalizationController","data","request","response","responseData","#getErrorText","error","code","provider","requestData","email","#getApiErrorDetailText","userId","resetCode","password","token","fallbackText","UmbAuthContext","UmbContextBase","#authRepository","#returnPath","value","params","returnPath","url","username","UMB_AUTH_CONTEXT","UmbContextToken","UmbSlimBackofficeController","UmbControllerBase","host","UmbBundleExtensionInitializer","umbExtensionsRegistry","UUIIconRegistryEssential","serverUrl","serverConnection","UmbServerConnection","UmbServerContext","UmbServerExtensionRegistrator","initializer","UmbAppEntryPointExtensionInitializer","firstValueFrom","extensions","_authContext","_UmbAuthElement_instances","initializeForm_fn","createInput","opts","input","createLabel","label","umbLocalize","createFormLayoutItem","formLayoutItem","createForm","elements","styles","authStyles","form","element","UmbAuthElement","UmbLitElement","__privateAdd","__privateGet","__privateMethod","html","ifDefined","searchParams","flow","status","labelUsername","labelPassword","__decorateClass","property","customElement","_UmbAuthLayoutElement_instances","renderImageContainer_fn","renderContent_fn","UmbAuthLayoutElement","_changedProperties","when","logoImageAlternative","logoImage","nothing","css","UmbConfirmationLayoutElement","UmbErrorLayoutElement","_UmbNewPasswordLayoutElement_instances","onSubmit_fn","renderErrorMessage_fn","UmbNewPasswordLayoutElement","authContext","pattern","event","formData","passwordConfirm","passwordIsInvalid","passwordValidityText","query","state","_token","_userId","_UmbInvitePageElement_instances","init_fn","UmbInvitePageElement","__privateSet","urlParams","_formElement","_UmbLoginPageElement_instances","onSlotChanged_fn","_handleSubmit","greetingLocalizationKey_get","_onSubmitClick","handleForgottenPassword_fn","UmbLoginPageElement","persist","el","queryAssignedElements","loadCustomView","view","module","renderCustomView","unsafeHTML","_UmbMfaPageElement_instances","loadProviders_fn","handleSubmit_fn","UmbMfaPageElement","customView","until","codeInput","_UmbNewPasswordPageElement_instances","renderRoutes_fn","UmbNewPasswordPageElement","verifyResponse","_handleResetSubmit","_UmbResetPasswordPageElement_instances","renderResetPage_fn","renderConfirmationPage_fn","UmbResetPasswordPageElement","_UmbBackToLoginButtonElement_instances","handleClick_fn","UmbBackToLoginButtonElement"],"mappings":"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","x_google_ignoreList":[0]}