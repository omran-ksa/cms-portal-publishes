{"version":3,"file":"code-editor.element-Bq6IgBpV.js","sources":["../../../src/packages/code-editor/models/code-editor-loaded.event.ts","../../../src/packages/code-editor/models/code-editor.model.ts","../../../src/packages/code-editor/components/code-editor.element.ts"],"sourcesContent":["export class UmbCodeEditorLoadedEvent extends Event {\r\n\tpublic static readonly TYPE = 'loaded';\r\n\r\n\tpublic constructor() {\r\n\t\tsuper(UmbCodeEditorLoadedEvent.TYPE, { bubbles: true, cancelable: false });\r\n\t}\r\n}\r\n","import type { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nexport type CodeEditorLanguage =\r\n\t| 'csharp'\r\n\t| 'razor'\r\n\t| 'typescript'\r\n\t| 'javascript'\r\n\t| 'css'\r\n\t| 'markdown'\r\n\t| 'json'\r\n\t| 'html';\r\n\r\nexport enum CodeEditorTheme {\r\n\tLight = 'umb-light',\r\n\tDark = 'umb-dark',\r\n\tHighContrastLight = 'umb-hc-light',\r\n\tHighContrastDark = 'umb-hc-dark',\r\n}\r\n\r\nexport interface UmbCodeEditorHost extends UmbLitElement {\r\n\tcontainer: HTMLElement;\r\n\tlanguage: CodeEditorLanguage;\r\n\ttheme: CodeEditorTheme;\r\n\tcode: string;\r\n\treadonly: boolean;\r\n\tlabel?: string;\r\n}\r\n\r\nexport interface UmbCodeEditorCursorPosition {\r\n\tcolumn: number;\r\n\tlineNumber: number;\r\n}\r\n\r\nexport interface UmbCodeEditorRange {\r\n\tstartLineNumber: number;\r\n\tstartColumn: number;\r\n\tendLineNumber: number;\r\n\tendColumn: number;\r\n}\r\n\r\nexport interface UmbCodeEditorSelection {\r\n\tstartLineNumber: number;\r\n\tstartColumn: number;\r\n\tendLineNumber: number;\r\n\tendColumn: number;\r\n\tpositionColumn: number;\r\n\tpositionLineNumber: number;\r\n\tselectionStartColumn: number;\r\n\tselectionStartLineNumber: number;\r\n}\r\n\r\nexport interface UmbCodeEditorCursorPositionChangedEvent {\r\n\tposition: UmbCodeEditorCursorPosition;\r\n\tsecondaryPositions: UmbCodeEditorCursorPosition[];\r\n}\r\n\r\nexport interface UmbCodeEditorCursorSelectionChangedEvent {\r\n\tselection: UmbCodeEditorSelection;\r\n\tsecondarySelections: UmbCodeEditorSelection[];\r\n}\r\n\r\nexport interface CodeEditorConstructorOptions {\r\n\t/**\r\n\t * The initial value of the auto created model in the editor.\r\n\t */\r\n\tvalue?: string;\r\n\t/**\r\n\t * The initial language of the auto created model in the editor.\r\n\t */\r\n\tlanguage?: CodeEditorLanguage;\r\n\t/**\r\n\t * Initial theme to be used for rendering.\r\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light.\r\n\t * You can create custom themes via `monaco.editor.defineTheme`.\r\n\t * To switch a theme, use `monaco.editor.setTheme`.\r\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\r\n\t */\r\n\ttheme?: CodeEditorTheme;\r\n\t/**\r\n\t * Container element to use for ARIA messages.\r\n\t * Defaults to document.body.\r\n\t */\r\n\tariaContainerElement?: HTMLElement;\r\n\t/**\r\n\t * The aria label for the editor's textarea (when it is focused).\r\n\t */\r\n\tariaLabel?: string;\r\n\t/**\r\n\t * The `tabindex` property of the editor's textarea\r\n\t */\r\n\ttabIndex?: number;\r\n\r\n\t/**\r\n\t * Control the rendering of line numbers.\r\n\t * Defaults to `true`.\r\n\t */\r\n\tlineNumbers?: boolean;\r\n\t/**\r\n\t * Class name to be added to the editor.\r\n\t */\r\n\textraEditorClassName?: string;\r\n\t/**\r\n\t * Should the editor be read only. See also `domReadOnly`.\r\n\t * Defaults to false.\r\n\t */\r\n\treadOnly?: boolean;\r\n\t/**\r\n\t * Control the behavior and rendering of the minimap.\r\n\t */\r\n\tminimap?: boolean;\r\n\t/**\r\n\t * Enable that the editor will install a ResizeObserver to check if its container dom node size has changed.\r\n\t * Defaults to false.\r\n\t */\r\n\tautomaticLayout?: boolean;\r\n\t/**\r\n\t * Control the wrapping of the editor.\r\n\t * When `wordWrap` = \"off\", the lines will never wrap.\r\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\r\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\r\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\r\n\t * Defaults to \"off\".\r\n\t */\r\n\twordWrap?: 'off' | 'on' | 'wordWrapColumn' | 'bounded';\r\n\t/**\r\n\t * Enable detecting links and making them clickable.\r\n\t * Defaults to true.\r\n\t */\r\n\tlinks?: boolean;\r\n\t/**\r\n\t * Enable inline color decorators and color picker rendering.\r\n\t */\r\n\tcolorDecorators?: boolean;\r\n\t/**\r\n\t * Controls the max number of color decorators that can be rendered in an editor at once.\r\n\t */\r\n\tcolorDecoratorsLimit?: number;\r\n\t/**\r\n\t * Enable custom contextmenu.\r\n\t * Defaults to true.\r\n\t */\r\n\tcontextmenu?: boolean;\r\n\t/**\r\n\t * The modifier to be used to add multiple cursors with the mouse.\r\n\t * Defaults to 'alt'\r\n\t */\r\n\tmultiCursorModifier?: 'ctrlCmd' | 'alt';\r\n\t/**\r\n\t * Controls the max number of text cursors that can be in an active editor at once.\r\n\t */\r\n\tmultiCursorLimit?: number;\r\n\t/**\r\n\t * Controls the number of lines in the editor that can be read out by a screen reader\r\n\t */\r\n\taccessibilityPageSize?: number;\r\n\t/**\r\n\t * Controls the spacing around the editor.\r\n\t * @type {{bottom: number; top: number}}\r\n\t * @memberof CodeEditorConstructorOptions\r\n\t */\r\n\tpadding?: { bottom: number; top: number };\r\n\t/**\r\n\t * Controls if the editor should allow to move selections via drag and drop.\r\n\t * Defaults to false.\r\n\t */\r\n\tdragAndDrop?: boolean;\r\n\t/**\r\n\t * Show code lens\r\n\t * Defaults to true.\r\n\t */\r\n\tcodeLens?: boolean;\r\n\t/**\r\n\t * Control the behavior and rendering of the code action lightbulb.\r\n\t */\r\n\tlightbulb?: boolean;\r\n\t/**\r\n\t * Enable code folding.\r\n\t * Defaults to true.\r\n\t */\r\n\tfolding?: boolean;\r\n\t/**\r\n\t * The font family\r\n\t */\r\n\tfontFamily?: string;\r\n\t/**\r\n\t * The font weight\r\n\t */\r\n\tfontWeight?: string;\r\n\t/**\r\n\t * The font size\r\n\t */\r\n\tfontSize?: number;\r\n\t/**\r\n\t * The line height\r\n\t */\r\n\tlineHeight?: number;\r\n\t/**\r\n\t * The letter spacing\r\n\t */\r\n\tletterSpacing?: number;\r\n}\r\n\r\nexport interface CodeEditorSearchOptions {\r\n\t/**\r\n\t *   Limit the searching to only search inside the editable range of the model.\r\n\t * @type {boolean}\r\n\t * @memberof CodeEditorSearchOptions\r\n\t */\r\n\tsearchOnlyEditableRange?: boolean;\r\n\t/**\r\n\t * Used to indicate that searchString is a regular expression.\r\n\t * @type {boolean}\r\n\t * @memberof CodeEditorSearchOptions\r\n\t */\r\n\tisRegex?: boolean;\r\n\t/**\r\n\t * Force the matching to match lower/upper case exactly.\r\n\t * @type {boolean}\r\n\t * @memberof CodeEditorSearchOptions\r\n\t */\r\n\tmatchCase?: boolean;\r\n\t/**\r\n\t * Force the matching to match entire words only. Pass null otherwise.\r\n\t * @type {string}\r\n\t * @memberof CodeEditorSearchOptions\r\n\t */\r\n\twordSeparators?: string | null;\r\n\t/**\r\n\t * The result will contain the captured groups.\r\n\t * @type {boolean}\r\n\t * @memberof CodeEditorSearchOptions\r\n\t */\r\n\tcaptureMatches?: boolean;\r\n}\r\n","import type { UmbCodeEditorController } from '../code-editor.controller.js';\r\nimport {\r\n\ttype CodeEditorConstructorOptions,\r\n\tCodeEditorTheme,\r\n\tUmbCodeEditorLoadedEvent,\r\n\ttype CodeEditorLanguage,\r\n\ttype CodeEditorSearchOptions,\r\n\ttype UmbCodeEditorHost,\r\n} from '../models/index.js';\r\nimport { UMB_THEME_CONTEXT } from '@umbraco-cms/backoffice/themes';\r\nimport type { PropertyValues, Ref } from '@umbraco-cms/backoffice/external/lit';\r\nimport {\r\n\tcreateRef,\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tproperty,\r\n\tref,\r\n\tstate,\r\n\tunsafeCSS,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nconst elementName = 'umb-code-editor';\r\n\r\n/**\r\n * A custom element that renders a code editor. Code editor is based on the Monaco Editor library.\r\n * The element will listen to the theme context and update the theme accordingly.\r\n * Parts of the monaco Api is exposed through the `editor` property. You can access the monaco editor instance through `editor.monacoEditor`.\r\n * @element umb-code-editor\r\n * @class UmbCodeEditorElement\r\n * @augments {UmbLitElement}\r\n * @implements {UmbCodeEditorHost}\r\n * @fires input - Fired when the value of the editor changes.\r\n * @fires change - Fired when the entire model of editor is replaced.\r\n * @fires loaded - Fired when the editor is loaded and ready to use.\r\n */\r\n@customElement(elementName)\r\nexport class UmbCodeEditorElement extends UmbLitElement implements UmbCodeEditorHost {\r\n\tprivate containerRef: Ref<HTMLElement> = createRef();\r\n\r\n\tget container() {\r\n\t\tif (!this.containerRef?.value) throw new Error('Container not found');\r\n\t\treturn this.containerRef!.value;\r\n\t}\r\n\r\n\t#editor?: UmbCodeEditorController;\r\n\r\n\tget editor() {\r\n\t\treturn this.#editor;\r\n\t}\r\n\r\n\t/**\r\n\t * Theme of the editor. Default is light. Element will listen to the theme context and update the theme accordingly.\r\n\t * @type {CodeEditorTheme}\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property()\r\n\ttheme: CodeEditorTheme = CodeEditorTheme.Light;\r\n\r\n\t/**\r\n\t * Language of the editor. Default is javascript.\r\n\t * @type {CodeEditorLanguage}\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property()\r\n\tlanguage: CodeEditorLanguage = 'javascript';\r\n\r\n\t/**\r\n\t * Label of the editor. Default is 'Code Editor'.\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property()\r\n\tlabel?: string;\r\n\r\n\t//TODO - this should be called a value\r\n\t#code = '';\r\n\r\n\t/**\r\n\t * Value of the editor. Default is empty string.\r\n\t * @readonly\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property()\r\n\tget code() {\r\n\t\treturn this.#code;\r\n\t}\r\n\r\n\tset code(value: string) {\r\n\t\tconst oldValue = this.#code;\r\n\t\tthis.#code = value;\r\n\t\tif (this.#editor) {\r\n\t\t\tthis.#editor.value = value;\r\n\t\t}\r\n\t\tthis.requestUpdate('code', oldValue);\r\n\t}\r\n\r\n\t/**\r\n\t * Whether the editor is readonly.\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property({ type: Boolean, attribute: 'readonly' })\r\n\treadonly = false;\r\n\r\n\t/**\r\n\t * Whether to show line numbers.\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property({ type: Boolean, attribute: 'disable-line-numbers' })\r\n\tdisableLineNumbers = false;\r\n\r\n\t/**\r\n\t * Whether to show minimap.\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property({ type: Boolean, attribute: 'disable-minimap' })\r\n\tdisableMinimap = false;\r\n\r\n\t/**\r\n\t * Whether to enable word wrap. Default is false.\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property({ type: Boolean, attribute: 'word-wrap' })\r\n\twordWrap = false;\r\n\r\n\t/**\r\n\t * Whether to enable folding. Default is true.\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\t@property({ type: Boolean, attribute: 'disable-folding' })\r\n\tdisableFolding = false;\r\n\r\n\t@state()\r\n\tprivate _loading = true;\r\n\r\n\t@state()\r\n\tprivate _styles?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_THEME_CONTEXT, (instance) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tinstance?.theme,\r\n\t\t\t\t(themeAlias) => {\r\n\t\t\t\t\tthis.theme = themeAlias ? this.#translateTheme(themeAlias) : CodeEditorTheme.Light;\r\n\t\t\t\t},\r\n\t\t\t\t'_observeTheme',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\toverride async firstUpdated() {\r\n\t\tconst { styles } = await import('@umbraco-cms/backoffice/external/monaco-editor');\r\n\t\tthis._styles = styles;\r\n\r\n\t\tconst { UmbCodeEditorController } = await import('../code-editor.controller.js');\r\n\r\n\t\t// Options\r\n\t\tthis.#editor = new UmbCodeEditorController(this, this.#constructorOptions());\r\n\r\n\t\tthis._loading = false;\r\n\t\tthis.dispatchEvent(new UmbCodeEditorLoadedEvent());\r\n\t}\r\n\r\n\tprotected override updated(_changedProperties: PropertyValues<this>): void {\r\n\t\tif (\r\n\t\t\t_changedProperties.has('theme') ||\r\n\t\t\t_changedProperties.has('language') ||\r\n\t\t\t_changedProperties.has('disableLineNumbers') ||\r\n\t\t\t_changedProperties.has('disableMinimap') ||\r\n\t\t\t_changedProperties.has('wordWrap') ||\r\n\t\t\t_changedProperties.has('readonly') ||\r\n\t\t\t_changedProperties.has('code') ||\r\n\t\t\t_changedProperties.has('label') ||\r\n\t\t\t_changedProperties.has('disableFolding')\r\n\t\t) {\r\n\t\t\tthis.#editor?.updateOptions(this.#constructorOptions());\r\n\t\t}\r\n\t}\r\n\r\n\t#constructorOptions(): CodeEditorConstructorOptions {\r\n\t\treturn {\r\n\t\t\tlanguage: this.language,\r\n\t\t\ttheme: this.theme,\r\n\t\t\tariaLabel: this.label ?? this.localize.term('codeEditor_label'),\r\n\t\t\tlineNumbers: !this.disableLineNumbers,\r\n\t\t\tminimap: !this.disableMinimap,\r\n\t\t\twordWrap: this.wordWrap ? 'on' : 'off',\r\n\t\t\treadOnly: this.readonly,\r\n\t\t\tfolding: !this.disableFolding,\r\n\t\t\tvalue: this.code,\r\n\t\t};\r\n\t}\r\n\r\n\t#translateTheme(theme: string) {\r\n\t\tswitch (theme) {\r\n\t\t\tcase 'umb-light-theme':\r\n\t\t\t\treturn CodeEditorTheme.Light;\r\n\t\t\tcase 'umb-dark-theme':\r\n\t\t\t\treturn CodeEditorTheme.Dark;\r\n\t\t\tcase 'umb-high-contrast-theme':\r\n\t\t\t\treturn CodeEditorTheme.HighContrastLight;\r\n\t\t\tdefault:\r\n\t\t\t\treturn CodeEditorTheme.Light;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts text at the current cursor position.\r\n\t * @param {string} text\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\tinsert(text: string) {\r\n\t\tthis.#editor?.insert(text);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds all occurrence of the given string or matches the given regular expression.\r\n\t * @param {string} text\r\n\t * @param searchOptions\r\n\t * @returns {*}\r\n\t * @memberof UmbCodeEditorElement\r\n\t */\r\n\tfind(text: string, searchOptions: CodeEditorSearchOptions = <CodeEditorSearchOptions>{}) {\r\n\t\treturn this.#editor?.find(text, searchOptions);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t${this.#renderStyles()}\r\n\t\t\t${when(this._loading, () => html`<div id=\"loader-container\"><uui-loader></uui-loader></div>`)}\r\n\t\t\t<div id=\"editor-container\" ${ref(this.containerRef)}></div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderStyles() {\r\n\t\tif (!this._styles) return;\r\n\t\treturn html`\r\n\t\t\t<style>\r\n\t\t\t\t${unsafeCSS(this._styles)}\r\n\t\t\t</style>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\r\n\t\t\t#loader-container {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tplace-items: center;\r\n\t\t\t\tmin-height: calc(100dvh - 260px);\r\n\t\t\t}\r\n\r\n\t\t\t#editor-container {\r\n\t\t\t\twidth: var(--editor-width);\r\n\t\t\t\theight: var(--editor-height, 100%);\r\n\r\n\t\t\t\t--vscode-scrollbar-shadow: #dddddd;\r\n\t\t\t\t--vscode-scrollbarSlider-background: var(--uui-color-disabled-contrast);\r\n\t\t\t\t--vscode-scrollbarSlider-hoverBackground: rgba(100, 100, 100, 0.7);\r\n\t\t\t\t--vscode-scrollbarSlider-activeBackground: rgba(0, 0, 0, 0.6);\r\n\r\n\t\t\t\t/* a hacky workaround this issue: https://github.com/microsoft/monaco-editor/issues/3217\r\n\t\t\t   should probably be removed when the issue is fixed */\r\n\t\t\t\t.view-lines {\r\n\t\t\t\t\tfont-feature-settings: revert !important;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: UmbCodeEditorElement;\r\n\t}\r\n}\r\n"],"names":["UmbCodeEditorLoadedEvent","CodeEditorTheme","_editor","_code","_UmbCodeEditorElement_instances","constructorOptions_fn","translateTheme_fn","renderStyles_fn","elementName","UmbCodeEditorElement","UmbLitElement","__privateAdd","createRef","UMB_THEME_CONTEXT","instance","themeAlias","__privateMethod","__privateGet","value","oldValue","__privateSet","styles","UmbCodeEditorController","_changedProperties","text","searchOptions","html","when","ref","theme","unsafeCSS","css","__decorateClass","property","state","customElement"],"mappings":"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"}