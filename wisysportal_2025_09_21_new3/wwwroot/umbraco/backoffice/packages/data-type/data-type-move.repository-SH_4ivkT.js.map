{"version":3,"file":"data-type-move.repository-SH_4ivkT.js","sources":["../../../src/packages/data-type/entity-actions/move-to/repository/data-type-move.server.data-source.ts","../../../src/packages/data-type/entity-actions/move-to/repository/data-type-move.repository.ts"],"sourcesContent":["import { DataTypeService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport type { UmbMoveDataSource, UmbMoveToRequestArgs } from '@umbraco-cms/backoffice/tree';\r\n\r\n/**\r\n * Move Data Type Server Data Source\r\n * @class UmbMoveDataTypeServerDataSource\r\n */\r\nexport class UmbMoveDataTypeServerDataSource implements UmbMoveDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbMoveDataTypeServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbMoveDataTypeServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Move an item for the given id to the target unique\r\n\t * @param {string} unique\r\n\t * @param {(string | null)} targetUnique\r\n\t * @param args\r\n\t * @returns {*}\r\n\t * @memberof UmbMoveDataTypeServerDataSource\r\n\t */\r\n\tasync moveTo(args: UmbMoveToRequestArgs) {\r\n\t\tif (!args.unique) throw new Error('Unique is missing');\r\n\t\tif (args.destination.unique === undefined) throw new Error('Destination unique is missing');\r\n\r\n\t\treturn tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tDataTypeService.putDataTypeByIdMove({\r\n\t\t\t\tpath: { id: args.unique },\r\n\t\t\t\tbody: {\r\n\t\t\t\t\ttarget: args.destination.unique ? { id: args.destination.unique } : null,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbMoveDataTypeServerDataSource } from './data-type-move.server.data-source.js';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\nimport type { UmbMoveRepository, UmbMoveToRequestArgs } from '@umbraco-cms/backoffice/tree';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbMoveDataTypeRepository extends UmbRepositoryBase implements UmbMoveRepository {\r\n\t#moveSource = new UmbMoveDataTypeServerDataSource(this);\r\n\r\n\tasync requestMoveTo(args: UmbMoveToRequestArgs) {\r\n\t\tconst { error } = await this.#moveSource.moveTo(args);\r\n\r\n\t\tif (!error) {\r\n\t\t\tconst notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n\t\t\tif (!notificationContext) {\r\n\t\t\t\tthrow new Error('Notification context not found');\r\n\t\t\t}\r\n\t\t\tconst notification = { data: { message: `Moved` } };\r\n\t\t\tnotificationContext.peek('positive', notification);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n\r\nexport { UmbMoveDataTypeRepository as api };\r\n"],"names":["UmbMoveDataTypeServerDataSource","#host","host","args","tryExecute","DataTypeService","UmbMoveDataTypeRepository","UmbRepositoryBase","#moveSource","error","notificationContext","UMB_NOTIFICATION_CONTEXT","notification"],"mappings":";;;;AASO,MAAMA,EAA6D;AAAA,EACzEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWd,MAAM,OAAOC,GAA4B;AACxC,QAAI,CAACA,EAAK,OAAc,OAAA,IAAI,MAAM,mBAAmB;AACrD,QAAIA,EAAK,YAAY,WAAW,OAAiB,OAAA,IAAI,MAAM,+BAA+B;AAEnF,WAAAC;AAAA,MACN,KAAKH;AAAA,MACLI,EAAgB,oBAAoB;AAAA,QACnC,MAAM,EAAE,IAAIF,EAAK,OAAO;AAAA,QACxB,MAAM;AAAA,UACL,QAAQA,EAAK,YAAY,SAAS,EAAE,IAAIA,EAAK,YAAY,WAAW;AAAA,QAAA;AAAA,MAErE,CAAA;AAAA,IACF;AAAA,EAAA;AAEF;ACtCO,MAAMG,UAAkCC,EAA+C;AAAA,EAC7FC,KAAc,IAAIR,EAAgC,IAAI;AAAA,EAEtD,MAAM,cAAcG,GAA4B;AAC/C,UAAM,EAAE,OAAAM,EAAM,IAAI,MAAM,KAAKD,GAAY,OAAOL,CAAI;AAEpD,QAAI,CAACM,GAAO;AACX,YAAMC,IAAsB,MAAM,KAAK,WAAWC,CAAwB;AAC1E,UAAI,CAACD;AACE,cAAA,IAAI,MAAM,gCAAgC;AAEjD,YAAME,IAAe,EAAE,MAAM,EAAE,SAAS,UAAU;AAC9B,MAAAF,EAAA,KAAK,YAAYE,CAAY;AAAA,IAAA;AAGlD,WAAO,EAAE,OAAAH,EAAM;AAAA,EAAA;AAEjB;"}