{"version":3,"file":"data-type-picker-flow-modal.element-CwKBGEfv.js","sources":["../../../src/packages/data-type/modals/data-type-picker-flow/data-type-picker-flow-modal.element.ts"],"sourcesContent":["import { UMB_DATATYPE_WORKSPACE_MODAL } from '../../workspace/data-type-workspace.modal-token.js';\r\nimport { UMB_DATA_TYPE_ENTITY_TYPE, UMB_DATA_TYPE_ROOT_ENTITY_TYPE } from '../../entity.js';\r\nimport { UmbDataTypeCollectionRepository } from '../../collection/index.js';\r\nimport type { UmbDataTypeItemModel } from '../../repository/index.js';\r\nimport { UMB_CREATE_DATA_TYPE_WORKSPACE_PATH_PATTERN } from '../../paths.js';\r\nimport { UMB_DATA_TYPE_PICKER_FLOW_DATA_TYPE_PICKER_MODAL } from './data-type-picker-flow-data-type-picker-modal.token.js';\r\nimport type {\r\n\tUmbDataTypePickerFlowModalData,\r\n\tUmbDataTypePickerFlowModalValue,\r\n} from './data-type-picker-flow-modal.token.js';\r\nimport { css, customElement, html, nothing, repeat, state, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { umbFocus } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UmbPaginationManager, debounce, fromCamelCase } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UMB_CONTENT_TYPE_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/content-type';\r\nimport { UMB_PROPERTY_TYPE_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/property-type';\r\nimport type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\nimport type { UmbModalRouteBuilder } from '@umbraco-cms/backoffice/router';\r\nimport type { UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('umb-data-type-picker-flow-modal')\r\nexport class UmbDataTypePickerFlowModalElement extends UmbModalBaseElement<\r\n\tUmbDataTypePickerFlowModalData,\r\n\tUmbDataTypePickerFlowModalValue\r\n> {\r\n\t#initPromise!: Promise<unknown>;\r\n\r\n\tpublic override set data(value: UmbDataTypePickerFlowModalData) {\r\n\t\tsuper.data = value;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _groupedDataTypes?: Array<{ key: string; items: Array<UmbDataTypeItemModel> }> = [];\r\n\r\n\t@state()\r\n\tprivate _groupedPropertyEditorUIs: Array<{ key: string; items: Array<ManifestPropertyEditorUi> }> = [];\r\n\r\n\t@state()\r\n\tprivate _currentPage = 1;\r\n\r\n\t@state()\r\n\tprivate _dataTypePickerModalRouteBuilder?: UmbModalRouteBuilder;\r\n\r\n\tpagination = new UmbPaginationManager();\r\n\r\n\t#collectionRepository;\r\n\r\n\t#createDataTypeModal!: UmbModalRouteRegistrationController<\r\n\t\ttypeof UMB_DATATYPE_WORKSPACE_MODAL.DATA,\r\n\t\ttypeof UMB_DATATYPE_WORKSPACE_MODAL.VALUE\r\n\t>;\r\n\r\n\t#currentFilterQuery = '';\r\n\r\n\t#dataTypes: Array<UmbDataTypeItemModel> = [];\r\n\r\n\t#groupLookup: Record<string, string> = {};\r\n\r\n\t#propertyEditorUIs: Array<ManifestPropertyEditorUi> = [];\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#collectionRepository = new UmbDataTypeCollectionRepository(this);\r\n\t\tthis.#init();\r\n\t}\r\n\r\n\t#createDataType(propertyEditorUiAlias: string) {\r\n\t\tconst createPath = UMB_CREATE_DATA_TYPE_WORKSPACE_PATH_PATTERN.generateLocal({\r\n\t\t\tparentEntityType: UMB_DATA_TYPE_ROOT_ENTITY_TYPE,\r\n\t\t\tparentUnique: null,\r\n\t\t});\r\n\r\n\t\t// TODO: Could be nice with a more pretty way to prepend to the URL:\r\n\t\t// Open create modal:\r\n\t\tthis.#createDataTypeModal.open({ uiAlias: propertyEditorUiAlias }, createPath);\r\n\t}\r\n\r\n\tasync #init() {\r\n\t\tthis.pagination.setCurrentPageNumber(1);\r\n\t\tthis.pagination.setPageSize(100);\r\n\r\n\t\tthis.#initPromise = Promise.all([\r\n\t\t\tthis.observe(umbExtensionsRegistry.byType('propertyEditorUi'), (propertyEditorUIs) => {\r\n\t\t\t\t// Only include Property Editor UIs which has Property Editor Schema Alias\r\n\t\t\t\tthis.#propertyEditorUIs = propertyEditorUIs\r\n\t\t\t\t\t.filter((propertyEditorUi) => !!propertyEditorUi.meta.propertyEditorSchemaAlias)\r\n\t\t\t\t\t.sort((a, b) => a.meta.label.localeCompare(b.meta.label));\r\n\r\n\t\t\t\tthis.#groupLookup = Object.fromEntries(propertyEditorUIs.map((ui) => [ui.alias, ui.meta.group]));\r\n\r\n\t\t\t\tthis.#performFiltering();\r\n\t\t\t}).asPromise(),\r\n\t\t]);\r\n\r\n\t\tnew UmbModalRouteRegistrationController(this, UMB_DATA_TYPE_PICKER_FLOW_DATA_TYPE_PICKER_MODAL)\r\n\t\t\t.addAdditionalPath(':uiAlias')\r\n\t\t\t.onSetup((routingInfo) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tpropertyEditorUiAlias: routingInfo.uiAlias,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: undefined,\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.onSubmit((submitData) => {\r\n\t\t\t\tif (submitData?.dataTypeId) {\r\n\t\t\t\t\tthis.#select(submitData.dataTypeId);\r\n\t\t\t\t\tthis._submitModal();\r\n\t\t\t\t} else if (submitData?.createNewWithPropertyEditorUiAlias) {\r\n\t\t\t\t\tthis.#createDataType(submitData.createNewWithPropertyEditorUiAlias);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tthis._dataTypePickerModalRouteBuilder = routeBuilder;\r\n\t\t\t\tthis.requestUpdate('_dataTypePickerModalRouteBuilder');\r\n\t\t\t});\r\n\r\n\t\tthis.#createDataTypeModal = new UmbModalRouteRegistrationController(this, UMB_DATATYPE_WORKSPACE_MODAL)\r\n\t\t\t.addAdditionalPath(':uiAlias')\r\n\t\t\t.onSetup(async (params) => {\r\n\t\t\t\t// TODO: Make it possible to have no callback, and make it possible to use getContext with a callback.\r\n\t\t\t\t// TODO: Make sure a onSetup rejection ends up closing the modal and firing a good error message in the console. eventually calling onReject.\r\n\t\t\t\tconst contentContextConsumer = this.consumeContext(\r\n\t\t\t\t\tUMB_CONTENT_TYPE_WORKSPACE_CONTEXT,\r\n\t\t\t\t\t() => {},\r\n\t\t\t\t).passContextAliasMatches();\r\n\t\t\t\tconst propContextConsumer = this.consumeContext(\r\n\t\t\t\t\tUMB_PROPERTY_TYPE_WORKSPACE_CONTEXT,\r\n\t\t\t\t\t() => {},\r\n\t\t\t\t).passContextAliasMatches();\r\n\t\t\t\tconst [contentContext, propContext] = await Promise.all([\r\n\t\t\t\t\tcontentContextConsumer.asPromise(),\r\n\t\t\t\t\tpropContextConsumer.asPromise(),\r\n\t\t\t\t\tthis.#initPromise,\r\n\t\t\t\t]);\r\n\t\t\t\tif (!contentContext || !propContext) {\r\n\t\t\t\t\tthrow new Error('Could not get content or property context');\r\n\t\t\t\t}\r\n\t\t\t\tthis.removeUmbController(contentContextConsumer);\r\n\t\t\t\tthis.removeUmbController(propContextConsumer);\r\n\t\t\t\tconst propertyEditorName = this.#propertyEditorUIs.find((ui) => ui.alias === params.uiAlias)?.name;\r\n\t\t\t\tconst dataTypeName = `${contentContext?.getName() ?? ''} - ${propContext.getName() ?? ''} - ${propertyEditorName}`;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tentityType: UMB_DATA_TYPE_ENTITY_TYPE,\r\n\t\t\t\t\t\tpreset: { editorUiAlias: params.uiAlias, name: dataTypeName },\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.onSubmit((value) => {\r\n\t\t\t\tthis.#select(value?.unique);\r\n\t\t\t\tthis._submitModal();\r\n\t\t\t});\r\n\t}\r\n\r\n\tasync #getDataTypes() {\r\n\t\tthis.pagination.setCurrentPageNumber(this._currentPage);\r\n\r\n\t\tconst { data } = await this.#collectionRepository.requestCollection({\r\n\t\t\tskip: this.pagination.getSkip(),\r\n\t\t\ttake: this.pagination.getPageSize(),\r\n\t\t\tname: this.#currentFilterQuery,\r\n\t\t});\r\n\r\n\t\tthis.pagination.setTotalItems(data?.total ?? 0);\r\n\r\n\t\tif (this.pagination.getCurrentPageNumber() > 1) {\r\n\t\t\tthis.#dataTypes = [...this.#dataTypes, ...(data?.items ?? [])];\r\n\t\t} else {\r\n\t\t\tthis.#dataTypes = data?.items ?? [];\r\n\t\t}\r\n\t}\r\n\r\n\t#handleDataTypeClick(dataType: UmbDataTypeItemModel) {\r\n\t\tif (dataType.unique) {\r\n\t\t\tthis.#select(dataType.unique);\r\n\t\t\tthis._submitModal();\r\n\t\t}\r\n\t}\r\n\r\n\t#select(unique: string | undefined) {\r\n\t\tthis.value = { selection: unique ? [unique] : [] };\r\n\t}\r\n\r\n\tasync #onLoadMore() {\r\n\t\tthis._currentPage = this._currentPage + 1;\r\n\t\tthis.#handleFiltering();\r\n\t}\r\n\r\n\t#onFilterInput(event: UUIInputEvent) {\r\n\t\tthis.#currentFilterQuery = (event.target.value as string).toLocaleLowerCase();\r\n\t\tthis.#debouncedFilterInput();\r\n\t}\r\n\r\n\t#debouncedFilterInput = debounce(() => {\r\n\t\tthis._currentPage = 1;\r\n\t\tthis.#handleFiltering();\r\n\t}, 250);\r\n\r\n\tasync #handleFiltering() {\r\n\t\tawait this.#getDataTypes();\r\n\t\tthis.#performFiltering();\r\n\t}\r\n\r\n\t#performFiltering() {\r\n\t\tif (this.#currentFilterQuery) {\r\n\t\t\tconst filteredDataTypes = this.#dataTypes\r\n\t\t\t\t.filter((dataType) => dataType.name?.toLowerCase().includes(this.#currentFilterQuery))\r\n\t\t\t\t.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t\t// @ts-expect-error\r\n\t\t\tconst grouped = Object.groupBy(filteredDataTypes, (dataType: UmbDataTypeItemModel) =>\r\n\t\t\t\tfromCamelCase(this.#groupLookup[dataType.propertyEditorUiAlias] ?? 'Uncategorized'),\r\n\t\t\t);\r\n\r\n\t\t\tthis._groupedDataTypes = Object.keys(grouped)\r\n\t\t\t\t.sort((a, b) => a.localeCompare(b))\r\n\t\t\t\t.map((key) => ({ key, items: grouped[key] }));\r\n\t\t} else {\r\n\t\t\tthis._groupedDataTypes = [];\r\n\t\t}\r\n\r\n\t\tconst filteredUIs = !this.#currentFilterQuery\r\n\t\t\t? this.#propertyEditorUIs\r\n\t\t\t: this.#propertyEditorUIs.filter(\r\n\t\t\t\t\t(propertyEditorUI) =>\r\n\t\t\t\t\t\tpropertyEditorUI.name.toLowerCase().includes(this.#currentFilterQuery) ||\r\n\t\t\t\t\t\tpropertyEditorUI.alias.toLowerCase().includes(this.#currentFilterQuery),\r\n\t\t\t\t);\r\n\r\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t// @ts-expect-error\r\n\t\tconst grouped = Object.groupBy(filteredUIs, (propertyEditorUi: ManifestPropertyEditorUi) =>\r\n\t\t\tfromCamelCase(propertyEditorUi.meta.group ?? 'Uncategorized'),\r\n\t\t);\r\n\r\n\t\tthis._groupedPropertyEditorUIs = Object.keys(grouped)\r\n\t\t\t.sort((a, b) => a.localeCompare(b))\r\n\t\t\t.map((key) => ({ key, items: grouped[key] }));\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${this.localize.term('defaultdialogs_selectEditor')} class=\"uui-text\">\r\n\t\t\t\t<uui-box> ${this.#renderFilter()} ${this.#renderGrid()} </uui-box>\r\n\t\t\t\t<div slot=\"actions\">\r\n\t\t\t\t\t<uui-button label=${this.localize.term('general_close')} @click=${this._rejectModal}></uui-button>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderGrid() {\r\n\t\treturn this.#currentFilterQuery ? this.#renderFilteredList() : this.#renderUIs();\r\n\t}\r\n\r\n\t#renderFilter() {\r\n\t\treturn html` <uui-input\r\n\t\t\ttype=\"search\"\r\n\t\t\tid=\"filter\"\r\n\t\t\t@input=${this.#onFilterInput}\r\n\t\t\tplaceholder=${this.localize.term('placeholders_filter')}\r\n\t\t\tlabel=${this.localize.term('placeholders_filter')}\r\n\t\t\t${umbFocus()}>\r\n\t\t\t<uui-icon name=\"search\" slot=\"prepend\" id=\"filter-icon\"></uui-icon>\r\n\t\t</uui-input>`;\r\n\t}\r\n\r\n\t#renderFilteredList() {\r\n\t\tif (!this._groupedDataTypes) return nothing;\r\n\t\tif (!this._groupedPropertyEditorUIs) return nothing;\r\n\r\n\t\tif (this._groupedDataTypes.length === 0 && this._groupedPropertyEditorUIs.length === 0) {\r\n\t\t\treturn html`<p>Nothing matches your search, try another search term.</p>`;\r\n\t\t}\r\n\r\n\t\treturn html`\r\n\t\t\t${when(\r\n\t\t\t\tthis._groupedDataTypes.length > 0,\r\n\t\t\t\t() => html`\r\n\t\t\t\t\t<h5 class=\"choice-type-headline\">\r\n\t\t\t\t\t\t<umb-localize key=\"contentTypeEditor_searchResultSettings\">Available configurations</umb-localize>\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t\t${this.#renderDataTypes()} ${this.#renderLoadMore()}\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t\t${when(\r\n\t\t\t\tthis._groupedPropertyEditorUIs.length > 0,\r\n\t\t\t\t() => html`\r\n\t\t\t\t\t<h5 class=\"choice-type-headline\">\r\n\t\t\t\t\t\t<umb-localize key=\"contentTypeEditor_searchResultEditors\">Create a new configuration</umb-localize>\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t\t${this.#renderUIs(true)}\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderLoadMore() {\r\n\t\tif (this._currentPage >= this.pagination.getTotalPages()) return;\r\n\t\treturn html`<uui-button @click=${this.#onLoadMore} look=\"secondary\" label=\"Load more\"></uui-button>`;\r\n\t}\r\n\r\n\t#renderDataTypes() {\r\n\t\tif (!this._groupedDataTypes) return nothing;\r\n\r\n\t\t// TODO: Fix so we can have Data Types grouped. (or choose not to group them)\r\n\t\treturn this._groupedDataTypes.map(\r\n\t\t\t(group) => html`\r\n\t\t\t\t<h5 class=\"category-name\">${group.key}</h5>\r\n\t\t\t\t${this.#renderGroupDataTypes(group.items)}\r\n\t\t\t`,\r\n\t\t);\r\n\t}\r\n\r\n\t#renderUIs(createAsNewOnPick?: boolean) {\r\n\t\tif (!this._groupedPropertyEditorUIs) return nothing;\r\n\r\n\t\treturn this._groupedPropertyEditorUIs.map(\r\n\t\t\t(group) => html`\r\n\t\t\t\t<h5 class=\"category-name\">${group.key}</h5>\r\n\t\t\t\t${this.#renderGroupUIs(group.items, createAsNewOnPick)}\r\n\t\t\t`,\r\n\t\t);\r\n\t}\r\n\r\n\t#renderGroupUIs(uis: Array<ManifestPropertyEditorUi>, createAsNewOnPick?: boolean) {\r\n\t\treturn html`\r\n\t\t\t<ul id=\"item-grid\">\r\n\t\t\t\t${this._dataTypePickerModalRouteBuilder\r\n\t\t\t\t\t? repeat(\r\n\t\t\t\t\t\t\tuis,\r\n\t\t\t\t\t\t\t(propertyEditorUI) => propertyEditorUI.alias,\r\n\t\t\t\t\t\t\t(propertyEditorUI) => {\r\n\t\t\t\t\t\t\t\treturn html`<li class=\"item\">${this.#renderDataTypeButton(propertyEditorUI, createAsNewOnPick)}</li>`;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: ''}\r\n\t\t\t</ul>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderDataTypeButton(propertyEditorUI: ManifestPropertyEditorUi, createAsNewOnPick?: boolean) {\r\n\t\tif (createAsNewOnPick) {\r\n\t\t\treturn html`\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tlabel=${propertyEditorUI.meta.label || propertyEditorUI.name}\r\n\t\t\t\t\t@click=${() => this.#createDataType(propertyEditorUI.alias)}>\r\n\t\t\t\t\t${this.#renderItemContent(propertyEditorUI)}\r\n\t\t\t\t</uui-button>\r\n\t\t\t`;\r\n\t\t} else {\r\n\t\t\treturn html`\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tlabel=${propertyEditorUI.meta.label || propertyEditorUI.name}\r\n\t\t\t\t\thref=${this._dataTypePickerModalRouteBuilder!({ uiAlias: propertyEditorUI.alias })}>\r\n\t\t\t\t\t${this.#renderItemContent(propertyEditorUI)}\r\n\t\t\t\t</uui-button>\r\n\t\t\t`;\r\n\t\t}\r\n\t}\r\n\r\n\t#renderItemContent(propertyEditorUI: ManifestPropertyEditorUi) {\r\n\t\treturn html`\r\n\t\t\t<div class=\"item-content\">\r\n\t\t\t\t<umb-icon name=${propertyEditorUI.meta.icon} class=\"icon\"></umb-icon>\r\n\t\t\t\t${propertyEditorUI.meta.label || propertyEditorUI.name}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderGroupDataTypes(dataTypes: Array<UmbDataTypeItemModel>) {\r\n\t\treturn html`\r\n\t\t\t<ul id=\"item-grid\">\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tdataTypes,\r\n\t\t\t\t\t(dataType) => dataType.unique,\r\n\t\t\t\t\t(dataType) => html`\r\n\t\t\t\t\t\t<li class=\"item\" ?selected=${this.value.selection.includes(dataType.unique)}>\r\n\t\t\t\t\t\t\t<uui-button .label=${dataType.name} type=\"button\" @click=${() => this.#handleDataTypeClick(dataType)}>\r\n\t\t\t\t\t\t\t\t<div class=\"item-content\">\r\n\t\t\t\t\t\t\t\t\t<umb-icon name=${dataType.icon ?? 'icon-circle-dotted'} class=\"icon\"></umb-icon>\r\n\t\t\t\t\t\t\t\t\t${dataType.name}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#filter {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-4);\r\n\t\t\t}\r\n\r\n\t\t\t#filter-icon {\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tpadding-left: var(--uui-size-space-2);\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tcolor: var(--uui-color-border);\r\n\t\t\t}\r\n\r\n\t\t\t#item-grid {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgrid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tpadding: 0;\r\n\t\t\t}\r\n\r\n\t\t\t#item-grid:not(:last-child) {\r\n\t\t\t\tpadding-bottom: var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\t#item-grid .item {\r\n\t\t\t\tlist-style: none;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tborder: 1px solid transparent;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tcolor: var(--uui-color-interactive);\r\n\t\t\t}\r\n\r\n\t\t\t#item-grid .item:hover {\r\n\t\t\t\tbackground: var(--uui-color-surface-emphasis);\r\n\t\t\t\tcolor: var(--uui-color-interactive-emphasis);\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\r\n\t\t\t#item-grid .item uui-button {\r\n\t\t\t\t--uui-button-padding-left-factor: 0;\r\n\t\t\t\t--uui-button-padding-right-factor: 0;\r\n\t\t\t\t--uui-button-padding-top-factor: 0;\r\n\t\t\t\t--uui-button-padding-bottom-factor: 0;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t#item-grid .item .item-content {\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tbox-sizing: border-box;\r\n\r\n\t\t\t\tpadding: var(--uui-size-space-2);\r\n\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgrid-template-rows: 40px 1fr;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tword-break: break-word;\r\n\t\t\t}\r\n\r\n\t\t\t#item-grid .item .icon {\r\n\t\t\t\tfont-size: 2em;\r\n\t\t\t\tmargin: auto;\r\n\t\t\t}\r\n\r\n\t\t\t.category-name {\r\n\t\t\t\ttext-transform: capitalize;\r\n\t\t\t}\r\n\r\n\t\t\t.choice-type-headline {\r\n\t\t\t\tborder-bottom: 1px solid var(--uui-color-divider);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDataTypePickerFlowModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-data-type-picker-flow-modal': UmbDataTypePickerFlowModalElement;\r\n\t}\r\n}\r\n"],"names":["_initPromise","_collectionRepository","_createDataTypeModal","_currentFilterQuery","_dataTypes","_groupLookup","_propertyEditorUIs","_UmbDataTypePickerFlowModalElement_instances","createDataType_fn","init_fn","getDataTypes_fn","handleDataTypeClick_fn","select_fn","onLoadMore_fn","onFilterInput_fn","_debouncedFilterInput","handleFiltering_fn","performFiltering_fn","renderGrid_fn","renderFilter_fn","renderFilteredList_fn","renderLoadMore_fn","renderDataTypes_fn","renderUIs_fn","renderGroupUIs_fn","renderDataTypeButton_fn","renderItemContent_fn","renderGroupDataTypes_fn","UmbDataTypePickerFlowModalElement","UmbModalBaseElement","__privateAdd","UmbPaginationManager","debounce","__privateMethod","__privateSet","UmbDataTypeCollectionRepository","value","html","propertyEditorUiAlias","createPath","UMB_CREATE_DATA_TYPE_WORKSPACE_PATH_PATTERN","UMB_DATA_TYPE_ROOT_ENTITY_TYPE","__privateGet","umbExtensionsRegistry","propertyEditorUIs","propertyEditorUi","a","b","ui","UmbModalRouteRegistrationController","UMB_DATA_TYPE_PICKER_FLOW_DATA_TYPE_PICKER_MODAL","routingInfo","submitData","routeBuilder","UMB_DATATYPE_WORKSPACE_MODAL","params","contentContextConsumer","UMB_CONTENT_TYPE_WORKSPACE_CONTEXT","propContextConsumer","UMB_PROPERTY_TYPE_WORKSPACE_CONTEXT","contentContext","propContext","propertyEditorName","dataTypeName","UMB_DATA_TYPE_ENTITY_TYPE","data","dataType","unique","event","filteredDataTypes","grouped","fromCamelCase","key","filteredUIs","propertyEditorUI","umbFocus","when","nothing","group","createAsNewOnPick","uis","repeat","dataTypes","UmbTextStyles","css","__decorateClass","state","customElement","UmbDataTypePickerFlowModalElement$1"],"mappings":"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"}