{"version":3,"file":"data-type-collection.repository-8M3nG1By.js","sources":["../../../src/packages/data-type/collection/repository/data-type-collection.server.data-source.ts","../../../src/packages/data-type/collection/repository/data-type-collection.repository.ts"],"sourcesContent":["import type { UmbDataTypeCollectionFilterModel } from '../types.js';\r\nimport type { UmbDataTypeItemModel } from '../../repository/index.js';\r\nimport { UMB_DATA_TYPE_ENTITY_TYPE } from '../../entity.js';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport { DataTypeService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbCollectionDataSource } from '@umbraco-cms/backoffice/collection';\r\nimport type { DataTypeItemResponseModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\n/**\r\n * A data source that fetches the data-type collection data from the server.\r\n * @class UmbDataTypeCollectionServerDataSource\r\n * @implements {UmbCollectionDataSource}\r\n */\r\nexport class UmbDataTypeCollectionServerDataSource implements UmbCollectionDataSource<UmbDataTypeItemModel> {\r\n\t#host: UmbControllerHost;\r\n\t#manifestPropertyEditorUis: Array<ManifestPropertyEditorUi> = [];\r\n\r\n\t/**\r\n\t * Creates an instance of UmbDataTypeCollectionServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @DataTypeof UmbDataTypeCollectionServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t\tumbExtensionsRegistry\r\n\t\t\t.byType('propertyEditorUi')\r\n\t\t\t.subscribe((manifestPropertyEditorUIs) => {\r\n\t\t\t\tthis.#manifestPropertyEditorUis = manifestPropertyEditorUIs;\r\n\t\t\t})\r\n\t\t\t.unsubscribe();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the DataType collection filtered by the given filter.\r\n\t * @param {UmbDataTypeCollectionFilterModel} query\r\n\t * @returns {*}\r\n\t * @DataTypeof UmbDataTypeCollectionServerDataSource\r\n\t */\r\n\tasync getCollection(query: UmbDataTypeCollectionFilterModel) {\r\n\t\tconst { data, error } = await tryExecute(this.#host, DataTypeService.getFilterDataType({ query }));\r\n\r\n\t\tif (error) {\r\n\t\t\treturn { error };\r\n\t\t}\r\n\r\n\t\tif (!data) {\r\n\t\t\treturn { data: { items: [], total: 0 } };\r\n\t\t}\r\n\r\n\t\tconst { items, total } = data;\r\n\r\n\t\tconst mappedItems: Array<UmbDataTypeItemModel> = items.map((item: DataTypeItemResponseModel) => {\r\n\t\t\tconst dataTypeDetail: UmbDataTypeItemModel = {\r\n\t\t\t\tentityType: UMB_DATA_TYPE_ENTITY_TYPE,\r\n\t\t\t\tunique: item.id,\r\n\t\t\t\tname: item.name,\r\n\t\t\t\tpropertyEditorSchemaAlias: item.editorAlias,\r\n\t\t\t\tpropertyEditorUiAlias: item.editorUiAlias!,\r\n\t\t\t\ticon: this.#manifestPropertyEditorUis.find((ui) => ui.alias === item.editorUiAlias!)?.meta.icon,\r\n\t\t\t};\r\n\r\n\t\t\treturn dataTypeDetail;\r\n\t\t});\r\n\r\n\t\treturn { data: { items: mappedItems, total } };\r\n\t}\r\n}\r\n","import { UMB_DATA_TYPE_ITEM_STORE_CONTEXT } from '../../constants.js';\r\nimport type { UmbDataTypeItemStore } from '../../repository/item/data-type-item.store.js';\r\nimport type { UmbDataTypeCollectionFilterModel } from '../types.js';\r\nimport { UmbDataTypeCollectionServerDataSource } from './data-type-collection.server.data-source.js';\r\nimport type { UmbDataTypeCollectionDataSource } from './types.js';\r\nimport type { UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbDataTypeCollectionRepository extends UmbRepositoryBase implements UmbCollectionRepository {\r\n\t#init;\r\n\t#itemStore?: UmbDataTypeItemStore;\r\n\t#collectionSource: UmbDataTypeCollectionDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#init = this.consumeContext(UMB_DATA_TYPE_ITEM_STORE_CONTEXT, (instance) => {\r\n\t\t\tif (instance) {\r\n\t\t\t\tthis.#itemStore = instance;\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.asPromise({ preventTimeout: true })\r\n\t\t\t.catch(() => {\r\n\t\t\t\t// If the context is not available, we can assume that the store is not available.\r\n\t\t\t\tthis.#itemStore = undefined;\r\n\t\t\t});\r\n\r\n\t\tthis.#collectionSource = new UmbDataTypeCollectionServerDataSource(host);\r\n\t}\r\n\r\n\tasync requestCollection(query: UmbDataTypeCollectionFilterModel) {\r\n\t\tawait this.#init;\r\n\r\n\t\tconst { data, error } = await this.#collectionSource.getCollection(query);\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#itemStore!.appendItems(data.items);\r\n\t\t}\r\n\r\n\t\tconst uniques = data?.items.map((item) => item.unique) ?? [];\r\n\r\n\t\treturn { data, error, asObservable: () => this.#itemStore!.items(uniques) };\r\n\t}\r\n}\r\n\r\nexport default UmbDataTypeCollectionRepository;\r\n"],"names":["UmbDataTypeCollectionServerDataSource","#host","#manifestPropertyEditorUis","host","umbExtensionsRegistry","manifestPropertyEditorUIs","query","data","error","tryExecute","DataTypeService","items","total","item","UMB_DATA_TYPE_ENTITY_TYPE","ui","UmbDataTypeCollectionRepository","UmbRepositoryBase","#init","#itemStore","#collectionSource","UMB_DATA_TYPE_ITEM_STORE_CONTEXT","instance","uniques"],"mappings":";;;;;AAgBO,MAAMA,EAA+F;AAAA,EAC3GC;AAAA,EACAC,KAA8D,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/D,YAAYC,GAAyB;AACpC,SAAKF,KAAQE,GACbC,EACE,OAAO,kBAAkB,EACzB,UAAU,CAACC,MAA8B;AACzC,WAAKH,KAA6BG;AAAA,IAClC,CAAA,EACA,YAAY;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASf,MAAM,cAAcC,GAAyC;AAC5D,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAM,IAAI,MAAMC,EAAW,KAAKR,IAAOS,EAAgB,kBAAkB,EAAE,OAAAJ,EAAO,CAAA,CAAC;AAEjG,QAAIE;AACH,aAAO,EAAE,OAAAA,EAAM;AAGhB,QAAI,CAACD;AACG,aAAA,EAAE,MAAM,EAAE,OAAO,CAAA,GAAI,OAAO,IAAI;AAGlC,UAAA,EAAE,OAAAI,GAAO,OAAAC,EAAA,IAAUL;AAezB,WAAO,EAAE,MAAM,EAAE,OAbgCI,EAAM,IAAI,CAACE,OACd;AAAA,MAC5C,YAAYC;AAAA,MACZ,QAAQD,EAAK;AAAA,MACb,MAAMA,EAAK;AAAA,MACX,2BAA2BA,EAAK;AAAA,MAChC,uBAAuBA,EAAK;AAAA,MAC5B,MAAM,KAAKX,GAA2B,KAAK,CAACa,MAAOA,EAAG,UAAUF,EAAK,aAAc,GAAG,KAAK;AAAA,IAC5F,EAGA,GAEoC,OAAAD,IAAQ;AAAA,EAAA;AAE/C;AC5DO,MAAMI,UAAwCC,EAAqD;AAAA,EACzGC;AAAA,EACAC;AAAA,EACAC;AAAA,EAEA,YAAYjB,GAAyB;AACpC,UAAMA,CAAI,GAEV,KAAKe,KAAQ,KAAK,eAAeG,GAAkC,CAACC,MAAa;AAChF,MAAIA,MACH,KAAKH,KAAaG;AAAA,IACnB,CACA,EACC,UAAU,EAAE,gBAAgB,GAAM,CAAA,EAClC,MAAM,MAAM;AAEZ,WAAKH,KAAa;AAAA,IAAA,CAClB,GAEG,KAAAC,KAAoB,IAAIpB,EAAsCG,CAAI;AAAA,EAAA;AAAA,EAGxE,MAAM,kBAAkBG,GAAyC;AAChE,UAAM,KAAKY;AAEL,UAAA,EAAE,MAAAX,GAAM,OAAAC,EAAM,IAAI,MAAM,KAAKY,GAAkB,cAAcd,CAAK;AAExE,IAAIC,KACE,KAAAY,GAAY,YAAYZ,EAAK,KAAK;AAGlC,UAAAgB,IAAUhB,GAAM,MAAM,IAAI,CAACM,MAASA,EAAK,MAAM,KAAK,CAAC;AAEpD,WAAA,EAAE,MAAAN,GAAM,OAAAC,GAAO,cAAc,MAAM,KAAKW,GAAY,MAAMI,CAAO,EAAE;AAAA,EAAA;AAE5E;"}