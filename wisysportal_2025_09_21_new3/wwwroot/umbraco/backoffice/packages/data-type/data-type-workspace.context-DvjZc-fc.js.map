{"version":3,"file":"data-type-workspace.context-DvjZc-fc.js","sources":["../../../src/packages/data-type/workspace/data-type-workspace-editor.element.ts","../../../src/packages/data-type/workspace/data-type-workspace.context.ts"],"sourcesContent":["import { UMB_DATA_TYPE_WORKSPACE_CONTEXT } from './data-type-workspace.context-token.js';\r\nimport { css, html, customElement } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n/**\r\n * @element umb-data-type-workspace-editor\r\n * @description - Element for displaying the Data Type Workspace edit route.\r\n */\r\n@customElement('umb-data-type-workspace-editor')\r\nexport class UmbDataTypeWorkspaceEditorElement extends UmbLitElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_DATA_TYPE_WORKSPACE_CONTEXT, (workspaceContext) => {\r\n\t\t\tworkspaceContext?.createPropertyDatasetContext(this);\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-entity-detail-workspace-editor>\r\n\t\t\t\t<umb-workspace-header-name-editable slot=\"header\"></umb-workspace-header-name-editable>\r\n\t\t\t</umb-entity-detail-workspace-editor>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDataTypeWorkspaceEditorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-data-type-workspace-editor': UmbDataTypeWorkspaceEditorElement;\r\n\t}\r\n}\r\n","import type { UmbDataTypeDetailModel, UmbDataTypePropertyValueModel } from '../types.js';\r\nimport { UMB_DATA_TYPE_DETAIL_REPOSITORY_ALIAS, UMB_DATA_TYPE_ENTITY_TYPE } from '../constants.js';\r\nimport type { UmbDataTypeDetailRepository } from '../repository/index.js';\r\nimport { UmbDataTypeWorkspaceEditorElement } from './data-type-workspace-editor.element.js';\r\nimport { UMB_DATA_TYPE_WORKSPACE_ALIAS } from './constants.js';\r\nimport type { UmbPropertyDatasetContext } from '@umbraco-cms/backoffice/property';\r\nimport type {\r\n\tUmbInvariantDatasetWorkspaceContext,\r\n\tUmbRoutableWorkspaceContext,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport {\r\n\tUmbInvariantWorkspacePropertyDatasetContext,\r\n\tUmbWorkspaceIsNewRedirectController,\r\n\tUmbEntityNamedDetailWorkspaceContextBase,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport { appendToFrozenArray, UmbArrayState, UmbStringState } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type {\r\n\tPropertyEditorSettingsDefaultData,\r\n\tPropertyEditorSettingsProperty,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\ntype EntityType = UmbDataTypeDetailModel;\r\n\r\n/**\r\n * @class UmbDataTypeWorkspaceContext\r\n * @description - Context for handling data type workspace\r\n * There is two overall code flows to be aware about:\r\n *\r\n * propertyEditorUiAlias is observed\r\n * loads propertyEditorUi manifest\r\n * then the propertyEditorSchemaAlias is set to what the UI is configured for.\r\n *\r\n * propertyEditorSchemaAlias is observed\r\n * loads the propertyEditorSchema manifest\r\n * if no UI is defined then the propertyEditorSchema manifest default ui is set for the propertyEditorUiAlias.\r\n *\r\n * This supports two cases:\r\n * - when editing an existing data type that only has a schema alias set, then it gets the UI set.\r\n * - a new property editor ui is picked for a data-type, uses the data-type configuration to set the schema, if such is configured for the Property Editor UI. (The user picks the UI via the UI, the schema comes from the UI that the user picked, we store both on the data-type)\r\n */\r\nexport class UmbDataTypeWorkspaceContext\r\n\textends UmbEntityNamedDetailWorkspaceContextBase<EntityType, UmbDataTypeDetailRepository>\r\n\timplements UmbInvariantDatasetWorkspaceContext, UmbRoutableWorkspaceContext\r\n{\r\n\treadonly propertyEditorUiAlias = this._data.createObservablePartOfCurrent((data) => data?.editorUiAlias);\r\n\treadonly propertyEditorSchemaAlias = this._data.createObservablePartOfCurrent((data) => data?.editorAlias);\r\n\r\n\treadonly values = this._data.createObservablePartOfCurrent((data) => data?.values);\r\n\tasync getValues() {\r\n\t\treturn this._data.getCurrent()?.values;\r\n\t}\r\n\r\n\t#properties = new UmbArrayState<PropertyEditorSettingsProperty>([], (x) => x.alias).sortBy(\r\n\t\t(a, b) => (a.weight || 0) - (b.weight || 0),\r\n\t);\r\n\treadonly properties = this.#properties.asObservable();\r\n\r\n\t#propertyEditorSchemaSettingsDefaultData: Array<PropertyEditorSettingsDefaultData> = [];\r\n\t#propertyEditorUISettingsDefaultData: Array<PropertyEditorSettingsDefaultData> = [];\r\n\r\n\t#propertyEditorSchemaSettingsProperties: Array<PropertyEditorSettingsProperty> = [];\r\n\t#propertyEditorUISettingsProperties: Array<PropertyEditorSettingsProperty> = [];\r\n\r\n\t#propertyEditorSchemaConfigDefaultUIAlias: string | null = null;\r\n\r\n\t#settingsDefaultData?: Array<PropertyEditorSettingsDefaultData>;\r\n\r\n\t#propertyEditorUiIcon = new UmbStringState<string | null>(null);\r\n\treadonly propertyEditorUiIcon = this.#propertyEditorUiIcon.asObservable();\r\n\r\n\t#propertyEditorUiName = new UmbStringState<string | null>(null);\r\n\treadonly propertyEditorUiName = this.#propertyEditorUiName.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, {\r\n\t\t\tworkspaceAlias: UMB_DATA_TYPE_WORKSPACE_ALIAS,\r\n\t\t\tentityType: UMB_DATA_TYPE_ENTITY_TYPE,\r\n\t\t\tdetailRepositoryAlias: UMB_DATA_TYPE_DETAIL_REPOSITORY_ALIAS,\r\n\t\t});\r\n\r\n\t\tthis.#observePropertyEditorSchemaAlias();\r\n\t\tthis.#observePropertyEditorUIAlias();\r\n\r\n\t\tthis.routes.setRoutes([\r\n\t\t\t{\r\n\t\t\t\tpath: 'create/parent/:entityType/:parentUnique',\r\n\t\t\t\tcomponent: UmbDataTypeWorkspaceEditorElement,\r\n\t\t\t\tsetup: async (_component, info) => {\r\n\t\t\t\t\tconst parentEntityType = info.match.params.entityType;\r\n\t\t\t\t\tconst parentUnique = info.match.params.parentUnique === 'null' ? null : info.match.params.parentUnique;\r\n\t\t\t\t\tawait this.createScaffold({ parent: { entityType: parentEntityType, unique: parentUnique } });\r\n\r\n\t\t\t\t\tnew UmbWorkspaceIsNewRedirectController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis.getHostElement().shadowRoot!.querySelector('umb-router-slot')!,\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'edit/:unique',\r\n\t\t\t\tcomponent: UmbDataTypeWorkspaceEditorElement,\r\n\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\tconst unique = info.match.params.unique;\r\n\t\t\t\t\tthis.load(unique);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\t}\r\n\r\n\toverride resetState() {\r\n\t\tsuper.resetState();\r\n\t\tthis.#propertyEditorSchemaSettingsProperties = [];\r\n\t\tthis.#propertyEditorUISettingsProperties = [];\r\n\t\tthis.#propertyEditorSchemaSettingsDefaultData = [];\r\n\t\tthis.#propertyEditorUISettingsDefaultData = [];\r\n\t\tthis.#settingsDefaultData = undefined;\r\n\t\tthis.#mergeConfigProperties();\r\n\t}\r\n\r\n\t// Hold the last set property editor ui alias, so we know when it changes, so we can reset values. [NL]\r\n\t#lastPropertyEditorUIAlias?: string | null;\r\n\r\n\t#observePropertyEditorUIAlias() {\r\n\t\tthis.observe(\r\n\t\t\tthis.propertyEditorUiAlias,\r\n\t\t\tasync (propertyEditorUiAlias) => {\r\n\t\t\t\tthis.#propertyEditorUISettingsProperties = [];\r\n\t\t\t\tthis.#propertyEditorUISettingsDefaultData = [];\r\n\r\n\t\t\t\t// we only want to react on the change if the alias is set or null. When it is undefined something is still loading\r\n\t\t\t\tif (propertyEditorUiAlias === undefined) return;\r\n\r\n\t\t\t\tthis.#observePropertyEditorUIManifest(propertyEditorUiAlias);\r\n\t\t\t},\r\n\t\t\t'editorUiAlias',\r\n\t\t);\r\n\t}\r\n\r\n\t#observePropertyEditorSchemaAlias() {\r\n\t\treturn this.observe(\r\n\t\t\tthis.propertyEditorSchemaAlias,\r\n\t\t\t(propertyEditorSchemaAlias) => {\r\n\t\t\t\tthis.#propertyEditorSchemaSettingsProperties = [];\r\n\t\t\t\tthis.#propertyEditorSchemaSettingsDefaultData = [];\r\n\t\t\t\tthis.#observePropertyEditorSchemaManifest(propertyEditorSchemaAlias);\r\n\t\t\t},\r\n\t\t\t'schemaAlias',\r\n\t\t);\r\n\t}\r\n\r\n\t#observePropertyEditorSchemaManifest(propertyEditorSchemaAlias?: string) {\r\n\t\tif (!propertyEditorSchemaAlias) {\r\n\t\t\tthis.removeUmbControllerByAlias('schema');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.observe(\r\n\t\t\tpropertyEditorSchemaAlias\r\n\t\t\t\t? umbExtensionsRegistry.byTypeAndAlias('propertyEditorSchema', propertyEditorSchemaAlias)\r\n\t\t\t\t: undefined,\r\n\t\t\t(manifest) => {\r\n\t\t\t\t// Maps properties to have a weight, so they can be sorted\r\n\t\t\t\tthis.#propertyEditorSchemaSettingsProperties = (manifest?.meta.settings?.properties ?? []).map((x, i) => ({\r\n\t\t\t\t\t...x,\r\n\t\t\t\t\tweight: x.weight ?? i,\r\n\t\t\t\t}));\r\n\t\t\t\tthis.#propertyEditorSchemaSettingsDefaultData = manifest?.meta.settings?.defaultData || [];\r\n\t\t\t\tthis.#propertyEditorSchemaConfigDefaultUIAlias = manifest?.meta.defaultPropertyEditorUiAlias || null;\r\n\t\t\t\tif (this.#propertyEditorSchemaConfigDefaultUIAlias && this.getPropertyEditorUiAlias() === null) {\r\n\t\t\t\t\t// Fallback to the default property editor ui for this property editor schema.\r\n\t\t\t\t\tthis.setPropertyEditorUiAlias(this.#propertyEditorSchemaConfigDefaultUIAlias);\r\n\t\t\t\t}\r\n\t\t\t\tthis.#mergeConfigProperties();\r\n\t\t\t},\r\n\t\t\t'schema',\r\n\t\t);\r\n\t}\r\n\r\n\t#observePropertyEditorUIManifest(propertyEditorUIAlias: string | null) {\r\n\t\tif (!propertyEditorUIAlias) {\r\n\t\t\tthis.removeUmbControllerByAlias('editorUi');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.observe(\r\n\t\t\tumbExtensionsRegistry.byTypeAndAlias('propertyEditorUi', propertyEditorUIAlias),\r\n\t\t\t(manifest) => {\r\n\t\t\t\tthis.#propertyEditorUiIcon.setValue(manifest?.meta.icon || null);\r\n\t\t\t\tthis.#propertyEditorUiName.setValue(manifest?.name || null);\r\n\r\n\t\t\t\t// Maps properties to have a weight, so they can be sorted, notice UI properties have a +1000 weight compared to schema properties.\r\n\t\t\t\tthis.#propertyEditorUISettingsProperties = (manifest?.meta.settings?.properties ?? []).map((x, i) => ({\r\n\t\t\t\t\t...x,\r\n\t\t\t\t\tweight: x.weight ?? 1000 + i,\r\n\t\t\t\t}));\r\n\t\t\t\tthis.#propertyEditorUISettingsDefaultData = manifest?.meta.settings?.defaultData || [];\r\n\t\t\t\tthis.setPropertyEditorSchemaAlias(manifest?.meta.propertyEditorSchemaAlias);\r\n\t\t\t\tthis.#mergeConfigProperties();\r\n\t\t\t},\r\n\t\t\t'editorUi',\r\n\t\t);\r\n\t}\r\n\r\n\t#mergeConfigProperties() {\r\n\t\tif (this.#propertyEditorSchemaSettingsProperties && this.#propertyEditorUISettingsProperties) {\r\n\t\t\t// Reset the value to this array, and then afterwards append:\r\n\t\t\tthis.#properties.setValue(this.#propertyEditorSchemaSettingsProperties);\r\n\t\t\t// Append the UI settings properties to the schema properties, so they can override the schema properties:\r\n\t\t\tthis.#properties.append(this.#propertyEditorUISettingsProperties);\r\n\r\n\t\t\t// If new or if the alias was changed then set default values. This 'complexity' to prevent setting default data when initialized [NL]\r\n\t\t\tconst previousPropertyEditorUIAlias = this.#lastPropertyEditorUIAlias;\r\n\t\t\tthis.#lastPropertyEditorUIAlias = this.getPropertyEditorUiAlias();\r\n\t\t\tif (\r\n\t\t\t\tthis.getIsNew() ||\r\n\t\t\t\t(previousPropertyEditorUIAlias && previousPropertyEditorUIAlias !== this.#lastPropertyEditorUIAlias)\r\n\t\t\t) {\r\n\t\t\t\tthis.#transferConfigDefaultData();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#transferConfigDefaultData() {\r\n\t\tif (!this.#propertyEditorSchemaSettingsDefaultData || !this.#propertyEditorUISettingsDefaultData) return;\r\n\r\n\t\tconst data = this._data.getCurrent();\r\n\t\tif (!data) return;\r\n\r\n\t\t// We are going to transfer the default data from the schema and the UI (the UI can override the schema data).\r\n\t\t// Let us figure out which editors are alike from the inherited data, so we can keep that data around and only transfer the data that is not\r\n\t\t// inherited from the previous data type.\r\n\t\tthis.#settingsDefaultData = [\r\n\t\t\t...this.#propertyEditorSchemaSettingsDefaultData,\r\n\t\t\t...this.#propertyEditorUISettingsDefaultData,\r\n\t\t] satisfies Array<UmbDataTypePropertyValueModel>;\r\n\r\n\t\tconst values: Array<UmbDataTypePropertyValueModel> = [];\r\n\r\n\t\t// We want to keep the existing data, if it is not in the default data, and if it is in the default data, then we want to keep the default data.\r\n\t\tfor (const defaultDataItem of this.#properties.getValue()) {\r\n\t\t\t// We are matching on the alias, as we assume that the alias is unique for the data type.\r\n\t\t\t// TODO: Consider if we should also match on the editorAlias just to be on the safe side [JOV]\r\n\t\t\tconst existingData = data.values?.find((x) => x.alias === defaultDataItem.alias);\r\n\t\t\tif (existingData) {\r\n\t\t\t\tvalues.push(existingData);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If the data is not in the existing data, then we want to add the default data if it exists.\r\n\t\t\tconst existingDefaultData = this.#settingsDefaultData.find((x) => x.alias === defaultDataItem.alias);\r\n\t\t\tif (existingDefaultData) {\r\n\t\t\t\tvalues.push(existingDefaultData);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._data.updatePersisted({ values });\r\n\t\tthis._data.updateCurrent({ values });\r\n\t}\r\n\r\n\tpublic getPropertyDefaultValue(alias: string) {\r\n\t\treturn this.#settingsDefaultData?.find((x) => x.alias === alias)?.value;\r\n\t}\r\n\r\n\tcreatePropertyDatasetContext(host: UmbControllerHost): UmbPropertyDatasetContext {\r\n\t\treturn new UmbInvariantWorkspacePropertyDatasetContext(host, this);\r\n\t}\r\n\r\n\tgetPropertyEditorSchemaAlias() {\r\n\t\treturn this._data.getCurrent()?.editorAlias;\r\n\t}\r\n\r\n\tsetPropertyEditorSchemaAlias(alias?: string) {\r\n\t\tthis._data.updateCurrent({ editorAlias: alias });\r\n\t}\r\n\r\n\tgetPropertyEditorUiAlias() {\r\n\t\treturn this._data.getCurrent()?.editorUiAlias;\r\n\t}\r\n\r\n\tsetPropertyEditorUiAlias(alias?: string) {\r\n\t\tthis._data.updateCurrent({ editorUiAlias: alias });\r\n\t}\r\n\r\n\t/**\r\n\t * @function propertyValueByAlias\r\n\t * @param {string} propertyAlias\r\n\t * @returns {Promise<Observable<ReturnType | undefined> | undefined>}\r\n\t * @description Get an Observable for the value of this property.\r\n\t */\r\n\tasync propertyValueByAlias<ReturnType = unknown>(propertyAlias: string) {\r\n\t\tawait this._getDataPromise;\r\n\t\treturn this._data.createObservablePartOfCurrent(\r\n\t\t\t(data) => data?.values?.find((x) => x.alias === propertyAlias)?.value as ReturnType,\r\n\t\t);\r\n\t}\r\n\r\n\tgetPropertyValue<ReturnType = unknown>(propertyAlias: string) {\r\n\t\treturn (\r\n\t\t\t(this._data.getCurrent()?.values?.find((x) => x.alias === propertyAlias)?.value as ReturnType) ??\r\n\t\t\t(this.getPropertyDefaultValue(propertyAlias) as ReturnType)\r\n\t\t);\r\n\t}\r\n\r\n\t// TODO: its not called a property in the model, but we do consider this way in our front-end\r\n\tasync setPropertyValue(alias: string, value: unknown) {\r\n\t\tawait this._getDataPromise;\r\n\t\tconst entry = { alias: alias, value: value };\r\n\r\n\t\tconst currentData = this._data.getCurrent();\r\n\t\tif (currentData) {\r\n\t\t\t// TODO: make a partial update method for array of data, (idea/concept, use if this case is getting common)\r\n\t\t\tconst newDataSet = appendToFrozenArray(currentData.values || [], entry, (x) => x.alias);\r\n\t\t\tthis._data.updateCurrent({ values: newDataSet });\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override destroy(): void {\r\n\t\tthis.#properties.destroy();\r\n\t\tthis.#propertyEditorUiIcon.destroy();\r\n\t\tthis.#propertyEditorUiName.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\nexport { UmbDataTypeWorkspaceContext as api };\r\n"],"names":["UmbDataTypeWorkspaceEditorElement","UmbLitElement","UMB_DATA_TYPE_WORKSPACE_CONTEXT","workspaceContext","html","css","__decorateClass","customElement","UmbDataTypeWorkspaceContext","UmbEntityNamedDetailWorkspaceContextBase","host","UMB_DATA_TYPE_WORKSPACE_ALIAS","UMB_DATA_TYPE_ENTITY_TYPE","UMB_DATA_TYPE_DETAIL_REPOSITORY_ALIAS","data","#properties","UmbArrayState","x","a","b","#propertyEditorSchemaSettingsDefaultData","#propertyEditorUISettingsDefaultData","#propertyEditorSchemaSettingsProperties","#propertyEditorUISettingsProperties","#propertyEditorSchemaConfigDefaultUIAlias","#propertyEditorUiIcon","UmbStringState","#propertyEditorUiName","#observePropertyEditorSchemaAlias","#observePropertyEditorUIAlias","_component","info","parentEntityType","parentUnique","UmbWorkspaceIsNewRedirectController","unique","#settingsDefaultData","#mergeConfigProperties","#lastPropertyEditorUIAlias","propertyEditorUiAlias","#observePropertyEditorUIManifest","propertyEditorSchemaAlias","#observePropertyEditorSchemaManifest","umbExtensionsRegistry","manifest","i","propertyEditorUIAlias","previousPropertyEditorUIAlias","#transferConfigDefaultData","values","defaultDataItem","existingData","existingDefaultData","alias","UmbInvariantWorkspacePropertyDatasetContext","propertyAlias","value","entry","currentData","newDataSet","appendToFrozenArray"],"mappings":"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"}