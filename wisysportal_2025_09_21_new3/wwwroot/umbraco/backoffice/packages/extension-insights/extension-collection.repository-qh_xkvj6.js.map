{"version":3,"file":"extension-collection.repository-qh_xkvj6.js","sources":["../../../src/packages/extension-insights/collection/repository/extension-collection.repository.ts"],"sourcesContent":["import type { UmbExtensionCollectionFilterModel, UmbExtensionDetailModel } from '../types.js';\r\nimport { UMB_EXTENSION_ENTITY_TYPE } from '../../entity.js';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\r\n\r\nexport class UmbExtensionCollectionRepository\r\n\textends UmbRepositoryBase\r\n\timplements UmbCollectionRepository<UmbExtensionDetailModel, UmbExtensionCollectionFilterModel>\r\n{\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t}\r\n\r\n\tasync requestCollection(query: UmbExtensionCollectionFilterModel) {\r\n\t\tlet extensions: Array<UmbExtensionDetailModel> = umbExtensionsRegistry.getAllExtensions().map((manifest) => {\r\n\t\t\treturn {\r\n\t\t\t\t...manifest,\r\n\t\t\t\tunique: manifest.alias,\r\n\t\t\t\tentityType: UMB_EXTENSION_ENTITY_TYPE,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst skip = query.skip || 0;\r\n\t\tconst take = query.take || 100;\r\n\r\n\t\tif (query.filter) {\r\n\t\t\tconst text = query.filter.toLowerCase();\r\n\t\t\textensions = extensions.filter(\r\n\t\t\t\t(x) => x.name.toLowerCase().includes(text) || x.alias.toLowerCase().includes(text),\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (query.type) {\r\n\t\t\textensions = extensions.filter((x) => x.type === query.type);\r\n\t\t}\r\n\r\n\t\textensions.sort((a, b) => a.type.localeCompare(b.type) || a.alias.localeCompare(b.alias));\r\n\r\n\t\tconst total = extensions.length;\r\n\t\tconst items = extensions.slice(skip, skip + take);\r\n\t\tconst data = { items, total };\r\n\t\treturn { data };\r\n\t}\r\n}\r\n\r\nexport { UmbExtensionCollectionRepository as api };\r\n"],"names":["UmbExtensionCollectionRepository","UmbRepositoryBase","host","query","extensions","umbExtensionsRegistry","manifest","UMB_EXTENSION_ENTITY_TYPE","skip","take","text","x","a","b","total"],"mappings":";;;AAOO,MAAMA,UACJC,EAET;AAAA,EACC,YAAYC,GAAyB;AACpC,UAAMA,CAAI;AAAA,EAAA;AAAA,EAGX,MAAM,kBAAkBC,GAA0C;AACjE,QAAIC,IAA6CC,EAAsB,iBAAmB,EAAA,IAAI,CAACC,OACvF;AAAA,MACN,GAAGA;AAAA,MACH,QAAQA,EAAS;AAAA,MACjB,YAAYC;AAAA,IACb,EACA;AAEK,UAAAC,IAAOL,EAAM,QAAQ,GACrBM,IAAON,EAAM,QAAQ;AAE3B,QAAIA,EAAM,QAAQ;AACX,YAAAO,IAAOP,EAAM,OAAO,YAAY;AACtC,MAAAC,IAAaA,EAAW;AAAA,QACvB,CAACO,MAAMA,EAAE,KAAK,YAAc,EAAA,SAASD,CAAI,KAAKC,EAAE,MAAM,YAAY,EAAE,SAASD,CAAI;AAAA,MAClF;AAAA,IAAA;AAGD,IAAIP,EAAM,SACTC,IAAaA,EAAW,OAAO,CAACO,MAAMA,EAAE,SAASR,EAAM,IAAI,IAG5DC,EAAW,KAAK,CAACQ,GAAGC,MAAMD,EAAE,KAAK,cAAcC,EAAE,IAAI,KAAKD,EAAE,MAAM,cAAcC,EAAE,KAAK,CAAC;AAExF,UAAMC,IAAQV,EAAW;AAGzB,WAAO,EAAE,MADI,EAAE,OADDA,EAAW,MAAMI,GAAMA,IAAOC,CAAI,GAC1B,OAAAK,EAAM,EACd;AAAA,EAAA;AAEhB;"}