{"version":3,"file":"dictionary-collection.repository-Bn7ad0EJ.js","sources":["../../../src/packages/dictionary/collection/repository/dictionary-collection.server.data-source.ts","../../../src/packages/dictionary/collection/repository/dictionary-collection.repository.ts"],"sourcesContent":["import type { UmbDictionaryCollectionFilterModel, UmbDictionaryCollectionModel } from '../types.js';\r\nimport { UMB_DICTIONARY_ENTITY_TYPE } from '../../entity.js';\r\nimport type { UmbCollectionDataSource } from '@umbraco-cms/backoffice/collection';\r\nimport { DictionaryService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source that fetches the dictionary collection data from the server.\r\n * @class UmbDictionaryCollectionServerDataSource\r\n * @implements {UmbCollectionDataSource}\r\n */\r\nexport class UmbDictionaryCollectionServerDataSource implements UmbCollectionDataSource<UmbDictionaryCollectionModel> {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbDictionaryCollectionServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbDictionaryCollectionServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the dictionary collection filtered by the given filter.\r\n\t * @param {UmbDictionaryCollectionFilterModel} query\r\n\t * @returns {*}\r\n\t * @memberof UmbDictionaryCollectionServerDataSource\r\n\t */\r\n\tasync getCollection(query: UmbDictionaryCollectionFilterModel) {\r\n\t\tconst { data, error } = await tryExecute(this.#host, DictionaryService.getDictionary({ query }));\r\n\r\n\t\tif (data) {\r\n\t\t\tconst items = data.items.map((item) => {\r\n\t\t\t\tconst model: UmbDictionaryCollectionModel = {\r\n\t\t\t\t\tentityType: UMB_DICTIONARY_ENTITY_TYPE,\r\n\t\t\t\t\tname: item.name!,\r\n\t\t\t\t\tparentUnique: item.parent ? item.parent.id : null,\r\n\t\t\t\t\ttranslatedIsoCodes: item.translatedIsoCodes,\r\n\t\t\t\t\tunique: item.id,\r\n\t\t\t\t};\r\n\t\t\t\treturn model;\r\n\t\t\t});\r\n\r\n\t\t\treturn { data: { items, total: data.total } };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n","import type { UmbDictionaryCollectionFilterModel } from '../types.js';\r\nimport { UmbDictionaryCollectionServerDataSource } from './dictionary-collection.server.data-source.js';\r\nimport type { UmbDictionaryCollectionDataSource } from './types.js';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbDictionaryCollectionRepository extends UmbRepositoryBase implements UmbCollectionRepository {\r\n\t#collectionSource: UmbDictionaryCollectionDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#collectionSource = new UmbDictionaryCollectionServerDataSource(host);\r\n\t}\r\n\r\n\tasync requestCollection(filter: UmbDictionaryCollectionFilterModel) {\r\n\t\treturn this.#collectionSource.getCollection(filter);\r\n\t}\r\n}\r\n\r\nexport default UmbDictionaryCollectionRepository;\r\n"],"names":["UmbDictionaryCollectionServerDataSource","#host","host","query","data","error","tryExecute","DictionaryService","item","UMB_DICTIONARY_ENTITY_TYPE","UmbDictionaryCollectionRepository","UmbRepositoryBase","#collectionSource","filter"],"mappings":";;;;AAYO,MAAMA,EAAyG;AAAA,EACrHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASd,MAAM,cAAcC,GAA2C;AAC9D,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAM,IAAI,MAAMC,EAAW,KAAKL,IAAOM,EAAkB,cAAc,EAAE,OAAAJ,EAAO,CAAA,CAAC;AAE/F,WAAIC,IAYI,EAAE,MAAM,EAAE,OAXHA,EAAK,MAAM,IAAI,CAACI,OACe;AAAA,MAC3C,YAAYC;AAAA,MACZ,MAAMD,EAAK;AAAA,MACX,cAAcA,EAAK,SAASA,EAAK,OAAO,KAAK;AAAA,MAC7C,oBAAoBA,EAAK;AAAA,MACzB,QAAQA,EAAK;AAAA,IACd,EAEA,GAEuB,OAAOJ,EAAK,QAAQ,IAGtC,EAAE,OAAAC,EAAM;AAAA,EAAA;AAEjB;AC3CO,MAAMK,UAA0CC,EAAqD;AAAA,EAC3GC;AAAA,EAEA,YAAYV,GAAyB;AACpC,UAAMA,CAAI,GACL,KAAAU,KAAoB,IAAIZ,EAAwCE,CAAI;AAAA,EAAA;AAAA,EAG1E,MAAM,kBAAkBW,GAA4C;AAC5D,WAAA,KAAKD,GAAkB,cAAcC,CAAM;AAAA,EAAA;AAEpD;"}