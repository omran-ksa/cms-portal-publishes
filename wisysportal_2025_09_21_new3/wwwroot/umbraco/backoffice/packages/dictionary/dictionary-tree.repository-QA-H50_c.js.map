{"version":3,"file":"dictionary-tree.repository-QA-H50_c.js","sources":["../../../src/packages/dictionary/tree/dictionary-tree.server.data-source.ts","../../../src/packages/dictionary/tree/dictionary-tree.repository.ts"],"sourcesContent":["import { UMB_DICTIONARY_ENTITY_TYPE, UMB_DICTIONARY_ROOT_ENTITY_TYPE } from '../entity.js';\r\nimport type { UmbDictionaryTreeItemModel } from './types.js';\r\nimport type {\r\n\tUmbTreeAncestorsOfRequestArgs,\r\n\tUmbTreeChildrenOfRequestArgs,\r\n\tUmbTreeRootItemsRequestArgs,\r\n} from '@umbraco-cms/backoffice/tree';\r\nimport { UmbTreeServerDataSourceBase } from '@umbraco-cms/backoffice/tree';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { NamedEntityTreeItemResponseModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { DictionaryService } from '@umbraco-cms/backoffice/external/backend-api';\r\n\r\n/**\r\n * A data source for the Dictionary tree that fetches data from the server\r\n * @class UmbDictionaryTreeServerDataSource\r\n * @implements {UmbTreeDataSource}\r\n */\r\nexport class UmbDictionaryTreeServerDataSource extends UmbTreeServerDataSourceBase<\r\n\tNamedEntityTreeItemResponseModel,\r\n\tUmbDictionaryTreeItemModel\r\n> {\r\n\t/**\r\n\t * Creates an instance of UmbDictionaryTreeServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbDictionaryTreeServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, {\r\n\t\t\tgetRootItems,\r\n\t\t\tgetChildrenOf,\r\n\t\t\tgetAncestorsOf,\r\n\t\t\tmapper,\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst getRootItems = (args: UmbTreeRootItemsRequestArgs) =>\r\n\t// eslint-disable-next-line local-rules/no-direct-api-import\r\n\tDictionaryService.getTreeDictionaryRoot({ query: { skip: args.skip, take: args.take } });\r\n\r\nconst getChildrenOf = (args: UmbTreeChildrenOfRequestArgs) => {\r\n\tif (args.parent.unique === null) {\r\n\t\treturn getRootItems(args);\r\n\t} else {\r\n\t\t// eslint-disable-next-line local-rules/no-direct-api-import\r\n\t\treturn DictionaryService.getTreeDictionaryChildren({\r\n\t\t\tquery: { parentId: args.parent.unique, skip: args.skip, take: args.take },\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst getAncestorsOf = (args: UmbTreeAncestorsOfRequestArgs) =>\r\n\t// eslint-disable-next-line local-rules/no-direct-api-import\r\n\tDictionaryService.getTreeDictionaryAncestors({\r\n\t\tquery: { descendantId: args.treeItem.unique },\r\n\t});\r\n\r\nconst mapper = (item: NamedEntityTreeItemResponseModel): UmbDictionaryTreeItemModel => {\r\n\treturn {\r\n\t\tunique: item.id,\r\n\t\tparent: {\r\n\t\t\tunique: item.parent?.id || null,\r\n\t\t\tentityType: item.parent ? UMB_DICTIONARY_ENTITY_TYPE : UMB_DICTIONARY_ROOT_ENTITY_TYPE,\r\n\t\t},\r\n\t\tname: item.name,\r\n\t\tentityType: UMB_DICTIONARY_ENTITY_TYPE,\r\n\t\thasChildren: item.hasChildren,\r\n\t\tisFolder: false,\r\n\t\ticon: 'icon-book-alt',\r\n\t};\r\n};\r\n","import { UMB_DICTIONARY_ROOT_ENTITY_TYPE } from '../entity.js';\r\nimport { UmbDictionaryTreeServerDataSource } from './dictionary-tree.server.data-source.js';\r\nimport type { UmbDictionaryTreeItemModel, UmbDictionaryTreeRootModel } from './types.js';\r\nimport { UMB_DICTIONARY_TREE_STORE_CONTEXT } from './dictionary-tree.store.js';\r\nimport { UmbTreeRepositoryBase } from '@umbraco-cms/backoffice/tree';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbApi } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nexport class UmbDictionaryTreeRepository\r\n\textends UmbTreeRepositoryBase<UmbDictionaryTreeItemModel, UmbDictionaryTreeRootModel>\r\n\timplements UmbApi\r\n{\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UmbDictionaryTreeServerDataSource, UMB_DICTIONARY_TREE_STORE_CONTEXT);\r\n\t}\r\n\r\n\tasync requestTreeRoot() {\r\n\t\tconst { data: treeRootData } = await this._treeSource.getRootItems({ skip: 0, take: 1 });\r\n\t\tconst hasChildren = treeRootData ? treeRootData.total > 0 : false;\r\n\r\n\t\tconst data: UmbDictionaryTreeRootModel = {\r\n\t\t\tunique: null,\r\n\t\t\tentityType: UMB_DICTIONARY_ROOT_ENTITY_TYPE,\r\n\t\t\tname: '#treeHeaders_dictionary',\r\n\t\t\thasChildren,\r\n\t\t\tisFolder: true,\r\n\t\t};\r\n\r\n\t\treturn { data };\r\n\t}\r\n}\r\n\r\nexport { UmbDictionaryTreeRepository as api };\r\n"],"names":["UmbDictionaryTreeServerDataSource","UmbTreeServerDataSourceBase","host","getRootItems","getChildrenOf","getAncestorsOf","mapper","args","DictionaryService","item","UMB_DICTIONARY_ENTITY_TYPE","UMB_DICTIONARY_ROOT_ENTITY_TYPE","UmbDictionaryTreeRepository","UmbTreeRepositoryBase","UMB_DICTIONARY_TREE_STORE_CONTEXT","treeRootData","hasChildren"],"mappings":";;;AAiBO,MAAMA,UAA0CC,EAGrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,YAAYC,GAAyB;AACpC,UAAMA,GAAM;AAAA,MACX,cAAAC;AAAA,MACA,eAAAC;AAAA,MACA,gBAAAC;AAAA,MACA,QAAAC;AAAA,IAAA,CACA;AAAA,EAAA;AAEH;AAEA,MAAMH,IAAe,CAACI;AAAA;AAAA,EAErBC,EAAkB,sBAAsB,EAAE,OAAO,EAAE,MAAMD,EAAK,MAAM,MAAMA,EAAK,OAAQ,CAAA;AAAA,GAElFH,IAAgB,CAACG,MAClBA,EAAK,OAAO,WAAW,OACnBJ,EAAaI,CAAI,IAGjBC,EAAkB,0BAA0B;AAAA,EAClD,OAAO,EAAE,UAAUD,EAAK,OAAO,QAAQ,MAAMA,EAAK,MAAM,MAAMA,EAAK,KAAK;AAAA,CACxE,GAIGF,IAAiB,CAACE;AAAA;AAAA,EAEvBC,EAAkB,2BAA2B;AAAA,IAC5C,OAAO,EAAE,cAAcD,EAAK,SAAS,OAAO;AAAA,EAC5C,CAAA;AAAA,GAEID,IAAS,CAACG,OACR;AAAA,EACN,QAAQA,EAAK;AAAA,EACb,QAAQ;AAAA,IACP,QAAQA,EAAK,QAAQ,MAAM;AAAA,IAC3B,YAAYA,EAAK,SAASC,IAA6BC;AAAA,EACxD;AAAA,EACA,MAAMF,EAAK;AAAA,EACX,YAAYC;AAAA,EACZ,aAAaD,EAAK;AAAA,EAClB,UAAU;AAAA,EACV,MAAM;AACP;AC7DM,MAAMG,UACJC,EAET;AAAA,EACC,YAAYX,GAAyB;AAC9B,UAAAA,GAAMF,GAAmCc,CAAiC;AAAA,EAAA;AAAA,EAGjF,MAAM,kBAAkB;AACvB,UAAM,EAAE,MAAMC,EAAa,IAAI,MAAM,KAAK,YAAY,aAAa,EAAE,MAAM,GAAG,MAAM,GAAG,GACjFC,IAAcD,IAAeA,EAAa,QAAQ,IAAI;AAU5D,WAAO,EAAE,MARgC;AAAA,MACxC,QAAQ;AAAA,MACR,YAAYJ;AAAA,MACZ,MAAM;AAAA,MACN,aAAAK;AAAA,MACA,UAAU;AAAA,IACX,EAEc;AAAA,EAAA;AAEhB;"}