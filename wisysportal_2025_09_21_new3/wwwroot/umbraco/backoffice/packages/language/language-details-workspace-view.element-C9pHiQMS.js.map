{"version":3,"file":"language-details-workspace-view.element-C9pHiQMS.js","sources":["../../../src/packages/language/workspace/language/views/language-details-workspace-view.element.ts"],"sourcesContent":["import { UMB_LANGUAGE_WORKSPACE_CONTEXT } from '../language-workspace.context-token.js';\r\nimport type { UmbInputLanguageElement } from '../../../components/input-language/input-language.element.js';\r\nimport type { UmbLanguageDetailModel, UmbLanguageItemModel } from '../../../types.js';\r\nimport type { UmbInputCultureSelectElement } from '@umbraco-cms/backoffice/culture';\r\nimport type { UUIToggleElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UUIBooleanInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\nimport { css, html, nothing, customElement, state, ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbWorkspaceViewElement } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport '@umbraco-cms/backoffice/culture';\r\n\r\n@customElement('umb-language-details-workspace-view')\r\nexport class UmbLanguageDetailsWorkspaceViewElement extends UmbLitElement implements UmbWorkspaceViewElement {\r\n\t@state()\r\n\t_language?: UmbLanguageDetailModel;\r\n\r\n\t@state()\r\n\t_isDefaultLanguage = false;\r\n\r\n\t@state()\r\n\t_isNew?: boolean;\r\n\r\n\t#languageWorkspaceContext?: typeof UMB_LANGUAGE_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/* TODO: we will need some system to notify about an action has been executed.\r\n\t\t In the language workspace we want to clear a default language change warning and reset the initial state after a save action has been executed. */\r\n\t\tlet initialStateSet = false;\r\n\r\n\t\tthis.consumeContext(UMB_LANGUAGE_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tthis.#languageWorkspaceContext = instance;\r\n\r\n\t\t\tthis.observe(this.#languageWorkspaceContext?.data, (language) => {\r\n\t\t\t\tthis._language = language;\r\n\r\n\t\t\t\t/* Store the initial value of the default language.\r\n\t\t\t\t When we change the default language we get notified of the change,\r\n\t\t\t\tand we need the initial value to compare against */\r\n\t\t\t\tif (initialStateSet === false) {\r\n\t\t\t\t\tthis._isDefaultLanguage = language?.isDefault ?? false;\r\n\t\t\t\t\tinitialStateSet = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(this.#languageWorkspaceContext?.isNew, (isNew) => {\r\n\t\t\t\tthis._isNew = isNew;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t#handleCultureChange(event: Event) {\r\n\t\tif (event instanceof UmbChangeEvent) {\r\n\t\t\tconst target = event.target as UmbInputCultureSelectElement;\r\n\t\t\tconst unique = target.value.toString();\r\n\t\t\tconst cultureName = target.selectedCultureName;\r\n\r\n\t\t\t// If there is no cultureName, it was probably an unknown event that triggered the change event, so ignore it.\r\n\t\t\tif (!cultureName) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!unique) {\r\n\t\t\t\t// If the unique is empty, we reset the value to the original value.\r\n\t\t\t\t// Provides a way better UX\r\n\t\t\t\t//TODO: Maybe the combobox should implement something similar?\r\n\t\t\t\tconst resetFunction = () => (target.value = this._language?.unique as string);\r\n\r\n\t\t\t\ttarget.addEventListener('close', resetFunction, { once: true });\r\n\t\t\t\ttarget.addEventListener('blur', resetFunction, { once: true });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.#languageWorkspaceContext?.setCulture(unique);\r\n\r\n\t\t\t// to improve UX, we set the name to the culture name if it's a new language\r\n\t\t\tif (this._isNew && cultureName) {\r\n\t\t\t\tthis.#languageWorkspaceContext?.setName(cultureName);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#handleDefaultChange(event: UUIBooleanInputEvent) {\r\n\t\tif (event instanceof UUIBooleanInputEvent) {\r\n\t\t\tconst target = event.composedPath()[0] as UUIToggleElement;\r\n\t\t\tthis.#languageWorkspaceContext?.setDefault(target.checked);\r\n\t\t}\r\n\t}\r\n\r\n\t#handleMandatoryChange(event: UUIBooleanInputEvent) {\r\n\t\tif (event instanceof UUIBooleanInputEvent) {\r\n\t\t\tconst target = event.composedPath()[0] as UUIToggleElement;\r\n\t\t\tthis.#languageWorkspaceContext?.setMandatory(target.checked);\r\n\t\t}\r\n\t}\r\n\r\n\t#handleFallbackChange(event: UmbChangeEvent) {\r\n\t\tif (event instanceof UmbChangeEvent) {\r\n\t\t\tconst target = event.target as UmbInputLanguageElement;\r\n\t\t\tconst selectedLanguageUnique = target.selection?.[0];\r\n\t\t\tthis.#languageWorkspaceContext?.setFallbackCulture(selectedLanguageUnique);\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-box>\r\n\t\t\t\t<umb-property-layout label=\"Language\">\r\n\t\t\t\t\t<div slot=\"editor\">\r\n\t\t\t\t\t\t<!-- TODO: disable already created cultures in the select -->\r\n\t\t\t\t\t\t${this._isNew\r\n\t\t\t\t\t\t\t? html` <umb-input-culture-select\r\n\t\t\t\t\t\t\t\t\tvalue=${ifDefined(this._language?.unique)}\r\n\t\t\t\t\t\t\t\t\t@change=${this.#handleCultureChange}></umb-input-culture-select>`\r\n\t\t\t\t\t\t\t: this._language?.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</umb-property-layout>\r\n\r\n\t\t\t\t<umb-property-layout label=\"ISO Code\">\r\n\t\t\t\t\t<div slot=\"editor\">${this._language?.unique}</div>\r\n\t\t\t\t</umb-property-layout>\r\n\r\n\t\t\t\t<umb-property-layout label=\"Settings\">\r\n\t\t\t\t\t<div slot=\"editor\">\r\n\t\t\t\t\t\t<uui-toggle\r\n\t\t\t\t\t\t\tlabel=\"Default language\"\r\n\t\t\t\t\t\t\t?disabled=${this._isDefaultLanguage}\r\n\t\t\t\t\t\t\t?checked=${this._language?.isDefault || false}\r\n\t\t\t\t\t\t\t@change=${this.#handleDefaultChange}>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<b>Default language</b>\r\n\t\t\t\t\t\t\t\t<div>An Umbraco site can only have one default language set.</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</uui-toggle>\r\n\t\t\t\t\t\t<!-- \tTODO: we need a UUI component for this -->\r\n\t\t\t\t\t\t${this._language?.isDefault && this._language?.isDefault !== this._isDefaultLanguage\r\n\t\t\t\t\t\t\t? html`<div id=\"default-language-warning\">\r\n\t\t\t\t\t\t\t\t\tSwitching default language may result in default content missing.\r\n\t\t\t\t\t\t\t\t</div>`\r\n\t\t\t\t\t\t\t: nothing}\r\n\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<uui-toggle\r\n\t\t\t\t\t\t\tlabel=\"Mandatory language\"\r\n\t\t\t\t\t\t\t?checked=${this._language?.isMandatory || false}\r\n\t\t\t\t\t\t\t@change=${this.#handleMandatoryChange}>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<b>Mandatory language</b>\r\n\t\t\t\t\t\t\t\t<div>Properties on this language have to be filled out before the node can be published.</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</uui-toggle>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</umb-property-layout>\r\n\r\n\t\t\t\t<umb-property-layout\r\n\t\t\t\t\tlabel=\"Fallback language\"\r\n\t\t\t\t\tdescription=\"To allow multi-lingual content to fall back to another language if not present in the requested language, select it here.\">\r\n\t\t\t\t\t<umb-input-language\r\n\t\t\t\t\t\tvalue=${ifDefined(this._language?.fallbackIsoCode === null ? undefined : this._language?.fallbackIsoCode)}\r\n\t\t\t\t\t\tslot=\"editor\"\r\n\t\t\t\t\t\tmax=\"1\"\r\n\t\t\t\t\t\t@change=${this.#handleFallbackChange}\r\n\t\t\t\t\t\t.filter=${(language: UmbLanguageItemModel) =>\r\n\t\t\t\t\t\t\tlanguage.unique !== this._language?.unique}></umb-input-language>\r\n\t\t\t\t</umb-property-layout>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tpadding: var(--uui-size-space-6);\r\n\t\t\t}\r\n\r\n\t\t\tuui-combobox {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\thr {\r\n\t\t\t\tborder: none;\r\n\t\t\t\tborder-bottom: 1px solid var(--uui-color-divider);\r\n\t\t\t}\r\n\r\n\t\t\t#default-language-warning {\r\n\t\t\t\tbackground-color: var(--uui-color-warning);\r\n\t\t\t\tcolor: var(--uui-color-warning-contrast);\r\n\t\t\t\tpadding: var(--uui-size-space-4) var(--uui-size-space-5);\r\n\t\t\t\tborder: 1px solid var(--uui-color-warning-standalone);\r\n\t\t\t\tmargin-top: var(--uui-size-space-4);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t}\r\n\r\n\t\t\t.validation-message {\r\n\t\t\t\tcolor: var(--uui-color-danger);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbLanguageDetailsWorkspaceViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-language-details-workspace-view': UmbLanguageDetailsWorkspaceViewElement;\r\n\t}\r\n}\r\n"],"names":["_languageWorkspaceContext","_UmbLanguageDetailsWorkspaceViewElement_instances","handleCultureChange_fn","handleDefaultChange_fn","handleMandatoryChange_fn","handleFallbackChange_fn","UmbLanguageDetailsWorkspaceViewElement","UmbLitElement","__privateAdd","initialStateSet","UMB_LANGUAGE_WORKSPACE_CONTEXT","instance","__privateSet","__privateGet","language","isNew","html","ifDefined","__privateMethod","nothing","event","UmbChangeEvent","target","unique","cultureName","resetFunction","UUIBooleanInputEvent","selectedLanguageUnique","UmbTextStyles","css","__decorateClass","state","customElement","UmbLanguageDetailsWorkspaceViewElement$1"],"mappings":"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"}