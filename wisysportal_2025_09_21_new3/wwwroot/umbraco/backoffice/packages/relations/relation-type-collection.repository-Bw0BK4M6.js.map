{"version":3,"file":"relation-type-collection.repository-Bw0BK4M6.js","sources":["../../../src/packages/relations/relation-types/collection/repository/relation-type-collection.server.data-source.ts","../../../src/packages/relations/relation-types/collection/repository/relation-type-collection.repository.ts"],"sourcesContent":["import type { UmbRelationTypeCollectionFilterModel } from '../types.js';\r\nimport type { UmbRelationTypeDetailModel } from '../../types.js';\r\nimport { UMB_RELATION_TYPE_ENTITY_TYPE } from '../../entity.js';\r\nimport type { UmbCollectionDataSource } from '@umbraco-cms/backoffice/collection';\r\nimport { RelationTypeService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source that fetches the relation type collection data from the server.\r\n * @class UmbRelationTypeCollectionServerDataSource\r\n * @implements {UmbCollectionDataSource}\r\n */\r\nexport class UmbRelationTypeCollectionServerDataSource implements UmbCollectionDataSource<UmbRelationTypeDetailModel> {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbRelationTypeCollectionServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbRelationTypeCollectionServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the relation type collection filtered by the given filter.\r\n\t * @param {UmbRelationTypeCollectionFilterModel} filter\r\n\t * @returns {*}\r\n\t * @memberof UmbRelationTypeCollectionServerDataSource\r\n\t */\r\n\tasync getCollection(filter: UmbRelationTypeCollectionFilterModel) {\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tRelationTypeService.getRelationType({\r\n\t\t\t\tquery: {\r\n\t\t\t\t\tskip: filter.skip,\r\n\t\t\t\t\ttake: filter.take,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\tif (data) {\r\n\t\t\tconst items = data.items.map((item) => {\r\n\t\t\t\tconst model: UmbRelationTypeDetailModel = {\r\n\t\t\t\t\talias: item.alias || '',\r\n\t\t\t\t\tchild: item.childObject\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\tobjectType: {\r\n\t\t\t\t\t\t\t\t\tunique: item.childObject.id,\r\n\t\t\t\t\t\t\t\t\tname: item.childObject.name || '',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t: null,\r\n\t\t\t\t\tentityType: UMB_RELATION_TYPE_ENTITY_TYPE,\r\n\t\t\t\t\tisBidirectional: item.isBidirectional,\r\n\t\t\t\t\tisDependency: item.isDependency,\r\n\t\t\t\t\tname: item.name,\r\n\t\t\t\t\tparent: item.parentObject\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\tobjectType: {\r\n\t\t\t\t\t\t\t\t\tunique: item.parentObject.id,\r\n\t\t\t\t\t\t\t\t\tname: item.parentObject.name || '',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t: null,\r\n\t\t\t\t\tunique: item.id,\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn model;\r\n\t\t\t});\r\n\r\n\t\t\treturn { data: { items, total: data.total } };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n","import type { UmbRelationTypeCollectionFilterModel } from '../types.js';\r\nimport { UmbRelationTypeCollectionServerDataSource } from './relation-type-collection.server.data-source.js';\r\nimport type { UmbRelationTypeCollectionDataSource } from './types.js';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbRelationTypeCollectionRepository extends UmbRepositoryBase implements UmbCollectionRepository {\r\n\t#collectionSource: UmbRelationTypeCollectionDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#collectionSource = new UmbRelationTypeCollectionServerDataSource(host);\r\n\t}\r\n\r\n\tasync requestCollection(filter: UmbRelationTypeCollectionFilterModel) {\r\n\t\treturn this.#collectionSource.getCollection(filter);\r\n\t}\r\n}\r\n\r\nexport default UmbRelationTypeCollectionRepository;\r\n"],"names":["UmbRelationTypeCollectionServerDataSource","#host","host","filter","data","error","tryExecute","RelationTypeService","item","UMB_RELATION_TYPE_ENTITY_TYPE","UmbRelationTypeCollectionRepository","UmbRepositoryBase","#collectionSource"],"mappings":";;;;AAaO,MAAMA,EAAyG;AAAA,EACrHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASd,MAAM,cAAcC,GAA8C;AACjE,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAM,IAAI,MAAMC;AAAA,MAC7B,KAAKL;AAAA,MACLM,EAAoB,gBAAgB;AAAA,QACnC,OAAO;AAAA,UACN,MAAMJ,EAAO;AAAA,UACb,MAAMA,EAAO;AAAA,QAAA;AAAA,MAEd,CAAA;AAAA,IACF;AAEA,WAAIC,IA8BI,EAAE,MAAM,EAAE,OA7BHA,EAAK,MAAM,IAAI,CAACI,OACa;AAAA,MACzC,OAAOA,EAAK,SAAS;AAAA,MACrB,OAAOA,EAAK,cACT;AAAA,QACA,YAAY;AAAA,UACX,QAAQA,EAAK,YAAY;AAAA,UACzB,MAAMA,EAAK,YAAY,QAAQ;AAAA,QAAA;AAAA,MAChC,IAEA;AAAA,MACH,YAAYC;AAAA,MACZ,iBAAiBD,EAAK;AAAA,MACtB,cAAcA,EAAK;AAAA,MACnB,MAAMA,EAAK;AAAA,MACX,QAAQA,EAAK,eACV;AAAA,QACA,YAAY;AAAA,UACX,QAAQA,EAAK,aAAa;AAAA,UAC1B,MAAMA,EAAK,aAAa,QAAQ;AAAA,QAAA;AAAA,MACjC,IAEA;AAAA,MACH,QAAQA,EAAK;AAAA,IACd,EAGA,GAEuB,OAAOJ,EAAK,QAAQ,IAGtC,EAAE,OAAAC,EAAM;AAAA,EAAA;AAEjB;ACtEO,MAAMK,UAA4CC,EAAqD;AAAA,EAC7GC;AAAA,EAEA,YAAYV,GAAyB;AACpC,UAAMA,CAAI,GACL,KAAAU,KAAoB,IAAIZ,EAA0CE,CAAI;AAAA,EAAA;AAAA,EAG5E,MAAM,kBAAkBC,GAA8C;AAC9D,WAAA,KAAKS,GAAkB,cAAcT,CAAM;AAAA,EAAA;AAEpD;"}