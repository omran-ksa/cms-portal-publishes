{"version":3,"file":"relation-type-detail.repository-C4GweMi0.js","sources":["../../../src/packages/relations/relation-types/repository/detail/relation-type-detail.server.data-source.ts","../../../src/packages/relations/relation-types/repository/detail/relation-type-detail.repository.ts"],"sourcesContent":["import type { UmbRelationTypeDetailModel } from '../../types.js';\r\nimport { UMB_RELATION_TYPE_ENTITY_TYPE } from '../../entity.js';\r\nimport { RelationTypeService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport type { UmbReadDetailDataSource } from '@umbraco-cms/backoffice/repository';\r\n\r\n/**\r\n * A data source for the Relation Type that fetches data from the server\r\n * @class UmbRelationTypeServerDataSource\r\n * @implements {RepositoryDetailDataSource}\r\n */\r\nexport class UmbRelationTypeDetailServerDataSource implements UmbReadDetailDataSource<UmbRelationTypeDetailModel> {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbRelationTypeServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbRelationTypeServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Fetches a Relation Type with the given id from the server\r\n\t * @param {string} unique\r\n\t * @returns {*}\r\n\t * @memberof UmbRelationTypeServerDataSource\r\n\t */\r\n\tasync read(unique: string) {\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tRelationTypeService.getRelationTypeById({ path: { id: unique } }),\r\n\t\t);\r\n\r\n\t\tif (error || !data) {\r\n\t\t\treturn { error };\r\n\t\t}\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst relationType: UmbRelationTypeDetailModel = {\r\n\t\t\talias: data.alias || '',\r\n\t\t\tchild: data.childObject\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tobjectType: {\r\n\t\t\t\t\t\t\tunique: data.childObject.id,\r\n\t\t\t\t\t\t\tname: data.childObject.name || '',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t: null,\r\n\t\t\tentityType: UMB_RELATION_TYPE_ENTITY_TYPE,\r\n\t\t\tisBidirectional: data.isBidirectional,\r\n\t\t\tisDependency: data.isDependency,\r\n\t\t\tname: data.name,\r\n\t\t\tparent: data.parentObject\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tobjectType: {\r\n\t\t\t\t\t\t\tunique: data.parentObject.id,\r\n\t\t\t\t\t\t\tname: data.parentObject.name || '',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t: null,\r\n\t\t\tunique: data.id,\r\n\t\t};\r\n\r\n\t\treturn { data: relationType };\r\n\t}\r\n}\r\n","import type { UmbRelationTypeDetailModel } from '../../types.js';\r\nimport { UmbRelationTypeDetailServerDataSource } from './relation-type-detail.server.data-source.js';\r\nimport { UMB_RELATION_TYPE_DETAIL_STORE_CONTEXT } from './relation-type-detail.store.context-token.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbReadDetailRepository } from '@umbraco-cms/backoffice/repository';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbDetailStore } from '@umbraco-cms/backoffice/store';\r\n\r\n// TODO: create read detail repository mixin\r\nexport class UmbRelationTypeDetailRepository\r\n\textends UmbRepositoryBase\r\n\timplements UmbReadDetailRepository<UmbRelationTypeDetailModel>\r\n{\r\n\t#init: Promise<unknown>;\r\n\t#detailStore?: UmbDetailStore<UmbRelationTypeDetailModel>;\r\n\t#detailSource = new UmbRelationTypeDetailServerDataSource(this);\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#init = this.consumeContext(UMB_RELATION_TYPE_DETAIL_STORE_CONTEXT, (instance) => {\r\n\t\t\tif (instance) {\r\n\t\t\t\tthis.#detailStore = instance;\r\n\t\t\t}\r\n\t\t}).asPromise({ preventTimeout: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Requests the detail for the given unique\r\n\t * @param {string} unique\r\n\t * @returns {*}\r\n\t * @memberof UmbDetailRepositoryBase\r\n\t */\r\n\tasync requestByUnique(unique: string) {\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\t\tawait this.#init;\r\n\r\n\t\tconst { data, error } = await this.#detailSource.read(unique);\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#detailStore?.append(data);\r\n\t\t}\r\n\r\n\t\treturn { data, error, asObservable: () => this.#detailStore!.byUnique(unique) };\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a promise with an observable of the detail for the given unique\r\n\t * @param {string} unique\r\n\t * @returns {*}\r\n\t * @memberof UmbDetailRepositoryBase\r\n\t */\r\n\tasync byUnique(unique: string) {\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\t\tawait this.#init;\r\n\t\treturn this.#detailStore!.byUnique(unique);\r\n\t}\r\n}\r\n\r\nexport default UmbRelationTypeDetailRepository;\r\n"],"names":["UmbRelationTypeDetailServerDataSource","#host","host","unique","data","error","tryExecute","RelationTypeService","UMB_RELATION_TYPE_ENTITY_TYPE","UmbRelationTypeDetailRepository","UmbRepositoryBase","#init","#detailStore","#detailSource","UMB_RELATION_TYPE_DETAIL_STORE_CONTEXT","instance"],"mappings":";;;;;AAYO,MAAMA,EAAqG;AAAA,EACjHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASd,MAAM,KAAKC,GAAgB;AAC1B,QAAI,CAACA,EAAc,OAAA,IAAI,MAAM,mBAAmB;AAEhD,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAM,IAAI,MAAMC;AAAA,MAC7B,KAAKL;AAAA,MACLM,EAAoB,oBAAoB,EAAE,MAAM,EAAE,IAAIJ,EAAA,EAAU,CAAA;AAAA,IACjE;AAEI,WAAAE,KAAS,CAACD,IACN,EAAE,OAAAC,EAAM,IA6BT,EAAE,MAzBwC;AAAA,MAChD,OAAOD,EAAK,SAAS;AAAA,MACrB,OAAOA,EAAK,cACT;AAAA,QACA,YAAY;AAAA,UACX,QAAQA,EAAK,YAAY;AAAA,UACzB,MAAMA,EAAK,YAAY,QAAQ;AAAA,QAAA;AAAA,MAChC,IAEA;AAAA,MACH,YAAYI;AAAA,MACZ,iBAAiBJ,EAAK;AAAA,MACtB,cAAcA,EAAK;AAAA,MACnB,MAAMA,EAAK;AAAA,MACX,QAAQA,EAAK,eACV;AAAA,QACA,YAAY;AAAA,UACX,QAAQA,EAAK,aAAa;AAAA,UAC1B,MAAMA,EAAK,aAAa,QAAQ;AAAA,QAAA;AAAA,MACjC,IAEA;AAAA,MACH,QAAQA,EAAK;AAAA,IACd,EAE4B;AAAA,EAAA;AAE9B;AC7DO,MAAMK,UACJC,EAET;AAAA,EACCC;AAAA,EACAC;AAAA,EACAC,KAAgB,IAAIb,EAAsC,IAAI;AAAA,EAE9D,YAAYE,GAAyB;AACpC,UAAMA,CAAI,GAEV,KAAKS,KAAQ,KAAK,eAAeG,GAAwC,CAACC,MAAa;AACtF,MAAIA,MACH,KAAKH,KAAeG;AAAA,IAErB,CAAA,EAAE,UAAU,EAAE,gBAAgB,IAAM;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAStC,MAAM,gBAAgBZ,GAAgB;AACrC,QAAI,CAACA,EAAc,OAAA,IAAI,MAAM,mBAAmB;AAChD,UAAM,KAAKQ;AAEL,UAAA,EAAE,MAAAP,GAAM,OAAAC,EAAM,IAAI,MAAM,KAAKQ,GAAc,KAAKV,CAAM;AAE5D,WAAIC,KACE,KAAAQ,IAAc,OAAOR,CAAI,GAGxB,EAAE,MAAAA,GAAM,OAAAC,GAAO,cAAc,MAAM,KAAKO,GAAc,SAAST,CAAM,EAAE;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS/E,MAAM,SAASA,GAAgB;AAC9B,QAAI,CAACA,EAAc,OAAA,IAAI,MAAM,mBAAmB;AAChD,iBAAM,KAAKQ,IACJ,KAAKC,GAAc,SAAST,CAAM;AAAA,EAAA;AAE3C;"}