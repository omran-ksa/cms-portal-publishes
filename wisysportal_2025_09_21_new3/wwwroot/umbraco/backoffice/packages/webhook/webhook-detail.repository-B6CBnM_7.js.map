{"version":3,"file":"webhook-detail.repository-B6CBnM_7.js","sources":["../../../src/packages/webhook/webhook/repository/detail/webhook-detail.server.data-source.ts","../../../src/packages/webhook/webhook/repository/detail/webhook-detail.repository.ts"],"sourcesContent":["import type { UmbWebhookDetailModel } from '../../../types.js';\r\nimport { UMB_WEBHOOK_ENTITY_TYPE } from '../../../entity.js';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\nimport type { UmbDetailDataSource } from '@umbraco-cms/backoffice/repository';\r\nimport type {\r\n\tCreateWebhookRequestModel,\r\n\tUpdateWebhookRequestModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { WebhookService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the Webhook that fetches data from the server\r\n * @class UmbWebhookDetailServerDataSource\r\n * @implements {UmbDetailDataSource<UmbWebhookDetailModel>}\r\n */\r\nexport class UmbWebhookDetailServerDataSource implements UmbDetailDataSource<UmbWebhookDetailModel> {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbWebhookDetailServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbWebhookDetailServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Webhook scaffold\r\n\t * @param {Partial<UmbWebhookDetailModel>} [preset]\r\n\t * @returns { CreateWebhookRequestModel }\r\n\t * @memberof UmbWebhookDetailServerDataSource\r\n\t */\r\n\tasync createScaffold(preset: Partial<UmbWebhookDetailModel> = {}) {\r\n\t\tconst data: UmbWebhookDetailModel = {\r\n\t\t\tentityType: UMB_WEBHOOK_ENTITY_TYPE,\r\n\t\t\tunique: UmbId.new(),\r\n\t\t\theaders: {},\r\n\t\t\tevents: [],\r\n\t\t\tenabled: true,\r\n\t\t\turl: '',\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\tcontentTypes: [],\r\n\t\t\t...preset,\r\n\t\t};\r\n\r\n\t\treturn { data };\r\n\t}\r\n\r\n\t/**\r\n\t * Fetches a Webhook with the given id from the server\r\n\t * @param {string} unique\r\n\t * @returns {*}\r\n\t * @memberof UmbWebhookDetailServerDataSource\r\n\t */\r\n\tasync read(unique: string) {\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\r\n\t\tconst { data, error } = await tryExecute(this.#host, WebhookService.getWebhookById({ path: { id: unique } }));\r\n\r\n\t\tif (error || !data) {\r\n\t\t\treturn { error };\r\n\t\t}\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst dataType: UmbWebhookDetailModel = {\r\n\t\t\tentityType: UMB_WEBHOOK_ENTITY_TYPE,\r\n\t\t\tunique: data.id,\r\n\t\t\theaders: data.headers,\r\n\t\t\tevents: data.events,\r\n\t\t\tenabled: data.enabled,\r\n\t\t\turl: data.url,\r\n\t\t\tname: data.name,\r\n\t\t\tdescription: data.description,\r\n\t\t\tcontentTypes: data.contentTypeKeys,\r\n\t\t};\r\n\r\n\t\treturn { data: dataType };\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a new Webhook on the server\r\n\t * @param {UmbWebhookDetailModel} model\r\n\t * @returns {*}\r\n\t * @memberof UmbWebhookDetailServerDataSource\r\n\t */\r\n\tasync create(model: UmbWebhookDetailModel) {\r\n\t\tif (!model) throw new Error('Webhook is missing');\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst body: CreateWebhookRequestModel = {\r\n\t\t\tid: model.unique,\r\n\t\t\theaders: model.headers,\r\n\t\t\tevents: model.events.map((event) => event.alias),\r\n\t\t\tenabled: model.enabled,\r\n\t\t\turl: model.url,\r\n\t\t\tname: model.name,\r\n\t\t\tdescription: model.description,\r\n\t\t\tcontentTypeKeys: model.contentTypes,\r\n\t\t};\r\n\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tWebhookService.postWebhook({\r\n\t\t\t\tbody,\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\tif (data) {\r\n\t\t\treturn this.read(data as never);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n\r\n\t/**\r\n\t * Updates a Webhook on the server\r\n\t * @param {UmbWebhookDetailModel} Webhook\r\n\t * @param model\r\n\t * @returns {*}\r\n\t * @memberof UmbWebhookDetailServerDataSource\r\n\t */\r\n\tasync update(model: UmbWebhookDetailModel) {\r\n\t\tif (!model.unique) throw new Error('Unique is missing');\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst body: UpdateWebhookRequestModel = {\r\n\t\t\theaders: model.headers,\r\n\t\t\tevents: model.events.map((event) => event.alias),\r\n\t\t\tenabled: model.enabled,\r\n\t\t\turl: model.url,\r\n\t\t\tname: model.name,\r\n\t\t\tdescription: model.description,\r\n\t\t\tcontentTypeKeys: model.contentTypes,\r\n\t\t};\r\n\r\n\t\tconst { error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tWebhookService.putWebhookById({\r\n\t\t\t\tpath: { id: model.unique },\r\n\t\t\t\tbody,\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\tif (!error) {\r\n\t\t\treturn this.read(model.unique);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes a Webhook on the server\r\n\t * @param {string} unique\r\n\t * @returns {*}\r\n\t * @memberof UmbWebhookDetailServerDataSource\r\n\t */\r\n\tasync delete(unique: string) {\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\r\n\t\treturn tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tWebhookService.deleteWebhookById({\r\n\t\t\t\tpath: { id: unique },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import type { UmbWebhookDetailModel } from '../../../types.js';\r\nimport { UmbWebhookDetailServerDataSource } from './webhook-detail.server.data-source.js';\r\nimport { UMB_WEBHOOK_DETAIL_STORE_CONTEXT } from './webhook-detail.store.js';\r\nimport { UmbDeprecation } from '@umbraco-cms/backoffice/utils';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbDetailRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbWebhookDetailRepository extends UmbDetailRepositoryBase<UmbWebhookDetailModel> {\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UmbWebhookDetailServerDataSource, UMB_WEBHOOK_DETAIL_STORE_CONTEXT);\r\n\t}\r\n\r\n\toverride async create(model: UmbWebhookDetailModel) {\r\n\t\treturn super.create(model, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated - Use the event UmbWebhookEventRepository instead.\r\n\t * Gets a list of hardcoded events\r\n\t * @returns {Promise<{ data: { items: string[]; total: number }; error: any }>} - Hardcoded events\r\n\t */\r\n\tasync requestEvents(): Promise<{ data: { items: string[]; total: number }; error: any }> {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The requestEvents method on the UmbWebhookDetailRepository is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the requestEvents method on UmbWebhookEventRepository instead.',\r\n\t\t}).warn();\r\n\r\n\t\tconst items = ['Content Deleted', 'Content Published', 'Content Unpublished', 'Media Deleted', 'Media Saved'];\r\n\r\n\t\tconst result = {\r\n\t\t\tdata: { items, total: items.length },\r\n\t\t\terror: null,\r\n\t\t};\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tsetTimeout(() => resolve(result), 10);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default UmbWebhookDetailRepository;\r\n"],"names":["UmbWebhookDetailServerDataSource","#host","host","preset","UMB_WEBHOOK_ENTITY_TYPE","UmbId","unique","data","error","tryExecute","WebhookService","model","body","event","UmbWebhookDetailRepository","UmbDetailRepositoryBase","UMB_WEBHOOK_DETAIL_STORE_CONTEXT","UmbDeprecation","items","result","resolve"],"mappings":"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"}