{"version":3,"file":"webhook-delivery-collection.repository-ChspdiFd.js","sources":["../../../src/packages/webhook/webhook-delivery/collection/repository/webhook-delivery-collection.server.data-source.ts","../../../src/packages/webhook/webhook-delivery/collection/repository/webhook-delivery-collection.repository.ts"],"sourcesContent":["import type { UmbWebhookDeliveryCollectionFilterModel } from '../types.js';\r\nimport { UMB_WEBHOOK_DELIVERY_ENTITY_TYPE } from '../../../entity.js';\r\nimport type { UmbWebhookDeliveryDetailModel } from '../../types.js';\r\nimport { WebhookService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source that fetches the webhook delivery collection data from the server.\r\n * @class UmbWebhookDeliveryCollectionServerDataSource\r\n * @implements {UmbWebhookDeliveryCollectionServerDataSource}\r\n */\r\nexport class UmbWebhookDeliveryCollectionServerDataSource implements UmbWebhookDeliveryCollectionServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbWebhookDeliveryCollectionServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbWebhookDeliveryCollectionServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the Webhook delivery collection filtered by the given filter.\r\n\t * @param {UmbWebhookDeliveryCollectionFilterModel} filter\r\n\t * @param filter\r\n\t * @returns {*}\r\n\t * @memberof UmbWebhookDeliveryCollectionServerDataSource\r\n\t */\r\n\tasync getCollection(filter: UmbWebhookDeliveryCollectionFilterModel) {\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tWebhookService.getWebhookByIdLogs({\r\n\t\t\t\tpath: { id: filter.webhook.unique },\r\n\t\t\t\tquery: { skip: filter.skip, take: filter.take },\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\tif (error || !data) {\r\n\t\t\treturn { error };\r\n\t\t}\r\n\r\n\t\tconst items = data.items.map((item) => {\r\n\t\t\tconst model: UmbWebhookDeliveryDetailModel = {\r\n\t\t\t\tentityType: UMB_WEBHOOK_DELIVERY_ENTITY_TYPE,\r\n\t\t\t\tunique: item.key,\r\n\t\t\t\tdate: item.date,\r\n\t\t\t\turl: item.url,\r\n\t\t\t\teventAlias: item.eventAlias,\r\n\t\t\t\tretryCount: item.retryCount,\r\n\t\t\t\tstatusCode: item.statusCode,\r\n\t\t\t};\r\n\r\n\t\t\treturn model;\r\n\t\t});\r\n\r\n\t\treturn { data: { items, total: data.total } };\r\n\t}\r\n}\r\n","import type { UmbWebhookDeliveryCollectionFilterModel } from '../types.js';\r\nimport type { UmbWebhookDeliveryDetailModel } from '../../types.js';\r\nimport { UmbWebhookDeliveryCollectionServerDataSource } from './webhook-delivery-collection.server.data-source.js';\r\nimport type { UmbWebhookDeliveryCollectionDataSource } from './types.js';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbWebhookDeliveryCollectionRepository\r\n\textends UmbRepositoryBase\r\n\timplements UmbCollectionRepository<UmbWebhookDeliveryDetailModel, UmbWebhookDeliveryCollectionFilterModel>\r\n{\r\n\t#collectionSource: UmbWebhookDeliveryCollectionDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#collectionSource = new UmbWebhookDeliveryCollectionServerDataSource(host);\r\n\t}\r\n\r\n\tasync requestCollection(filter: UmbWebhookDeliveryCollectionFilterModel) {\r\n\t\treturn this.#collectionSource.getCollection(filter);\r\n\t}\r\n}\r\n\r\nexport default UmbWebhookDeliveryCollectionRepository;\r\n"],"names":["UmbWebhookDeliveryCollectionServerDataSource","#host","host","filter","data","error","tryExecute","WebhookService","item","UMB_WEBHOOK_DELIVERY_ENTITY_TYPE","UmbWebhookDeliveryCollectionRepository","UmbRepositoryBase","#collectionSource"],"mappings":";;;;AAYO,MAAMA,EAAqG;AAAA,EACjHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUd,MAAM,cAAcC,GAAiD;AACpE,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAM,IAAI,MAAMC;AAAA,MAC7B,KAAKL;AAAA,MACLM,EAAe,mBAAmB;AAAA,QACjC,MAAM,EAAE,IAAIJ,EAAO,QAAQ,OAAO;AAAA,QAClC,OAAO,EAAE,MAAMA,EAAO,MAAM,MAAMA,EAAO,KAAK;AAAA,MAC9C,CAAA;AAAA,IACF;AAEI,WAAAE,KAAS,CAACD,IACN,EAAE,OAAAC,EAAM,IAiBT,EAAE,MAAM,EAAE,OAdHD,EAAK,MAAM,IAAI,CAACI,OACgB;AAAA,MAC5C,YAAYC;AAAA,MACZ,QAAQD,EAAK;AAAA,MACb,MAAMA,EAAK;AAAA,MACX,KAAKA,EAAK;AAAA,MACV,YAAYA,EAAK;AAAA,MACjB,YAAYA,EAAK;AAAA,MACjB,YAAYA,EAAK;AAAA,IAClB,EAGA,GAEuB,OAAOJ,EAAK,QAAQ;AAAA,EAAA;AAE9C;ACpDO,MAAMM,UACJC,EAET;AAAA,EACCC;AAAA,EAEA,YAAYV,GAAyB;AACpC,UAAMA,CAAI,GACL,KAAAU,KAAoB,IAAIZ,EAA6CE,CAAI;AAAA,EAAA;AAAA,EAG/E,MAAM,kBAAkBC,GAAiD;AACjE,WAAA,KAAKS,GAAkB,cAAcT,CAAM;AAAA,EAAA;AAEpD;"}