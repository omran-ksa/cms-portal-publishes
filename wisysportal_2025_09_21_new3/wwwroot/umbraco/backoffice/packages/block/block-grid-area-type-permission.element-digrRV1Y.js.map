{"version":3,"file":"block-grid-area-type-permission.element-digrRV1Y.js","sources":["../../../src/packages/block/block-grid/property-editors/block-grid-area-type-permission/block-grid-area-type-permission.element.ts"],"sourcesContent":["import type { UmbBlockGridTypeAreaTypePermission, UmbBlockGridTypeGroupType } from '../../index.js';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { html, customElement, property, css, state, repeat, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/property-editor';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UMB_DATA_TYPE_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/data-type';\r\nimport type { UmbBlockTypeWithGroupKey } from '@umbraco-cms/backoffice/block-type';\r\nimport type { UUIComboboxElement, UUIComboboxEvent, UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbRepositoryItemsManager } from '@umbraco-cms/backoffice/repository';\r\nimport {\r\n\tUMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS,\r\n\ttype UmbDocumentTypeItemModel,\r\n} from '@umbraco-cms/backoffice/document-type';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\n\r\n@customElement('umb-property-editor-ui-block-grid-area-type-permission')\r\nexport class UmbPropertyEditorUIBlockGridAreaTypePermissionElement\r\n\textends UmbLitElement\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\t@property({ type: Array })\r\n\tpublic set value(value: Array<UmbBlockGridTypeAreaTypePermission>) {\r\n\t\tthis._value = value ?? [];\r\n\t}\r\n\tpublic get value(): Array<UmbBlockGridTypeAreaTypePermission> {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _value: Array<UmbBlockGridTypeAreaTypePermission> = [];\r\n\r\n\t@state()\r\n\tprivate _blockTypes?: Array<UmbBlockTypeWithGroupKey>;\r\n\r\n\t@state()\r\n\tprivate _blockTypesWithElementName: Array<{ type: UmbBlockTypeWithGroupKey; name: string }> = [];\r\n\r\n\t@state()\r\n\tprivate _blockGroups: Array<UmbBlockGridTypeGroupType> = [];\r\n\r\n\t#itemsManager = new UmbRepositoryItemsManager<UmbDocumentTypeItemModel>(\r\n\t\tthis,\r\n\t\tUMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS,\r\n\t);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.observe(this.#itemsManager.items, (items) => {\r\n\t\t\tthis._blockTypesWithElementName = items\r\n\t\t\t\t.map((item) => {\r\n\t\t\t\t\tconst blockType = this._blockTypes?.find((block) => block.contentElementTypeKey === item.unique);\r\n\t\t\t\t\tif (blockType) {\r\n\t\t\t\t\t\treturn { type: blockType, name: item.name };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t})\r\n\t\t\t\t.filter((x) => x !== undefined) as Array<{ type: UmbBlockTypeWithGroupKey; name: string }>;\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_DATA_TYPE_WORKSPACE_CONTEXT, async (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tawait context?.propertyValueByAlias<Array<UmbBlockTypeWithGroupKey>>('blocks'),\r\n\t\t\t\t(blockTypes) => {\r\n\t\t\t\t\tthis._blockTypes = blockTypes ?? [];\r\n\t\t\t\t\tthis.#itemsManager.setUniques(this._blockTypes.map((block) => block.contentElementTypeKey));\r\n\t\t\t\t},\r\n\t\t\t\t'observeBlockType',\r\n\t\t\t);\r\n\t\t\tthis.observe(\r\n\t\t\t\tawait context?.propertyValueByAlias<Array<UmbBlockGridTypeGroupType>>('blockGroups'),\r\n\t\t\t\t(blockGroups) => {\r\n\t\t\t\t\tthis._blockGroups = blockGroups ?? [];\r\n\t\t\t\t},\r\n\t\t\t\t'observeBlockGroups',\r\n\t\t\t);\r\n\t\t}).passContextAliasMatches();\r\n\t}\r\n\r\n\t#addNewPermission() {\r\n\t\tthis.value = [...this.value, { minAllowed: 0, maxAllowed: undefined }];\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t#setPermissionKey(e: UUIComboboxEvent, index: number) {\r\n\t\tconst value = [...this.value];\r\n\t\tconst optionElement = e.composedPath()[0] as UUIComboboxElement;\r\n\t\tconst optionKey = optionElement.value as string;\r\n\r\n\t\t// If optionKey exists (new option picked), we just assume its a elementType if the key is not from blockGroups.\r\n\t\t// If optionKey is empty (the option removed was removed), set both to undefined.\r\n\t\tconst setting: UmbBlockGridTypeAreaTypePermission = optionKey\r\n\t\t\t? this._blockGroups.find((group) => group.key === optionKey)\r\n\t\t\t\t? { elementTypeKey: undefined, groupKey: optionKey }\r\n\t\t\t\t: { elementTypeKey: optionKey, groupKey: undefined }\r\n\t\t\t: { elementTypeKey: undefined, groupKey: undefined };\r\n\r\n\t\tthis.value = value.map((permission, i) => (i === index ? { ...permission, ...setting } : permission));\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t#setPermissionMinimumRange(e: UUIInputEvent, index: number) {\r\n\t\tconst value = [...this.value];\r\n\t\tconst input = e.target.value as string;\r\n\r\n\t\tthis.value = value.map((permission, i) =>\r\n\t\t\ti === index ? { ...permission, minAllowed: parseInt(input) ?? 0 } : permission,\r\n\t\t);\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\t#setPermissionMaximumRange(e: UUIInputEvent, index: number) {\r\n\t\tconst value = [...this.value];\r\n\t\tconst input = e.target.value as string;\r\n\r\n\t\tthis.value = value.map((permission, i) =>\r\n\t\t\ti === index ? { ...permission, maxAllowed: parseInt(input) ?? undefined } : permission,\r\n\t\t);\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t#remove(index: number) {\r\n\t\tthis.value = [...this.value].filter((_, i) => i !== index);\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (this._blockTypes === undefined) {\r\n\t\t\treturn nothing;\r\n\t\t}\r\n\t\tif (this._blockTypesWithElementName.length === 0) {\r\n\t\t\treturn 'There must be one Block Type created before permissions can be configured.';\r\n\t\t}\r\n\t\treturn html`<div id=\"permissions\">\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._value,\r\n\t\t\t\t\t(permission) => permission,\r\n\t\t\t\t\t(permission, index) => {\r\n\t\t\t\t\t\tconst showCategoryHeader = this._blockGroups.length > 0 && this._blockTypesWithElementName.length > 0;\r\n\r\n\t\t\t\t\t\treturn html`<div class=\"permission-setting\">\r\n\t\t\t\t\t\t\t<uui-combobox\r\n\t\t\t\t\t\t\t\t@change=${(e: UUIComboboxEvent) => this.#setPermissionKey(e, index)}\r\n\t\t\t\t\t\t\t\t.value=${permission.elementTypeKey ?? permission.groupKey ?? ''}>\r\n\t\t\t\t\t\t\t\t<uui-combobox-list>\r\n\t\t\t\t\t\t\t\t\t${showCategoryHeader ? html`<strong>${this.localize.term('general_groups')}</strong>` : nothing}\r\n\t\t\t\t\t\t\t\t\t${this.#renderBlockGroups(permission)}\r\n\t\t\t\t\t\t\t\t\t${showCategoryHeader ? html`<strong>${this.localize.term('general_elements')}</strong>` : nothing}\r\n\t\t\t\t\t\t\t\t\t${this.#renderBlockTypes(permission)}\r\n\t\t\t\t\t\t\t\t</uui-combobox-list>\r\n\t\t\t\t\t\t\t</uui-combobox>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"0\"\r\n\t\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\t\t.value=${permission.minAllowed}\r\n\t\t\t\t\t\t\t\t\t@change=${(e: UUIInputEvent) => this.#setPermissionMinimumRange(e, index)}></uui-input>\r\n\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"&infin;\"\r\n\t\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\t\t.value=${permission.maxAllowed}\r\n\t\t\t\t\t\t\t\t\t@change=${(e: UUIInputEvent) => this.#setPermissionMaximumRange(e, index)}></uui-input>\r\n\t\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\t\tlabel=${this.localize.term('general_remove')}\r\n\t\t\t\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\t\t\t@click=${() => this.#remove(index)}>\r\n\t\t\t\t\t\t\t\t\t<uui-icon name=\"icon-trash\"></uui-icon>\r\n\t\t\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>`;\r\n\t\t\t\t\t},\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"add-button\"\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\tlabel=${this.localize.term('general_add')}\r\n\t\t\t\t@click=${this.#addNewPermission}></uui-button>\r\n\t\t\t${!this._value.length\r\n\t\t\t\t? html`<small>\r\n\t\t\t\t\t\t<umb-localize key=\"blockEditor_areaAllowedBlocksEmpty\">\r\n\t\t\t\t\t\t\tBy default, all block types are allowed in an Area, Use this option to allow only selected types.\r\n\t\t\t\t\t\t</umb-localize>\r\n\t\t\t\t\t</small>`\r\n\t\t\t\t: nothing} `;\r\n\t}\r\n\r\n\t#renderBlockGroups(area: UmbBlockGridTypeAreaTypePermission) {\r\n\t\treturn repeat(\r\n\t\t\tthis._blockGroups,\r\n\t\t\t(group) => group.key,\r\n\t\t\t(group) =>\r\n\t\t\t\thtml`<uui-combobox-list-option .value=${group.key} ?selected=${area.groupKey === group.key}>\r\n\t\t\t\t\t${group.name}\r\n\t\t\t\t</uui-combobox-list-option>`,\r\n\t\t);\r\n\t}\r\n\r\n\t#renderBlockTypes(area: UmbBlockGridTypeAreaTypePermission) {\r\n\t\treturn repeat(\r\n\t\t\tthis._blockTypesWithElementName,\r\n\t\t\t(block) => block.type.contentElementTypeKey,\r\n\t\t\t(block) =>\r\n\t\t\t\thtml`<uui-combobox-list-option\r\n\t\t\t\t\t.value=${block.type.contentElementTypeKey}\r\n\t\t\t\t\t?selected=${area.elementTypeKey === block.type.contentElementTypeKey}>\r\n\t\t\t\t\t${block.name}\r\n\t\t\t\t</uui-combobox-list-option>`,\r\n\t\t);\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#permissions {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tgap: var(--uui-size-space-3);\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-3);\r\n\t\t\t}\r\n\r\n\t\t\t#add-button {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t.permission-setting {\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-6);\r\n\t\t\t}\r\n\r\n\t\t\t.permission-setting > uui-combobox {\r\n\t\t\t\tflex: 1;\r\n\t\t\t}\r\n\r\n\t\t\t.permission-setting > span {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-1);\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\r\n\t\t\tuui-combobox strong {\r\n\t\t\t\tpadding: 0 var(--uui-size-space-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbPropertyEditorUIBlockGridAreaTypePermissionElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-block-grid-area-type-permission': UmbPropertyEditorUIBlockGridAreaTypePermissionElement;\r\n\t}\r\n}\r\n"],"names":["_itemsManager","_UmbPropertyEditorUIBlockGridAreaTypePermissionElement_instances","addNewPermission_fn","setPermissionKey_fn","setPermissionMinimumRange_fn","setPermissionMaximumRange_fn","remove_fn","renderBlockGroups_fn","renderBlockTypes_fn","UmbPropertyEditorUIBlockGridAreaTypePermissionElement","UmbLitElement","__privateAdd","UmbRepositoryItemsManager","UMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS","__privateGet","items","item","blockType","block","x","UMB_DATA_TYPE_WORKSPACE_CONTEXT","context","blockTypes","blockGroups","value","nothing","html","repeat","permission","index","showCategoryHeader","e","__privateMethod","UmbChangeEvent","optionKey","setting","group","i","input","_","area","UmbTextStyles","css","__decorateClass","property","state","customElement","UmbPropertyEditorUIBlockGridAreaTypePermissionElement$1"],"mappings":"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"}