{"version":3,"file":"block-workspace-view-edit.element-CRtmxjiO.js","sources":["../../../src/packages/block/block/workspace/views/edit/block-workspace-view-edit.element.ts"],"sourcesContent":["import type { UmbBlockWorkspaceElementManagerNames } from '../../block-workspace.context.js';\r\nimport { UMB_BLOCK_WORKSPACE_CONTEXT } from '../../block-workspace.context-token.js';\r\nimport type { UmbBlockWorkspaceViewEditTabElement } from './block-workspace-view-edit-tab.element.js';\r\nimport { css, html, customElement, state, repeat, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { UmbContentTypeModel, UmbPropertyTypeContainerModel } from '@umbraco-cms/backoffice/content-type';\r\nimport { UmbContentTypeContainerStructureHelper } from '@umbraco-cms/backoffice/content-type';\r\nimport type { UmbRoute, UmbRouterSlotChangeEvent, UmbRouterSlotInitEvent } from '@umbraco-cms/backoffice/router';\r\nimport { encodeFolderName } from '@umbraco-cms/backoffice/router';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { ManifestWorkspaceView, UmbWorkspaceViewElement } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('umb-block-workspace-view-edit')\r\nexport class UmbBlockWorkspaceViewEditElement extends UmbLitElement implements UmbWorkspaceViewElement {\r\n\t@property({ attribute: false })\r\n\tpublic set manifest(value: ManifestWorkspaceView | undefined) {\r\n\t\tthis.#managerName = (value?.meta as any).blockElementManagerName ?? 'content';\r\n\t\tthis.#setStructureManager();\r\n\t}\r\n\tpublic get manifest(): ManifestWorkspaceView | undefined {\r\n\t\treturn;\r\n\t}\r\n\t#managerName?: UmbBlockWorkspaceElementManagerNames;\r\n\t#blockWorkspace?: typeof UMB_BLOCK_WORKSPACE_CONTEXT.TYPE;\r\n\t#tabsStructureHelper = new UmbContentTypeContainerStructureHelper<UmbContentTypeModel>(this);\r\n\r\n\t//@state()\r\n\t//private _hasRootProperties = false;\r\n\r\n\t@state()\r\n\tprivate _hasRootGroups = false;\r\n\r\n\t@state()\r\n\tprivate _routes: UmbRoute[] = [];\r\n\r\n\t@state()\r\n\t_tabs?: Array<UmbPropertyTypeContainerModel>;\r\n\r\n\t@state()\r\n\tprivate _routerPath?: string;\r\n\r\n\t@state()\r\n\tprivate _activePath = '';\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#tabsStructureHelper.setIsRoot(true);\r\n\t\tthis.#tabsStructureHelper.setContainerChildType('Tab');\r\n\t\tthis.observe(\r\n\t\t\tthis.#tabsStructureHelper.mergedContainers,\r\n\t\t\t(tabs) => {\r\n\t\t\t\tthis._tabs = tabs;\r\n\t\t\t\tthis.#createRoutes();\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\t// _hasRootProperties can be gotten via _tabsStructureHelper.hasProperties. But we do not support root properties currently.\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_WORKSPACE_CONTEXT, (workspaceContext) => {\r\n\t\t\tthis.#blockWorkspace = workspaceContext;\r\n\t\t\tthis.#setStructureManager();\r\n\t\t});\r\n\t}\r\n\r\n\tasync #setStructureManager() {\r\n\t\tif (!this.#blockWorkspace || !this.#managerName) return;\r\n\t\tconst blockManager = this.#blockWorkspace[this.#managerName];\r\n\t\tthis.#tabsStructureHelper.setStructureManager(blockManager.structure);\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#blockWorkspace.variantId,\r\n\t\t\t(variantId) => {\r\n\t\t\t\tif (variantId) {\r\n\t\t\t\t\t// Create Data Set & setup Validation Context:\r\n\t\t\t\t\tblockManager.setup(this, variantId);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'observeVariantId',\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tawait this.#blockWorkspace![this.#managerName!].structure.hasRootContainers('Group'),\r\n\t\t\t(hasRootGroups) => {\r\n\t\t\t\tthis._hasRootGroups = hasRootGroups;\r\n\t\t\t\tthis.#createRoutes();\r\n\t\t\t},\r\n\t\t\t'observeGroups',\r\n\t\t);\r\n\t}\r\n\r\n\t#createRoutes() {\r\n\t\tif (!this._tabs || !this.#blockWorkspace) return;\r\n\t\tconst routes: UmbRoute[] = [];\r\n\r\n\t\tif (this._tabs.length > 0) {\r\n\t\t\tthis._tabs?.forEach((tab) => {\r\n\t\t\t\tconst tabName = tab.name ?? '';\r\n\t\t\t\troutes.push({\r\n\t\t\t\t\tpath: `tab/${encodeFolderName(tabName)}`,\r\n\t\t\t\t\tcomponent: () => import('./block-workspace-view-edit-tab.element.js'),\r\n\t\t\t\t\tsetup: (component) => {\r\n\t\t\t\t\t\t(component as UmbBlockWorkspaceViewEditTabElement).managerName = this.#managerName;\r\n\t\t\t\t\t\t(component as UmbBlockWorkspaceViewEditTabElement).containerId = tab.id;\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this._hasRootGroups) {\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: '',\r\n\t\t\t\tcomponent: () => import('./block-workspace-view-edit-tab.element.js'),\r\n\t\t\t\tsetup: (component) => {\r\n\t\t\t\t\t(component as UmbBlockWorkspaceViewEditTabElement).managerName = this.#managerName;\r\n\t\t\t\t\t(component as UmbBlockWorkspaceViewEditTabElement).containerId = null;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (routes.length !== 0) {\r\n\t\t\tif (!this._hasRootGroups) {\r\n\t\t\t\troutes.push({\r\n\t\t\t\t\tpath: '',\r\n\t\t\t\t\tpathMatch: 'full',\r\n\t\t\t\t\tredirectTo: routes[0]?.path,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: `**`,\r\n\t\t\t\tcomponent: async () => (await import('@umbraco-cms/backoffice/router')).UmbRouteNotFoundElement,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._routes = routes;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (!this._routes || !this._tabs) return;\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout header-fit-height>\r\n\t\t\t\t${this._routerPath && (this._tabs.length > 1 || (this._tabs.length === 1 && this._hasRootGroups))\r\n\t\t\t\t\t? html` <uui-tab-group slot=\"header\">\r\n\t\t\t\t\t\t\t${this._hasRootGroups && this._tabs.length > 0\r\n\t\t\t\t\t\t\t\t? html`\r\n\t\t\t\t\t\t\t\t\t\t<uui-tab\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Content\"\r\n\t\t\t\t\t\t\t\t\t\t\t.active=${this._routerPath + '/' === this._activePath}\r\n\t\t\t\t\t\t\t\t\t\t\thref=${this._routerPath + '/'}>\r\n\t\t\t\t\t\t\t\t\t\t\t<umb-localize key=\"general_content\">Content</umb-localize>\r\n\t\t\t\t\t\t\t\t\t\t</uui-tab>\r\n\t\t\t\t\t\t\t\t\t`\r\n\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\t\tthis._tabs,\r\n\t\t\t\t\t\t\t\t(tab) => tab.name,\r\n\t\t\t\t\t\t\t\t(tab) => {\r\n\t\t\t\t\t\t\t\t\tconst path = this._routerPath + '/tab/' + encodeFolderName(tab.name || '');\r\n\t\t\t\t\t\t\t\t\treturn html`<uui-tab\r\n\t\t\t\t\t\t\t\t\t\tlabel=${this.localize.string(tab.name ?? '#general_unknown')}\r\n\t\t\t\t\t\t\t\t\t\t.active=${path === this._activePath}\r\n\t\t\t\t\t\t\t\t\t\thref=${path}>\r\n\t\t\t\t\t\t\t\t\t\t${this.localize.string(tab.name)}\r\n\t\t\t\t\t\t\t\t\t</uui-tab>`;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</uui-tab-group>`\r\n\t\t\t\t\t: ''}\r\n\r\n\t\t\t\t<umb-router-slot\r\n\t\t\t\t\t.routes=${this._routes}\r\n\t\t\t\t\t@init=${(event: UmbRouterSlotInitEvent) => {\r\n\t\t\t\t\t\tthis._routerPath = event.target.absoluteRouterPath;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t@change=${(event: UmbRouterSlotChangeEvent) => {\r\n\t\t\t\t\t\tthis._activePath = event.target.absoluteActiveViewPath || '';\r\n\t\t\t\t\t}}>\r\n\t\t\t\t</umb-router-slot>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\t--uui-tab-background: var(--uui-color-surface);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbBlockWorkspaceViewEditElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-block-workspace-view-edit': UmbBlockWorkspaceViewEditElement;\r\n\t}\r\n}\r\n"],"names":["_managerName","_blockWorkspace","_tabsStructureHelper","_UmbBlockWorkspaceViewEditElement_instances","setStructureManager_fn","createRoutes_fn","UmbBlockWorkspaceViewEditElement","UmbLitElement","__privateAdd","UmbContentTypeContainerStructureHelper","__privateGet","tabs","__privateMethod","UMB_BLOCK_WORKSPACE_CONTEXT","workspaceContext","__privateSet","value","html","repeat","tab","path","encodeFolderName","event","blockManager","variantId","hasRootGroups","routes","tabName","component","UmbTextStyles","css","__decorateClass","property","state","customElement","UmbBlockWorkspaceViewEditElement$1"],"mappings":"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"}