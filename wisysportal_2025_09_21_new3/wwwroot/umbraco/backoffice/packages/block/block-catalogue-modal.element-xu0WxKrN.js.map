{"version":3,"file":"block-catalogue-modal.element-xu0WxKrN.js","sources":["../../../src/packages/block/block/modals/block-catalogue/block-catalogue-modal.element.ts"],"sourcesContent":["import { UMB_BLOCK_WORKSPACE_MODAL } from '../../workspace/index.js';\r\nimport { UMB_BLOCK_MANAGER_CONTEXT } from '../../context/index.js';\r\nimport type { UmbBlockCatalogueModalData, UmbBlockCatalogueModalValue } from './block-catalogue-modal.token.js';\r\nimport type { UmbBlockTypeGroup, UmbBlockTypeWithGroupKey } from '@umbraco-cms/backoffice/block-type';\r\nimport { css, html, customElement, state, repeat, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UMB_MODAL_CONTEXT, UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport type { UmbSelectionChangeEvent } from '@umbraco-cms/backoffice/event';\r\n\r\n// TODO: This is across packages, how should we go about getting just a single element from another package? like here we just need the umb-block-type-card element\r\nimport '@umbraco-cms/backoffice/block-type';\r\n\r\n@customElement('umb-block-catalogue-modal')\r\nexport class UmbBlockCatalogueModalElement extends UmbModalBaseElement<\r\n\tUmbBlockCatalogueModalData,\r\n\tUmbBlockCatalogueModalValue\r\n> {\r\n\t#search = '';\r\n\r\n\tprivate _groupedBlocks: Array<{ name?: string; blocks: Array<UmbBlockTypeWithGroupKey> }> = [];\r\n\r\n\t@state()\r\n\tprivate _openClipboard?: boolean;\r\n\r\n\t@state()\r\n\tprivate _workspacePath?: string;\r\n\r\n\t@state()\r\n\tprivate _filtered: Array<{ name?: string; blocks: Array<UmbBlockTypeWithGroupKey> }> = [];\r\n\r\n\t@state()\r\n\t_manager?: typeof UMB_BLOCK_MANAGER_CONTEXT.TYPE;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_MODAL_CONTEXT, (modalContext) => {\r\n\t\t\tif (modalContext?.data.createBlockInWorkspace) {\r\n\t\t\t\tnew UmbModalRouteRegistrationController(this, UMB_BLOCK_WORKSPACE_MODAL)\r\n\t\t\t\t\t//.addAdditionalPath('block') // No need for additional path specification in this context as this is for sure the only workspace we want to open here.\r\n\t\t\t\t\t.onSetup(() => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdata: { preset: {}, originData: (modalContext.data as UmbBlockCatalogueModalData).originData },\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.onSubmit(() => {\r\n\t\t\t\t\t\t// When workspace is submitted, we want to close this modal.\r\n\t\t\t\t\t\tthis.modalContext?.submit();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\t\t\tthis._workspacePath = routeBuilder({});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_MANAGER_CONTEXT, (manager) => {\r\n\t\t\tthis._manager = manager;\r\n\t\t});\r\n\t}\r\n\r\n\toverride connectedCallback() {\r\n\t\tsuper.connectedCallback();\r\n\t\tif (!this.data) return;\r\n\r\n\t\tthis._openClipboard = this.data.openClipboard ?? false;\r\n\r\n\t\tconst blocks: Array<UmbBlockTypeWithGroupKey> = this.data.blocks ?? [];\r\n\t\tconst blockGroups: Array<UmbBlockTypeGroup> = this.data.blockGroups ?? [];\r\n\r\n\t\tconst noGroupBlocks = blocks.filter((block) => !blockGroups.find((group) => group.key === block.groupKey));\r\n\t\tconst grouped = blockGroups.map((group) => ({\r\n\t\t\tname: group.name,\r\n\t\t\tblocks: blocks.filter((block) => block.groupKey === group.key),\r\n\t\t}));\r\n\r\n\t\tthis._groupedBlocks = [{ blocks: noGroupBlocks }, ...grouped];\r\n\t\tthis.#updateFiltered();\r\n\t}\r\n\r\n\t#updateFiltered() {\r\n\t\tif (this.#search.length === 0) {\r\n\t\t\tthis._filtered = this._groupedBlocks;\r\n\t\t} else {\r\n\t\t\tconst search = this.#search.toLowerCase();\r\n\t\t\tthis._filtered = this._groupedBlocks.map((group) => {\r\n\t\t\t\treturn { ...group, blocks: group.blocks.filter((block) => block.label?.toLocaleLowerCase().includes(search)) };\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t#onSearch(e: UUIInputEvent) {\r\n\t\tthis.#search = e.target.value as string;\r\n\t\tthis.#updateFiltered();\r\n\t}\r\n\r\n\t#chooseBlock(contentElementTypeKey: string) {\r\n\t\tthis.value = {\r\n\t\t\tcreate: {\r\n\t\t\t\tcontentElementTypeKey,\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.modalContext?.submit();\r\n\t}\r\n\r\n\tasync #onClipboardPickerSelectionChange(event: UmbSelectionChangeEvent) {\r\n\t\tconst target = event.target as any;\r\n\t\tconst selection = target?.selection || [];\r\n\t\tthis.value = {\r\n\t\t\tclipboard: {\r\n\t\t\t\tselection,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=\"${this.localize.term('blockEditor_addBlock')}\">\r\n\t\t\t\t${this.#renderViews()}${this.#renderMain()}\r\n\t\t\t\t<div slot=\"actions\">\r\n\t\t\t\t\t<uui-button label=${this.localize.term('general_close')} @click=${this._rejectModal}></uui-button>\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tlabel=${this.localize.term('general_submit')}\r\n\t\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\t\tcolor=\"positive\"\r\n\t\t\t\t\t\t@click=${this._submitModal}></uui-button>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderMain() {\r\n\t\treturn this._manager ? (this._openClipboard ? this.#renderClipboard() : this.#renderCreateEmpty()) : nothing;\r\n\t}\r\n\r\n\t#renderClipboard() {\r\n\t\treturn html`<uui-box\r\n\t\t\t><umb-clipboard-entry-picker\r\n\t\t\t\t.config=${{ multiple: true, asyncFilter: this.data?.clipboardFilter }}\r\n\t\t\t\t@selection-change=${this.#onClipboardPickerSelectionChange}></umb-clipboard-entry-picker\r\n\t\t></uui-box>`;\r\n\t}\r\n\r\n\t#renderCreateEmpty() {\r\n\t\treturn html`\r\n\t\t\t${this.data?.blocks && this.data.blocks.length > 8\r\n\t\t\t\t? html`<uui-input\r\n\t\t\t\t\t\tid=\"search\"\r\n\t\t\t\t\t\t@input=${this.#onSearch}\r\n\t\t\t\t\t\tlabel=${this.localize.term('general_search')}\r\n\t\t\t\t\t\tplaceholder=${this.localize.term('placeholders_search')}>\r\n\t\t\t\t\t\t<uui-icon name=\"icon-search\" slot=\"prepend\"></uui-icon>\r\n\t\t\t\t\t</uui-input>`\r\n\t\t\t\t: nothing}\r\n\t\t\t${this._filtered.map(\r\n\t\t\t\t(group) => html`\r\n\t\t\t\t\t${group.name && group.blocks.length !== 0 && group.name !== '' ? html`<h4>${group.name}</h4>` : nothing}\r\n\t\t\t\t\t<div class=\"blockGroup\">\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tgroup.blocks,\r\n\t\t\t\t\t\t\t(block) => block.contentElementTypeKey,\r\n\t\t\t\t\t\t\t(block) => html`\r\n\t\t\t\t\t\t\t\t<umb-block-type-card\r\n\t\t\t\t\t\t\t\t\t.iconFile=${block.thumbnail}\r\n\t\t\t\t\t\t\t\t\t.iconColor=${block.iconColor}\r\n\t\t\t\t\t\t\t\t\t.backgroundColor=${block.backgroundColor}\r\n\t\t\t\t\t\t\t\t\t.contentElementTypeKey=${block.contentElementTypeKey}\r\n\t\t\t\t\t\t\t\t\t@open=${() => this.#chooseBlock(block.contentElementTypeKey)}\r\n\t\t\t\t\t\t\t\t\t.href=${this._workspacePath && this._manager!.getContentTypeHasProperties(block.contentElementTypeKey)\r\n\t\t\t\t\t\t\t\t\t\t? `${this._workspacePath}create/${block.contentElementTypeKey}`\r\n\t\t\t\t\t\t\t\t\t\t: undefined}>\r\n\t\t\t\t\t\t\t\t</umb-block-type-card>\r\n\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderViews() {\r\n\t\treturn html`\r\n\t\t\t<uui-tab-group slot=\"navigation\">\r\n\t\t\t\t<uui-tab\r\n\t\t\t\t\tlabel=${this.localize.term('blockEditor_tabCreateEmpty')}\r\n\t\t\t\t\t?active=${!this._openClipboard}\r\n\t\t\t\t\t@click=${() => (this._openClipboard = false)}>\r\n\t\t\t\t\t<umb-localize key=${this.localize.term('blockEditor_tabCreateEmpty')}>Create Empty</umb-localize>\r\n\t\t\t\t\t<uui-icon slot=\"icon\" name=\"icon-add\"></uui-icon>\r\n\t\t\t\t</uui-tab>\r\n\t\t\t\t<uui-tab\r\n\t\t\t\t\tlabel=${this.localize.term('blockEditor_tabClipboard')}\r\n\t\t\t\t\t?active=${this._openClipboard}\r\n\t\t\t\t\t@click=${() => (this._openClipboard = true)}>\r\n\t\t\t\t\t<umb-localize key=${this.localize.term('blockEditor_tabClipboard')}>Clipboard</umb-localize>\r\n\t\t\t\t\t<uui-icon slot=\"icon\" name=\"icon-clipboard\"></uui-icon>\r\n\t\t\t\t</uui-tab>\r\n\t\t\t</uui-tab-group>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#search {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmargin-bottom: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t\t#search uui-icon {\r\n\t\t\t\tpadding-left: var(--uui-size-space-3);\r\n\t\t\t}\r\n\t\t\t.blockGroup {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgap: 1rem;\r\n\t\t\t\tgrid-template-columns: repeat(auto-fill, minmax(min(var(--umb-card-medium-min-width), 100%), 1fr));\r\n\t\t\t}\r\n\r\n\t\t\tuui-tab-group {\r\n\t\t\t\t--uui-tab-divider: var(--uui-color-border);\r\n\t\t\t\tborder-left: 1px solid var(--uui-color-border);\r\n\t\t\t\tborder-right: 1px solid var(--uui-color-border);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbBlockCatalogueModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-block-catalogue-modal': UmbBlockCatalogueModalElement;\r\n\t}\r\n}\r\n"],"names":["_search","_UmbBlockCatalogueModalElement_instances","updateFiltered_fn","onSearch_fn","chooseBlock_fn","onClipboardPickerSelectionChange_fn","renderMain_fn","renderClipboard_fn","renderCreateEmpty_fn","renderViews_fn","UmbBlockCatalogueModalElement","UmbModalBaseElement","__privateAdd","UMB_MODAL_CONTEXT","modalContext","UmbModalRouteRegistrationController","UMB_BLOCK_WORKSPACE_MODAL","routeBuilder","UMB_BLOCK_MANAGER_CONTEXT","manager","blocks","blockGroups","noGroupBlocks","block","group","grouped","__privateMethod","html","__privateGet","search","e","__privateSet","contentElementTypeKey","event","selection","nothing","repeat","css","__decorateClass","state","customElement","UmbBlockCatalogueModalElement$1"],"mappings":"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"}