{"version":3,"file":"manifests.js","sources":["../../../src/packages/block/modals/manifest-viewer/manifest.ts","../../../src/packages/block/block/conditions/manifests.ts","../../../src/packages/block/block/modals/manifests.ts","../../../src/packages/block/block/workspace/manifests.ts","../../../src/packages/block/block/manifests.ts","../../../src/packages/block/block-grid/clipboard/block/manifests.ts","../../../src/packages/block/block-grid/clipboard/grid-block/manifests.ts","../../../src/packages/block/block-grid/clipboard/manifests.ts","../../../src/packages/block/block-grid/components/block-grid-area-config-entry/workspace/views/manifests.ts","../../../src/packages/block/block-grid/components/block-grid-area-config-entry/workspace/manifests.ts","../../../src/packages/block/block-grid/property-editors/block-grid-area-type-permission/manifests.ts","../../../src/packages/block/block-grid/property-editors/block-grid-areas-config/manifests.ts","../../../src/packages/block/block-grid/property-editors/block-grid-column-span/manifests.ts","../../../src/packages/block/block-grid/property-editors/block-grid-editor/Umbraco.BlockGrid.ts","../../../src/packages/block/block-grid/property-editors/block-grid-editor/property-actions/manifests.ts","../../../src/packages/block/block-grid/property-editors/block-grid-editor/manifests.ts","../../../src/packages/block/block-grid/property-editors/block-grid-group-configuration/manifests.ts","../../../src/packages/block/block-grid/property-editors/block-grid-layout-stylesheet/manifests.ts","../../../src/packages/block/block-grid/property-editors/block-grid-type-configuration/manifests.ts","../../../src/packages/block/block-grid/property-editors/manifests.ts","../../../src/packages/block/block-grid/property-value-cloner/manifests.ts","../../../src/packages/block/block-grid/validation/manifests.ts","../../../src/packages/block/block-grid/workspace/views/manifests.ts","../../../src/packages/block/block-grid/workspace/manifests.ts","../../../src/packages/block/block-grid/manifests.ts","../../../src/packages/block/block-list/clipboard/block/copy/manifests.ts","../../../src/packages/block/block-list/clipboard/block/paste/manifests.ts","../../../src/packages/block/block-list/clipboard/manifests.ts","../../../src/packages/block/block-list/property-value-cloner/manifests.ts","../../../src/packages/block/block-list/property-editors/block-list-type-configuration/manifests.ts","../../../src/packages/block/block-list/property-editors/block-list-editor/Umbraco.BlockList.ts","../../../src/packages/block/block-list/property-editors/block-list-editor/manifests.ts","../../../src/packages/block/block-list/property-editors/manifests.ts","../../../src/packages/block/block-list/validation/manifests.ts","../../../src/packages/block/block-list/workspace/views/manifests.ts","../../../src/packages/block/block-list/workspace/manifests.ts","../../../src/packages/block/block-list/manifests.ts","../../../src/packages/block/block-rte/workspace/views/manifests.ts","../../../src/packages/block/block-rte/workspace/manifests.ts","../../../src/packages/block/block-rte/property-editors/manifests.ts","../../../src/packages/block/block-rte/property-value-cloner/manifests.ts","../../../src/packages/block/block-rte/manifests.ts","../../../src/packages/block/block-type/workspace/manifests.ts","../../../src/packages/block/block-type/manifests.ts","../../../src/packages/block/manifests.ts"],"sourcesContent":["import type { ManifestModal } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport const manifest: ManifestModal = {\r\n\ttype: 'modal',\r\n\talias: 'Umb.Modal.ManifestViewer',\r\n\tname: 'Manifest Viewer Modal',\r\n\telement: () => import('./manifest-viewer-modal.element.js'),\r\n};\r\n","import type { ManifestCondition } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nexport const manifests: Array<ManifestCondition> = [\r\n\t{\r\n\t\ttype: 'condition',\r\n\t\tname: 'Block Has Settings Condition',\r\n\t\talias: 'Umb.Condition.BlockWorkspaceHasSettings',\r\n\t\tapi: () => import('./block-workspace-has-settings.condition.js'),\r\n\t},\r\n\t{\r\n\t\ttype: 'condition',\r\n\t\tname: 'Block Show Content Edit Condition',\r\n\t\talias: 'Umb.Condition.BlockEntryShowContentEdit',\r\n\t\tapi: () => import('./block-entry-show-content-edit.condition.js'),\r\n\t},\r\n\t{\r\n\t\ttype: 'condition',\r\n\t\tname: 'Block Workspace Is Exposed Condition',\r\n\t\talias: 'Umb.Condition.BlockWorkspaceIsExposed',\r\n\t\tapi: () => import('./block-workspace-is-exposed.condition.js'),\r\n\t},\r\n];\r\n","export const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'modal',\r\n\t\talias: 'Umb.Modal.BlockCatalogue',\r\n\t\tname: 'Block Catalogue Modal',\r\n\t\telement: () => import('./block-catalogue/block-catalogue-modal.element.js'),\r\n\t},\r\n];\r\n","import { UMB_BLOCK_WORKSPACE_ALIAS } from './index.js';\r\nimport { UMB_WORKSPACE_CONDITION_ALIAS, UmbSubmitWorkspaceAction } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspaceAction',\r\n\t\tkind: 'default',\r\n\t\talias: 'Umb.WorkspaceAction.Block.SubmitCreate',\r\n\t\tname: 'Submit Create Block Workspace Action',\r\n\t\tapi: UmbSubmitWorkspaceAction,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_create',\r\n\t\t\tlook: 'primary',\r\n\t\t\tcolor: 'positive',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.BlockWorkspaceIsExposed',\r\n\t\t\t\tmatch: false,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceAction',\r\n\t\tkind: 'default',\r\n\t\talias: 'Umb.WorkspaceAction.Block.SubmitUpdate',\r\n\t\tname: 'Submit Update Block Workspace Action',\r\n\t\tapi: UmbSubmitWorkspaceAction,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_update',\r\n\t\t\tlook: 'primary',\r\n\t\t\tcolor: 'positive',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.BlockWorkspaceIsExposed',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspace',\r\n\t\tkind: 'routable',\r\n\t\tname: 'Block Workspace',\r\n\t\talias: UMB_BLOCK_WORKSPACE_ALIAS,\r\n\t\tapi: () => import('./block-workspace.context.js'),\r\n\t\tmeta: {\r\n\t\t\tentityType: 'block',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.Block.Content',\r\n\t\tname: 'Block Workspace Content View',\r\n\t\telement: () => import('./views/edit/block-workspace-view-edit.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_content',\r\n\t\t\tpathname: 'content',\r\n\t\t\ticon: 'icon-document',\r\n\t\t\tblockElementManagerName: 'content',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t\tTODO_conditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.BlockEntryShowContentEdit',\r\n\t\t\t},\r\n\t\t],\r\n\t} as any,\r\n\t// TODO: Fix manifest types so it support additional properties.\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.Block.Settings',\r\n\t\tname: 'Block Workspace Settings View',\r\n\t\telement: () => import('./views/edit/block-workspace-view-edit.element.js'),\r\n\t\tweight: 900,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_settings',\r\n\t\t\tpathname: 'settings',\r\n\t\t\ticon: 'icon-settings',\r\n\t\t\tblockElementManagerName: 'settings',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.BlockWorkspaceHasSettings',\r\n\t\t\t},\r\n\t\t],\r\n\t} as any,\r\n];\r\n","import { manifests as conditionManifests } from './conditions/manifests.js';\r\nimport { manifests as modalManifests } from './modals/manifests.js';\r\nimport { manifests as workspaceManifests } from './workspace/manifests.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [...modalManifests, ...workspaceManifests, ...conditionManifests];\r\n","import { UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS } from '../../property-editors/constants.js';\r\nimport { UMB_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE } from '@umbraco-cms/backoffice/block';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'clipboardCopyPropertyValueTranslator',\r\n\t\talias: 'Umb.ClipboardCopyPropertyValueTranslator.BlockGridToBlock',\r\n\t\tname: 'Block Grid to Block Clipboard Copy Property Value Translator',\r\n\t\tapi: () => import('./copy/block-grid-to-block-copy-translator.js'),\r\n\t\tfromPropertyEditorUi: UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\ttoClipboardEntryValueType: UMB_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE,\r\n\t},\r\n\t{\r\n\t\ttype: 'clipboardPastePropertyValueTranslator',\r\n\t\talias: 'Umb.ClipboardPastePropertyValueTranslator.BlockToBlockGrid',\r\n\t\tname: 'Block To Block Grid Clipboard Paste Property Value Translator',\r\n\t\tweight: 900,\r\n\t\tapi: () => import('./paste/block-to-block-grid-paste-translator.js'),\r\n\t\tfromClipboardEntryValueType: UMB_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE,\r\n\t\ttoPropertyEditorUi: UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS,\r\n\t},\r\n];\r\n","import { UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS } from '../../property-editors/constants.js';\r\nimport { UMB_GRID_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'clipboardCopyPropertyValueTranslator',\r\n\t\talias: 'Umb.ClipboardCopyPropertyValueTranslator.BlockGridToGridBlock',\r\n\t\tname: 'Block Grid To Grid Block Clipboard Copy Property Value Translator',\r\n\t\tapi: () => import('./copy/block-grid-to-grid-block-copy-translator.js'),\r\n\t\tfromPropertyEditorUi: UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\ttoClipboardEntryValueType: UMB_GRID_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE,\r\n\t},\r\n\t{\r\n\t\ttype: 'clipboardPastePropertyValueTranslator',\r\n\t\talias: 'Umb.ClipboardPastePropertyValueTranslator.GridBlockToBlockGrid',\r\n\t\tname: 'Grid Block To Block Grid Clipboard Paste Property Value Translator',\r\n\t\tapi: () => import('./paste/grid-block-to-block-grid-paste-translator.js'),\r\n\t\tfromClipboardEntryValueType: UMB_GRID_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE,\r\n\t\tweight: 1000,\r\n\t\ttoPropertyEditorUi: UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS,\r\n\t},\r\n];\r\n","import { UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS } from '../property-editors/constants.js';\r\nimport { manifests as blockManifests } from './block/manifests.js';\r\nimport { manifests as gridBlockManifests } from './grid-block/manifests.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UMB_PROPERTY_HAS_VALUE_CONDITION_ALIAS } from '@umbraco-cms/backoffice/property';\r\n\r\nconst forPropertyEditorUis = [UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS];\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\t{\r\n\t\ttype: 'propertyContext',\r\n\t\tkind: 'clipboard',\r\n\t\talias: 'Umb.PropertyContext.BlockGrid.Clipboard',\r\n\t\tname: 'Block Grid Clipboard Property Context',\r\n\t\tforPropertyEditorUis,\r\n\t},\r\n\t{\r\n\t\ttype: 'propertyAction',\r\n\t\tkind: 'copyToClipboard',\r\n\t\talias: 'Umb.PropertyAction.BlockGrid.Clipboard.Copy',\r\n\t\tname: 'Block Grid Copy To Clipboard Property Action',\r\n\t\tforPropertyEditorUis,\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_PROPERTY_HAS_VALUE_CONDITION_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t...blockManifests,\r\n\t...gridBlockManifests,\r\n];\r\n","import { UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_ALIAS } from '../constants.js';\r\nimport { UMB_WORKSPACE_CONDITION_ALIAS } from '@umbraco-cms/backoffice/workspace';\r\nimport type { ManifestWorkspaceView } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const workspaceViews: Array<ManifestWorkspaceView> = [\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.BlockGridAreaType.Settings',\r\n\t\tname: 'Block Grid Area Type Workspace Settings View',\r\n\t\telement: () => import('./settings.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_settings',\r\n\t\t\tpathname: 'settings',\r\n\t\t\ticon: 'icon-settings',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [...workspaceViews];\r\n","import { manifests as workspaceViewManifests } from './views/manifests.js';\r\nimport { UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_ALIAS } from './constants.js';\r\nimport { UmbSubmitWorkspaceAction, UMB_WORKSPACE_CONDITION_ALIAS } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t...workspaceViewManifests,\r\n\t{\r\n\t\ttype: 'workspace',\r\n\t\tkind: 'routable',\r\n\t\tname: 'Block Grid Area Type Workspace',\r\n\t\talias: UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_ALIAS,\r\n\t\tapi: () => import('./block-grid-area-type-workspace.context.js'),\r\n\t\tmeta: {\r\n\t\t\tentityType: 'block-grid-area-type',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceAction',\r\n\t\tkind: 'default',\r\n\t\talias: 'Umb.WorkspaceAction.BlockGridAreaType.Save',\r\n\t\tname: 'Save Block Grid Area Type Workspace Action',\r\n\t\tapi: UmbSubmitWorkspaceAction,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_submit',\r\n\t\t\tlook: 'primary',\r\n\t\t\tcolor: 'positive',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorUi = {\r\n\ttype: 'propertyEditorUi',\r\n\talias: 'Umb.PropertyEditorUi.BlockGridAreaTypePermission',\r\n\tname: 'Block Grid Area Type Permission Configuration Property Editor UI',\r\n\telement: () => import('./block-grid-area-type-permission.element.js'),\r\n\tmeta: {\r\n\t\tlabel: 'Block Grid Area Type Permissions',\r\n\t\ticon: 'icon-document',\r\n\t\tgroup: 'common',\r\n\t},\r\n};\r\n","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorUi = {\r\n\ttype: 'propertyEditorUi',\r\n\talias: 'Umb.PropertyEditorUi.BlockGridAreasConfig',\r\n\tname: 'Block Grid Areas Configuration Property Editor UI',\r\n\telement: () => import('./property-editor-ui-block-grid-areas-config.element.js'),\r\n\tmeta: {\r\n\t\tlabel: 'Block Grid Areas Configuration',\r\n\t\ticon: 'icon-document',\r\n\t\tgroup: 'common',\r\n\t},\r\n};\r\n","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorUi = {\r\n\ttype: 'propertyEditorUi',\r\n\talias: 'Umb.PropertyEditorUi.BlockGridColumnSpan',\r\n\tname: 'Block Grid Column Span Property Editor UI',\r\n\telement: () => import('./property-editor-ui-block-grid-column-span.element.js'),\r\n\tmeta: {\r\n\t\tlabel: 'Block Grid Column Span',\r\n\t\ticon: 'icon-document',\r\n\t\tgroup: 'common',\r\n\t},\r\n};\r\n","import type { ManifestPropertyEditorSchema } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorSchema = {\r\n\ttype: 'propertyEditorSchema',\r\n\tname: 'Block Grid',\r\n\talias: 'Umbraco.BlockGrid',\r\n\tmeta: {\r\n\t\tdefaultPropertyEditorUiAlias: 'Umb.PropertyEditorUi.BlockGrid',\r\n\t\tsettings: {\r\n\t\t\tproperties: [\r\n\t\t\t\t{\r\n\t\t\t\t\talias: 'blocks',\r\n\t\t\t\t\tlabel: 'Blocks',\r\n\t\t\t\t\tdescription: 'Define Blocks based on Element Types.',\r\n\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.BlockGridTypeConfiguration',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\talias: 'validationLimit',\r\n\t\t\t\t\tlabel: 'Amount',\r\n\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.NumberRange',\r\n\t\t\t\t\tconfig: [{ alias: 'validationRange', value: { min: 0, max: Infinity } }],\r\n\t\t\t\t\tweight: 100,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tdefaultData: [\r\n\t\t\t\t{\r\n\t\t\t\t\talias: 'gridColumns',\r\n\t\t\t\t\tvalue: 12,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t},\r\n};\r\n","import { UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS } from '../constants.js';\r\nimport { UMB_WRITABLE_PROPERTY_CONDITION_ALIAS } from '@umbraco-cms/backoffice/property';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UMB_PROPERTY_ACTION_PASTE_FROM_CLIPBOARD_KIND_MANIFEST } from '@umbraco-cms/backoffice/clipboard';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\t{\r\n\t\t...UMB_PROPERTY_ACTION_PASTE_FROM_CLIPBOARD_KIND_MANIFEST.manifest,\r\n\t\ttype: 'propertyAction',\r\n\t\talias: 'Umb.PropertyAction.BlockGrid.Clipboard.Paste',\r\n\t\tname: 'Block Grid Paste From Clipboard Property Action',\r\n\t\tapi: () => import('./block-grid-paste-from-clipboard.js'),\r\n\t\tforPropertyEditorUis: [UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS],\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WRITABLE_PROPERTY_CONDITION_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import { manifest as blockGridSchemaManifest } from './Umbraco.BlockGrid.js';\r\nimport { UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS, UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS } from './constants.js';\r\nimport { manifests as propertyActionManifests } from './property-actions/manifests.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbStandardBlockValueResolver } from '@umbraco-cms/backoffice/block';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\t{\r\n\t\ttype: 'propertyEditorUi',\r\n\t\talias: UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\tname: 'Block Grid Property Editor UI',\r\n\t\telement: () => import('./property-editor-ui-block-grid.element.js'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Block Grid',\r\n\t\t\tpropertyEditorSchemaAlias: UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t\t\ticon: 'icon-layout',\r\n\t\t\tgroup: 'richContent',\r\n\t\t\tsupportsReadOnly: true,\r\n\t\t\tsettings: {\r\n\t\t\t\tproperties: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'blockGroups',\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.BlockTypeGroupConfiguration',\r\n\t\t\t\t\t\tweight: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'useLiveEditing',\r\n\t\t\t\t\t\tlabel: 'Live editing mode',\r\n\t\t\t\t\t\tdescription: 'Live update content when editing in overlay',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.Toggle',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'maxPropertyWidth',\r\n\t\t\t\t\t\tlabel: 'Editor width',\r\n\t\t\t\t\t\tdescription: 'Optional css overwrite. (example: 1200px or 100%)',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.TextBox',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'createLabel',\r\n\t\t\t\t\t\tlabel: 'Create Button Label',\r\n\t\t\t\t\t\tdescription: 'Override the label text for adding a new block, Example Add Widget',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.TextBox',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'gridColumns',\r\n\t\t\t\t\t\tlabel: 'Grid Columns',\r\n\t\t\t\t\t\tdescription: 'Set the number of columns for the layout.',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.Integer',\r\n\t\t\t\t\t\tconfig: [\r\n\t\t\t\t\t\t\t{ alias: 'min', value: 0 },\r\n\t\t\t\t\t\t\t{ alias: 'placeholder', value: '12' },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'layoutStylesheet',\r\n\t\t\t\t\t\tlabel: 'Layout Stylesheet',\r\n\t\t\t\t\t\tdescription: 'Override default stylesheet for backoffice layout.',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.BlockGridLayoutStylesheet',\r\n\t\t\t\t\t\tconfig: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\talias: 'singleItemMode',\r\n\t\t\t\t\t\t\t\tvalue: true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttype: 'propertyValueResolver',\r\n\t\talias: 'Umb.PropertyValueResolver.BlockGrid',\r\n\t\tname: 'Block Value Resolver',\r\n\t\tapi: UmbStandardBlockValueResolver,\r\n\t\tmeta: {\r\n\t\t\teditorAlias: UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t\t},\r\n\t},\r\n\tblockGridSchemaManifest,\r\n\t...propertyActionManifests,\r\n];\r\n","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorUi = {\r\n\ttype: 'propertyEditorUi',\r\n\talias: 'Umb.PropertyEditorUi.BlockTypeGroupConfiguration',\r\n\tname: 'Block Grid Group Configuration Property Editor UI',\r\n\telement: () => import('./property-editor-ui-block-grid-group-configuration.element.js'),\r\n\tmeta: {\r\n\t\tlabel: '',\r\n\t\ticon: 'icon-box-alt',\r\n\t\tgroup: 'common',\r\n\t},\r\n};\r\n","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorUi = {\r\n\ttype: 'propertyEditorUi',\r\n\talias: 'Umb.PropertyEditorUi.BlockGridLayoutStylesheet',\r\n\tname: 'Block Grid Layout Stylesheet Property Editor UI',\r\n\telement: () => import('./property-editor-ui-block-grid-layout-stylesheet.element.js'),\r\n\tmeta: {\r\n\t\tlabel: 'Block Grid Layout Stylesheet',\r\n\t\ticon: 'icon-document',\r\n\t\tgroup: 'common',\r\n\t},\r\n};\r\n","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorUi = {\r\n\ttype: 'propertyEditorUi',\r\n\talias: 'Umb.PropertyEditorUi.BlockGridTypeConfiguration',\r\n\tname: 'Block Grid Block Configuration Property Editor UI',\r\n\telement: () => import('./property-editor-ui-block-grid-type-configuration.element.js'),\r\n\tmeta: {\r\n\t\tlabel: 'Block Grid Block Configuration',\r\n\t\ticon: 'icon-autofill',\r\n\t\tgroup: 'blocks',\r\n\t},\r\n};\r\n","import { manifest as blockGridAreaTypePermission } from './block-grid-area-type-permission/manifests.js';\r\nimport { manifest as blockGridAreasConfigEditor } from './block-grid-areas-config/manifests.js';\r\nimport { manifest as blockGridColumnSpan } from './block-grid-column-span/manifests.js';\r\nimport { manifests as blockGridEditorManifests } from './block-grid-editor/manifests.js';\r\nimport { manifest as blockGridGroupConfiguration } from './block-grid-group-configuration/manifests.js';\r\nimport { manifest as blockGridLayoutStylesheet } from './block-grid-layout-stylesheet/manifests.js';\r\nimport { manifest as blockGridTypeConfiguration } from './block-grid-type-configuration/manifests.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\tblockGridAreaTypePermission,\r\n\tblockGridAreasConfigEditor,\r\n\tblockGridColumnSpan,\r\n\t...blockGridEditorManifests,\r\n\tblockGridGroupConfiguration,\r\n\tblockGridLayoutStylesheet,\r\n\tblockGridTypeConfiguration,\r\n];\r\n","import { UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS } from '../constants.js';\r\n\r\nexport const manifests = [\r\n\t{\r\n\t\ttype: 'propertyValueCloner',\r\n\t\tname: 'Block Grid Value Cloner',\r\n\t\talias: 'Umb.PropertyValueCloner.BlockGrid',\r\n\t\tapi: () => import('./property-value-cloner-block-grid.cloner.js'),\r\n\t\tforEditorAlias: UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t},\r\n];\r\n","import { UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'propertyValidationPathTranslator',\r\n\t\talias: 'Umb.PropertyValidationPathTranslator.BlockGrid',\r\n\t\tname: 'Block Grid Property Validation Path Translator',\r\n\t\tforEditorAlias: UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t\tapi: () => import('./block-grid-validation-property-path-translator.api.js'),\r\n\t},\r\n];\r\n","import { UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS } from '../index.js';\r\nimport { UMB_WORKSPACE_CONDITION_ALIAS } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.BlockType.Grid.Settings',\r\n\t\tname: 'Block Grid Type Workspace Settings View',\r\n\t\telement: () => import('./block-grid-type-workspace-view-settings.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_settings',\r\n\t\t\tpathname: 'settings',\r\n\t\t\ticon: 'icon-settings',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.BlockType.Grid.Areas',\r\n\t\tname: 'Block Grid Type Workspace Areas View',\r\n\t\telement: () => import('./block-grid-type-workspace-view-areas.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#blockEditor_tabAreas',\r\n\t\t\tpathname: 'areas',\r\n\t\t\ticon: 'icon-grid',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.BlockType.Grid.Advance',\r\n\t\tname: 'Block Grid Type Workspace Advance View',\r\n\t\telement: () => import('./block-grid-type-workspace-view-advanced.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#blockEditor_tabAdvanced',\r\n\t\t\tpathname: 'advanced',\r\n\t\t\ticon: 'icon-wrench',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import { manifests as workspaceViewManifests } from './views/manifests.js';\r\nimport { UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS } from './index.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t...workspaceViewManifests,\r\n\t{\r\n\t\ttype: 'workspace',\r\n\t\tkind: 'routable',\r\n\t\tname: 'Block Grid Type Workspace',\r\n\t\talias: UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS,\r\n\t\tapi: () => import('../../block-type/workspace/block-type-workspace.context.js'),\r\n\t\tmeta: {\r\n\t\t\tentityType: 'block-grid-type',\r\n\t\t},\r\n\t},\r\n];\r\n","import { manifests as clipboardManifests } from './clipboard/manifests.js';\r\nimport { manifests as componentManifests } from './components/manifests.js';\r\nimport { manifests as propertyEditorManifests } from './property-editors/manifests.js';\r\nimport { manifests as propertyValueClonerManifests } from './property-value-cloner/manifests.js';\r\nimport { manifests as validationManifests } from './validation/manifests.js';\r\nimport { manifests as workspaceManifests } from './workspace/manifests.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\t...clipboardManifests,\r\n\t...componentManifests,\r\n\t...propertyEditorManifests,\r\n\t...propertyValueClonerManifests,\r\n\t...validationManifests,\r\n\t...workspaceManifests,\r\n];\r\n","import { UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS } from '../../../property-editors/constants.js';\r\nimport { UMB_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE } from '@umbraco-cms/backoffice/block';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'clipboardCopyPropertyValueTranslator',\r\n\t\talias: 'Umb.ClipboardCopyPropertyValueTranslator.BlockListToBlock',\r\n\t\tname: 'Block List To Block Clipboard Copy Property Value Translator',\r\n\t\tapi: () => import('./block-list-to-block-copy-translator.js'),\r\n\t\tfromPropertyEditorUi: UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\ttoClipboardEntryValueType: UMB_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE,\r\n\t},\r\n];\r\n","import { UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS } from '../../../property-editors/constants.js';\r\nimport { UMB_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE } from '@umbraco-cms/backoffice/block';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'clipboardPastePropertyValueTranslator',\r\n\t\talias: 'Umb.ClipboardPastePropertyValueTranslator.BlockToBlockList',\r\n\t\tname: 'Block To Block List Clipboard Paste Property Value Translator',\r\n\t\tapi: () => import('./block-to-block-list-paste-translator.js'),\r\n\t\tfromClipboardEntryValueType: UMB_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE,\r\n\t\ttoPropertyEditorUi: UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n\t},\r\n];\r\n","import { UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS } from '../property-editors/constants.js';\r\nimport { manifests as blockCopyManifests } from './block/copy/manifests.js';\r\nimport { manifests as blockPasteManifests } from './block/paste/manifests.js';\r\nimport {\r\n\tUMB_PROPERTY_HAS_VALUE_CONDITION_ALIAS,\r\n\tUMB_WRITABLE_PROPERTY_CONDITION_ALIAS,\r\n} from '@umbraco-cms/backoffice/property';\r\n\r\nconst forPropertyEditorUis = [UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS];\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'propertyContext',\r\n\t\tkind: 'clipboard',\r\n\t\talias: 'Umb.PropertyContext.BlockList.Clipboard',\r\n\t\tname: 'Block List Clipboard Property Context',\r\n\t\tforPropertyEditorUis,\r\n\t},\r\n\t{\r\n\t\ttype: 'propertyAction',\r\n\t\tkind: 'copyToClipboard',\r\n\t\talias: 'Umb.PropertyAction.BlockList.Clipboard.Copy',\r\n\t\tname: 'Block List Copy To Clipboard Property Action',\r\n\t\tforPropertyEditorUis,\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_PROPERTY_HAS_VALUE_CONDITION_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'propertyAction',\r\n\t\tkind: 'pasteFromClipboard',\r\n\t\talias: 'Umb.PropertyAction.BlockList.Clipboard.Paste',\r\n\t\tname: 'Block List Paste From Clipboard Property Action',\r\n\t\tforPropertyEditorUis,\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WRITABLE_PROPERTY_CONDITION_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t...blockCopyManifests,\r\n\t...blockPasteManifests,\r\n];\r\n","import { UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS } from '../constants.js';\r\n\r\nexport const manifests = [\r\n\t{\r\n\t\ttype: 'propertyValueCloner',\r\n\t\tname: 'Block List Value Cloner',\r\n\t\talias: 'Umb.PropertyValueCloner.BlockList',\r\n\t\tapi: () => import('./property-value-cloner-block-list.cloner.js'),\r\n\t\tforEditorAlias: UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t},\r\n];\r\n","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorUi = {\r\n\ttype: 'propertyEditorUi',\r\n\talias: 'Umb.PropertyEditorUi.BlockListTypeConfiguration',\r\n\tname: 'Block List Type Configuration Property Editor UI',\r\n\telement: () => import('./property-editor-ui-block-list-type-configuration.element.js'),\r\n\tmeta: {\r\n\t\tlabel: 'Block List Type Configuration',\r\n\t\ticon: 'icon-autofill',\r\n\t\tgroup: 'common',\r\n\t},\r\n};\r\n","import type { ManifestPropertyEditorSchema } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifest: ManifestPropertyEditorSchema = {\r\n\ttype: 'propertyEditorSchema',\r\n\tname: 'Block List',\r\n\talias: 'Umbraco.BlockList',\r\n\tmeta: {\r\n\t\tdefaultPropertyEditorUiAlias: 'Umb.PropertyEditorUi.BlockList',\r\n\t\tsettings: {\r\n\t\t\tproperties: [\r\n\t\t\t\t{\r\n\t\t\t\t\talias: 'blocks',\r\n\t\t\t\t\tlabel: 'Available Blocks',\r\n\t\t\t\t\tdescription: 'Define the available blocks.',\r\n\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.BlockListTypeConfiguration',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\talias: 'validationLimit',\r\n\t\t\t\t\tlabel: 'Amount',\r\n\t\t\t\t\tdescription: 'Set a required range of blocks',\r\n\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.NumberRange',\r\n\t\t\t\t\tconfig: [{ alias: 'validationRange', value: { min: 0 } }],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t},\r\n};\r\n","import { manifest as blockListSchemaManifest } from './Umbraco.BlockList.js';\r\nimport { UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS } from './constants.js';\r\nimport { UmbStandardBlockValueResolver } from '@umbraco-cms/backoffice/block';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'propertyEditorUi',\r\n\t\talias: 'Umb.PropertyEditorUi.BlockList',\r\n\t\tname: 'Block List Property Editor UI',\r\n\t\telement: () => import('./property-editor-ui-block-list.element.js'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Block List',\r\n\t\t\tpropertyEditorSchemaAlias: UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t\t\ticon: 'icon-thumbnail-list',\r\n\t\t\tgroup: 'lists',\r\n\t\t\tsupportsReadOnly: true,\r\n\t\t\tsettings: {\r\n\t\t\t\tproperties: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'useSingleBlockMode',\r\n\t\t\t\t\t\tlabel: 'Single block mode',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'When in Single block mode, the output will be BlockListItem<>, instead of BlockListModel.\\n\\n**NOTE:**\\nSingle block mode requires a maximum of one available block, and an amount set to minimum 1 and maximum 1 blocks.',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.Toggle',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'useLiveEditing',\r\n\t\t\t\t\t\tlabel: 'Live editing mode',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'Live editing in editor overlays for live updated custom views or labels using custom expression.',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.Toggle',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'useInlineEditingAsDefault',\r\n\t\t\t\t\t\tlabel: 'Inline editing mode',\r\n\t\t\t\t\t\tdescription: 'Use the inline editor as the default block view.',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.Toggle',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\talias: 'maxPropertyWidth',\r\n\t\t\t\t\t\tlabel: 'Property editor width',\r\n\t\t\t\t\t\tdescription: 'Optional CSS override, example: 800px or 100%',\r\n\t\t\t\t\t\tpropertyEditorUiAlias: 'Umb.PropertyEditorUi.TextBox',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttype: 'propertyValueResolver',\r\n\t\talias: 'Umb.PropertyValueResolver.BlockList',\r\n\t\tname: 'Block Value Resolver',\r\n\t\tapi: UmbStandardBlockValueResolver,\r\n\t\tmeta: {\r\n\t\t\teditorAlias: UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t\t},\r\n\t},\r\n\tblockListSchemaManifest,\r\n];\r\n","import { manifest as blockListTypeConfiguration } from './block-list-type-configuration/manifests.js';\r\nimport { manifests as blockListEditorManifests } from './block-list-editor/manifests.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [blockListTypeConfiguration, ...blockListEditorManifests];\r\n","import { UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'propertyValidationPathTranslator',\r\n\t\talias: 'Umb.PropertyValidationPathTranslator.BlockList',\r\n\t\tname: 'Block List Property Validation Path Translator',\r\n\t\tforEditorAlias: UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t\tapi: () => import('./block-list-validation-property-path-translator.api.js'),\r\n\t},\r\n];\r\n","import { UMB_BLOCK_LIST_TYPE_WORKSPACE_ALIAS } from '../index.js';\r\nimport { UMB_WORKSPACE_CONDITION_ALIAS } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.BlockType.List.Settings',\r\n\t\tname: 'Block List Type Workspace Settings View',\r\n\t\telement: () => import('./block-list-type-workspace-view.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#blockEditor_tabBlockSettings',\r\n\t\t\tpathname: 'settings',\r\n\t\t\ticon: 'icon-settings',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_LIST_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import { manifests as workspaceViewManifests } from './views/manifests.js';\r\nimport { UMB_BLOCK_LIST_TYPE_WORKSPACE_ALIAS } from './index.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t...workspaceViewManifests,\r\n\t{\r\n\t\ttype: 'workspace',\r\n\t\tkind: 'routable',\r\n\t\tname: 'Block List Type Workspace',\r\n\t\talias: UMB_BLOCK_LIST_TYPE_WORKSPACE_ALIAS,\r\n\t\tapi: () => import('../../block-type/workspace/block-type-workspace.context.js'),\r\n\t\tmeta: {\r\n\t\t\tentityType: 'block-list-type',\r\n\t\t},\r\n\t},\r\n];\r\n","import { manifests as clipboardManifests } from './clipboard/manifests.js';\r\nimport { manifests as propertValueClonerManifests } from './property-value-cloner/manifests.js';\r\nimport { manifests as propertyEditorManifests } from './property-editors/manifests.js';\r\nimport { manifests as validationManifests } from './validation/manifests.js';\r\nimport { manifests as workspaceManifests } from './workspace/manifests.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\t...clipboardManifests,\r\n\t...propertValueClonerManifests,\r\n\t...propertyEditorManifests,\r\n\t...validationManifests,\r\n\t...workspaceManifests,\r\n];\r\n","import { UMB_BLOCK_RTE_TYPE_WORKSPACE_ALIAS } from '../index.js';\r\nimport { UMB_WORKSPACE_CONDITION_ALIAS } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.BlockType.RTE.Settings',\r\n\t\tname: 'Block List Type Workspace Settings View',\r\n\t\telement: () => import('./block-rte-type-workspace-view.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_settings',\r\n\t\t\tpathname: 'settings',\r\n\t\t\ticon: 'icon-settings',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: UMB_BLOCK_RTE_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import { manifests as workspaceViewManifests } from './views/manifests.js';\r\nimport { UMB_BLOCK_RTE_TYPE_WORKSPACE_ALIAS } from './index.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t...workspaceViewManifests,\r\n\t{\r\n\t\ttype: 'workspace',\r\n\t\tkind: 'routable',\r\n\t\tname: 'Block Rte Type Workspace',\r\n\t\talias: UMB_BLOCK_RTE_TYPE_WORKSPACE_ALIAS,\r\n\t\tapi: () => import('../../block-type/workspace/block-type-workspace.context.js'),\r\n\t\tmeta: {\r\n\t\t\tentityType: 'block-rte-type',\r\n\t\t},\r\n\t},\r\n];\r\n","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nexport const manifests: Array<ManifestPropertyEditorUi> = [\r\n\t{\r\n\t\ttype: 'propertyEditorUi',\r\n\t\talias: 'Umb.PropertyEditorUi.BlockRteTypeConfiguration',\r\n\t\tname: 'Block RTE Type Configuration Property Editor UI',\r\n\t\telement: () => import('./property-editor-ui-block-rte-type-configuration.element.js'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Block RTE Type Configuration',\r\n\t\t\ticon: 'icon-autofill',\r\n\t\t\tgroup: 'common',\r\n\t\t},\r\n\t},\r\n];\r\n","import { UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS } from '../constants.js';\r\n\r\nexport const manifests = [\r\n\t{\r\n\t\ttype: 'propertyValueCloner',\r\n\t\tname: 'RTE Block Value Cloner',\r\n\t\talias: 'Umb.PropertyValueCloner.BlockRte',\r\n\t\tapi: () => import('./property-value-cloner-block-rte.cloner.js'),\r\n\t\tforEditorAlias: UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\t},\r\n];\r\n","import { manifests as workspaceManifests } from './workspace/manifests.js';\r\nimport { manifests as propertyEditorManifests } from './property-editors/manifests.js';\r\nimport { manifests as propertyValueClonerManifests } from './property-value-cloner/manifests.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t...workspaceManifests,\r\n\t...propertyEditorManifests,\r\n\t...propertyValueClonerManifests,\r\n];\r\n","import { UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS } from '../../block-grid/workspace/index.js';\r\nimport { UMB_BLOCK_LIST_TYPE_WORKSPACE_ALIAS } from '../../block-list/workspace/index.js';\r\nimport { UMB_BLOCK_RTE_TYPE_WORKSPACE_ALIAS } from '../../block-rte/workspace/index.js';\r\nimport { UMB_WORKSPACE_CONDITION_ALIAS, UmbSubmitWorkspaceAction } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspaceAction',\r\n\t\tkind: 'default',\r\n\t\talias: 'Umb.WorkspaceAction.BlockType.Save',\r\n\t\tname: 'Save Block Type Workspace Action',\r\n\t\tapi: UmbSubmitWorkspaceAction,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_submit',\r\n\t\t\tlook: 'primary',\r\n\t\t\tcolor: 'positive',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\toneOf: [\r\n\t\t\t\t\tUMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t\t\tUMB_BLOCK_LIST_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t\t\tUMB_BLOCK_RTE_TYPE_WORKSPACE_ALIAS,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import { manifests as workspaceManifests } from './workspace/manifests.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [...workspaceManifests];\r\n","import { manifests as blockManifests } from './block/manifests.js';\r\nimport { manifests as blockGridManifests } from './block-grid/manifests.js';\r\nimport { manifests as blockListManifests } from './block-list/manifests.js';\r\nimport { manifests as blockRteManifests } from './block-rte/manifests.js';\r\nimport { manifests as blockTypeManifests } from './block-type/manifests.js';\r\nimport { manifest as modalManifest } from './modals/manifest-viewer/manifest.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n// TODO: Remove test custom view, or transfer to test or similar?\r\n//import { manifest } from './custom-view/manifest.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\t//manifest,\r\n\t...blockManifests,\r\n\t...blockTypeManifests,\r\n\t...blockListManifests,\r\n\t...blockGridManifests,\r\n\t...blockRteManifests,\r\n\tmodalManifest,\r\n];\r\n"],"names":["manifest","manifests","UmbSubmitWorkspaceAction","UMB_WORKSPACE_CONDITION_ALIAS","UMB_BLOCK_WORKSPACE_ALIAS","modalManifests","workspaceManifests","conditionManifests","UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS","UMB_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE","UMB_GRID_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE","forPropertyEditorUis","UMB_PROPERTY_HAS_VALUE_CONDITION_ALIAS","blockManifests","gridBlockManifests","workspaceViews","UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_ALIAS","workspaceViewManifests","UMB_PROPERTY_ACTION_PASTE_FROM_CLIPBOARD_KIND_MANIFEST","UMB_WRITABLE_PROPERTY_CONDITION_ALIAS","UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS","UmbStandardBlockValueResolver","blockGridSchemaManifest","propertyActionManifests","blockGridAreaTypePermission","blockGridAreasConfigEditor","blockGridColumnSpan","blockGridEditorManifests","blockGridGroupConfiguration","blockGridLayoutStylesheet","blockGridTypeConfiguration","UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS","clipboardManifests","componentManifests","propertyEditorManifests","propertyValueClonerManifests","validationManifests","UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS","blockCopyManifests","blockPasteManifests","UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS","blockListSchemaManifest","blockListTypeConfiguration","blockListEditorManifests","UMB_BLOCK_LIST_TYPE_WORKSPACE_ALIAS","propertValueClonerManifests","UMB_BLOCK_RTE_TYPE_WORKSPACE_ALIAS","UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS","blockTypeManifests","blockListManifests","blockGridManifests","blockRteManifests","modalManifest"],"mappings":"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"}