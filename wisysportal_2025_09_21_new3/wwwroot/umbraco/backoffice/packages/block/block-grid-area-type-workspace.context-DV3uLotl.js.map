{"version":3,"file":"block-grid-area-type-workspace.context-DV3uLotl.js","sources":["../../../src/packages/block/block-grid/components/block-grid-area-config-entry/workspace/block-grid-area-type-workspace.context.ts"],"sourcesContent":["import type { UmbBlockGridTypeAreaType } from '../../../types.js';\r\nimport type { UmbPropertyDatasetContext, UmbPropertyValueData } from '@umbraco-cms/backoffice/property';\r\nimport { UMB_PROPERTY_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport type {\r\n\tUmbInvariantDatasetWorkspaceContext,\r\n\tUmbRoutableWorkspaceContext,\r\n\tUmbWorkspaceContext,\r\n\tManifestWorkspace,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport {\r\n\tUmbSubmittableWorkspaceContextBase,\r\n\tUmbInvariantWorkspacePropertyDatasetContext,\r\n\tumbObjectToPropertyValueArray,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbArrayState, UmbObjectState, appendToFrozenArray } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\nimport type { PropertyEditorSettingsProperty } from '@umbraco-cms/backoffice/property-editor';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\nimport { firstValueFrom } from '@umbraco-cms/backoffice/external/rxjs';\r\n\r\nexport class UmbBlockGridAreaTypeWorkspaceContext\r\n\textends UmbSubmittableWorkspaceContextBase<UmbBlockGridTypeAreaType>\r\n\timplements UmbInvariantDatasetWorkspaceContext, UmbRoutableWorkspaceContext\r\n{\r\n\t// Just for context token safety:\r\n\tpublic readonly IS_BLOCK_GRID_AREA_TYPE_WORKSPACE_CONTEXT = true;\r\n\r\n\t#entityType: string;\r\n\t#data = new UmbObjectState<UmbBlockGridTypeAreaType | undefined>(undefined);\r\n\treadonly data = this.#data.asObservable();\r\n\r\n\treadonly values = this.#data.asObservablePart((data) => {\r\n\t\treturn umbObjectToPropertyValueArray(data);\r\n\t});\r\n\tasync getValues(): Promise<Array<UmbPropertyValueData> | undefined> {\r\n\t\treturn umbObjectToPropertyValueArray(await firstValueFrom(this.data));\r\n\t}\r\n\r\n\t// TODO: Get the name of the contentElementType..\r\n\treadonly name = this.#data.asObservablePart((data) => data?.alias);\r\n\treadonly unique = this.#data.asObservablePart((data) => data?.key);\r\n\r\n\t#properties = new UmbArrayState<PropertyEditorSettingsProperty>([], (x) => x.alias);\r\n\treadonly properties = this.#properties.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost, workspaceArgs: { manifest: ManifestWorkspace }) {\r\n\t\tsuper(host, workspaceArgs.manifest.alias);\r\n\t\tthis.#entityType = workspaceArgs.manifest.meta?.entityType;\r\n\t}\r\n\r\n\tset manifest(manifest: ManifestWorkspace) {\r\n\t\tthis.routes.setRoutes([\r\n\t\t\t{\r\n\t\t\t\tpath: 'edit/:id',\r\n\t\t\t\tcomponent: () => import('./block-grid-area-type-workspace-editor.element.js'),\r\n\t\t\t\tsetup: (component, info) => {\r\n\t\t\t\t\tconst id = info.match.params.id;\r\n\t\t\t\t\tthis.load(id);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'create',\r\n\t\t\t\tcomponent: () => import('./block-grid-area-type-workspace-editor.element.js'),\r\n\t\t\t\tsetup: () => {\r\n\t\t\t\t\tthis.create();\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\t}\r\n\r\n\tprotected override resetState(): void {\r\n\t\tsuper.resetState();\r\n\t\tthis.#data.setValue(undefined);\r\n\t}\r\n\r\n\tcreatePropertyDatasetContext(host: UmbControllerHost): UmbPropertyDatasetContext {\r\n\t\treturn new UmbInvariantWorkspacePropertyDatasetContext(host, this);\r\n\t}\r\n\r\n\tasync load(unique: string) {\r\n\t\tthis.resetState();\r\n\t\tthis.consumeContext(UMB_PROPERTY_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext?.value,\r\n\t\t\t\t(value) => {\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\tconst blockTypeData = value.find((x: UmbBlockGridTypeAreaType) => x.key === unique);\r\n\t\t\t\t\t\tif (blockTypeData) {\r\n\t\t\t\t\t\t\tthis.#data.setValue(blockTypeData);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Fallback to undefined:\r\n\t\t\t\t\tthis.#data.setValue(undefined);\r\n\t\t\t\t},\r\n\t\t\t\t'observePropertyValue',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tasync create() {\r\n\t\tthis.resetState();\r\n\t\tlet data: UmbBlockGridTypeAreaType = {\r\n\t\t\tkey: UmbId.new(),\r\n\t\t\talias: '',\r\n\t\t\tcolumnSpan: 12,\r\n\t\t\trowSpan: 1,\r\n\t\t\tminAllowed: 0,\r\n\t\t\tmaxAllowed: undefined,\r\n\t\t\tspecifiedAllowance: [],\r\n\t\t};\r\n\r\n\t\t// If we have a modal context, we blend in the modal preset data: [NL]\r\n\t\tif (this.modalContext) {\r\n\t\t\tdata = { ...data, ...this.modalContext.data.preset };\r\n\t\t}\r\n\r\n\t\tthis.setIsNew(true);\r\n\t\tthis.#data.setValue(data);\r\n\t}\r\n\r\n\tgetData() {\r\n\t\treturn this.#data.getValue();\r\n\t}\r\n\r\n\tgetUnique() {\r\n\t\treturn this.getData()!.key;\r\n\t}\r\n\r\n\tgetEntityType() {\r\n\t\treturn this.#entityType;\r\n\t}\r\n\r\n\tgetName() {\r\n\t\treturn this.#data.getValue()?.alias;\r\n\t}\r\n\r\n\t// TODO: [v15] ignoring unused name parameter to avoid breaking changes\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\tsetName(name: string | undefined) {\r\n\t\tthrow new Error('You cannot set a name of a area-type.');\r\n\t}\r\n\r\n\t/**\r\n\t * @function propertyValueByAlias\r\n\t * @param {string} propertyAlias\r\n\t * @returns {Promise<Observable<ReturnType | undefined> | undefined>}\r\n\t * @description Get an Observable for the value of this property.\r\n\t */\r\n\tasync propertyValueByAlias<ReturnType = unknown>(propertyAlias: keyof UmbBlockGridTypeAreaType) {\r\n\t\treturn this.#data.asObservablePart((data) => data?.[propertyAlias as keyof UmbBlockGridTypeAreaType] as ReturnType);\r\n\t}\r\n\r\n\tgetPropertyValue<ReturnType = unknown>(propertyAlias: keyof UmbBlockGridTypeAreaType) {\r\n\t\treturn this.#data.getValue()?.[propertyAlias as keyof UmbBlockGridTypeAreaType] as ReturnType;\r\n\t}\r\n\r\n\t/**\r\n\t * @function setPropertyValue\r\n\t * @param {string} alias\r\n\t * @param {unknown} value - value can be a promise resolving into the actual value or the raw value it self.\r\n\t * @returns {Promise<void>}\r\n\t * @description Set the value of this property.\r\n\t */\r\n\tasync setPropertyValue(alias: string, value: unknown) {\r\n\t\tconst currentData = this.#data.value;\r\n\t\tif (currentData) {\r\n\t\t\tthis.#data.update({ ...currentData, [alias]: value });\r\n\t\t}\r\n\t}\r\n\r\n\tasync submit() {\r\n\t\tif (!this.#data.value) {\r\n\t\t\tthrow new Error('No data to submit.');\r\n\t\t}\r\n\r\n\t\tconst context = await this.getContext(UMB_PROPERTY_CONTEXT);\r\n\t\tif (!context) {\r\n\t\t\tthrow new Error('Property context not found.');\r\n\t\t}\r\n\r\n\t\t// TODO: We should most likely consume already, in this way I avoid having the reset this consumption.\r\n\t\tcontext.setValue(appendToFrozenArray(context.getValue() ?? [], this.#data.getValue(), (x) => x?.key));\r\n\r\n\t\tthis.setIsNew(false);\r\n\t}\r\n\r\n\tpublic override destroy(): void {\r\n\t\tthis.#data.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\nexport default UmbBlockGridAreaTypeWorkspaceContext;\r\n\r\nexport const UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_CONTEXT = new UmbContextToken<\r\n\tUmbWorkspaceContext,\r\n\tUmbBlockGridAreaTypeWorkspaceContext\r\n>(\r\n\t'UmbWorkspaceContext',\r\n\tundefined,\r\n\t(context): context is UmbBlockGridAreaTypeWorkspaceContext =>\r\n\t\t(context as any).IS_BLOCK_GRID_AREA_TYPE_WORKSPACE_CONTEXT,\r\n);\r\n"],"names":["UmbBlockGridAreaTypeWorkspaceContext","UmbSubmittableWorkspaceContextBase","host","workspaceArgs","#data","UmbObjectState","data","umbObjectToPropertyValueArray","#properties","UmbArrayState","x","#entityType","firstValueFrom","manifest","component","info","id","UmbInvariantWorkspacePropertyDatasetContext","unique","UMB_PROPERTY_CONTEXT","context","value","blockTypeData","UmbId","name","propertyAlias","alias","currentData","appendToFrozenArray","UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_CONTEXT","UmbContextToken"],"mappings":";;;;;;AAqBO,MAAMA,UACJC,EAET;AAAA,EAsBC,YAAYC,GAAyBC,GAAgD;AAC9E,UAAAD,GAAMC,EAAc,SAAS,KAAK,GArBzC,KAAgB,4CAA4C,IAGpD,KAAAC,KAAA,IAAIC,EAAqD,MAAS,GACjE,KAAA,OAAO,KAAKD,GAAM,aAAa,GAExC,KAAS,SAAS,KAAKA,GAAM,iBAAiB,CAACE,MACvCC,EAA8BD,CAAI,CACzC,GAMD,KAAS,OAAO,KAAKF,GAAM,iBAAiB,CAACE,MAASA,GAAM,KAAK,GACjE,KAAS,SAAS,KAAKF,GAAM,iBAAiB,CAACE,MAASA,GAAM,GAAG,GAEjE,KAAAE,KAAc,IAAIC,EAA8C,IAAI,CAACC,MAAMA,EAAE,KAAK,GACzE,KAAA,aAAa,KAAKF,GAAY,aAAa,GAI9C,KAAAG,KAAcR,EAAc,SAAS,MAAM;AAAA,EAAA;AAAA,EApBjDQ;AAAA,EACAP;AAAA,EAMA,MAAM,YAA8D;AACnE,WAAOG,EAA8B,MAAMK,EAAe,KAAK,IAAI,CAAC;AAAA,EAAA;AAAA,EAOrEJ;AAAA,EAQA,IAAI,SAASK,GAA6B;AACzC,SAAK,OAAO,UAAU;AAAA,MACrB;AAAA,QACC,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,6DAAoD;AAAA,QAC5E,OAAO,CAACC,GAAWC,MAAS;AACrB,gBAAAC,IAAKD,EAAK,MAAM,OAAO;AAC7B,eAAK,KAAKC,CAAE;AAAA,QAAA;AAAA,MAEd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,WAAW,MAAM,OAAO,6DAAoD;AAAA,QAC5E,OAAO,MAAM;AACZ,eAAK,OAAO;AAAA,QAAA;AAAA,MACb;AAAA,IACD,CACA;AAAA,EAAA;AAAA,EAGiB,aAAmB;AACrC,UAAM,WAAW,GACZ,KAAAZ,GAAM,SAAS,MAAS;AAAA,EAAA;AAAA,EAG9B,6BAA6BF,GAAoD;AACzE,WAAA,IAAIe,EAA4Cf,GAAM,IAAI;AAAA,EAAA;AAAA,EAGlE,MAAM,KAAKgB,GAAgB;AAC1B,SAAK,WAAW,GACX,KAAA,eAAeC,GAAsB,CAACC,MAAY;AACjD,WAAA;AAAA,QACJA,GAAS;AAAA,QACT,CAACC,MAAU;AACV,cAAIA,GAAO;AACV,kBAAMC,IAAgBD,EAAM,KAAK,CAACX,MAAgCA,EAAE,QAAQQ,CAAM;AAClF,gBAAII,GAAe;AACb,mBAAAlB,GAAM,SAASkB,CAAa;AACjC;AAAA,YAAA;AAAA,UACD;AAGI,eAAAlB,GAAM,SAAS,MAAS;AAAA,QAC9B;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA;AAAA,EAAA;AAAA,EAGF,MAAM,SAAS;AACd,SAAK,WAAW;AAChB,QAAIE,IAAiC;AAAA,MACpC,KAAKiB,EAAM,IAAI;AAAA,MACf,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,oBAAoB,CAAA;AAAA,IACrB;AAGA,IAAI,KAAK,iBACRjB,IAAO,EAAE,GAAGA,GAAM,GAAG,KAAK,aAAa,KAAK,OAAO,IAGpD,KAAK,SAAS,EAAI,GACb,KAAAF,GAAM,SAASE,CAAI;AAAA,EAAA;AAAA,EAGzB,UAAU;AACF,WAAA,KAAKF,GAAM,SAAS;AAAA,EAAA;AAAA,EAG5B,YAAY;AACJ,WAAA,KAAK,UAAW;AAAA,EAAA;AAAA,EAGxB,gBAAgB;AACf,WAAO,KAAKO;AAAA,EAAA;AAAA,EAGb,UAAU;AACF,WAAA,KAAKP,GAAM,SAAA,GAAY;AAAA,EAAA;AAAA;AAAA;AAAA,EAK/B,QAAQoB,GAA0B;AAC3B,UAAA,IAAI,MAAM,uCAAuC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASxD,MAAM,qBAA2CC,GAA+C;AAC/F,WAAO,KAAKrB,GAAM,iBAAiB,CAACE,MAASA,IAAOmB,CAA+C,CAAe;AAAA,EAAA;AAAA,EAGnH,iBAAuCA,GAA+C;AACrF,WAAO,KAAKrB,GAAM,SAAS,IAAIqB,CAA+C;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU/E,MAAM,iBAAiBC,GAAeL,GAAgB;AAC/C,UAAAM,IAAc,KAAKvB,GAAM;AAC/B,IAAIuB,KACE,KAAAvB,GAAM,OAAO,EAAE,GAAGuB,GAAa,CAACD,CAAK,GAAGL,GAAO;AAAA,EACrD;AAAA,EAGD,MAAM,SAAS;AACV,QAAA,CAAC,KAAKjB,GAAM;AACT,YAAA,IAAI,MAAM,oBAAoB;AAGrC,UAAMgB,IAAU,MAAM,KAAK,WAAWD,CAAoB;AAC1D,QAAI,CAACC;AACE,YAAA,IAAI,MAAM,6BAA6B;AAI9C,IAAAA,EAAQ,SAASQ,EAAoBR,EAAQ,cAAc,CAAC,GAAG,KAAKhB,GAAM,YAAY,CAACM,MAAMA,GAAG,GAAG,CAAC,GAEpG,KAAK,SAAS,EAAK;AAAA,EAAA;AAAA,EAGJ,UAAgB;AAC/B,SAAKN,GAAM,QAAQ,GACnB,MAAM,QAAQ;AAAA,EAAA;AAEhB;AAIO,MAAMyB,IAA6C,IAAIC;AAAA,EAI7D;AAAA,EACA;AAAA,EACA,CAACV,MACCA,EAAgB;AACnB;"}