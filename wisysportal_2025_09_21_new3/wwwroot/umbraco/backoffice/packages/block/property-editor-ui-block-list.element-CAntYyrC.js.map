{"version":3,"file":"property-editor-ui-block-list.element-CAntYyrC.js","sources":["../../../src/packages/block/block-list/context/block-list-manager.context.ts","../../../src/packages/block/block-list/context/block-list-entries.context.ts","../../../src/packages/block/block-list/context/block-list-entry.context.ts","../../../src/packages/block/block-list/components/ref-list-block/ref-list-block.element.ts","../../../src/packages/block/block/workspace/views/edit/block-workspace-view-edit-content-no-router.element.ts","../../../src/packages/block/block-list/components/inline-list-block/inline-list-block.element.ts","../../../src/packages/block/block-list/components/unsupported-list-block/unsupported-list-block.element.ts","../../../src/packages/block/block-list/components/block-list-entry/block-list-entry.element.ts","../../../src/packages/block/block-list/property-editors/block-list-editor/property-editor-ui-block-list.element.ts"],"sourcesContent":["import type { UmbBlockListLayoutModel, UmbBlockListTypeModel } from '../types.js';\r\nimport type { UmbBlockListWorkspaceOriginData } from '../index.js';\r\nimport type { UmbBlockDataModel } from '../../block/types.js';\r\nimport { UmbBooleanState } from '@umbraco-cms/backoffice/observable-api';\r\nimport { UmbBlockManagerContext } from '@umbraco-cms/backoffice/block';\r\n\r\n/**\r\n * A implementation of the Block Manager specifically for the Block List Editor.\r\n */\r\nexport class UmbBlockListManagerContext<\r\n\tBlockLayoutType extends UmbBlockListLayoutModel = UmbBlockListLayoutModel,\r\n> extends UmbBlockManagerContext<UmbBlockListTypeModel, BlockLayoutType, UmbBlockListWorkspaceOriginData> {\r\n\t//\r\n\t#inlineEditingMode = new UmbBooleanState(undefined);\r\n\treadonly inlineEditingMode = this.#inlineEditingMode.asObservable();\r\n\r\n\tsetInlineEditingMode(inlineEditingMode: boolean | undefined) {\r\n\t\tthis.#inlineEditingMode.setValue(inlineEditingMode ?? false);\r\n\t}\r\n\tgetInlineEditingMode(): boolean | undefined {\r\n\t\treturn this.#inlineEditingMode.getValue();\r\n\t}\r\n\r\n\t/**\r\n\t * @param contentElementTypeKey\r\n\t * @param partialLayoutEntry\r\n\t * @param _originData\r\n\t * @deprecated Use createWithPresets instead. Will be removed in v.17.\r\n\t */\r\n\tcreate(\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\tcontentElementTypeKey: string,\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\tpartialLayoutEntry?: Omit<BlockLayoutType, 'contentKey'>,\r\n\t\t// This property is used by some implementations, but not used in this. Do not remove. [NL]\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\t_originData?: UmbBlockListWorkspaceOriginData,\r\n\t): never {\r\n\t\tthrow new Error('Method deparecated use createWithPresets');\r\n\t}\r\n\tasync createWithPresets(\r\n\t\tcontentElementTypeKey: string,\r\n\t\tpartialLayoutEntry?: Omit<BlockLayoutType, 'contentKey'>,\r\n\t\t// This property is used by some implementations, but not used in this. Do not remove. [NL]\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\t_originData?: UmbBlockListWorkspaceOriginData,\r\n\t) {\r\n\t\treturn await super._createBlockData(contentElementTypeKey, partialLayoutEntry);\r\n\t}\r\n\r\n\tinsert(\r\n\t\tlayoutEntry: BlockLayoutType,\r\n\t\tcontent: UmbBlockDataModel,\r\n\t\tsettings: UmbBlockDataModel | undefined,\r\n\t\toriginData: UmbBlockListWorkspaceOriginData,\r\n\t) {\r\n\t\tthis._layouts.appendOneAt(layoutEntry, originData.index ?? -1);\r\n\r\n\t\tthis.insertBlockData(layoutEntry, content, settings, originData);\r\n\r\n\t\treturn true;\r\n\t}\r\n}\r\n","import type { UmbBlockDataModel } from '../../block/index.js';\r\nimport { UMB_BLOCK_CATALOGUE_MODAL, UmbBlockEntriesContext } from '../../block/index.js';\r\nimport type { UmbBlockListWorkspaceOriginData } from '../index.js';\r\nimport {\r\n\tUMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\tUMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n\tUMB_BLOCK_LIST_WORKSPACE_MODAL,\r\n} from '../index.js';\r\nimport type { UmbBlockListLayoutModel, UmbBlockListTypeModel, UmbBlockListValueModel } from '../types.js';\r\nimport { UMB_BLOCK_LIST_MANAGER_CONTEXT } from './block-list-manager.context-token.js';\r\nimport { UmbBooleanState } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport {\r\n\tUMB_CLIPBOARD_PROPERTY_CONTEXT,\r\n\tUmbClipboardPastePropertyValueTranslatorValueResolver,\r\n} from '@umbraco-cms/backoffice/clipboard';\r\nimport { UMB_PROPERTY_CONTEXT } from '@umbraco-cms/backoffice/property';\r\n\r\nexport class UmbBlockListEntriesContext extends UmbBlockEntriesContext<\r\n\ttypeof UMB_BLOCK_LIST_MANAGER_CONTEXT,\r\n\ttypeof UMB_BLOCK_LIST_MANAGER_CONTEXT.TYPE,\r\n\tUmbBlockListTypeModel,\r\n\tUmbBlockListLayoutModel,\r\n\tUmbBlockListWorkspaceOriginData\r\n> {\r\n\t//\r\n\r\n\t// We will just say its always allowed for list for now: [NL]\r\n\tpublic readonly canCreate = new UmbBooleanState(true).asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_BLOCK_LIST_MANAGER_CONTEXT);\r\n\r\n\t\tnew UmbModalRouteRegistrationController(this, UMB_BLOCK_CATALOGUE_MODAL)\r\n\t\t\t.addAdditionalPath('_catalogue/:view/:index')\r\n\t\t\t.onSetup(async (routingInfo) => {\r\n\t\t\t\tawait this._retrieveManager;\r\n\t\t\t\tif (!this._manager) return false;\r\n\t\t\t\tconst index = routingInfo.index ? parseInt(routingInfo.index) : -1;\r\n\t\t\t\tconst clipboardContext = await this.getContext(UMB_CLIPBOARD_PROPERTY_CONTEXT);\r\n\t\t\t\tif (!clipboardContext) {\r\n\t\t\t\t\tthrow new Error('Clipboard context not found');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pasteTranslatorManifests = clipboardContext.getPasteTranslatorManifests(\r\n\t\t\t\t\tUMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// TODO: consider moving some of this logic to the clipboard property context\r\n\t\t\t\tconst propertyContext = await this.getContext(UMB_PROPERTY_CONTEXT);\r\n\t\t\t\tif (!propertyContext) {\r\n\t\t\t\t\tthrow new Error('Property context not found');\r\n\t\t\t\t}\r\n\t\t\t\tconst config = propertyContext.getConfig();\r\n\t\t\t\tconst valueResolver = new UmbClipboardPastePropertyValueTranslatorValueResolver(this);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tblocks: this._manager?.getBlockTypes() ?? [],\r\n\t\t\t\t\t\tblockGroups: [],\r\n\t\t\t\t\t\topenClipboard: routingInfo.view === 'clipboard',\r\n\t\t\t\t\t\tclipboardFilter: async (clipboardEntryDetail) => {\r\n\t\t\t\t\t\t\tconst hasSupportedPasteTranslator = clipboardContext.hasSupportedPasteTranslator(\r\n\t\t\t\t\t\t\t\tpasteTranslatorManifests,\r\n\t\t\t\t\t\t\t\tclipboardEntryDetail.values,\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif (!hasSupportedPasteTranslator) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst pasteTranslator = await valueResolver.getPasteTranslator(\r\n\t\t\t\t\t\t\t\tclipboardEntryDetail.values,\r\n\t\t\t\t\t\t\t\tUMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif (pasteTranslator.isCompatibleValue) {\r\n\t\t\t\t\t\t\t\tconst value = await valueResolver.resolve(\r\n\t\t\t\t\t\t\t\t\tclipboardEntryDetail.values,\r\n\t\t\t\t\t\t\t\t\tUMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\treturn pasteTranslator.isCompatibleValue(value, config);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\toriginData: { index: index },\r\n\t\t\t\t\t\tcreateBlockInWorkspace: this._manager.getInlineEditingMode() === false,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.onSubmit(async (value, data) => {\r\n\t\t\t\tif (value?.create && data) {\r\n\t\t\t\t\tconst created = await this.create(\r\n\t\t\t\t\t\tvalue.create.contentElementTypeKey,\r\n\t\t\t\t\t\t{},\r\n\t\t\t\t\t\tdata.originData as UmbBlockListWorkspaceOriginData,\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (created) {\r\n\t\t\t\t\t\tthis.insert(\r\n\t\t\t\t\t\t\tcreated.layout,\r\n\t\t\t\t\t\t\tcreated.content,\r\n\t\t\t\t\t\t\tcreated.settings,\r\n\t\t\t\t\t\t\tdata.originData as UmbBlockListWorkspaceOriginData,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('Failed to create block');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value?.clipboard && value.clipboard.selection?.length && data) {\r\n\t\t\t\t\tconst clipboardContext = await this.getContext(UMB_CLIPBOARD_PROPERTY_CONTEXT);\r\n\t\t\t\t\tif (!clipboardContext) {\r\n\t\t\t\t\t\tthrow new Error('Clipboard context not found');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst propertyValues = await clipboardContext.readMultiple<UmbBlockListValueModel>(\r\n\t\t\t\t\t\tvalue.clipboard.selection,\r\n\t\t\t\t\t\tUMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis._insertFromPropertyValues(propertyValues, data.originData as UmbBlockListWorkspaceOriginData);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tthis._catalogueRouteBuilderState.setValue(routeBuilder);\r\n\t\t\t});\r\n\r\n\t\tnew UmbModalRouteRegistrationController(this, UMB_BLOCK_LIST_WORKSPACE_MODAL)\r\n\t\t\t.addAdditionalPath('block')\r\n\t\t\t.onSetup(() => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: { entityType: 'block', preset: {}, baseDataPath: this._dataPath },\r\n\t\t\t\t\tmodal: { size: 'medium' },\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tconst newPath = routeBuilder({});\r\n\t\t\t\tthis._workspacePath.setValue(newPath);\r\n\t\t\t});\r\n\t}\r\n\r\n\tprotected _gotBlockManager() {\r\n\t\tif (!this._manager) return;\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis._manager.layouts,\r\n\t\t\t(layouts) => {\r\n\t\t\t\tthis._layoutEntries.setValue(layouts);\r\n\t\t\t},\r\n\t\t\t'observeParentLayouts',\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.layoutEntries,\r\n\t\t\t(layouts) => {\r\n\t\t\t\tthis._manager?.setLayouts(layouts);\r\n\t\t\t},\r\n\t\t\t'observeThisLayouts',\r\n\t\t);\r\n\t}\r\n\r\n\tgetPathForCreateBlock(index: number) {\r\n\t\treturn this._catalogueRouteBuilderState.getValue()?.({ view: 'create', index: index });\r\n\t}\r\n\r\n\tgetPathForClipboard(index: number) {\r\n\t\treturn this._catalogueRouteBuilderState.getValue()?.({ view: 'clipboard', index: index });\r\n\t}\r\n\r\n\toverride async setLayouts(layouts: Array<UmbBlockListLayoutModel>) {\r\n\t\tawait this._retrieveManager;\r\n\t\tthis._manager?.setLayouts(layouts);\r\n\t}\r\n\r\n\tasync create(\r\n\t\tcontentElementTypeKey: string,\r\n\t\tpartialLayoutEntry?: Omit<UmbBlockListLayoutModel, 'contentKey'>,\r\n\t\toriginData?: UmbBlockListWorkspaceOriginData,\r\n\t) {\r\n\t\tawait this._retrieveManager;\r\n\t\treturn await this._manager?.createWithPresets(contentElementTypeKey, partialLayoutEntry, originData);\r\n\t}\r\n\r\n\t// insert Block?\r\n\r\n\tasync insert(\r\n\t\tlayoutEntry: UmbBlockListLayoutModel,\r\n\t\tcontent: UmbBlockDataModel,\r\n\t\tsettings: UmbBlockDataModel | undefined,\r\n\t\toriginData: UmbBlockListWorkspaceOriginData,\r\n\t) {\r\n\t\tawait this._retrieveManager;\r\n\r\n\t\treturn this._manager?.insert(layoutEntry, content, settings, originData) ?? false;\r\n\t}\r\n\r\n\tprotected async _insertFromPropertyValue(value: UmbBlockListValueModel, originData: UmbBlockListWorkspaceOriginData) {\r\n\t\tconst layoutEntries = value.layout[UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS];\r\n\r\n\t\tif (!layoutEntries) {\r\n\t\t\tthrow new Error('No layout entries found');\r\n\t\t}\r\n\r\n\t\tawait Promise.all(\r\n\t\t\tlayoutEntries.map(async (layoutEntry) => {\r\n\t\t\t\tthis._insertBlockFromPropertyValue(layoutEntry, value, originData);\r\n\t\t\t\tif (originData.index !== -1) {\r\n\t\t\t\t\toriginData = { ...originData, index: originData.index + 1 };\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\treturn originData;\r\n\t}\r\n}\r\n","import { UMB_BLOCK_LIST_MANAGER_CONTEXT } from './block-list-manager.context-token.js';\r\nimport { UMB_BLOCK_LIST_ENTRIES_CONTEXT } from './block-list-entries.context-token.js';\r\nimport { UmbBlockEntryContext } from '@umbraco-cms/backoffice/block';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbBooleanState, mergeObservables } from '@umbraco-cms/backoffice/observable-api';\r\nexport class UmbBlockListEntryContext extends UmbBlockEntryContext<\r\n\ttypeof UMB_BLOCK_LIST_MANAGER_CONTEXT,\r\n\ttypeof UMB_BLOCK_LIST_MANAGER_CONTEXT.TYPE,\r\n\ttypeof UMB_BLOCK_LIST_ENTRIES_CONTEXT,\r\n\ttypeof UMB_BLOCK_LIST_ENTRIES_CONTEXT.TYPE\r\n> {\r\n\t#inlineEditingMode = new UmbBooleanState(undefined);\r\n\treadonly inlineEditingMode = this.#inlineEditingMode.asObservable();\r\n\treadonly forceHideContentEditorInOverlay = this._blockType.asObservablePart((x) =>\r\n\t\tx ? (x.forceHideContentEditorInOverlay ?? false) : undefined,\r\n\t);\r\n\r\n\treadonly showContentEdit = mergeObservables(\r\n\t\t[this._contentStructureHasProperties, this.forceHideContentEditorInOverlay, this.inlineEditingMode],\r\n\t\t([a, b, c]): boolean => {\r\n\t\t\treturn a === true && b === false && c === false;\r\n\t\t},\r\n\t);\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_BLOCK_LIST_MANAGER_CONTEXT, UMB_BLOCK_LIST_ENTRIES_CONTEXT);\r\n\t}\r\n\r\n\t_gotManager() {\r\n\t\tthis.observe(\r\n\t\t\tthis._manager?.inlineEditingMode,\r\n\t\t\t(inlineEditingMode) => {\r\n\t\t\t\tthis.#inlineEditingMode.setValue(inlineEditingMode);\r\n\t\t\t},\r\n\t\t\t'observeInlineEditingMode',\r\n\t\t);\r\n\t}\r\n\r\n\t_gotEntries() {}\r\n\r\n\t_gotContentType() {}\r\n}\r\n","import { css, customElement, html, nothing, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbBlockDataType } from '@umbraco-cms/backoffice/block';\r\n\r\nimport '@umbraco-cms/backoffice/ufm';\r\nimport type { UmbBlockEditorCustomViewConfiguration } from '@umbraco-cms/backoffice/block-custom-view';\r\n\r\n@customElement('umb-ref-list-block')\r\nexport class UmbRefListBlockElement extends UmbLitElement {\r\n\t//\r\n\t@property({ type: String, reflect: false })\r\n\tlabel?: string;\r\n\r\n\t@property({ type: String, reflect: false })\r\n\ticon?: string;\r\n\r\n\t@property({ type: Boolean, reflect: true })\r\n\tunpublished?: boolean;\r\n\r\n\t@property({ attribute: false })\r\n\tcontent?: UmbBlockDataType;\r\n\r\n\t@property({ attribute: false })\r\n\tconfig?: UmbBlockEditorCustomViewConfiguration;\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-ref-node standalone href=${(this.config?.showContentEdit ? this.config?.editContentPath : undefined) ?? ''}>\r\n\t\t\t\t<umb-icon slot=\"icon\" .name=${this.icon}></umb-icon>\r\n\t\t\t\t<umb-ufm-render slot=\"name\" inline .markdown=${this.label} .value=${this.content}></umb-ufm-render>\r\n\t\t\t\t${this.unpublished\r\n\t\t\t\t\t? html`<uui-tag slot=\"name\" look=\"secondary\" title=${this.localize.term('blockEditor_notExposedDescription')}\r\n\t\t\t\t\t\t\t><umb-localize key=\"blockEditor_notExposedLabel\"></umb-localize\r\n\t\t\t\t\t\t></uui-tag>`\r\n\t\t\t\t\t: nothing}\r\n\t\t\t</uui-ref-node>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\tuui-ref-node {\r\n\t\t\t\tmin-height: var(--uui-size-16);\r\n\t\t\t}\r\n\t\t\tuui-tag {\r\n\t\t\t\tmargin-left: 0.5em;\r\n\t\t\t\tmargin-bottom: -0.3em;\r\n\t\t\t\tmargin-top: -0.3em;\r\n\t\t\t\tvertical-align: text-top;\r\n\t\t\t}\r\n\t\t\t:host([unpublished]) umb-icon,\r\n\t\t\t:host([unpublished]) umb-ufm-render {\r\n\t\t\t\topacity: 0.6;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbRefListBlockElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-ref-list-block': UmbRefListBlockElement;\r\n\t}\r\n}\r\n","import { UMB_BLOCK_WORKSPACE_CONTEXT } from '../../block-workspace.context-token.js';\r\nimport './block-workspace-view-edit-tab.element.js';\r\nimport { css, html, customElement, state, repeat, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbContentTypeContainerStructureHelper } from '@umbraco-cms/backoffice/content-type';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbPropertyTypeContainerModel } from '@umbraco-cms/backoffice/content-type';\r\nimport type { UmbWorkspaceViewElement } from '@umbraco-cms/backoffice/workspace';\r\n\r\n/**\r\n * @element umb-block-workspace-view-edit-content-no-router\r\n * @description\r\n * A specific view for editing content in a block workspace placed inline within a block view/element.\r\n */\r\n@customElement('umb-block-workspace-view-edit-content-no-router')\r\nexport class UmbBlockWorkspaceViewEditContentNoRouterElement extends UmbLitElement implements UmbWorkspaceViewElement {\r\n\t//private _hasRootProperties = false;\r\n\r\n\t@state()\r\n\tprivate _hasRootGroups = false;\r\n\r\n\t@state()\r\n\t_tabs?: Array<UmbPropertyTypeContainerModel>;\r\n\r\n\t@state()\r\n\tprivate _activeTabId?: string | null | undefined;\r\n\r\n\t//@state()\r\n\t//private _activeTabName?: string | null | undefined;\r\n\r\n\t#blockWorkspace?: typeof UMB_BLOCK_WORKSPACE_CONTEXT.TYPE;\r\n\t#tabsStructureHelper = new UmbContentTypeContainerStructureHelper(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#tabsStructureHelper.setIsRoot(true);\r\n\t\tthis.#tabsStructureHelper.setContainerChildType('Tab');\r\n\t\tthis.observe(this.#tabsStructureHelper.mergedContainers, (tabs) => {\r\n\t\t\tthis._tabs = tabs;\r\n\t\t\tthis.#checkDefaultTabName();\r\n\t\t});\r\n\r\n\t\t// _hasRootProperties can be gotten via _tabsStructureHelper.hasProperties. But we do not support root properties currently.\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis.#blockWorkspace = context;\r\n\t\t\tthis.#tabsStructureHelper.setStructureManager(context?.content.structure);\r\n\r\n\t\t\tthis.#observeRootGroups();\r\n\t\t});\r\n\t}\r\n\r\n\tasync #observeRootGroups() {\r\n\t\tif (!this.#blockWorkspace) return;\r\n\r\n\t\tthis.observe(\r\n\t\t\tawait this.#blockWorkspace.content.structure.hasRootContainers('Group'),\r\n\t\t\t(hasRootGroups) => {\r\n\t\t\t\tthis._hasRootGroups = hasRootGroups;\r\n\t\t\t\tthis.#checkDefaultTabName();\r\n\t\t\t},\r\n\t\t\t'observeGroups',\r\n\t\t);\r\n\t}\r\n\r\n\t#checkDefaultTabName() {\r\n\t\tif (!this._tabs || !this.#blockWorkspace) return;\r\n\r\n\t\t// Find the default tab to grab:\r\n\t\tif (this._activeTabId === undefined) {\r\n\t\t\tif (this._hasRootGroups) {\r\n\t\t\t\t//this._activeTabName = null;\r\n\t\t\t\tthis._activeTabId = null;\r\n\t\t\t} else if (this._tabs.length > 0) {\r\n\t\t\t\t//this._activeTabName = this._tabs[0].name;\r\n\t\t\t\tthis._activeTabId = this._tabs[0].id;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#setTabName(tabName: string | undefined | null, tabId: string | null | undefined) {\r\n\t\t//this._activeTabName = tabName;\r\n\t\tthis._activeTabId = tabId;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (!this._tabs) return;\r\n\t\treturn html`\r\n\t\t\t${this._tabs.length > 1 || (this._tabs.length === 1 && this._hasRootGroups)\r\n\t\t\t\t? html` <uui-tab-group slot=\"header\">\r\n\t\t\t\t\t\t${this._hasRootGroups && this._tabs.length > 0\r\n\t\t\t\t\t\t\t? html`\r\n\t\t\t\t\t\t\t\t\t<uui-tab\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Content\"\r\n\t\t\t\t\t\t\t\t\t\t.active=${null === this._activeTabId}\r\n\t\t\t\t\t\t\t\t\t\t@click=${() => this.#setTabName(null, null)}\r\n\t\t\t\t\t\t\t\t\t\t>Content</uui-tab\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t`\r\n\t\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tthis._tabs,\r\n\t\t\t\t\t\t\t(tab) => tab.name,\r\n\t\t\t\t\t\t\t(tab) => {\r\n\t\t\t\t\t\t\t\treturn html`<uui-tab\r\n\t\t\t\t\t\t\t\t\tlabel=${tab.name ?? 'Unnamed'}\r\n\t\t\t\t\t\t\t\t\t.active=${tab.id === this._activeTabId}\r\n\t\t\t\t\t\t\t\t\t@click=${() => this.#setTabName(tab.name, tab.id)}\r\n\t\t\t\t\t\t\t\t\t>${tab.name}</uui-tab\r\n\t\t\t\t\t\t\t\t>`;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</uui-tab-group>`\r\n\t\t\t\t: nothing}\r\n\t\t\t${this._activeTabId !== undefined\r\n\t\t\t\t? html`<umb-block-workspace-view-edit-tab\r\n\t\t\t\t\t\t.managerName=${'content'}\r\n\t\t\t\t\t\t.hideSingleGroup=${true}\r\n\t\t\t\t\t\t.containerId=${this._activeTabId}>\r\n\t\t\t\t\t</umb-block-workspace-view-edit-tab>`\r\n\t\t\t\t: nothing}\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\t--uui-tab-background: var(--uui-color-surface);\r\n\r\n\t\t\t\tpadding: calc(var(--uui-size-layout-1));\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbBlockWorkspaceViewEditContentNoRouterElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-block-workspace-view-edit-content-no-router': UmbBlockWorkspaceViewEditContentNoRouterElement;\r\n\t}\r\n}\r\n","import { UMB_BLOCK_LIST_ENTRY_CONTEXT } from '../../context/index.js';\r\nimport {\r\n\tUMB_BLOCK_WORKSPACE_ALIAS,\r\n\ttype UmbBlockDataType,\r\n\ttype UMB_BLOCK_WORKSPACE_CONTEXT,\r\n} from '@umbraco-cms/backoffice/block';\r\nimport {\r\n\tUmbExtensionApiInitializer,\r\n\tUmbExtensionsApiInitializer,\r\n\ttype UmbApiConstructorArgumentsMethodType,\r\n} from '@umbraco-cms/backoffice/extension-api';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { css, customElement, html, nothing, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\n\r\nimport '../../../block/workspace/views/edit/block-workspace-view-edit-content-no-router.element.js';\r\nimport { UmbLanguageItemRepository } from '@umbraco-cms/backoffice/language';\r\n\r\nconst apiArgsCreator: UmbApiConstructorArgumentsMethodType<unknown> = (manifest: unknown) => {\r\n\treturn [{ manifest }];\r\n};\r\n\r\n/**\r\n * @element umb-inline-list-block\r\n */\r\n@customElement('umb-inline-list-block')\r\nexport class UmbInlineListBlockElement extends UmbLitElement {\r\n\t#blockContext?: typeof UMB_BLOCK_LIST_ENTRY_CONTEXT.TYPE;\r\n\t#workspaceContext?: typeof UMB_BLOCK_WORKSPACE_CONTEXT.TYPE;\r\n\t#contentKey?: string;\r\n\r\n\t@property({ type: String, reflect: false })\r\n\tlabel?: string;\r\n\r\n\t@property({ type: String, reflect: false })\r\n\ticon?: string;\r\n\r\n\t@property({ type: Boolean, reflect: true })\r\n\tunpublished?: boolean;\r\n\r\n\t@property({ attribute: false })\r\n\tcontent?: UmbBlockDataType;\r\n\r\n\t@state()\r\n\tprivate _exposed?: boolean;\r\n\r\n\t@state()\r\n\t_isOpen = false;\r\n\r\n\t@state()\r\n\tprivate _ownerContentTypeName?: string;\r\n\r\n\t@state()\r\n\tprivate _variantName?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_LIST_ENTRY_CONTEXT, (blockContext) => {\r\n\t\t\tthis.#blockContext = blockContext;\r\n\t\t\tthis.observe(\r\n\t\t\t\tthis.#blockContext?.unique,\r\n\t\t\t\t(contentKey) => {\r\n\t\t\t\t\tthis.#contentKey = contentKey;\r\n\t\t\t\t\tthis.#load();\r\n\t\t\t\t},\r\n\t\t\t\t'observeContentKey',\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tnew UmbExtensionApiInitializer(\r\n\t\t\tthis,\r\n\t\t\tumbExtensionsRegistry,\r\n\t\t\tUMB_BLOCK_WORKSPACE_ALIAS,\r\n\t\t\tapiArgsCreator,\r\n\t\t\t(permitted, ctrl) => {\r\n\t\t\t\tconst context = ctrl.api as typeof UMB_BLOCK_WORKSPACE_CONTEXT.TYPE;\r\n\t\t\t\tif (permitted && context) {\r\n\t\t\t\t\tthis.#workspaceContext = context;\r\n\t\t\t\t\tthis.#workspaceContext.establishLiveSync();\r\n\t\t\t\t\tthis.#load();\r\n\r\n\t\t\t\t\tthis.observe(\r\n\t\t\t\t\t\tthis.#workspaceContext.exposed,\r\n\t\t\t\t\t\t(exposed) => {\r\n\t\t\t\t\t\t\tthis._exposed = exposed;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'observeExposed',\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis.observe(\r\n\t\t\t\t\t\tcontext.content.structure.ownerContentTypeName,\r\n\t\t\t\t\t\t(name) => {\r\n\t\t\t\t\t\t\tthis._ownerContentTypeName = name;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'observeContentTypeName',\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis.observe(\r\n\t\t\t\t\t\tcontext.variantId,\r\n\t\t\t\t\t\tasync (variantId) => {\r\n\t\t\t\t\t\t\tif (variantId) {\r\n\t\t\t\t\t\t\t\tcontext.content.setup(this, variantId);\r\n\t\t\t\t\t\t\t\t// TODO: Support segment name?\r\n\t\t\t\t\t\t\t\tconst culture = variantId.culture;\r\n\t\t\t\t\t\t\t\tif (culture) {\r\n\t\t\t\t\t\t\t\t\tconst languageRepository = new UmbLanguageItemRepository(this);\r\n\t\t\t\t\t\t\t\t\tconst { data } = await languageRepository.requestItems([culture]);\r\n\t\t\t\t\t\t\t\t\tconst name = data?.[0].name;\r\n\t\t\t\t\t\t\t\t\tthis._variantName = name ? this.localize.string(name) : undefined;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'observeVariant',\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tnew UmbExtensionsApiInitializer(this, umbExtensionsRegistry, 'workspaceContext', [this.#workspaceContext]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\t#load() {\r\n\t\tif (!this.#workspaceContext || !this.#contentKey) return;\r\n\t\tthis.#workspaceContext.load(this.#contentKey);\r\n\t}\r\n\r\n\t#expose = () => {\r\n\t\tthis.#workspaceContext?.expose();\r\n\t};\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<div id=\"host\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"open-part\"\r\n\t\t\t\t\ttabindex=\"0\"\r\n\t\t\t\t\t@keydown=${(e: KeyboardEvent) => {\r\n\t\t\t\t\t\tif (e.key !== ' ' && e.key !== 'Enter') return;\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tthis._isOpen = !this._isOpen;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t@click=${() => {\r\n\t\t\t\t\t\tthis._isOpen = !this._isOpen;\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<uui-symbol-expand .open=${this._isOpen}></uui-symbol-expand>\r\n\t\t\t\t\t${this.#renderBlockInfo()}\r\n\t\t\t\t\t<slot></slot>\r\n\t\t\t\t\t<slot name=\"tag\"></slot>\r\n\t\t\t\t</button>\r\n\t\t\t\t${this._isOpen === true ? this.#renderInside() : nothing}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderBlockInfo() {\r\n\t\treturn html`\r\n\t\t\t<span id=\"content\">\r\n\t\t\t\t<span id=\"icon\">\r\n\t\t\t\t\t<umb-icon .name=${this.icon}></umb-icon>\r\n\t\t\t\t</span>\r\n\t\t\t\t<div id=\"info\">\r\n\t\t\t\t\t<umb-ufm-render id=\"name\" inline .markdown=${this.label} .value=${this.content}></umb-ufm-render>\r\n\t\t\t\t</div>\r\n\t\t\t</span>\r\n\t\t\t${this.unpublished\r\n\t\t\t\t? html`<uui-tag slot=\"name\" look=\"secondary\" title=${this.localize.term('blockEditor_notExposedDescription')}\r\n\t\t\t\t\t\t><umb-localize key=\"blockEditor_notExposedLabel\"></umb-localize\r\n\t\t\t\t\t></uui-tag>`\r\n\t\t\t\t: nothing}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderInside() {\r\n\t\tif (this._exposed === false) {\r\n\t\t\treturn html`<uui-button id=\"exposeButton\" draggable=\"false\" @click=${this.#expose}\r\n\t\t\t\t><uui-icon name=\"icon-add\"></uui-icon>\r\n\t\t\t\t<umb-localize\r\n\t\t\t\t\tkey=\"blockEditor_createThisFor\"\r\n\t\t\t\t\t.args=${[this._ownerContentTypeName, this._variantName]}></umb-localize\r\n\t\t\t></uui-button>`;\r\n\t\t} else {\r\n\t\t\treturn html`<umb-block-workspace-view-edit-content-no-router\r\n\t\t\t\tdraggable=\"false\"></umb-block-workspace-view-edit-content-no-router>`;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tbackground-color: var(--uui-color-surface);\r\n\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t\ttransition: border-color 80ms;\r\n\r\n\t\t\t\tmin-width: 250px;\r\n\t\t\t}\r\n\r\n\t\t\t#exposeButton {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmin-height: var(--uui-size-16);\r\n\t\t\t}\r\n\r\n\t\t\t#open-part + * {\r\n\t\t\t\tborder-top: 1px solid var(--uui-color-border);\r\n\t\t\t}\r\n\t\t\t:host([disabled]) #open-part {\r\n\t\t\t\tcursor: default;\r\n\t\t\t\ttransition: border-color 80ms;\r\n\t\t\t}\r\n\t\t\t:host(:not([disabled])) #host:has(#open-part:hover) {\r\n\t\t\t\tborder-color: var(--uui-color-border-emphasis);\r\n\t\t\t}\r\n\t\t\t:host(:not([disabled])) #open-part:hover + * {\r\n\t\t\t\tborder-color: var(--uui-color-border-emphasis);\r\n\t\t\t}\r\n\t\t\t:host([disabled]) #host {\r\n\t\t\t\tborder-color: var(--uui-color-disabled-standalone);\r\n\t\t\t}\r\n\r\n\t\t\t:host([unpublished]) #open-part #content {\r\n\t\t\t\topacity: 0.6;\r\n\t\t\t}\r\n\r\n\t\t\tslot[name='tag'] {\r\n\t\t\t\tflex-grow: 1;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\r\n\t\t\tbutton {\r\n\t\t\t\tfont-size: inherit;\r\n\t\t\t\tfont-family: inherit;\r\n\t\t\t\tborder: 0;\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tbackground-color: transparent;\r\n\t\t\t\ttext-align: left;\r\n\t\t\t\tcolor: var(--uui-color-text);\r\n\t\t\t}\r\n\r\n\t\t\t#content {\r\n\t\t\t\talign-self: stretch;\r\n\t\t\t\tline-height: normal;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tposition: relative;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\r\n\t\t\t#open-part {\r\n\t\t\t\tcolor: inherit;\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t\tcursor: pointer;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\ttext-align: left;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: flex-start;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tbackground: none;\r\n\r\n\t\t\t\tmin-height: var(--uui-size-16);\r\n\t\t\t\tpadding: calc(var(--uui-size-2) + 1px);\r\n\t\t\t}\r\n\r\n\t\t\t#icon {\r\n\t\t\t\tfont-size: 1.2em;\r\n\t\t\t\tmargin-left: var(--uui-size-2);\r\n\t\t\t\tmargin-right: var(--uui-size-1);\r\n\t\t\t}\r\n\r\n\t\t\t#info {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: start;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tpadding-left: var(--uui-size-2, 6px);\r\n\t\t\t}\r\n\r\n\t\t\t#name {\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t}\r\n\r\n\t\t\tuui-tag {\r\n\t\t\t\tmargin-left: 0.5em;\r\n\t\t\t\tmargin-bottom: -0.3em;\r\n\t\t\t\tmargin-top: -0.3em;\r\n\t\t\t\tvertical-align: text-top;\r\n\t\t\t}\r\n\r\n\t\t\t:host(:not([disabled])) #open-part:hover #icon {\r\n\t\t\t\tcolor: var(--uui-color-interactive-emphasis);\r\n\t\t\t}\r\n\t\t\t:host(:not([disabled])) #open-part:hover #name {\r\n\t\t\t\tcolor: var(--uui-color-interactive-emphasis);\r\n\t\t\t}\r\n\r\n\t\t\t:host([disabled]) #icon {\r\n\t\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t\t}\r\n\t\t\t:host([disabled]) #name {\r\n\t\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInlineListBlockElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-inline-list-block': UmbInlineListBlockElement;\r\n\t}\r\n}\r\n","import { css, customElement, html } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\n\r\n/**\r\n * @element umb-unsupported-list-block\r\n */\r\n@customElement('umb-unsupported-list-block')\r\nexport class UmbUnsupportedListBlockElement extends UmbLitElement {\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<div id=\"host\">\r\n\t\t\t\t<div id=\"open-part\">\r\n\t\t\t\t\t${this.#renderBlockInfo()}\r\n\t\t\t\t\t<slot></slot>\r\n\t\t\t\t\t<slot name=\"tag\"></slot>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"inside\" draggable=\"false\">${this.localize.term('blockEditor_unsupportedBlockDescription')}</div>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderBlockInfo() {\r\n\t\treturn html`\r\n\t\t\t<span id=\"content\">\r\n\t\t\t\t<span id=\"icon\">\r\n\t\t\t\t\t<umb-icon name=\"icon-alert\"></umb-icon>\r\n\t\t\t\t</span>\r\n\t\t\t\t<div id=\"info\">\r\n\t\t\t\t\t<span id=\"name\">${this.localize.term('blockEditor_unsupportedBlockName')}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</span>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tbackground-color: var(--uui-color-surface);\r\n\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t\ttransition: border-color 80ms;\r\n\r\n\t\t\t\tmin-width: 250px;\r\n\t\t\t}\r\n\r\n\t\t\t#open-part + * {\r\n\t\t\t\tborder-top: 1px solid var(--uui-color-border);\r\n\t\t\t}\r\n\t\t\t:host([disabled]) #open-part {\r\n\t\t\t\tcursor: default;\r\n\t\t\t\ttransition: border-color 80ms;\r\n\t\t\t}\r\n\t\t\t:host([disabled]) #host {\r\n\t\t\t\tborder-color: var(--uui-color-disabled-standalone);\r\n\t\t\t}\r\n\r\n\t\t\t:host([unpublished]) #open-part #content {\r\n\t\t\t\topacity: 0.6;\r\n\t\t\t}\r\n\r\n\t\t\tslot[name='tag'] {\r\n\t\t\t\tflex-grow: 1;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\r\n\t\t\tbutton {\r\n\t\t\t\tfont-size: inherit;\r\n\t\t\t\tfont-family: inherit;\r\n\t\t\t\tborder: 0;\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tbackground-color: transparent;\r\n\t\t\t\ttext-align: left;\r\n\t\t\t\tcolor: var(--uui-color-text);\r\n\t\t\t}\r\n\r\n\t\t\t#content {\r\n\t\t\t\talign-self: stretch;\r\n\t\t\t\tline-height: normal;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tposition: relative;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\r\n\t\t\t#open-part {\r\n\t\t\t\tcolor: inherit;\r\n\t\t\t\ttext-decoration: none;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\ttext-align: left;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: flex-start;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tbackground: none;\r\n\r\n\t\t\t\tmin-height: var(--uui-size-16);\r\n\t\t\t\tpadding: calc(var(--uui-size-2) + 1px);\r\n\t\t\t}\r\n\r\n\t\t\t#icon {\r\n\t\t\t\tfont-size: 1.2em;\r\n\t\t\t\tmargin-left: var(--uui-size-2);\r\n\t\t\t\tmargin-right: var(--uui-size-1);\r\n\t\t\t}\r\n\r\n\t\t\t#info {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: start;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tpadding-left: var(--uui-size-2, 6px);\r\n\t\t\t}\r\n\r\n\t\t\t#name {\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t}\r\n\r\n\t\t\tuui-tag {\r\n\t\t\t\tmargin-left: 0.5em;\r\n\t\t\t\tmargin-bottom: -0.3em;\r\n\t\t\t\tmargin-top: -0.3em;\r\n\t\t\t\tvertical-align: text-top;\r\n\t\t\t}\r\n\r\n\t\t\t:host([disabled]) #icon {\r\n\t\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t\t}\r\n\t\t\t:host([disabled]) #name {\r\n\t\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t\t}\r\n\r\n\t\t\t#inside {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tpadding: calc(var(--uui-size-layout-1));\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbUnsupportedListBlockElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-unsupported-list-block': UmbUnsupportedListBlockElement;\r\n\t}\r\n}\r\n","import { UmbBlockListEntryContext } from '../../context/block-list-entry.context.js';\r\nimport type { UmbBlockListLayoutModel, UmbBlockListValueModel } from '../../types.js';\r\nimport {\r\n\tUMB_BLOCK_LIST,\r\n\tUMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS,\r\n\tUMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n} from '../../constants.js';\r\nimport { UmbLitElement, umbDestroyOnDisconnect } from '@umbraco-cms/backoffice/lit-element';\r\nimport { html, css, customElement, property, state, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/property-editor';\r\nimport { stringOrStringArrayContains } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbObserveValidationStateController } from '@umbraco-cms/backoffice/validation';\r\nimport { UmbDataPathBlockElementDataQuery } from '@umbraco-cms/backoffice/block';\r\nimport type {\r\n\tManifestBlockEditorCustomView,\r\n\tUmbBlockEditorCustomViewProperties,\r\n} from '@umbraco-cms/backoffice/block-custom-view';\r\nimport type { UmbExtensionElementInitializer } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UUIBlinkAnimationValue, UUIBlinkKeyframes } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UMB_PROPERTY_CONTEXT, UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport { UMB_CLIPBOARD_PROPERTY_CONTEXT } from '@umbraco-cms/backoffice/clipboard';\r\n\r\nimport '../ref-list-block/index.js';\r\nimport '../inline-list-block/index.js';\r\nimport '../unsupported-list-block/index.js';\r\n/**\r\n * @element umb-block-list-entry\r\n */\r\n@customElement('umb-block-list-entry')\r\nexport class UmbBlockListEntryElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n\t//\r\n\t@property({ type: Number })\r\n\tpublic get index(): number | undefined {\r\n\t\treturn this.#context.getIndex();\r\n\t}\r\n\tpublic set index(value: number | undefined) {\r\n\t\tthis.#context.setIndex(value);\r\n\t}\r\n\r\n\t@property({ attribute: false })\r\n\tpublic get contentKey(): string | undefined {\r\n\t\treturn this._contentKey;\r\n\t}\r\n\tpublic set contentKey(value: string | undefined) {\r\n\t\tif (!value) return;\r\n\t\tthis._contentKey = value;\r\n\t\tthis.#context.setContentKey(value);\r\n\r\n\t\tnew UmbObserveValidationStateController(\r\n\t\t\tthis,\r\n\t\t\t`$.contentData[${UmbDataPathBlockElementDataQuery({ key: value })}]`,\r\n\t\t\t(hasMessages) => {\r\n\t\t\t\tthis._contentInvalid = hasMessages;\r\n\t\t\t\tthis._blockViewProps.contentInvalid = hasMessages;\r\n\t\t\t},\r\n\t\t\t'observeMessagesForContent',\r\n\t\t);\r\n\t}\r\n\tprivate _contentKey?: string | undefined;\r\n\r\n\t#context = new UmbBlockListEntryContext(this);\r\n\r\n\t@state()\r\n\t_contentTypeAlias?: string;\r\n\r\n\t@state()\r\n\t_contentTypeName?: string;\r\n\r\n\t@state()\r\n\t_showContentEdit = false;\r\n\r\n\t@state()\r\n\t_hasSettings = false;\r\n\r\n\t@state()\r\n\t_label = '';\r\n\r\n\t@state()\r\n\t_icon?: string;\r\n\r\n\t@state()\r\n\t_exposed?: boolean;\r\n\r\n\t@state()\r\n\t_unsupported?: boolean;\r\n\r\n\t@state()\r\n\t_showActions?: boolean;\r\n\r\n\t@state()\r\n\t_workspaceEditContentPath?: string;\r\n\r\n\t@state()\r\n\t_workspaceEditSettingsPath?: string;\r\n\r\n\t@state()\r\n\t_inlineEditingMode?: boolean;\r\n\r\n\t// 'content-invalid' attribute is used for styling purpose.\r\n\t@property({ type: Boolean, attribute: 'content-invalid', reflect: true })\r\n\t_contentInvalid?: boolean;\r\n\r\n\t// 'settings-invalid' attribute is used for styling purpose.\r\n\t@property({ type: Boolean, attribute: 'settings-invalid', reflect: true })\r\n\t_settingsInvalid?: boolean;\r\n\r\n\t@state()\r\n\t_blockViewProps: UmbBlockEditorCustomViewProperties<UmbBlockListLayoutModel> = {\r\n\t\tcontentKey: undefined!,\r\n\t\tconfig: { showContentEdit: false, showSettingsEdit: false },\r\n\t}; // Set to undefined cause it will be set before we render.\r\n\r\n\t#updateBlockViewProps(incoming: Partial<UmbBlockEditorCustomViewProperties<UmbBlockListLayoutModel>>) {\r\n\t\tthis._blockViewProps = { ...this._blockViewProps, ...incoming };\r\n\t\tthis.requestUpdate('_blockViewProps');\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _isReadOnly = false;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#init();\r\n\t}\r\n\t#init() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.showContentEdit,\r\n\t\t\t(showContentEdit) => {\r\n\t\t\t\tthis._showContentEdit = showContentEdit;\r\n\t\t\t\tthis.#updateBlockViewProps({ config: { ...this._blockViewProps.config!, showContentEdit } });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.settingsElementTypeKey,\r\n\t\t\t(key) => {\r\n\t\t\t\tthis._hasSettings = !!key;\r\n\t\t\t\tthis.#updateBlockViewProps({ config: { ...this._blockViewProps.config!, showSettingsEdit: !!key } });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.blockType,\r\n\t\t\t(blockType) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ blockType });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\t// TODO: Implement index.\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.label,\r\n\t\t\t(label) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ label });\r\n\t\t\t\tthis._label = label;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.contentElementTypeIcon,\r\n\t\t\t(icon) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ icon });\r\n\t\t\t\tthis._icon = icon;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.hasExpose,\r\n\t\t\t(exposed) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ unpublished: !exposed });\r\n\t\t\t\tthis._exposed = exposed;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.unsupported,\r\n\t\t\t(unsupported) => {\r\n\t\t\t\tif (unsupported === undefined) return;\r\n\t\t\t\tthis.#updateBlockViewProps({ unsupported: unsupported });\r\n\t\t\t\tthis._unsupported = unsupported;\r\n\t\t\t\tthis.toggleAttribute('unsupported', unsupported);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.actionsVisibility,\r\n\t\t\t(showActions) => {\r\n\t\t\t\tthis._showActions = showActions;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.inlineEditingMode,\r\n\t\t\t(mode) => {\r\n\t\t\t\tthis._inlineEditingMode = mode;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\t// Data props:\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.layout,\r\n\t\t\t(layout) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ layout });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.#observeData();\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.settingsKey,\r\n\t\t\t(settingsKey) => {\r\n\t\t\t\tthis.removeUmbControllerByAlias('observeMessagesForSettings');\r\n\t\t\t\tif (settingsKey) {\r\n\t\t\t\t\t// Observe settings validation state:\r\n\t\t\t\t\tnew UmbObserveValidationStateController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t`$.settingsData[${UmbDataPathBlockElementDataQuery({ key: settingsKey })}]`,\r\n\t\t\t\t\t\t(hasMessages) => {\r\n\t\t\t\t\t\t\tthis._settingsInvalid = hasMessages;\r\n\t\t\t\t\t\t\tthis._blockViewProps.settingsInvalid = hasMessages;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'observeMessagesForSettings',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.workspaceEditContentPath,\r\n\t\t\t(path) => {\r\n\t\t\t\tthis._workspaceEditContentPath = path;\r\n\t\t\t\tthis.#updateBlockViewProps({ config: { ...this._blockViewProps.config!, editContentPath: path } });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.workspaceEditSettingsPath,\r\n\t\t\t(path) => {\r\n\t\t\t\tthis._workspaceEditSettingsPath = path;\r\n\t\t\t\tthis.#updateBlockViewProps({ config: { ...this._blockViewProps.config!, editSettingsPath: path } });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.readOnlyGuard.permitted,\r\n\t\t\t(isReadOnly) => (this._isReadOnly = isReadOnly),\r\n\t\t\t'umbReadOnlyObserver',\r\n\t\t);\r\n\t}\r\n\r\n\tasync #observeData() {\r\n\t\tthis.observe(\r\n\t\t\tawait this.#context.contentValues(),\r\n\t\t\t(content) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ content });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tawait this.#context.settingsValues(),\r\n\t\t\t(settings) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ settings });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t}\r\n\r\n\toverride connectedCallback(): void {\r\n\t\tsuper.connectedCallback();\r\n\t\t// element styling:\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.contentElementTypeKey,\r\n\t\t\t(contentElementTypeKey) => {\r\n\t\t\t\tif (contentElementTypeKey) {\r\n\t\t\t\t\tthis.setAttribute('data-content-element-type-key', contentElementTypeKey);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'contentElementTypeKey',\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.contentElementTypeAlias,\r\n\t\t\t(contentElementTypeAlias) => {\r\n\t\t\t\tif (contentElementTypeAlias) {\r\n\t\t\t\t\tthis._contentTypeAlias = contentElementTypeAlias;\r\n\t\t\t\t\tthis.setAttribute('data-content-element-type-alias', contentElementTypeAlias);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'contentElementTypeAlias',\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.contentElementTypeName,\r\n\t\t\t(contentElementTypeName) => {\r\n\t\t\t\tthis._contentTypeName = contentElementTypeName;\r\n\t\t\t},\r\n\t\t\t'contentElementTypeName',\r\n\t\t);\r\n\t}\r\n\r\n\t#expose = () => {\r\n\t\tthis.#context.expose();\r\n\t};\r\n\r\n\tasync #copyToClipboard() {\r\n\t\tconst propertyDatasetContext = await this.getContext(UMB_PROPERTY_DATASET_CONTEXT);\r\n\t\tconst propertyContext = await this.getContext(UMB_PROPERTY_CONTEXT);\r\n\t\tconst clipboardContext = await this.getContext(UMB_CLIPBOARD_PROPERTY_CONTEXT);\r\n\t\tif (!propertyDatasetContext || !propertyContext || !clipboardContext) {\r\n\t\t\tthrow new Error('Could not get required contexts to copy.');\r\n\t\t}\r\n\r\n\t\tconst workspaceName = propertyDatasetContext?.getName();\r\n\t\tconst propertyLabel = propertyContext?.getLabel();\r\n\t\tconst blockLabel = this._label;\r\n\r\n\t\tconst entryName = workspaceName\r\n\t\t\t? `${workspaceName} - ${propertyLabel} - ${blockLabel}`\r\n\t\t\t: `${propertyLabel} - ${blockLabel}`;\r\n\r\n\t\tconst content = this.#context.getContent();\r\n\t\tconst layout = this.#context.getLayout();\r\n\t\tconst settings = this.#context.getSettings();\r\n\t\tconst expose = this.#context.getExpose();\r\n\r\n\t\tconst propertyValue: UmbBlockListValueModel = {\r\n\t\t\tcontentData: content ? [structuredClone(content)] : [],\r\n\t\t\tlayout: {\r\n\t\t\t\t[UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS]: layout ? [structuredClone(layout)] : undefined,\r\n\t\t\t},\r\n\t\t\tsettingsData: settings ? [structuredClone(settings)] : [],\r\n\t\t\texpose: expose ? [structuredClone(expose)] : [],\r\n\t\t};\r\n\r\n\t\tclipboardContext.write({\r\n\t\t\ticon: this._icon,\r\n\t\t\tname: entryName,\r\n\t\t\tpropertyValue,\r\n\t\t\tpropertyEditorUiAlias: UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS,\r\n\t\t});\r\n\t}\r\n\r\n\t#extensionSlotFilterMethod = (manifest: ManifestBlockEditorCustomView) => {\r\n\t\tif (this._unsupported) {\r\n\t\t\t// If the block is unsupported, we should not allow any custom views to render.\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tmanifest.forContentTypeAlias &&\r\n\t\t\t!stringOrStringArrayContains(manifest.forContentTypeAlias, this._contentTypeAlias!)\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (manifest.forBlockEditor && !stringOrStringArrayContains(manifest.forBlockEditor, UMB_BLOCK_LIST)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\t#extensionSlotRenderMethod = (ext: UmbExtensionElementInitializer<ManifestBlockEditorCustomView>) => {\r\n\t\text.component?.setAttribute('part', 'component');\r\n\t\tif (this._exposed) {\r\n\t\t\treturn ext.component;\r\n\t\t} else {\r\n\t\t\treturn html`<div style=\"min-height: var(--uui-size-16);\">\r\n\t\t\t\t${ext.component}\r\n\t\t\t\t<umb-block-overlay-expose-button\r\n\t\t\t\t\t.contentTypeName=${this._contentTypeName}\r\n\t\t\t\t\t@click=${this.#expose}></umb-block-overlay-expose-button>\r\n\t\t\t</div>`;\r\n\t\t}\r\n\t};\r\n\r\n\t#renderRefBlock() {\r\n\t\treturn html`<umb-ref-list-block\r\n\t\t\t.label=${this._label}\r\n\t\t\t.icon=${this._icon}\r\n\t\t\t.unpublished=${!this._exposed}\r\n\t\t\t.config=${this._blockViewProps.config}\r\n\t\t\t.content=${this._blockViewProps.content}\r\n\t\t\t.settings=${this._blockViewProps.settings}\r\n\t\t\t${umbDestroyOnDisconnect()}></umb-ref-list-block>`;\r\n\t}\r\n\r\n\t#renderInlineBlock() {\r\n\t\treturn html`<umb-inline-list-block\r\n\t\t\t.label=${this._label}\r\n\t\t\t.icon=${this._icon}\r\n\t\t\t.unpublished=${!this._exposed}\r\n\t\t\t.config=${this._blockViewProps.config}\r\n\t\t\t.content=${this._blockViewProps.content}\r\n\t\t\t.settings=${this._blockViewProps.settings}\r\n\t\t\t${umbDestroyOnDisconnect()}></umb-inline-list-block>`;\r\n\t}\r\n\r\n\t#renderUnsupportedBlock() {\r\n\t\treturn html`<umb-unsupported-list-block\r\n\t\t\t.config=${this._blockViewProps.config}\r\n\t\t\t.content=${this._blockViewProps.content}\r\n\t\t\t.settings=${this._blockViewProps.settings}\r\n\t\t\t${umbDestroyOnDisconnect()}></umb-unsupported-list-block>`;\r\n\t}\r\n\r\n\t#renderBuiltinBlockView() {\r\n\t\tif (this._unsupported) {\r\n\t\t\treturn this.#renderUnsupportedBlock();\r\n\t\t}\r\n\t\tif (this._inlineEditingMode) {\r\n\t\t\treturn this.#renderInlineBlock();\r\n\t\t}\r\n\t\treturn this.#renderRefBlock();\r\n\t}\r\n\r\n\t#renderBlock() {\r\n\t\treturn this.contentKey && (this._contentTypeAlias || this._unsupported)\r\n\t\t\t? html`\r\n\t\t\t\t\t<div class=\"umb-block-list__block\">\r\n\t\t\t\t\t\t<umb-extension-slot\r\n\t\t\t\t\t\t\ttype=\"blockEditorCustomView\"\r\n\t\t\t\t\t\t\tdefault-element=${this._inlineEditingMode ? 'umb-inline-list-block' : 'umb-ref-list-block'}\r\n\t\t\t\t\t\t\t.renderMethod=${this.#extensionSlotRenderMethod}\r\n\t\t\t\t\t\t\t.props=${this._blockViewProps}\r\n\t\t\t\t\t\t\t.filter=${this.#extensionSlotFilterMethod}\r\n\t\t\t\t\t\t\tsingle\r\n\t\t\t\t\t\t\t>${this.#renderBuiltinBlockView()}</umb-extension-slot\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t${this.#renderActionBar()}\r\n\t\t\t\t\t\t${!this._showContentEdit && this._contentInvalid\r\n\t\t\t\t\t\t\t? html`<uui-badge attention color=\"invalid\" label=\"Invalid content\">!</uui-badge>`\r\n\t\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\t#renderActionBar() {\r\n\t\treturn this._showActions\r\n\t\t\t? html`<uui-action-bar>\r\n\t\t\t\t\t${this.#renderEditContentAction()} ${this.#renderEditSettingsAction()} ${this.#renderCopyToClipboardAction()}\r\n\t\t\t\t\t${this.#renderDeleteAction()}\r\n\t\t\t\t</uui-action-bar>`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\t#renderEditContentAction() {\r\n\t\treturn this._showContentEdit && this._workspaceEditContentPath\r\n\t\t\t? html`<uui-button\r\n\t\t\t\t\tlabel=\"edit\"\r\n\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\tcolor=${this._contentInvalid ? 'invalid' : ''}\r\n\t\t\t\t\thref=${this._workspaceEditContentPath}>\r\n\t\t\t\t\t<uui-icon name=${this._exposed === false && this._isReadOnly === false ? 'icon-add' : 'icon-edit'}></uui-icon>\r\n\t\t\t\t\t${this._contentInvalid\r\n\t\t\t\t\t\t? html`<uui-badge attention color=\"invalid\" label=\"Invalid content\">!</uui-badge>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t</uui-button>`\r\n\t\t\t: this._showContentEdit === false && this._exposed === false\r\n\t\t\t\t? html`<uui-button\r\n\t\t\t\t\t\t@click=${this.#expose}\r\n\t\t\t\t\t\tlabel=${this.localize.term('blockEditor_createThisFor', this._contentTypeName)}\r\n\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\t><uui-icon name=\"icon-add\"></uui-icon\r\n\t\t\t\t\t></uui-button>`\r\n\t\t\t\t: nothing;\r\n\t}\r\n\r\n\t#renderEditSettingsAction() {\r\n\t\treturn html`\r\n\t\t\t${this._hasSettings && this._workspaceEditSettingsPath\r\n\t\t\t\t? html`<uui-button\r\n\t\t\t\t\t\tlabel=\"Edit settings\"\r\n\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\tcolor=${this._settingsInvalid ? 'invalid' : ''}\r\n\t\t\t\t\t\thref=${this._workspaceEditSettingsPath}>\r\n\t\t\t\t\t\t<uui-icon name=\"icon-settings\"></uui-icon>\r\n\t\t\t\t\t\t${this._settingsInvalid\r\n\t\t\t\t\t\t\t? html`<uui-badge attention color=\"invalid\" label=\"Invalid settings\">!</uui-badge>`\r\n\t\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t</uui-button>`\r\n\t\t\t\t: nothing}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderDeleteAction() {\r\n\t\tif (this._isReadOnly) return nothing;\r\n\t\treturn html` <uui-button label=\"delete\" look=\"secondary\" @click=${() => this.#context.requestDelete()}>\r\n\t\t\t<uui-icon name=\"icon-remove\"></uui-icon>\r\n\t\t</uui-button>`;\r\n\t}\r\n\r\n\t#renderCopyToClipboardAction() {\r\n\t\treturn html`<uui-button label=\"Copy to clipboard\" look=\"secondary\" @click=${() => this.#copyToClipboard()}>\r\n\t\t\t<uui-icon name=\"icon-clipboard-copy\"></uui-icon>\r\n\t\t</uui-button>`;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this.#renderBlock();\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUUIBlinkKeyframes,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\t--umb-block-list-entry-actions-opacity: 0;\r\n\t\t\t}\r\n\r\n\t\t\t:host([settings-invalid]),\r\n\t\t\t:host([content-invalid]),\r\n\t\t\t:host(:hover),\r\n\t\t\t:host(:focus-within) {\r\n\t\t\t\t--umb-block-list-entry-actions-opacity: 1;\r\n\t\t\t}\r\n\r\n\t\t\t:host::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t\tpointer-events: none;\r\n\t\t\t\tinset: 0;\r\n\t\t\t\tborder: 1px solid transparent;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\r\n\t\t\t\ttransition: border-color 240ms ease-in;\r\n\t\t\t}\r\n\r\n\t\t\t:host([settings-invalid])::after,\r\n\t\t\t:host([content-invalid])::after {\r\n\t\t\t\tborder-color: var(--uui-color-invalid);\r\n\t\t\t}\r\n\r\n\t\t\tumb-extension-slot::part(component) {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tz-index: 0;\r\n\t\t\t}\r\n\r\n\t\t\tuui-action-bar {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: var(--uui-size-2);\r\n\t\t\t\tright: var(--uui-size-2);\r\n\t\t\t\topacity: var(--umb-block-list-entry-actions-opacity, 0);\r\n\t\t\t\ttransition: opacity 120ms;\r\n\t\t\t}\r\n\r\n\t\t\tuui-badge {\r\n\t\t\t\tz-index: 2;\r\n\t\t\t}\r\n\r\n\t\t\t:host::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t\tpointer-events: none;\r\n\t\t\t\tinset: 0;\r\n\t\t\t\tborder: 1px solid transparent;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\r\n\t\t\t\ttransition: border-color 240ms ease-in;\r\n\t\t\t}\r\n\t\t\t:host(:hover):not(:drop)::after {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tborder-color: var(--uui-color-interactive-emphasis);\r\n\t\t\t\tbox-shadow:\r\n\t\t\t\t\t0 0 0 1px rgba(255, 255, 255, 0.7),\r\n\t\t\t\t\tinset 0 0 0 1px rgba(255, 255, 255, 0.7);\r\n\t\t\t}\r\n\r\n\t\t\t:host([drag-placeholder])::after {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tborder-width: 2px;\r\n\t\t\t\tborder-color: var(--uui-color-interactive-emphasis);\r\n\t\t\t\tanimation: ${UUIBlinkAnimationValue};\r\n\t\t\t}\r\n\t\t\t:host([drag-placeholder])::before {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tpointer-events: none;\r\n\t\t\t\tinset: 0;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tbackground-color: var(--uui-color-interactive-emphasis);\r\n\t\t\t\topacity: 0.12;\r\n\t\t\t}\r\n\t\t\t:host([drag-placeholder]) .umb-block-list__block {\r\n\t\t\t\ttransition: opacity 50ms 16ms;\r\n\t\t\t\topacity: 0;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbBlockListEntryElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-block-list-entry': UmbBlockListEntryElement;\r\n\t}\r\n}\r\n","import { UmbBlockListManagerContext } from '../../context/block-list-manager.context.js';\r\nimport { UmbBlockListEntriesContext } from '../../context/block-list-entries.context.js';\r\nimport type { UmbBlockListLayoutModel, UmbBlockListValueModel } from '../../types.js';\r\nimport type { UmbBlockListEntryElement } from '../../components/block-list-entry/index.js';\r\nimport { UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS } from './constants.js';\r\nimport { UmbLitElement, umbDestroyOnDisconnect } from '@umbraco-cms/backoffice/lit-element';\r\nimport { html, customElement, property, state, repeat, css, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type {\r\n\tUmbPropertyEditorConfigCollection,\r\n\tUmbPropertyEditorUiElement,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\nimport type { UmbNumberRangeValueType } from '@umbraco-cms/backoffice/models';\r\nimport type { UmbModalRouteBuilder } from '@umbraco-cms/backoffice/router';\r\nimport type { UmbSorterConfig } from '@umbraco-cms/backoffice/sorter';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport type { UmbBlockLayoutBaseModel } from '@umbraco-cms/backoffice/block';\r\nimport type { UmbBlockTypeBaseModel } from '@umbraco-cms/backoffice/block-type';\r\n\r\nimport '../../components/block-list-entry/index.js';\r\nimport { UMB_PROPERTY_CONTEXT, UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport {\r\n\textractJsonQueryProps,\r\n\tUMB_VALIDATION_EMPTY_LOCALIZATION_KEY,\r\n\tUmbFormControlMixin,\r\n\tUmbValidationContext,\r\n} from '@umbraco-cms/backoffice/validation';\r\nimport { observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\nimport { debounceTime } from '@umbraco-cms/backoffice/external/rxjs';\r\nimport { UMB_CONTENT_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/content';\r\n\r\nconst SORTER_CONFIG: UmbSorterConfig<UmbBlockListLayoutModel, UmbBlockListEntryElement> = {\r\n\tgetUniqueOfElement: (element) => {\r\n\t\treturn element.contentKey!;\r\n\t},\r\n\tgetUniqueOfModel: (modelEntry) => {\r\n\t\treturn modelEntry.contentKey;\r\n\t},\r\n\t//identifier: 'block-list-editor',\r\n\titemSelector: 'umb-block-list-entry',\r\n\t//containerSelector: 'EMPTY ON PURPOSE, SO IT BECOMES THE HOST ELEMENT',\r\n};\r\n\r\n@customElement('umb-property-editor-ui-block-list')\r\nexport class UmbPropertyEditorUIBlockListElement\r\n\textends UmbFormControlMixin<UmbBlockListValueModel | undefined, typeof UmbLitElement, undefined>(UmbLitElement)\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\treadonly #sorter = new UmbSorterController<UmbBlockListLayoutModel, UmbBlockListEntryElement>(this, {\r\n\t\t...SORTER_CONFIG,\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tthis.#entriesContext.setLayouts(model);\r\n\t\t},\r\n\t});\r\n\r\n\treadonly #validationContext = new UmbValidationContext(this);\r\n\r\n\t#lastValue: UmbBlockListValueModel | undefined = undefined;\r\n\r\n\t@property({ attribute: false })\r\n\tpublic override set value(value: UmbBlockListValueModel | undefined) {\r\n\t\tthis.#lastValue = value;\r\n\r\n\t\tif (!value) {\r\n\t\t\tsuper.value = undefined;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst buildUpValue: Partial<UmbBlockListValueModel> = value ? { ...value } : {};\r\n\t\tbuildUpValue.layout ??= {};\r\n\t\tbuildUpValue.contentData ??= [];\r\n\t\tbuildUpValue.settingsData ??= [];\r\n\t\tbuildUpValue.expose ??= [];\r\n\t\tsuper.value = buildUpValue as UmbBlockListValueModel;\r\n\r\n\t\tthis.#managerContext.setLayouts(super.value.layout[UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS] ?? []);\r\n\t\tthis.#managerContext.setContents(super.value.contentData);\r\n\t\tthis.#managerContext.setSettings(super.value.settingsData);\r\n\t\tthis.#managerContext.setExposes(super.value.expose);\r\n\t}\r\n\tpublic override get value(): UmbBlockListValueModel | undefined {\r\n\t\treturn super.value;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _createButtonLabel = this.localize.term('content_createEmpty');\r\n\r\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n\t\tif (!config) return;\r\n\r\n\t\tconst validationLimit = config.getValueByAlias<UmbNumberRangeValueType>('validationLimit');\r\n\r\n\t\tthis._limitMin = validationLimit?.min;\r\n\t\tthis._limitMax = validationLimit?.max;\r\n\r\n\t\tconst blocks = config.getValueByAlias<Array<UmbBlockTypeBaseModel>>('blocks') ?? [];\r\n\t\tthis.#managerContext.setBlockTypes(blocks);\r\n\r\n\t\tconst useInlineEditingAsDefault = config.getValueByAlias<boolean>('useInlineEditingAsDefault');\r\n\t\tthis.#managerContext.setInlineEditingMode(useInlineEditingAsDefault);\r\n\t\tthis.style.maxWidth = config.getValueByAlias<string>('maxPropertyWidth') ?? '';\r\n\t\t// TODO:\r\n\t\t//config.useSingleBlockMode, not done jet\r\n\r\n\t\tthis.#managerContext.setEditorConfiguration(config);\r\n\r\n\t\tconst customCreateButtonLabel = config.getValueByAlias<string>('createLabel');\r\n\t\tif (customCreateButtonLabel) {\r\n\t\t\tthis._createButtonLabel = this.localize.string(customCreateButtonLabel);\r\n\t\t} else if (blocks.length === 1) {\r\n\t\t\tthis.#managerContext.contentTypesLoaded.then(() => {\r\n\t\t\t\tconst firstContentTypeName = this.#managerContext.getContentTypeNameOf(blocks[0].contentElementTypeKey);\r\n\t\t\t\tthis._createButtonLabel = this.localize.term('blockEditor_addThis', this.localize.string(firstContentTypeName));\r\n\r\n\t\t\t\t// If we are in a invariant context:\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @default\r\n\t */\r\n\tpublic set readonly(value) {\r\n\t\tthis.#readonly = value;\r\n\r\n\t\tif (this.#readonly) {\r\n\t\t\tthis.#sorter.disable();\r\n\t\t\tthis.#managerContext.readOnlyState.fallbackToPermitted();\r\n\t\t} else {\r\n\t\t\tthis.#sorter.enable();\r\n\t\t\tthis.#managerContext.readOnlyState.fallbackToNotPermitted();\r\n\t\t}\r\n\t}\r\n\tpublic get readonly() {\r\n\t\treturn this.#readonly;\r\n\t}\r\n\t#readonly = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tmandatory?: boolean;\r\n\r\n\t@property({ type: String })\r\n\tmandatoryMessage?: string | undefined;\r\n\r\n\t@state()\r\n\tprivate _limitMin?: number;\r\n\t@state()\r\n\tprivate _limitMax?: number;\r\n\r\n\t@state()\r\n\tprivate _blocks?: Array<UmbBlockTypeBaseModel>;\r\n\r\n\t@state()\r\n\tprivate _layouts: Array<UmbBlockLayoutBaseModel> = [];\r\n\r\n\t@state()\r\n\tprivate _catalogueRouteBuilder?: UmbModalRouteBuilder;\r\n\r\n\treadonly #managerContext = new UmbBlockListManagerContext(this);\r\n\treadonly #entriesContext = new UmbBlockListEntriesContext(this);\r\n\r\n\t@state()\r\n\t_notSupportedVariantSetting?: boolean;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_CONTENT_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tif (context) {\r\n\t\t\t\tthis.observe(\r\n\t\t\t\t\tobserveMultiple([\r\n\t\t\t\t\t\tthis.#managerContext.blockTypes,\r\n\t\t\t\t\t\tcontext.structure.variesByCulture,\r\n\t\t\t\t\t\tcontext.structure.variesBySegment,\r\n\t\t\t\t\t]),\r\n\t\t\t\t\tasync ([blockTypes, variesByCulture, variesBySegment]) => {\r\n\t\t\t\t\t\tif (blockTypes.length > 0 && (variesByCulture === false || variesBySegment === false)) {\r\n\t\t\t\t\t\t\t// check if any of the Blocks varyByCulture or Segment and then display a warning.\r\n\t\t\t\t\t\t\tconst promises = await Promise.all(\r\n\t\t\t\t\t\t\t\tblockTypes.map(async (blockType) => {\r\n\t\t\t\t\t\t\t\t\tconst elementType = blockType.contentElementTypeKey;\r\n\t\t\t\t\t\t\t\t\tawait this.#managerContext.contentTypesLoaded;\r\n\t\t\t\t\t\t\t\t\tconst structure = await this.#managerContext.getStructure(elementType);\r\n\t\t\t\t\t\t\t\t\tif (variesByCulture === false && structure?.getVariesByCulture() === true) {\r\n\t\t\t\t\t\t\t\t\t\t// If block varies by culture but document does not.\r\n\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t} else if (variesBySegment === false && structure?.getVariesBySegment() === true) {\r\n\t\t\t\t\t\t\t\t\t\t// If block varies by segment but document does not.\r\n\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tthis._notSupportedVariantSetting = promises.filter((x) => x === true).length > 0;\r\n\r\n\t\t\t\t\t\t\tif (this._notSupportedVariantSetting) {\r\n\t\t\t\t\t\t\t\tthis.#validationContext.messages.addMessage(\r\n\t\t\t\t\t\t\t\t\t'config',\r\n\t\t\t\t\t\t\t\t\t'$',\r\n\t\t\t\t\t\t\t\t\t'#blockEditor_blockVariantConfigurationNotSupported',\r\n\t\t\t\t\t\t\t\t\t'blockConfigurationNotSupported',\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'blockTypeConfigurationCheck',\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.removeUmbControllerByAlias('blockTypeConfigurationCheck');\r\n\t\t\t}\r\n\t\t}).passContextAliasMatches();\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_CONTEXT, (context) => {\r\n\t\t\tthis.#gotPropertyContext(context);\r\n\t\t});\r\n\r\n\t\t// Observe Blocks and clean up validation messages for content/settings that are not in the block list anymore:\r\n\t\tthis.observe(\r\n\t\t\tthis.#managerContext.layouts,\r\n\t\t\t(layouts) => {\r\n\t\t\t\tconst validationMessagesToRemove: string[] = [];\r\n\t\t\t\tconst contentKeys = layouts.map((x) => x.contentKey);\r\n\t\t\t\tthis.#validationContext.messages.getMessagesOfPathAndDescendant('$.contentData').forEach((message) => {\r\n\t\t\t\t\t// get the KEY from this string: $.contentData[?(@.key == 'KEY')]\r\n\t\t\t\t\tconst key = extractJsonQueryProps(message.path).key;\r\n\t\t\t\t\tif (key && contentKeys.indexOf(key) === -1) {\r\n\t\t\t\t\t\tvalidationMessagesToRemove.push(message.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst settingsKeys = layouts.map((x) => x.settingsKey).filter((x) => x !== undefined) as string[];\r\n\t\t\t\tthis.#validationContext.messages.getMessagesOfPathAndDescendant('$.settingsData').forEach((message) => {\r\n\t\t\t\t\t// get the key from this string: $.settingsData[?(@.key == 'KEY')]\r\n\t\t\t\t\tconst key = extractJsonQueryProps(message.path).key;\r\n\t\t\t\t\tif (key && settingsKeys.indexOf(key) === -1) {\r\n\t\t\t\t\t\tvalidationMessagesToRemove.push(message.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Remove the messages after the loop to prevent changing the array while iterating over it.\r\n\t\t\t\tthis.#validationContext.messages.removeMessageByKeys(validationMessagesToRemove);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, async (context) => {\r\n\t\t\tthis.#managerContext.setVariantId(context?.getVariantId());\r\n\t\t});\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeUnderflow',\r\n\t\t\t() =>\r\n\t\t\t\tthis.localize.term(\r\n\t\t\t\t\t'validation_entriesShort',\r\n\t\t\t\t\tthis._limitMin,\r\n\t\t\t\t\t(this._limitMin ?? 0) - this.#entriesContext.getLength(),\r\n\t\t\t\t),\r\n\t\t\t() => !!this._limitMin && this.#entriesContext.getLength() < this._limitMin,\r\n\t\t);\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeOverflow',\r\n\t\t\t() =>\r\n\t\t\t\tthis.localize.term(\r\n\t\t\t\t\t'validation_entriesExceed',\r\n\t\t\t\t\tthis._limitMax,\r\n\t\t\t\t\tthis.#entriesContext.getLength() - (this._limitMax || 0),\r\n\t\t\t\t),\r\n\t\t\t() => !!this._limitMax && this.#entriesContext.getLength() > this._limitMax,\r\n\t\t);\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'valueMissing',\r\n\t\t\t() => this.mandatoryMessage ?? UMB_VALIDATION_EMPTY_LOCALIZATION_KEY,\r\n\t\t\t() => !!this.mandatory && this.#entriesContext.getLength() === 0,\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#entriesContext.layoutEntries,\r\n\t\t\t(layouts) => {\r\n\t\t\t\tthis._layouts = layouts;\r\n\t\t\t\t// Update sorter.\r\n\t\t\t\tthis.#sorter.setModel(layouts);\r\n\t\t\t\t// Update manager:\r\n\t\t\t\tthis.#managerContext.setLayouts(layouts);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#managerContext.blockTypes,\r\n\t\t\t(blockTypes) => {\r\n\t\t\t\tthis._blocks = blockTypes;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#entriesContext.catalogueRouteBuilder,\r\n\t\t\t(routeBuilder) => {\r\n\t\t\t\tthis._catalogueRouteBuilder = routeBuilder;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t}\r\n\r\n\t#gotPropertyContext(context: typeof UMB_PROPERTY_CONTEXT.TYPE | undefined) {\r\n\t\tthis.observe(\r\n\t\t\tcontext?.dataPath,\r\n\t\t\t(dataPath) => {\r\n\t\t\t\tif (dataPath) {\r\n\t\t\t\t\t// Set the data path for the local validation context:\r\n\t\t\t\t\tthis.#validationContext.setDataPath(dataPath);\r\n\t\t\t\t\tthis.#validationContext.autoReport();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'observeDataPath',\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tcontext?.alias,\r\n\t\t\t(alias) => {\r\n\t\t\t\tthis.#managerContext.setPropertyAlias(alias);\r\n\t\t\t},\r\n\t\t\t'observePropertyAlias',\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tobserveMultiple([\r\n\t\t\t\tthis.#managerContext.layouts,\r\n\t\t\t\tthis.#managerContext.contents,\r\n\t\t\t\tthis.#managerContext.settings,\r\n\t\t\t\tthis.#managerContext.exposes,\r\n\t\t\t]).pipe(debounceTime(20)),\r\n\t\t\t([layouts, contents, settings, exposes]) => {\r\n\t\t\t\tif (layouts.length === 0) {\r\n\t\t\t\t\tsuper.value = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsuper.value = {\r\n\t\t\t\t\t\t...super.value,\r\n\t\t\t\t\t\tlayout: { [UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS]: layouts },\r\n\t\t\t\t\t\tcontentData: contents,\r\n\t\t\t\t\t\tsettingsData: settings,\r\n\t\t\t\t\t\texpose: exposes,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we don't have a value set from the outside or an internal value, we don't want to set the value.\r\n\t\t\t\t// This is added to prevent the block list from setting an empty value on startup.\r\n\t\t\t\tif (this.#lastValue === undefined && super.value === undefined) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext?.setValue(super.value);\r\n\t\t\t},\r\n\t\t\t'motherObserver',\r\n\t\t);\r\n\t}\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (this._notSupportedVariantSetting) {\r\n\t\t\treturn nothing;\r\n\t\t}\r\n\t\treturn html`\r\n\t\t\t${repeat(\r\n\t\t\t\tthis._layouts,\r\n\t\t\t\t(x) => x.contentKey,\r\n\t\t\t\t(layoutEntry, index) => html`\r\n\t\t\t\t\t${this.#renderInlineCreateButton(index)}\r\n\t\t\t\t\t<umb-block-list-entry\r\n\t\t\t\t\t\t.contentKey=${layoutEntry.contentKey}\r\n\t\t\t\t\t\t.layout=${layoutEntry}\r\n\t\t\t\t\t\t${umbDestroyOnDisconnect()}>\r\n\t\t\t\t\t</umb-block-list-entry>\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t\t${this.#renderCreateButtonGroup()}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderCreateButtonGroup() {\r\n\t\tif (this.readonly && this._layouts.length > 0) {\r\n\t\t\treturn nothing;\r\n\t\t} else {\r\n\t\t\treturn html` <uui-button-group> ${this.#renderCreateButton()} ${this.#renderPasteButton()} </uui-button-group> `;\r\n\t\t}\r\n\t}\r\n\r\n\t#renderInlineCreateButton(index: number) {\r\n\t\tif (this.readonly) return nothing;\r\n\t\treturn html`<uui-button-inline-create\r\n\t\t\tlabel=${this._createButtonLabel}\r\n\t\t\thref=${this._catalogueRouteBuilder?.({ view: 'create', index: index }) ?? ''}></uui-button-inline-create>`;\r\n\t}\r\n\r\n\t#renderCreateButton() {\r\n\t\tlet createPath: string | undefined;\r\n\t\tif (this._blocks?.length === 1) {\r\n\t\t\tconst elementKey = this._blocks[0].contentElementTypeKey;\r\n\t\t\tcreatePath =\r\n\t\t\t\tthis._catalogueRouteBuilder?.({ view: 'create', index: -1 }) + 'modal/umb-modal-workspace/create/' + elementKey;\r\n\t\t} else {\r\n\t\t\tcreatePath = this._catalogueRouteBuilder?.({ view: 'create', index: -1 });\r\n\t\t}\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\tlabel=${this._createButtonLabel}\r\n\t\t\t\thref=${createPath ?? ''}\r\n\t\t\t\t?disabled=${this.readonly}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderPasteButton() {\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tlabel=${this.localize.term('content_createFromClipboard')}\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\thref=${this._catalogueRouteBuilder?.({ view: 'clipboard', index: -1 }) ?? ''}\r\n\t\t\t\t?disabled=${this.readonly}>\r\n\t\t\t\t<uui-icon name=\"icon-clipboard-paste\"></uui-icon>\r\n\t\t\t</uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tUmbTextStyles,\r\n\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgap: 1px;\r\n\t\t\t}\r\n\t\t\t> div {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: stretch;\r\n\t\t\t}\r\n\r\n\t\t\tuui-button-group {\r\n\t\t\t\tpadding-top: 1px;\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgrid-template-columns: 1fr auto;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbPropertyEditorUIBlockListElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-block-list': UmbPropertyEditorUIBlockListElement;\r\n\t}\r\n}\r\n"],"names":["UmbBlockListManagerContext","UmbBlockManagerContext","#inlineEditingMode","UmbBooleanState","inlineEditingMode","contentElementTypeKey","partialLayoutEntry","_originData","layoutEntry","content","settings","originData","UmbBlockListEntriesContext","UmbBlockEntriesContext","host","UMB_BLOCK_LIST_MANAGER_CONTEXT","UmbModalRouteRegistrationController","UMB_BLOCK_CATALOGUE_MODAL","routingInfo","index","clipboardContext","UMB_CLIPBOARD_PROPERTY_CONTEXT","pasteTranslatorManifests","UMB_BLOCK_LIST_PROPERTY_EDITOR_UI_ALIAS","propertyContext","UMB_PROPERTY_CONTEXT","config","valueResolver","UmbClipboardPastePropertyValueTranslatorValueResolver","clipboardEntryDetail","pasteTranslator","value","data","created","propertyValues","routeBuilder","UMB_BLOCK_LIST_WORKSPACE_MODAL","newPath","layouts","layoutEntries","UMB_BLOCK_LIST_PROPERTY_EDITOR_SCHEMA_ALIAS","UmbBlockListEntryContext","UmbBlockEntryContext","UMB_BLOCK_LIST_ENTRIES_CONTEXT","x","mergeObservables","a","b","c","UmbRefListBlockElement","UmbLitElement","html","nothing","css","__decorateClass","property","customElement","_blockWorkspace","_tabsStructureHelper","_UmbBlockWorkspaceViewEditContentNoRouterElement_instances","observeRootGroups_fn","checkDefaultTabName_fn","setTabName_fn","UmbBlockWorkspaceViewEditContentNoRouterElement","__privateAdd","UmbContentTypeContainerStructureHelper","__privateGet","tabs","__privateMethod","UMB_BLOCK_WORKSPACE_CONTEXT","context","__privateSet","repeat","tab","hasRootGroups","tabName","tabId","UmbTextStyles","state","_blockContext","_workspaceContext","_contentKey","_UmbInlineListBlockElement_instances","load_fn","_expose","renderBlockInfo_fn","renderInside_fn","apiArgsCreator","manifest","UmbInlineListBlockElement","UMB_BLOCK_LIST_ENTRY_CONTEXT","blockContext","contentKey","UmbExtensionApiInitializer","umbExtensionsRegistry","UMB_BLOCK_WORKSPACE_ALIAS","permitted","ctrl","exposed","name","variantId","culture","languageRepository","UmbLanguageItemRepository","UmbExtensionsApiInitializer","e","_UmbUnsupportedListBlockElement_instances","UmbUnsupportedListBlockElement","_context","_UmbBlockListEntryElement_instances","updateBlockViewProps_fn","init_fn","observeData_fn","copyToClipboard_fn","_extensionSlotFilterMethod","_extensionSlotRenderMethod","renderRefBlock_fn","renderInlineBlock_fn","renderUnsupportedBlock_fn","renderBuiltinBlockView_fn","renderBlock_fn","renderActionBar_fn","renderEditContentAction_fn","renderEditSettingsAction_fn","renderDeleteAction_fn","renderCopyToClipboardAction_fn","UmbBlockListEntryElement","stringOrStringArrayContains","UMB_BLOCK_LIST","ext","UmbObserveValidationStateController","UmbDataPathBlockElementDataQuery","hasMessages","contentElementTypeAlias","contentElementTypeName","incoming","showContentEdit","key","blockType","label","icon","unsupported","showActions","mode","layout","settingsKey","path","isReadOnly","propertyDatasetContext","UMB_PROPERTY_DATASET_CONTEXT","workspaceName","propertyLabel","blockLabel","entryName","expose","propertyValue","umbDestroyOnDisconnect","UUIBlinkKeyframes","UUIBlinkAnimationValue","_sorter","_validationContext","_lastValue","_readonly","_managerContext","_entriesContext","_UmbPropertyEditorUIBlockListElement_instances","gotPropertyContext_fn","renderCreateButtonGroup_fn","renderInlineCreateButton_fn","renderCreateButton_fn","renderPasteButton_fn","SORTER_CONFIG","element","modelEntry","UmbPropertyEditorUIBlockListElement","UmbFormControlMixin","UmbSorterController","model","UmbValidationContext","UMB_CONTENT_WORKSPACE_CONTEXT","observeMultiple","blockTypes","variesByCulture","variesBySegment","promises","elementType","structure","validationMessagesToRemove","contentKeys","message","extractJsonQueryProps","settingsKeys","UMB_VALIDATION_EMPTY_LOCALIZATION_KEY","buildUpValue","validationLimit","blocks","useInlineEditingAsDefault","customCreateButtonLabel","firstContentTypeName","dataPath","alias","debounceTime","contents","exposes","__superSet","__superGet","createPath","elementKey","UmbPropertyEditorUIBlockListElement$1"],"mappings":"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"}