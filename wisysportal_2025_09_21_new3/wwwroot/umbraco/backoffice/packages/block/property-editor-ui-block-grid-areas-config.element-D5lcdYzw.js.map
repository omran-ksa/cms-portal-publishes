{"version":3,"file":"property-editor-ui-block-grid-areas-config.element-D5lcdYzw.js","sources":["../../../src/packages/block/block-grid/property-editors/block-grid-areas-config/block-grid-area-type-entries.context.ts","../../../src/packages/block/block-grid/components/block-grid-area-config-entry/block-grid-area-config-entry.context.ts","../../../src/packages/block/block-grid/components/block-grid-area-config-entry/block-grid-area-config-entry.element.ts","../../../src/packages/block/block-grid/property-editors/block-grid-areas-config/property-editor-ui-block-grid-areas-config.element.ts"],"sourcesContent":["import type { UmbBlockGridScalableContainerContext } from '../../context/block-grid-scale-manager/block-grid-scale-manager.controller.js';\r\nimport { UMB_BLOCK_GRID_AREA_TYPE_ENTRIES_CONTEXT } from './block-grid-area-type-entries.context-token.js';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbBlockGridAreaTypeEntriesContext extends UmbContextBase implements UmbBlockGridScalableContainerContext {\r\n\t#layoutColumns?: number;\r\n\tsetLayoutColumns(layoutColumns: number) {\r\n\t\tthis.#layoutColumns = layoutColumns;\r\n\t}\r\n\r\n\tgetLayoutColumns() {\r\n\t\treturn this.#layoutColumns;\r\n\t}\r\n\r\n\tgetLayoutContainerElement() {\r\n\t\treturn this.getHostElement().shadowRoot?.querySelector('.umb-block-grid__area-container') as\r\n\t\t\t| HTMLElement\r\n\t\t\t| undefined;\r\n\t}\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_BLOCK_GRID_AREA_TYPE_ENTRIES_CONTEXT);\r\n\t}\r\n}\r\n","import { UMB_BLOCK_GRID_AREA_TYPE_ENTRIES_CONTEXT } from '../../property-editors/block-grid-areas-config/block-grid-area-type-entries.context-token.js';\r\nimport {\r\n\tUmbBlockGridScaleManager,\r\n\ttype UmbBlockGridScalableContext,\r\n} from '../../context/block-grid-scale-manager/block-grid-scale-manager.controller.js';\r\nimport type { UmbBlockGridTypeAreaType } from '../../types.js';\r\nimport { UMB_BLOCK_GRID_AREA_CONFIG_ENTRY_CONTEXT } from './block-grid-area-config-entry.context-token.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbObjectState, appendToFrozenArray } from '@umbraco-cms/backoffice/observable-api';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UMB_PROPERTY_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport { umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nexport class UmbBlockGridAreaConfigEntryContext extends UmbContextBase implements UmbBlockGridScalableContext {\r\n\t//\r\n\t#entriesContext?: typeof UMB_BLOCK_GRID_AREA_TYPE_ENTRIES_CONTEXT.TYPE;\r\n\t//\r\n\t#propertyContext?: typeof UMB_PROPERTY_CONTEXT.TYPE;\r\n\t//\r\n\t#areaKey?: string;\r\n\t#area = new UmbObjectState<UmbBlockGridTypeAreaType | undefined>(undefined);\r\n\treadonly area = this.#area.asObservable();\r\n\treadonly alias = this.#area.asObservablePart((x) => x?.alias);\r\n\treadonly columnSpan = this.#area.asObservablePart((x) => x?.columnSpan);\r\n\treadonly rowSpan = this.#area.asObservablePart((x) => x?.rowSpan ?? 1);\r\n\r\n\treadonly scaleManager = new UmbBlockGridScaleManager(this);\r\n\r\n\tpublic getMinMaxRowSpan(): [number, number] {\r\n\t\treturn [1, 999];\r\n\t}\r\n\tsetColumnSpan(columnSpan: number) {\r\n\t\tconst layoutColumns = this.#entriesContext?.getLayoutColumns();\r\n\t\tif (!layoutColumns) return;\r\n\t\tcolumnSpan = Math.max(1, Math.min(columnSpan, layoutColumns));\r\n\t\tthis.#area.update({ columnSpan });\r\n\t}\r\n\tgetColumnSpan() {\r\n\t\treturn this.#area.getValue()?.columnSpan;\r\n\t}\r\n\tsetRowSpan(rowSpan: number) {\r\n\t\tthis.#area.update({ rowSpan });\r\n\t}\r\n\tgetRowSpan() {\r\n\t\treturn this.#area.getValue()?.rowSpan;\r\n\t}\r\n\tgetAlias() {\r\n\t\treturn this.#area.getValue()?.alias;\r\n\t}\r\n\tpublic getRelevantColumnSpanOptions() {\r\n\t\tconst layoutColumns = this.#entriesContext?.getLayoutColumns();\r\n\t\tif (!layoutColumns) return;\r\n\t\t// Makes an array based of the given length, with number entries starting from 1. ex.: length 4 => [1, 2, 3, 4]\r\n\t\treturn Array.from({ length: layoutColumns }, (_, i) => i + 1);\r\n\t}\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_BLOCK_GRID_AREA_CONFIG_ENTRY_CONTEXT);\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_CONTEXT, (context) => {\r\n\t\t\tthis.#propertyContext = context;\r\n\t\t\tthis.#observeAreaData();\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_GRID_AREA_TYPE_ENTRIES_CONTEXT, (context) => {\r\n\t\t\tthis.#entriesContext = context;\r\n\t\t\tthis.scaleManager.setEntriesContext(context);\r\n\t\t});\r\n\t}\r\n\r\n\tsetAreaKey(areaKey: string) {\r\n\t\tif (this.#areaKey === areaKey) return;\r\n\t\tthis.#areaKey = areaKey;\r\n\t\tthis.#observeAreaData();\r\n\t}\r\n\r\n\t#observeAreaData() {\r\n\t\tif (!this.#areaKey || !this.#propertyContext) return;\r\n\t\tthis.observe(\r\n\t\t\tthis.#propertyContext.value,\r\n\t\t\t(value: Array<UmbBlockGridTypeAreaType> | undefined) => {\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tconst areaType = value.find((x) => x.key === this.#areaKey);\r\n\t\t\t\t\tthis.#area.setValue(areaType);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'observeAreaData',\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.area,\r\n\t\t\t(area) => {\r\n\t\t\t\tif (area && this.#propertyContext) {\r\n\t\t\t\t\tconst value = this.#propertyContext.getValue() as Array<UmbBlockGridTypeAreaType> | undefined;\r\n\t\t\t\t\tif (!value) return;\r\n\t\t\t\t\tconst newValue = appendToFrozenArray(value, area, (x) => x.key === this.#areaKey);\r\n\t\t\t\t\tthis.#propertyContext?.setValue(newValue);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'observeInternalArea',\r\n\t\t);\r\n\t}\r\n\r\n\tasync requestDelete() {\r\n\t\tawait umbConfirmModal(this, {\r\n\t\t\theadline: `Delete ${this.getAlias()}`,\r\n\t\t\tcontent: 'Are you sure you want to delete this Area?',\r\n\t\t\tconfirmLabel: 'Delete',\r\n\t\t\tcolor: 'danger',\r\n\t\t});\r\n\t\tthis.delete();\r\n\t}\r\n\tpublic delete() {\r\n\t\tif (!this.#areaKey || !this.#propertyContext) return;\r\n\t\tconst value = this.#propertyContext.getValue() as Array<UmbBlockGridTypeAreaType> | undefined;\r\n\t\tif (!value) return;\r\n\t\tthis.#propertyContext.setValue(value.filter((x) => x.key !== this.#areaKey));\r\n\t}\r\n\r\n\toverride destroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.#area.destroy();\r\n\t}\r\n}\r\n","import { UmbBlockGridAreaConfigEntryContext } from './block-grid-area-config-entry.context.js';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { html, css, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/property-editor';\r\n\r\n/**\r\n * @element umb-block-area-config-entry\r\n */\r\n@customElement('umb-block-area-config-entry')\r\nexport class UmbBlockGridAreaConfigEntryElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n\t//\r\n\t@property({ attribute: false })\r\n\tpublic get key(): string | undefined {\r\n\t\treturn this._key;\r\n\t}\r\n\tpublic set key(key: string | undefined) {\r\n\t\tif (!key) return;\r\n\t\tthis._key = key;\r\n\t\tthis.setAttribute('data-area-key', key);\r\n\t\tthis.#context.setAreaKey(key);\r\n\t}\r\n\tprivate _key?: string | undefined;\r\n\t//\r\n\r\n\t@property()\r\n\tworkspacePath?: string;\r\n\r\n\t#context = new UmbBlockGridAreaConfigEntryContext(this);\r\n\r\n\t@state()\r\n\t_columnSpan?: number;\r\n\r\n\t@state()\r\n\t_rowSpan?: number;\r\n\r\n\t@state()\r\n\t_alias = '';\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.observe(this.#context.alias, (alias) => {\r\n\t\t\tthis._alias = alias ?? '';\r\n\t\t});\r\n\t}\r\n\r\n\toverride connectedCallback(): void {\r\n\t\tsuper.connectedCallback();\r\n\t\t// element styling:\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.columnSpan,\r\n\t\t\t(columnSpan) => {\r\n\t\t\t\tthis._columnSpan = columnSpan;\r\n\t\t\t\tthis.setAttribute('data-col-span', columnSpan ? columnSpan.toString() : '');\r\n\t\t\t\tthis.style.setProperty('--umb-block-grid--grid-column', columnSpan ? columnSpan.toString() : '');\r\n\t\t\t\tthis.style.setProperty('--umb-block-grid--area-column-span', columnSpan ? columnSpan.toString() : '');\r\n\t\t\t},\r\n\t\t\t'columnSpan',\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.rowSpan,\r\n\t\t\t(rowSpan) => {\r\n\t\t\t\tthis._rowSpan = rowSpan;\r\n\t\t\t\tthis.setAttribute('data-row-span', rowSpan ? rowSpan.toString() : '');\r\n\t\t\t\tthis.style.setProperty('--umb-block-grid--area-row-span', rowSpan ? rowSpan.toString() : '');\r\n\t\t\t},\r\n\t\t\t'rowSpan',\r\n\t\t);\r\n\t}\r\n\r\n\t#renderBlock() {\r\n\t\treturn this._key\r\n\t\t\t? html`\r\n\t\t\t\t\t<span>${this._alias}</span>\r\n\t\t\t\t\t<uui-action-bar>\r\n\t\t\t\t\t\t<uui-button label=\"edit\" compact href=${this.workspacePath + 'edit/' + this._key}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-edit\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t<uui-button label=\"delete\" compact @click=${() => this.#context.requestDelete()}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-remove\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t</uui-action-bar>\r\n\t\t\t\t\t<umb-block-scale-handler @mousedown=${(e: MouseEvent) => this.#context.scaleManager.onScaleMouseDown(e)}>\r\n\t\t\t\t\t\t${this._columnSpan}x${this._rowSpan}\r\n\t\t\t\t\t</umb-block-scale-handler>\r\n\t\t\t\t`\r\n\t\t\t: '';\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this.#renderBlock();\r\n\t}\r\n\r\n\t// TODO: Update UUI, as it is missing proper colors to be used for this case:\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tbackground-color: var(--uui-color-disabled);\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\ttransition: background-color 120ms;\r\n\t\t\t}\r\n\r\n\t\t\t:host(:hover) {\r\n\t\t\t\tbackground-color: var(--uui-color-disabled-standalone);\r\n\t\t\t}\r\n\r\n\t\t\tuui-action-bar {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: var(--uui-size-2);\r\n\t\t\t\tright: var(--uui-size-2);\r\n\t\t\t}\r\n\r\n\t\t\t:host([drag-placeholder]) {\r\n\t\t\t\topacity: 0.2;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbBlockGridAreaConfigEntryElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-block-area-config-entry': UmbBlockGridAreaConfigEntryElement;\r\n\t}\r\n}\r\n","import { UMB_BLOCK_GRID_DEFAULT_LAYOUT_STYLESHEET, type UmbBlockGridTypeAreaType } from '../../index.js';\r\nimport { UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_MODAL } from '../../components/block-grid-area-config-entry/constants.js';\r\nimport { UmbBlockGridAreaTypeEntriesContext } from './block-grid-area-type-entries.context.js';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { html, customElement, property, state, repeat } from '@umbraco-cms/backoffice/external/lit';\r\nimport type {\r\n\tUmbPropertyEditorUiElement,\r\n\tUmbPropertyEditorConfigCollection,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\nimport { UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { incrementString } from '@umbraco-cms/backoffice/utils';\r\n\r\nimport '../../components/block-grid-area-config-entry/block-grid-area-config-entry.element.js';\r\n@customElement('umb-property-editor-ui-block-grid-areas-config')\r\nexport class UmbPropertyEditorUIBlockGridAreasConfigElement\r\n\textends UmbLitElement\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\t//\r\n\t#context = new UmbBlockGridAreaTypeEntriesContext(this);\r\n\t// local vars:\r\n\t#defaultAreaGridColumns: number = 12;\r\n\t#valueOfAreaGridColumns?: number | null;\r\n\r\n\t@property({ type: Array })\r\n\tpublic set value(value: Array<UmbBlockGridTypeAreaType>) {\r\n\t\tthis._value = value ?? [];\r\n\t}\r\n\tpublic get value(): Array<UmbBlockGridTypeAreaType> {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _value: Array<UmbBlockGridTypeAreaType> = [];\r\n\r\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n\t\tconst defaultAreaGridColumns = config?.getValueByAlias('defaultAreaGridColumns');\r\n\t\tif (typeof defaultAreaGridColumns === 'number' && defaultAreaGridColumns > 0) {\r\n\t\t\tthis.#defaultAreaGridColumns = defaultAreaGridColumns ?? null;\r\n\t\t} else {\r\n\t\t\tthis.#defaultAreaGridColumns = 12;\r\n\t\t}\r\n\t\tthis.#gotAreaColumns();\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _workspacePath?: string;\r\n\r\n\t@state()\r\n\tprivate _styleElement?: HTMLLinkElement;\r\n\r\n\t@state()\r\n\tprivate _areaGridColumns?: number;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tnew UmbModalRouteRegistrationController(this, UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_MODAL)\r\n\t\t\t.addAdditionalPath('block-grid-area-type')\r\n\t\t\t.onSetup(() => {\r\n\t\t\t\tif (!this._areaGridColumns) return false;\r\n\t\t\t\tconst halfGridColumns = this._areaGridColumns * 0.5;\r\n\t\t\t\tconst columnSpan = halfGridColumns === Math.round(halfGridColumns) ? halfGridColumns : this._areaGridColumns;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tentityType: 'block-grid-area-type',\r\n\t\t\t\t\t\tpreset: { columnSpan, alias: this.#generateUniqueAreaAlias('area') },\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmodal: { size: 'large' },\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tthis._workspacePath = routeBuilder({});\r\n\t\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, async (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tawait context?.propertyValueByAlias<number | undefined>('areaGridColumns'),\r\n\t\t\t\t(value) => {\r\n\t\t\t\t\t// Value can be undefined, but 'undefined > 0' is still valid JS and will return false. [NL]\r\n\t\t\t\t\tthis.#valueOfAreaGridColumns = (value as number) > 0 ? value : null;\r\n\t\t\t\t\tthis.#gotAreaColumns();\r\n\t\t\t\t},\r\n\t\t\t\t'observeAreaGridColumns',\r\n\t\t\t);\r\n\r\n\t\t\tthis.observe(\r\n\t\t\t\tawait context?.propertyValueByAlias<string | undefined>('layoutStylesheet'),\r\n\t\t\t\t(stylesheet) => {\r\n\t\t\t\t\tif (this._styleElement && this._styleElement.href === stylesheet) return;\r\n\t\t\t\t\tthis._styleElement = document.createElement('link');\r\n\t\t\t\t\tthis._styleElement.setAttribute('rel', 'stylesheet');\r\n\t\t\t\t\tthis._styleElement.setAttribute('href', stylesheet ?? UMB_BLOCK_GRID_DEFAULT_LAYOUT_STYLESHEET);\r\n\t\t\t\t},\r\n\t\t\t\t'observeStylesheet',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#gotAreaColumns() {\r\n\t\tif (!this.#defaultAreaGridColumns || this.#valueOfAreaGridColumns === undefined) return;\r\n\t\tthis._areaGridColumns = this.#valueOfAreaGridColumns ?? this.#defaultAreaGridColumns;\r\n\t\tthis.#context.setLayoutColumns(this._areaGridColumns);\r\n\t}\r\n\r\n\t#generateUniqueAreaAlias(alias: string) {\r\n\t\twhile (this._value.find((area) => area.alias === alias)) {\r\n\t\t\talias = incrementString(alias);\r\n\t\t}\r\n\t\treturn alias;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._areaGridColumns\r\n\t\t\t? html`${this._styleElement}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"umb-block-grid__area-container\"\r\n\t\t\t\t\t\tpart=\"area-container\"\r\n\t\t\t\t\t\tstyle=\"--umb-block-grid--area-grid-columns: ${this._areaGridColumns}\">\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tthis.value,\r\n\t\t\t\t\t\t\t(area) => area.key,\r\n\t\t\t\t\t\t\t(area) =>\r\n\t\t\t\t\t\t\t\thtml`<umb-block-area-config-entry\r\n\t\t\t\t\t\t\t\t\tclass=\"umb-block-grid__area\"\r\n\t\t\t\t\t\t\t\t\t.workspacePath=${this._workspacePath}\r\n\t\t\t\t\t\t\t\t\t.areaGridColumns=${this._areaGridColumns}\r\n\t\t\t\t\t\t\t\t\t.key=${area.key}></umb-block-area-config-entry>`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<uui-button look=\"placeholder\" label=${'Add area'} href=${this._workspacePath + 'create'}></uui-button>`\r\n\t\t\t: '';\r\n\t}\r\n}\r\n\r\nexport default UmbPropertyEditorUIBlockGridAreasConfigElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-block-grid-areas-config': UmbPropertyEditorUIBlockGridAreasConfigElement;\r\n\t}\r\n}\r\n"],"names":["UmbBlockGridAreaTypeEntriesContext","UmbContextBase","#layoutColumns","layoutColumns","host","UMB_BLOCK_GRID_AREA_TYPE_ENTRIES_CONTEXT","UmbBlockGridAreaConfigEntryContext","UMB_BLOCK_GRID_AREA_CONFIG_ENTRY_CONTEXT","#area","UmbObjectState","x","UmbBlockGridScaleManager","UMB_PROPERTY_CONTEXT","context","#propertyContext","#observeAreaData","#entriesContext","#areaKey","columnSpan","rowSpan","_","i","areaKey","value","areaType","area","newValue","appendToFrozenArray","umbConfirmModal","_context","_UmbBlockGridAreaConfigEntryElement_instances","renderBlock_fn","UmbBlockGridAreaConfigEntryElement","UmbLitElement","__privateAdd","__privateGet","alias","key","__privateMethod","html","css","__decorateClass","property","state","customElement","_defaultAreaGridColumns","_valueOfAreaGridColumns","_UmbPropertyEditorUIBlockGridAreasConfigElement_instances","gotAreaColumns_fn","generateUniqueAreaAlias_fn","UmbPropertyEditorUIBlockGridAreasConfigElement","UmbModalRouteRegistrationController","UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_MODAL","halfGridColumns","routeBuilder","UMB_PROPERTY_DATASET_CONTEXT","__privateSet","stylesheet","UMB_BLOCK_GRID_DEFAULT_LAYOUT_STYLESHEET","config","defaultAreaGridColumns","repeat","incrementString","UmbPropertyEditorUIBlockGridAreasConfigElement$1"],"mappings":"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"}