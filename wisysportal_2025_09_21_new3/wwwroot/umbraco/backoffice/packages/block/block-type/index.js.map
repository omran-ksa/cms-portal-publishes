{"version":3,"file":"index.js","sources":["../../../../src/packages/block/modals/manifest-viewer/manifest-viewer-modal.token.ts","../../../../src/packages/block/block-type/components/block-type-custom-view-guide/block-type-custom-view-guide.element.ts"],"sourcesContent":["import type { ManifestBase } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\r\nexport interface UmbManifestViewerModalData extends ManifestBase {}\r\n\r\nexport type UmbManifestViewerModalValue = undefined;\r\n\r\n/* TODO: This is a temporary location for the manifest viewer files.They are located here because of build issues.\r\nPlease don't export this token from the block package. [MR] */\r\nexport const UMB_MANIFEST_VIEWER_MODAL = new UmbModalToken<UmbManifestViewerModalData, UmbManifestViewerModalValue>(\r\n\t'Umb.Modal.ManifestViewer',\r\n\t{\r\n\t\tmodal: {\r\n\t\t\ttype: 'sidebar',\r\n\t\t\tsize: 'medium',\r\n\t\t},\r\n\t},\r\n);\r\n","import { UMB_MANIFEST_VIEWER_MODAL } from '../../../modals/manifest-viewer/index.js';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { html, customElement, state, property, css } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { stringOrStringArrayContains } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbExtensionsManifestInitializer } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbDocumentTypeDetailRepository } from '@umbraco-cms/backoffice/document-type';\r\nimport { umbOpenModal } from '@umbraco-cms/backoffice/modal';\r\nimport type { ManifestBlockEditorCustomView } from '@umbraco-cms/backoffice/block-custom-view';\r\n\r\n@customElement('umb-block-type-custom-view-guide')\r\nexport class UmbBlockTypeCustomViewGuideElement extends UmbLitElement {\r\n\t#contentTypeName?: string;\r\n\t#contentTypeAlias?: string;\r\n\t#blockEditorType?: string;\r\n\r\n\t@property({ type: String, attribute: 'block-editor-type' })\r\n\tget blockEditorType() {\r\n\t\treturn this.#blockEditorType;\r\n\t}\r\n\tset blockEditorType(value) {\r\n\t\tthis.#blockEditorType = value;\r\n\t\tthis.#loadManifests();\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _manifests?: Array<ManifestBlockEditorCustomView>;\r\n\r\n\t#repository = new UmbDocumentTypeDetailRepository(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, async (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tawait context?.propertyValueByAlias<string | undefined>('contentElementTypeKey'),\r\n\t\t\t\tasync (value) => {\r\n\t\t\t\t\tif (!value) return;\r\n\t\t\t\t\tconst { asObservable } = await this.#repository.requestByUnique(value);\r\n\t\t\t\t\tthis.observe(\r\n\t\t\t\t\t\tasObservable(),\r\n\t\t\t\t\t\t(model) => {\r\n\t\t\t\t\t\t\tthis.#contentTypeName = model?.name;\r\n\t\t\t\t\t\t\tthis.#contentTypeAlias = model?.alias;\r\n\t\t\t\t\t\t\tthis.#loadManifests();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'observeContentType',\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t'observeContentElementTypeKey',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#loadManifests() {\r\n\t\tif (!this.#blockEditorType || !this.#contentTypeAlias) return;\r\n\t\tnew UmbExtensionsManifestInitializer(\r\n\t\t\tthis,\r\n\t\t\tumbExtensionsRegistry,\r\n\t\t\t'blockEditorCustomView',\r\n\t\t\tthis.#extensionFilterMethod,\r\n\t\t\tasync (customViews) => {\r\n\t\t\t\tthis._manifests = customViews.map((x) => x.manifest);\r\n\t\t\t},\r\n\t\t\t'manifestInitializer',\r\n\t\t);\r\n\t}\r\n\r\n\t#extensionFilterMethod = (manifest: ManifestBlockEditorCustomView) => {\r\n\t\tif (!this.#blockEditorType || !this.#contentTypeAlias) return false;\r\n\t\tif (\r\n\t\t\tmanifest.forContentTypeAlias &&\r\n\t\t\t!stringOrStringArrayContains(manifest.forContentTypeAlias, this.#contentTypeAlias!)\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (manifest.forBlockEditor && !stringOrStringArrayContains(manifest.forBlockEditor, this.#blockEditorType)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\tasync #viewManifest(manifest: ManifestBlockEditorCustomView) {\r\n\t\tumbOpenModal(this, UMB_MANIFEST_VIEWER_MODAL, { data: manifest });\r\n\t}\r\n\r\n\tasync #generateManifest() {\r\n\t\tconst manifest: UmbExtensionManifest = {\r\n\t\t\ttype: 'blockEditorCustomView',\r\n\t\t\talias: 'Local.blockEditorCustomView.' + this.#contentTypeAlias,\r\n\t\t\tname: 'Block Editor Custom View for ' + this.#contentTypeName,\r\n\t\t\telement: '[replace with path to your web component js file...]',\r\n\t\t\tforContentTypeAlias: this.#contentTypeAlias,\r\n\t\t\tforBlockEditor: this.#blockEditorType,\r\n\t\t};\r\n\t\tumbOpenModal(this, UMB_MANIFEST_VIEWER_MODAL, { data: manifest });\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._manifests && this._manifests.length > 0\r\n\t\t\t? html` <div>\r\n\t\t\t\t\t<umb-ref-manifest\r\n\t\t\t\t\t\tstandalone\r\n\t\t\t\t\t\t@open=${() => this.#viewManifest(this._manifests![0])}\r\n\t\t\t\t\t\t.manifest=${this._manifests[0]}></umb-ref-manifest>\r\n\t\t\t\t</div>`\r\n\t\t\t: html`<uui-button\r\n\t\t\t\t\tid=\"add-button\"\r\n\t\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t\tlabel=\"Generate manifest for this Block Type\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t@click=${() => this.#generateManifest()}></uui-button>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#add-button {\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbBlockTypeCustomViewGuideElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-block-type-custom-view-guide': UmbBlockTypeCustomViewGuideElement;\r\n\t}\r\n}\r\n"],"names":["UMB_MANIFEST_VIEWER_MODAL","UmbModalToken","_contentTypeName","_contentTypeAlias","_blockEditorType","_repository","_UmbBlockTypeCustomViewGuideElement_instances","loadManifests_fn","_extensionFilterMethod","viewManifest_fn","generateManifest_fn","UmbBlockTypeCustomViewGuideElement","UmbLitElement","__privateAdd","UmbDocumentTypeDetailRepository","manifest","__privateGet","stringOrStringArrayContains","UMB_PROPERTY_DATASET_CONTEXT","context","value","asObservable","model","__privateSet","__privateMethod","html","UmbExtensionsManifestInitializer","umbExtensionsRegistry","customViews","x","umbOpenModal","css","__decorateClass","property","state","customElement"],"mappings":"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"}