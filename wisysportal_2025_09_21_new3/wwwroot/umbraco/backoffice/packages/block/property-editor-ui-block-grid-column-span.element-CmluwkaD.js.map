{"version":3,"file":"property-editor-ui-block-grid-column-span.element-CmluwkaD.js","sources":["../../../src/packages/block/block-grid/property-editors/block-grid-column-span/property-editor-ui-block-grid-column-span.element.ts"],"sourcesContent":["import type { UmbBlockGridTypeColumnSpanOption } from '../../types.js';\r\nimport { html, customElement, property, css, state, repeat } from '@umbraco-cms/backoffice/external/lit';\r\nimport type {\r\n\tUmbPropertyEditorUiElement,\r\n\tUmbPropertyEditorConfigCollection,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\n\r\n@customElement('umb-property-editor-ui-block-grid-column-span')\r\nexport class UmbPropertyEditorUIBlockGridColumnSpanElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n\t@property({ type: Array })\r\n\tvalue: Array<UmbBlockGridTypeColumnSpanOption> = [];\r\n\r\n\t@state()\r\n\tprivate _columnsArray = Array.from(Array(12).keys());\r\n\r\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n\t\tconst maxColumns = config?.getValueByAlias('maxColumns');\r\n\t\tif (typeof maxColumns === 'number') {\r\n\t\t\tthis._columnsArray = Array.from(Array(maxColumns).keys());\r\n\t\t}\r\n\t}\r\n\r\n\t#pickColumn(index: number) {\r\n\t\tconst value = this.value ?? [];\r\n\t\tconst exists = value.find((column) => column.columnSpan === index);\r\n\r\n\t\tif (exists) {\r\n\t\t\tthis.value = value.filter((column) => column.columnSpan !== index);\r\n\t\t} else {\r\n\t\t\tthis.value = [...value, { columnSpan: index }];\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst template = repeat(\r\n\t\t\tthis._columnsArray,\r\n\t\t\t(index) => index,\r\n\t\t\t(index) => {\r\n\t\t\t\tconst colNumber = index + 1;\r\n\t\t\t\tlet classes = 'default';\r\n\r\n\t\t\t\tif (this.value && this.value.length > 0) {\r\n\t\t\t\t\tconst applied = this.value.find((column) => column.columnSpan >= colNumber);\r\n\t\t\t\t\tconst picked = this.value.find((column) => column.columnSpan === colNumber);\r\n\t\t\t\t\tclasses = picked ? 'picked applied' : applied ? 'applied' : 'default';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn html`<div class=\"${classes}\" data-index=${index}>\r\n\t\t\t\t\t<span>${colNumber}</span>\r\n\t\t\t\t\t<button type=\"button\" aria-label=${colNumber} @click=${() => this.#pickColumn(colNumber)}></button>\r\n\t\t\t\t</div>`;\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\treturn html`<div id=\"wrapper\">${template}</div>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#wrapper {\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-wrap: nowrap;\r\n\t\t\t\tborder: 1px solid var(--uui-color-divider-emphasis);\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper div {\r\n\t\t\t\tcolor: var(--uui-color-divider-emphasis);\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tflex-grow: 1;\r\n\t\t\t\tmin-height: 35px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\tpadding-left: 5px;\r\n\t\t\t\tborder-right: 1px solid transparent;\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper div:not(.picked) {\r\n\t\t\t\tborder-right: 1px solid var(--uui-color-divider-standalone);\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper div.picked,\r\n\t\t\t#wrapper div:has(button:hover) {\r\n\t\t\t\tcolor: var(--uui-color-interactive);\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper div:last-child {\r\n\t\t\t\tborder-right: 1px solid transparent;\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper:has(button:hover) div:not(:has(button:hover) ~ div) {\r\n\t\t\t\tbackground-color: var(--uui-color-interactive-emphasis);\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper div span {\r\n\t\t\t\tuser-select: none;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tpadding: var(--uui-size-6);\r\n\t\t\t\ttransform: translate(50%, -75%);\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper div button {\r\n\t\t\t\tborder: none;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t\ttransform: translateX(50%);\r\n\t\t\t\tinset: -1px;\r\n\t\t\t\topacity: 0;\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper .picked::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttransform: translateX(50%);\r\n\t\t\t\twidth: 4px;\r\n\t\t\t\tborder-right: 1px solid var(--uui-color-interactive);\r\n\t\t\t\tbackground-color: var(--uui-color-surface);\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tright: 0;\r\n\t\t\t\tbottom: 0;\r\n\t\t\t}\r\n\r\n\t\t\t#wrapper .applied {\r\n\t\t\t\tbackground-color: var(--uui-color-interactive);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbPropertyEditorUIBlockGridColumnSpanElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-block-grid-column-span': UmbPropertyEditorUIBlockGridColumnSpanElement;\r\n\t}\r\n}\r\n"],"names":["_UmbPropertyEditorUIBlockGridColumnSpanElement_instances","pickColumn_fn","UmbPropertyEditorUIBlockGridColumnSpanElement","UmbLitElement","__privateAdd","config","maxColumns","template","repeat","index","colNumber","classes","applied","column","html","__privateMethod","value","UmbChangeEvent","UmbTextStyles","css","__decorateClass","property","state","customElement","UmbPropertyEditorUIBlockGridColumnSpanElement$1"],"mappings":";;;;;;;;;;8OAAAA,GAAAC;AAWa,IAAAC,IAAN,cAA4DC,EAAoD;AAAA,EAAhH,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAJ,CAAA,GAEN,KAAA,QAAiD,CAAC,GAGlD,KAAQ,gBAAgB,MAAM,KAAK,MAAM,EAAE,EAAE,MAAM;AAAA,EAAA;AAAA,EAEnD,IAAW,OAAOK,GAAuD;AAClE,UAAAC,IAAaD,GAAQ,gBAAgB,YAAY;AACnD,IAAA,OAAOC,KAAe,aACzB,KAAK,gBAAgB,MAAM,KAAK,MAAMA,CAAU,EAAE,MAAM;AAAA,EACzD;AAAA,EAgBQ,SAAS;AACjB,UAAMC,IAAWC;AAAA,MAChB,KAAK;AAAA,MACL,CAACC,MAAUA;AAAA,MACX,CAACA,MAAU;AACV,cAAMC,IAAYD,IAAQ;AAC1B,YAAIE,IAAU;AAEd,YAAI,KAAK,SAAS,KAAK,MAAM,SAAS,GAAG;AAClC,gBAAAC,IAAU,KAAK,MAAM,KAAK,CAACC,MAAWA,EAAO,cAAcH,CAAS;AAEhE,UAAAC,IADK,KAAK,MAAM,KAAK,CAACE,MAAWA,EAAO,eAAeH,CAAS,IACvD,mBAAmBE,IAAU,YAAY;AAAA,QAAA;AAGtD,eAAAE,gBAAmBH,CAAO,gBAAgBF,CAAK;AAAA,aAC7CC,CAAS;AAAA,wCACkBA,CAAS,WAAW,MAAMK,EAAK,MAAAf,GAAAC,CAAA,EAAL,WAAiBS,CAAU,CAAA;AAAA;AAAA,MAAA;AAAA,IAG3F;AAEA,WAAOI,sBAAyBP,CAAQ;AAAA,EAAA;AA2E1C;AA3HOP,IAAA,oBAAA,QAAA;AAcNC,IAAW,SAACQ,GAAe;AACpB,QAAAO,IAAQ,KAAK,SAAS,CAAC;AAG7B,EAFeA,EAAM,KAAK,CAACH,MAAWA,EAAO,eAAeJ,CAAK,IAGhE,KAAK,QAAQO,EAAM,OAAO,CAACH,MAAWA,EAAO,eAAeJ,CAAK,IAEjE,KAAK,QAAQ,CAAC,GAAGO,GAAO,EAAE,YAAYP,GAAO,GAGzC,KAAA,cAAc,IAAIQ,GAAgB;AACxC;AAzBYf,EAmDI,SAAS;AAAA,EACxBgB;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqED;AAxHAC,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GADbnB,EAEZ,WAAA,SAAA,CAAA;AAGQkB,EAAA;AAAA,EADPE,EAAM;AAAA,GAJKpB,EAKJ,WAAA,iBAAA,CAAA;AALIA,IAANkB,EAAA;AAAA,EADNG,EAAc,+CAA+C;AAAA,GACjDrB,CAAA;AA6Hb,MAAAsB,IAAetB;"}