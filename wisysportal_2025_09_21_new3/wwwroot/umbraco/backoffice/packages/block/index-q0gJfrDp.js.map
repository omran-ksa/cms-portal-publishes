{"version":3,"file":"index-q0gJfrDp.js","sources":["../../../src/packages/block/block-grid/block-grid-manager/block-grid-manager.context-token.ts","../../../src/packages/block/block-grid/clipboard/grid-block/constants.ts","../../../src/packages/block/block-grid/components/block-grid-area-config-entry/block-grid-area-config-entry.context-token.ts","../../../src/packages/block/block-grid/components/block-grid-area-config-entry/workspace/block-grid-area-type-workspace.modal-token.ts","../../../src/packages/block/block-grid/components/block-grid-area-config-entry/workspace/block-grid-area-type-workspace.context-token.ts","../../../src/packages/block/block-grid/components/block-grid-area-config-entry/workspace/constants.ts","../../../src/packages/block/block-grid/components/block-grid-entries/block-grid-entries.context-token.ts","../../../src/packages/block/block-grid/components/block-grid-entry/block-grid-entry.context-token.ts","../../../src/packages/block/block-grid/property-editors/block-grid-editor/constants.ts","../../../src/packages/block/block-grid/property-editors/block-grid-areas-config/block-grid-area-type-entries.context-token.ts","../../../src/packages/block/block-grid/constants.ts","../../../src/packages/block/block-grid/workspace/block-grid-workspace.modal-token.ts","../../../src/packages/block/block-grid/workspace/block-grid-type-workspace.modal-token.ts","../../../src/packages/block/block-grid/workspace/index.ts"],"sourcesContent":["import type { UmbBlockGridManagerContext } from './block-grid-manager.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\n// TODO: Make discriminator method for this:\r\nexport const UMB_BLOCK_GRID_MANAGER_CONTEXT = new UmbContextToken<\r\n\tUmbBlockGridManagerContext,\r\n\tUmbBlockGridManagerContext\r\n>('UmbBlockManagerContext');\r\n","export const UMB_GRID_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE = 'gridBlock';\r\n","import type { UmbBlockGridAreaConfigEntryContext } from './block-grid-area-config-entry.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\nexport const UMB_BLOCK_GRID_AREA_CONFIG_ENTRY_CONTEXT = new UmbContextToken<UmbBlockGridAreaConfigEntryContext>(\r\n\t'UmbBlockAreaConfigEntryContext',\r\n);\r\n","import type { UmbWorkspaceModalData, UmbWorkspaceModalValue } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\r\nexport interface UmbBlockGridAreaTypeWorkspaceData extends UmbWorkspaceModalData {}\r\n\r\nexport const UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_MODAL = new UmbModalToken<\r\n\tUmbBlockGridAreaTypeWorkspaceData,\r\n\tUmbWorkspaceModalValue\r\n>('Umb.Modal.Workspace', {\r\n\tmodal: {\r\n\t\ttype: 'sidebar',\r\n\t\tsize: 'small',\r\n\t},\r\n\tdata: { entityType: 'block-grid-area-type', preset: {} },\r\n\t// Recast the type, so the entityType data prop is not required:\r\n}) as UmbModalToken<Omit<UmbBlockGridAreaTypeWorkspaceData, 'entityType'>, UmbWorkspaceModalValue>;\r\n","import type UmbBlockGridAreaTypeWorkspaceContext from './block-grid-area-type-workspace.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\nimport type { UmbWorkspaceContext } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_CONTEXT = new UmbContextToken<\r\n\tUmbWorkspaceContext,\r\n\tUmbBlockGridAreaTypeWorkspaceContext\r\n>(\r\n\t'UmbWorkspaceContext',\r\n\tundefined,\r\n\t(context): context is UmbBlockGridAreaTypeWorkspaceContext =>\r\n\t\t(context as any).IS_BLOCK_GRID_AREA_TYPE_WORKSPACE_CONTEXT,\r\n);\r\n","export const UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_ALIAS = 'Umb.Workspace.BlockGridAreaType';\r\nexport * from './block-grid-area-type-workspace.modal-token.js';\r\nexport { UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_CONTEXT } from './block-grid-area-type-workspace.context-token.js';\r\n","import type { UmbBlockGridEntriesContext } from './block-grid-entries.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\n// TODO: Make discriminator method for this:\r\nexport const UMB_BLOCK_GRID_ENTRIES_CONTEXT = new UmbContextToken<UmbBlockGridEntriesContext>('UmbBlockEntriesContext');\r\n","import type { UmbBlockGridEntryContext } from './block-grid-entry.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\n// TODO: Make discriminator method for this:\r\nexport const UMB_BLOCK_GRID_ENTRY_CONTEXT = new UmbContextToken<UmbBlockGridEntryContext>('UmbBlockEntryContext');\r\n","export const UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS = 'Umbraco.BlockGrid';\r\nexport const UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS = 'Umb.PropertyEditorUi.BlockGrid';\r\n","import type { UmbBlockGridAreaTypeEntriesContext } from './block-grid-area-type-entries.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\nexport const UMB_BLOCK_GRID_AREA_TYPE_ENTRIES_CONTEXT = new UmbContextToken<UmbBlockGridAreaTypeEntriesContext>(\r\n\t'UmbBlockGridAreaTypeEntriesContext',\r\n);\r\n","export * from './block-grid-manager/constants.js';\r\nexport * from './clipboard/constants.js';\r\nexport * from './components/constants.js';\r\nexport * from './context/constants.js';\r\nexport * from './property-editors/constants.js';\r\n\r\nexport const UMB_BLOCK_GRID_TYPE = 'block-grid-type';\r\nexport const UMB_BLOCK_GRID = 'block-grid';\r\n","import type { UmbBlockWorkspaceData, UmbBlockWorkspaceOriginData } from '@umbraco-cms/backoffice/block';\r\nimport type { UmbWorkspaceModalData, UmbWorkspaceModalValue } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport interface UmbBlockGridWorkspaceOriginData extends UmbBlockWorkspaceOriginData {\r\n\tindex: number;\r\n\tparentUnique: string | null;\r\n\tareaKey?: string;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\r\nexport interface UmbBlockGridWorkspaceData extends UmbBlockWorkspaceData<UmbBlockGridWorkspaceOriginData> {}\r\n\r\nexport const UMB_BLOCK_GRID_WORKSPACE_MODAL = new UmbModalToken<UmbBlockGridWorkspaceData, UmbWorkspaceModalValue>(\r\n\t'Umb.Modal.Workspace',\r\n\t{\r\n\t\tmodal: {\r\n\t\t\ttype: 'sidebar',\r\n\t\t\tsize: 'medium',\r\n\t\t},\r\n\t\tdata: {\r\n\t\t\tentityType: 'block',\r\n\t\t\tpreset: {},\r\n\t\t\toriginData: { index: -1, parentUnique: null },\r\n\t\t\tbaseDataPath: undefined as unknown as string,\r\n\t\t},\r\n\t},\r\n\t// Recast the type, so the entityType data prop is not required:\r\n) as UmbModalToken<Omit<UmbWorkspaceModalData, 'entityType'>, UmbWorkspaceModalValue>;\r\n","import type { UmbBlockGridTypeModel } from '../types.js';\r\nimport { UMB_BLOCK_GRID_TYPE } from '../constants.js';\r\nimport type { UmbWorkspaceModalData, UmbWorkspaceModalValue } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport type UmbBlockGridTypeWorkspaceData = UmbWorkspaceModalData<UmbBlockGridTypeModel>;\r\n\r\nexport const UMB_BLOCK_GRID_TYPE_WORKSPACE_MODAL = new UmbModalToken<\r\n\tUmbBlockGridTypeWorkspaceData,\r\n\tUmbWorkspaceModalValue\r\n>(\r\n\t'Umb.Modal.Workspace',\r\n\t{\r\n\t\tmodal: {\r\n\t\t\ttype: 'sidebar',\r\n\t\t\tsize: 'large',\r\n\t\t},\r\n\t\tdata: { entityType: UMB_BLOCK_GRID_TYPE, preset: { allowAtRoot: true, allowInAreas: true } },\r\n\t},\r\n\t// Recast the type, so the entityType data prop is not required:\r\n) as UmbModalToken<Omit<UmbWorkspaceModalData, 'entityType' | 'preset'>, UmbWorkspaceModalValue>;\r\n","export const UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS = 'Umb.Workspace.BlockGridType';\r\nexport * from './block-grid-workspace.modal-token.js';\r\nexport * from './block-grid-type-workspace.modal-token.js';\r\n"],"names":["UMB_BLOCK_GRID_MANAGER_CONTEXT","UmbContextToken","UMB_GRID_BLOCK_CLIPBOARD_ENTRY_VALUE_TYPE","UMB_BLOCK_GRID_AREA_CONFIG_ENTRY_CONTEXT","UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_MODAL","UmbModalToken","UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_CONTEXT","context","UMB_BLOCK_GRID_AREA_TYPE_WORKSPACE_ALIAS","UMB_BLOCK_GRID_ENTRIES_CONTEXT","UMB_BLOCK_GRID_ENTRY_CONTEXT","UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS","UMB_BLOCK_GRID_PROPERTY_EDITOR_UI_ALIAS","UMB_BLOCK_GRID_AREA_TYPE_ENTRIES_CONTEXT","UMB_BLOCK_GRID_TYPE","UMB_BLOCK_GRID","UMB_BLOCK_GRID_WORKSPACE_MODAL","UMB_BLOCK_GRID_TYPE_WORKSPACE_MODAL","UMB_BLOCK_GRID_TYPE_WORKSPACE_ALIAS"],"mappings":";;AAIa,MAAAA,IAAiC,IAAIC,EAGhD,wBAAwB,GCPbC,IAA4C,aCG5CC,IAA2C,IAAIF;AAAA,EAC3D;AACD,GCCaG,IAA2C,IAAIC,EAG1D,uBAAuB;AAAA,EACxB,OAAO;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACP;AAAA,EACA,MAAM,EAAE,YAAY,wBAAwB,QAAQ,CAAG,EAAA;AAAA;AAExD,CAAC,GCZYC,IAA6C,IAAIL;AAAA,EAI7D;AAAA,EACA;AAAA,EACA,CAACM,MACCA,EAAgB;AACnB,GCZaC,IAA2C,mCCI3CC,IAAiC,IAAIR,EAA4C,wBAAwB,GCAzGS,IAA+B,IAAIT,EAA0C,sBAAsB,GCJnGU,IAA8C,qBAC9CC,IAA0C,kCCE1CC,IAA2C,IAAIZ;AAAA,EAC3D;AACD,GCCaa,IAAsB,mBACtBC,IAAiB,cCMjBC,IAAiC,IAAIX;AAAA,EACjD;AAAA,EACA;AAAA,IACC,OAAO;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACP;AAAA,IACA,MAAM;AAAA,MACL,YAAY;AAAA,MACZ,QAAQ,CAAC;AAAA,MACT,YAAY,EAAE,OAAO,IAAI,cAAc,KAAK;AAAA,MAC5C,cAAc;AAAA,IAAA;AAAA,EACf;AAAA;AAGF,GCrBaY,IAAsC,IAAIZ;AAAA,EAItD;AAAA,EACA;AAAA,IACC,OAAO;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACP;AAAA,IACA,MAAM,EAAE,YAAYS,GAAqB,QAAQ,EAAE,aAAa,IAAM,cAAc,GAAO,EAAA;AAAA,EAAA;AAAA;AAG7F,GCpBaI,IAAsC;"}