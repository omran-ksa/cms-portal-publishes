{"version":3,"file":"media-collection.context-3IU4XKIH.js","sources":["../../../src/packages/media/media/collection/media-collection.context.ts"],"sourcesContent":["import { UMB_MEDIA_PLACEHOLDER_ENTITY_TYPE } from '../entity.js';\r\nimport { UMB_MEDIA_GRID_COLLECTION_VIEW_ALIAS } from './views/constants.js';\r\nimport type { UmbMediaCollectionFilterModel, UmbMediaCollectionItemModel } from './types.js';\r\nimport type { UmbFileDropzoneItemStatus } from '@umbraco-cms/backoffice/dropzone';\r\nimport { UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbArrayState } from '@umbraco-cms/backoffice/observable-api';\r\nexport class UmbMediaCollectionContext extends UmbDefaultCollectionContext<\r\n\tUmbMediaCollectionItemModel,\r\n\tUmbMediaCollectionFilterModel\r\n> {\r\n\t/**\r\n\t * The thumbnail items that are currently displayed in the collection.\r\n\t * @deprecated Use the `<umb-imaging-thumbnail>` element instead. This will be removed in Umbraco 17.\r\n\t */\r\n\tpublic readonly thumbnailItems = this.items;\r\n\r\n\t#placeholders = new UmbArrayState<UmbMediaCollectionItemModel>([], (x) => x.unique);\r\n\tpublic readonly placeholders = this.#placeholders.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_MEDIA_GRID_COLLECTION_VIEW_ALIAS);\r\n\t}\r\n\r\n\tsetPlaceholders(partial: Array<{ unique: string; status: UmbFileDropzoneItemStatus; name?: string }>) {\r\n\t\tconst items = this._items.getValue();\r\n\r\n\t\t// We do not want to set a placeholder which unique already exists in the collection.\r\n\t\tconst date = new Date();\r\n\t\tconst placeholders: Array<UmbMediaCollectionItemModel> = partial\r\n\t\t\t.filter((placeholder) => !items.find((item) => item.unique === placeholder.unique))\r\n\t\t\t.map((placeholder) => ({\r\n\t\t\t\tupdateDate: date,\r\n\t\t\t\tcreateDate: date,\r\n\t\t\t\tentityType: UMB_MEDIA_PLACEHOLDER_ENTITY_TYPE,\r\n\t\t\t\t...placeholder,\r\n\t\t\t}))\r\n\t\t\t.reverse();\r\n\t\tthis.#placeholders.setValue(placeholders);\r\n\r\n\t\tthis._items.setValue([...placeholders, ...items]);\r\n\t\tthis._totalItems.setValue(placeholders.length + items.length);\r\n\t\tthis.pagination.setTotalItems(placeholders.length + items.length);\r\n\t}\r\n\r\n\tupdatePlaceholderStatus(unique: string, status?: UmbFileDropzoneItemStatus) {\r\n\t\tthis._items.updateOne(unique, { status });\r\n\t\tthis.#placeholders.updateOne(unique, { status });\r\n\t}\r\n\r\n\tupdatePlaceholderProgress(unique: string, progress: number) {\r\n\t\tthis._items.updateOne(unique, { progress });\r\n\t\tthis.#placeholders.updateOne(unique, { progress });\r\n\t}\r\n\r\n\t/**\r\n\t * Requests the collection from the repository.\r\n\t * @returns {Promise<void>}\r\n\t * @memberof UmbCollectionContext\r\n\t */\r\n\tpublic override async requestCollection() {\r\n\t\tawait this._init;\r\n\r\n\t\tif (!this._configured) this._configure();\r\n\r\n\t\tif (!this._repository) throw new Error(`Missing repository for ${this._manifest}`);\r\n\r\n\t\tthis._loading.setValue(true);\r\n\r\n\t\tconst filter = this._filter.getValue();\r\n\t\tconst { data } = await this._repository.requestCollection(filter);\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#cleanupPlaceholdersFromCollection(data.items);\r\n\t\t\tconst placeholders = this.#placeholders.getValue();\r\n\r\n\t\t\tthis._items.setValue([...placeholders, ...data.items]);\r\n\t\t\tthis._totalItems.setValue(placeholders.length + data.total);\r\n\t\t\tthis.pagination.setTotalItems(placeholders.length + data.total);\r\n\t\t}\r\n\r\n\t\tthis._loading.setValue(false);\r\n\t}\r\n\r\n\t#cleanupPlaceholdersFromCollection(collection: Array<UmbMediaCollectionItemModel>) {\r\n\t\tconst placeholderItems = this.#placeholders.getValue();\r\n\r\n\t\tconst dataSet = new Set(collection.map((item) => item.unique));\r\n\t\tconst completedPlaceholders = placeholderItems.filter((item) => dataSet.has(item.unique));\r\n\t\tcompletedPlaceholders.forEach((placeholder) => {\r\n\t\t\tthis.#placeholders.removeOne(placeholder.unique);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport { UmbMediaCollectionContext as api };\r\n"],"names":["UmbMediaCollectionContext","UmbDefaultCollectionContext","host","UMB_MEDIA_GRID_COLLECTION_VIEW_ALIAS","#placeholders","UmbArrayState","x","partial","items","date","placeholders","placeholder","item","UMB_MEDIA_PLACEHOLDER_ENTITY_TYPE","unique","status","progress","filter","data","#cleanupPlaceholdersFromCollection","collection","placeholderItems","dataSet"],"mappings":";;;;AAOO,MAAMA,UAAkCC,EAG7C;AAAA,EAUD,YAAYC,GAAyB;AACpC,UAAMA,GAAMC,CAAoC,GANjD,KAAgB,iBAAiB,KAAK,OAEtC,KAAAC,KAAgB,IAAIC,EAA2C,IAAI,CAACC,MAAMA,EAAE,MAAM,GAClE,KAAA,eAAe,KAAKF,GAAc,aAAa;AAAA,EAAA;AAAA,EAD/DA;AAAA,EAOA,gBAAgBG,GAAsF;AAC/F,UAAAC,IAAQ,KAAK,OAAO,SAAS,GAG7BC,wBAAW,KAAK,GAChBC,IAAmDH,EACvD,OAAO,CAACI,MAAgB,CAACH,EAAM,KAAK,CAACI,MAASA,EAAK,WAAWD,EAAY,MAAM,CAAC,EACjF,IAAI,CAACA,OAAiB;AAAA,MACtB,YAAYF;AAAA,MACZ,YAAYA;AAAA,MACZ,YAAYI;AAAA,MACZ,GAAGF;AAAA,IAAA,EACF,EACD,QAAQ;AACL,SAAAP,GAAc,SAASM,CAAY,GAExC,KAAK,OAAO,SAAS,CAAC,GAAGA,GAAc,GAAGF,CAAK,CAAC,GAChD,KAAK,YAAY,SAASE,EAAa,SAASF,EAAM,MAAM,GAC5D,KAAK,WAAW,cAAcE,EAAa,SAASF,EAAM,MAAM;AAAA,EAAA;AAAA,EAGjE,wBAAwBM,GAAgBC,GAAoC;AAC3E,SAAK,OAAO,UAAUD,GAAQ,EAAE,QAAAC,GAAQ,GACxC,KAAKX,GAAc,UAAUU,GAAQ,EAAE,QAAAC,GAAQ;AAAA,EAAA;AAAA,EAGhD,0BAA0BD,GAAgBE,GAAkB;AAC3D,SAAK,OAAO,UAAUF,GAAQ,EAAE,UAAAE,GAAU,GAC1C,KAAKZ,GAAc,UAAUU,GAAQ,EAAE,UAAAE,GAAU;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlD,MAAsB,oBAAoB;AAKrC,QAJJ,MAAM,KAAK,OAEN,KAAK,eAAa,KAAK,WAAW,GAEnC,CAAC,KAAK,YAAa,OAAM,IAAI,MAAM,0BAA0B,KAAK,SAAS,EAAE;AAE5E,SAAA,SAAS,SAAS,EAAI;AAErB,UAAAC,IAAS,KAAK,QAAQ,SAAS,GAC/B,EAAE,MAAAC,EAAK,IAAI,MAAM,KAAK,YAAY,kBAAkBD,CAAM;AAEhE,QAAIC,GAAM;AACJ,WAAAC,GAAmCD,EAAK,KAAK;AAC5C,YAAAR,IAAe,KAAKN,GAAc,SAAS;AAE5C,WAAA,OAAO,SAAS,CAAC,GAAGM,GAAc,GAAGQ,EAAK,KAAK,CAAC,GACrD,KAAK,YAAY,SAASR,EAAa,SAASQ,EAAK,KAAK,GAC1D,KAAK,WAAW,cAAcR,EAAa,SAASQ,EAAK,KAAK;AAAA,IAAA;AAG1D,SAAA,SAAS,SAAS,EAAK;AAAA,EAAA;AAAA,EAG7BC,GAAmCC,GAAgD;AAC5E,UAAAC,IAAmB,KAAKjB,GAAc,SAAS,GAE/CkB,IAAU,IAAI,IAAIF,EAAW,IAAI,CAACR,MAASA,EAAK,MAAM,CAAC;AAEvC,IADQS,EAAiB,OAAO,CAACT,MAASU,EAAQ,IAAIV,EAAK,MAAM,CAAC,EAClE,QAAQ,CAACD,MAAgB;AACzC,WAAAP,GAAc,UAAUO,EAAY,MAAM;AAAA,IAAA,CAC/C;AAAA,EAAA;AAEH;"}