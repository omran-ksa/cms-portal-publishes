{"version":3,"file":"property-editor-ui-media-picker.element-BLGU8JVb.js","sources":["../../../src/packages/media/media/property-editors/media-picker/property-editor-ui-media-picker.element.ts"],"sourcesContent":["import type { UmbInputRichMediaElement } from '../../components/input-rich-media/input-rich-media.element.js';\r\nimport type { UmbCropModel, UmbMediaPickerValueModel } from '../types.js';\r\nimport { UMB_MEDIA_ENTITY_TYPE } from '../../entity.js';\r\nimport { customElement, html, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_PROPERTY_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport type { UmbNumberRangeValueType } from '@umbraco-cms/backoffice/models';\r\nimport type {\r\n\tUmbPropertyEditorConfigCollection,\r\n\tUmbPropertyEditorUiElement,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\nimport type { UmbTreeStartNode } from '@umbraco-cms/backoffice/tree';\r\nimport { UMB_VALIDATION_EMPTY_LOCALIZATION_KEY, UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\nimport '../../components/input-rich-media/input-rich-media.element.js';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\n\r\nconst elementName = 'umb-property-editor-ui-media-picker';\r\n\r\n/**\r\n * @element umb-property-editor-ui-media-picker\r\n */\r\n@customElement(elementName)\r\nexport class UmbPropertyEditorUIMediaPickerElement\r\n\textends UmbFormControlMixin<UmbMediaPickerValueModel | undefined, typeof UmbLitElement, undefined>(UmbLitElement)\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n\t\tif (!config) return;\r\n\r\n\t\tthis._allowedMediaTypes = config.getValueByAlias<string>('filter')?.split(',') ?? [];\r\n\t\tthis._focalPointEnabled = Boolean(config.getValueByAlias('enableLocalFocalPoint'));\r\n\t\tthis._multiple = Boolean(config.getValueByAlias('multiple'));\r\n\t\tthis._preselectedCrops = config?.getValueByAlias<Array<UmbCropModel>>('crops') ?? [];\r\n\r\n\t\tconst startNodeId = config.getValueByAlias<string>('startNodeId') ?? '';\r\n\t\tthis._startNode = startNodeId ? { unique: startNodeId, entityType: UMB_MEDIA_ENTITY_TYPE } : undefined;\r\n\r\n\t\tconst minMax = config.getValueByAlias<UmbNumberRangeValueType>('validationLimit');\r\n\t\tthis._min = minMax?.min ?? 0;\r\n\t\tthis._max = minMax?.max ?? Infinity;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the input to mandatory, meaning validation will fail if the value is empty.\r\n\t * @type {boolean}\r\n\t */\r\n\t@property({ type: Boolean })\r\n\tmandatory?: boolean;\r\n\r\n\t@property({ type: String })\r\n\tmandatoryMessage = UMB_VALIDATION_EMPTY_LOCALIZATION_KEY;\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@state()\r\n\tprivate _startNode?: UmbTreeStartNode;\r\n\r\n\t@state()\r\n\tprivate _focalPointEnabled: boolean = false;\r\n\r\n\t@state()\r\n\tprivate _preselectedCrops: Array<UmbCropModel> = [];\r\n\r\n\t@state()\r\n\tprivate _allowedMediaTypes: Array<string> = [];\r\n\r\n\t@state()\r\n\tprivate _multiple: boolean = false;\r\n\r\n\t@state()\r\n\tprivate _min: number = 0;\r\n\r\n\t@state()\r\n\tprivate _max: number = Infinity;\r\n\r\n\t@state()\r\n\tprivate _alias?: string;\r\n\r\n\t@state()\r\n\tprivate _variantId?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_CONTEXT, (context) => {\r\n\t\t\tthis.observe(context?.alias, (alias) => (this._alias = alias));\r\n\t\t\tthis.observe(context?.variantId, (variantId) => (this._variantId = variantId?.toString() || 'invariant'));\r\n\t\t});\r\n\t}\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis.addFormControlElement(this.shadowRoot!.querySelector('umb-input-rich-media')!);\r\n\t}\r\n\r\n\toverride focus() {\r\n\t\treturn this.shadowRoot?.querySelector<UmbInputRichMediaElement>('umb-input-rich-media')?.focus();\r\n\t}\r\n\r\n\t#onChange(event: CustomEvent & { target: UmbInputRichMediaElement }) {\r\n\t\tconst isEmpty = event.target.value?.length === 0;\r\n\t\tthis.value = isEmpty ? undefined : event.target.value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-input-rich-media\r\n\t\t\t\t.alias=${this._alias}\r\n\t\t\t\t.allowedContentTypeIds=${this._allowedMediaTypes}\r\n\t\t\t\t.focalPointEnabled=${this._focalPointEnabled}\r\n\t\t\t\t.value=${this.value ?? []}\r\n\t\t\t\t.max=${this._max}\r\n\t\t\t\t.min=${this._min}\r\n\t\t\t\t.preselectedCrops=${this._preselectedCrops}\r\n\t\t\t\t.startNode=${this._startNode}\r\n\t\t\t\t.variantId=${this._variantId}\r\n\t\t\t\t.required=${this.mandatory}\r\n\t\t\t\t.requiredMessage=${this.mandatoryMessage}\r\n\t\t\t\t?multiple=${this._multiple}\r\n\t\t\t\t@change=${this.#onChange}\r\n\t\t\t\t?readonly=${this.readonly}>\r\n\t\t\t</umb-input-rich-media>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport { UmbPropertyEditorUIMediaPickerElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: UmbPropertyEditorUIMediaPickerElement;\r\n\t}\r\n}\r\n"],"names":["_UmbPropertyEditorUIMediaPickerElement_instances","onChange_fn","elementName","UmbPropertyEditorUIMediaPickerElement","UmbFormControlMixin","UmbLitElement","__privateAdd","UMB_VALIDATION_EMPTY_LOCALIZATION_KEY","UMB_PROPERTY_CONTEXT","context","alias","variantId","config","startNodeId","UMB_MEDIA_ENTITY_TYPE","minMax","html","__privateMethod","event","isEmpty","UmbChangeEvent","__decorateClass","property","state","customElement"],"mappings":"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"}