{"version":3,"file":"media-workspace-editor.element-B6qcjTWT.js","sources":["../../../src/packages/media/media/workspace/media-workspace-split-view.element.ts","../../../src/packages/media/media/workspace/media-workspace-editor.element.ts"],"sourcesContent":["import { UMB_MEDIA_WORKSPACE_CONTEXT } from './media-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, nothing, customElement, state, repeat, ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { ActiveVariant } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-media-workspace-split-view')\r\nexport class UmbMediaWorkspaceSplitViewElement extends UmbLitElement {\r\n\t// TODO: Refactor: use the split view context token:\r\n\tprivate _workspaceContext?: typeof UMB_MEDIA_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\t_variants?: Array<ActiveVariant>;\r\n\r\n\t@state()\r\n\t_icon?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t// TODO: Refactor: use a split view workspace context token:\r\n\t\tthis.consumeContext(UMB_MEDIA_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis._workspaceContext = context;\r\n\t\t\tthis.#observeActiveVariantInfo();\r\n\t\t\tthis.#observeIcon();\r\n\t\t});\r\n\t}\r\n\r\n\t#observeActiveVariantInfo() {\r\n\t\tif (!this._workspaceContext) return;\r\n\t\tthis.observe(\r\n\t\t\tthis._workspaceContext.splitView.activeVariantsInfo,\r\n\t\t\t(variants) => {\r\n\t\t\t\tthis._variants = variants;\r\n\t\t\t},\r\n\t\t\t'_observeActiveVariantsInfo',\r\n\t\t);\r\n\t}\r\n\r\n\t#observeIcon() {\r\n\t\tif (!this._workspaceContext) return;\r\n\t\tthis.observe(this._workspaceContext.contentTypeIcon, (icon) => {\r\n\t\t\tthis._icon = icon ?? undefined;\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._variants\r\n\t\t\t? html`<div id=\"splitViews\">\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tthis._variants,\r\n\t\t\t\t\t\t\t(view) =>\r\n\t\t\t\t\t\t\t\tview.index + '_' + (view.culture ?? '') + '_' + (view.segment ?? '') + '_' + this._variants!.length,\r\n\t\t\t\t\t\t\t(view) => html`\r\n\t\t\t\t\t\t\t\t<umb-workspace-split-view\r\n\t\t\t\t\t\t\t\t\t.splitViewIndex=${view.index}\r\n\t\t\t\t\t\t\t\t\t.displayNavigation=${view.index === this._variants!.length - 1}>\r\n\t\t\t\t\t\t\t\t\t<umb-icon slot=\"icon\" name=${ifDefined(this._icon)}></umb-icon>\r\n\t\t\t\t\t\t\t\t</umb-workspace-split-view>\r\n\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<umb-workspace-footer alias=\"Umb.Workspace.Media\"></umb-workspace-footer>`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\r\n\t\t\t#splitViews {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: calc(100% - var(--umb-footer-layout-height));\r\n\t\t\t}\r\n\r\n\t\t\t#breadcrumbs {\r\n\t\t\t\tmargin: 0 var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbMediaWorkspaceSplitViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-media-workspace-split-view': UmbMediaWorkspaceSplitViewElement;\r\n\t}\r\n}\r\n","import type { UmbMediaVariantOptionModel } from '../types.js';\r\nimport { UmbMediaWorkspaceSplitViewElement } from './media-workspace-split-view.element.js';\r\nimport { UMB_MEDIA_WORKSPACE_CONTEXT } from './media-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { customElement, state, css, html } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbRoute, UmbRouterSlotInitEvent } from '@umbraco-cms/backoffice/router';\r\n\r\n@customElement('umb-media-workspace-editor')\r\nexport class UmbMediaWorkspaceEditorElement extends UmbLitElement {\r\n\t//\r\n\t// TODO: Refactor: when having a split view/variants context token, we can rename the split view/variants component to a generic and make this component generic as well. [NL]\r\n\tprivate splitViewElement = new UmbMediaWorkspaceSplitViewElement();\r\n\r\n\t#workspaceContext?: typeof UMB_MEDIA_WORKSPACE_CONTEXT.TYPE;\r\n\t#variants?: Array<UmbMediaVariantOptionModel>;\r\n\t#isForbidden = false;\r\n\r\n\t@state()\r\n\t_routes?: Array<UmbRoute>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_MEDIA_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tthis.#workspaceContext = instance;\r\n\t\t\tthis.#observeVariants();\r\n\t\t\tthis.#observeForbidden();\r\n\t\t});\r\n\t}\r\n\r\n\t#observeVariants() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#workspaceContext?.variantOptions,\r\n\t\t\t(options) => {\r\n\t\t\t\tthis.#variants = options;\r\n\t\t\t\tthis._generateRoutes();\r\n\t\t\t},\r\n\t\t\t'_observeVariants',\r\n\t\t);\r\n\t}\r\n\r\n\t#observeForbidden() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#workspaceContext?.forbidden.isOn,\r\n\t\t\t(forbidden) => {\r\n\t\t\t\tthis.#isForbidden = forbidden ?? false;\r\n\t\t\t\tthis._generateRoutes();\r\n\t\t\t},\r\n\t\t\t'_observeForbidden',\r\n\t\t);\r\n\t}\r\n\r\n\tprivate _handleVariantFolderPart(index: number, folderPart: string) {\r\n\t\tconst variantSplit = folderPart.split('_');\r\n\t\tconst culture = variantSplit[0];\r\n\t\tconst segment = variantSplit[1];\r\n\t\tthis.#workspaceContext?.splitView.setActiveVariant(index, culture, segment);\r\n\t}\r\n\r\n\tprivate async _generateRoutes() {\r\n\t\t// Generate split view routes for all available routes\r\n\t\tconst routes: Array<UmbRoute> = [];\r\n\r\n\t\t// Split view routes:\r\n\t\tthis.#variants?.forEach((variantA) => {\r\n\t\t\tthis.#variants?.forEach((variantB) => {\r\n\t\t\t\troutes.push({\r\n\t\t\t\t\t// TODO: When implementing Segments, be aware if using the unique is URL Safe... [NL]\r\n\t\t\t\t\tpath: variantA.unique + '_&_' + variantB.unique,\r\n\t\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t\t// Set split view/active info..\r\n\t\t\t\t\t\tconst variantSplit = info.match.fragments.consumed.split('_&_');\r\n\t\t\t\t\t\tvariantSplit.forEach((part, index) => {\r\n\t\t\t\t\t\t\tthis._handleVariantFolderPart(index, part);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Single view:\r\n\t\tthis.#variants?.forEach((variant) => {\r\n\t\t\troutes.push({\r\n\t\t\t\t// TODO: When implementing Segments, be aware if using the unique is URL Safe... [NL]\r\n\t\t\t\tpath: variant.unique,\r\n\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t// cause we might come from a split-view, we need to reset index 1.\r\n\t\t\t\t\tthis.#workspaceContext?.splitView.removeActiveVariant(1);\r\n\t\t\t\t\tthis._handleVariantFolderPart(0, info.match.fragments.consumed);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (routes.length !== 0 && this.#variants?.length) {\r\n\t\t\t// Using first single view as the default route for now (hence the math below):\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: '',\r\n\t\t\t\tpathMatch: 'full',\r\n\t\t\t\tredirectTo: routes[this.#variants.length * this.#variants.length]?.path,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\troutes.push({\r\n\t\t\tpath: `**`,\r\n\t\t\tcomponent: async () => {\r\n\t\t\t\tconst router = await import('@umbraco-cms/backoffice/router');\r\n\t\t\t\treturn this.#isForbidden ? router.UmbRouteForbiddenElement : router.UmbRouteNotFoundElement;\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis._routes = routes;\r\n\t}\r\n\r\n\tprivate _gotWorkspaceRoute = (e: UmbRouterSlotInitEvent) => {\r\n\t\tthis.#workspaceContext?.splitView.setWorkspaceRoute(e.target.absoluteRouterPath);\r\n\t};\r\n\r\n\toverride render() {\r\n\t\treturn this._routes && this._routes.length > 0\r\n\t\t\t? html`<umb-router-slot .routes=${this._routes} @init=${this._gotWorkspaceRoute}></umb-router-slot>`\r\n\t\t\t: '';\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbMediaWorkspaceEditorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-media-workspace-editor': UmbMediaWorkspaceEditorElement;\r\n\t}\r\n}\r\n"],"names":["_UmbMediaWorkspaceSplitViewElement_instances","observeActiveVariantInfo_fn","observeIcon_fn","UmbMediaWorkspaceSplitViewElement","UmbLitElement","__privateAdd","UMB_MEDIA_WORKSPACE_CONTEXT","context","__privateMethod","html","repeat","view","ifDefined","nothing","variants","icon","UmbTextStyles","css","__decorateClass","state","customElement","_workspaceContext","_variants","_isForbidden","_UmbMediaWorkspaceEditorElement_instances","observeVariants_fn","observeForbidden_fn","UmbMediaWorkspaceEditorElement","e","__privateGet","instance","__privateSet","index","folderPart","variantSplit","culture","segment","routes","variantA","variantB","_component","info","part","variant","router","options","forbidden","UmbMediaWorkspaceEditorElement$1"],"mappings":"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"}