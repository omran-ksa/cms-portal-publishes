{"version":3,"file":"media-recycle-bin.server.data-source-RYxMu8et.js","sources":["../../../src/packages/media/media/recycle-bin/repository/media-recycle-bin.server.data-source.ts"],"sourcesContent":["import type {\r\n\tUmbRecycleBinDataSource,\r\n\tUmbRecycleBinRestoreRequestArgs,\r\n\tUmbRecycleBinTrashRequestArgs,\r\n\tUmbRecycleBinOriginalParentRequestArgs,\r\n} from '@umbraco-cms/backoffice/recycle-bin';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { MediaService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\nexport class UmbMediaRecycleBinServerDataSource implements UmbRecycleBinDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\ttrash(args: UmbRecycleBinTrashRequestArgs) {\r\n\t\treturn tryExecute(this.#host, MediaService.putMediaByIdMoveToRecycleBin({ path: { id: args.unique } }));\r\n\t}\r\n\r\n\trestore(args: UmbRecycleBinRestoreRequestArgs) {\r\n\t\treturn tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tMediaService.putRecycleBinMediaByIdRestore({\r\n\t\t\t\tpath: { id: args.unique },\r\n\t\t\t\tbody: {\r\n\t\t\t\t\ttarget: args.destination.unique ? { id: args.destination.unique } : null,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\tempty() {\r\n\t\treturn tryExecute(this.#host, MediaService.deleteRecycleBinMedia());\r\n\t}\r\n\r\n\tasync getOriginalParent(args: UmbRecycleBinOriginalParentRequestArgs) {\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tMediaService.getRecycleBinMediaByIdOriginalParent({ path: { id: args.unique } }),\r\n\t\t);\r\n\r\n\t\t// only check for undefined because data can be null if the parent is the root\r\n\t\tif (data !== undefined) {\r\n\t\t\tconst mappedData = data ? { unique: data.id } : null;\r\n\t\t\treturn { data: mappedData };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n"],"names":["UmbMediaRecycleBinServerDataSource","#host","host","args","tryExecute","MediaService","data","error"],"mappings":";;AAUO,MAAMA,EAAsE;AAAA,EAClFC;AAAA,EAEA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA,EAGd,MAAMC,GAAqC;AAC1C,WAAOC,EAAW,KAAKH,IAAOI,EAAa,6BAA6B,EAAE,MAAM,EAAE,IAAIF,EAAK,OAAO,EAAG,CAAA,CAAC;AAAA,EAAA;AAAA,EAGvG,QAAQA,GAAuC;AACvC,WAAAC;AAAA,MACN,KAAKH;AAAA,MACLI,EAAa,8BAA8B;AAAA,QAC1C,MAAM,EAAE,IAAIF,EAAK,OAAO;AAAA,QACxB,MAAM;AAAA,UACL,QAAQA,EAAK,YAAY,SAAS,EAAE,IAAIA,EAAK,YAAY,WAAW;AAAA,QAAA;AAAA,MAErE,CAAA;AAAA,IACF;AAAA,EAAA;AAAA,EAGD,QAAQ;AACP,WAAOC,EAAW,KAAKH,IAAOI,EAAa,uBAAuB;AAAA,EAAA;AAAA,EAGnE,MAAM,kBAAkBF,GAA8C;AACrE,UAAM,EAAE,MAAAG,GAAM,OAAAC,EAAM,IAAI,MAAMH;AAAA,MAC7B,KAAKH;AAAA,MACLI,EAAa,qCAAqC,EAAE,MAAM,EAAE,IAAIF,EAAK,SAAU,CAAA;AAAA,IAChF;AAGA,WAAIG,MAAS,SAEL,EAAE,MADUA,IAAO,EAAE,QAAQA,EAAK,OAAO,KACtB,IAGpB,EAAE,OAAAC,EAAM;AAAA,EAAA;AAEjB;"}