{"version":3,"file":"property-editor-ui-media-type-picker.element-8UMBoQOq.js","sources":["../../../src/packages/media/media-types/property-editors/media-type-picker/property-editor-ui-media-type-picker.element.ts"],"sourcesContent":["import type { UmbInputMediaTypeElement } from '../../components/index.js';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { html, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbNumberRangeValueType } from '@umbraco-cms/backoffice/models';\r\nimport type {\r\n\tUmbPropertyEditorConfigCollection,\r\n\tUmbPropertyEditorUiElement,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\n\r\n@customElement('umb-property-editor-ui-media-type-picker')\r\nexport class UmbPropertyEditorUIMediaTypePickerElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n\t@property()\r\n\tpublic value?: string;\r\n\r\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n\t\tif (!config) return;\r\n\r\n\t\tconst minMax = config?.getValueByAlias<UmbNumberRangeValueType>('validationLimit');\r\n\t\tthis._min = minMax?.min ?? 0;\r\n\t\tthis._max = minMax?.max ?? Infinity;\r\n\t}\r\n\r\n\t@state()\r\n\t_min = 0;\r\n\r\n\t@state()\r\n\t_max = Infinity;\r\n\r\n\t#onChange(event: CustomEvent & { target: UmbInputMediaTypeElement }) {\r\n\t\tthis.value = event.target.value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-input-media-type .min=${this._min} .max=${this._max} .value=${this.value} @change=${this.#onChange}>\r\n\t\t\t</umb-input-media-type>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default UmbPropertyEditorUIMediaTypePickerElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-media-type-picker': UmbPropertyEditorUIMediaTypePickerElement;\r\n\t}\r\n}\r\n"],"names":["_UmbPropertyEditorUIMediaTypePickerElement_instances","onChange_fn","UmbPropertyEditorUIMediaTypePickerElement","UmbLitElement","__privateAdd","config","minMax","html","__privateMethod","event","UmbChangeEvent","__decorateClass","property","state","customElement","UmbPropertyEditorUIMediaTypePickerElement$1"],"mappings":";;;;;;;;;8OAAAA,GAAAC;AAWa,IAAAC,IAAN,cAAwDC,EAAoD;AAAA,EAA5G,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAJ,CAAA,GAaC,KAAA,OAAA,GAGA,KAAA,OAAA;AAAA,EAAA;AAAA,EAZP,IAAW,OAAOK,GAAuD;AACxE,QAAI,CAACA,EAAQ;AAEP,UAAAC,IAASD,GAAQ,gBAAyC,iBAAiB;AAC5E,SAAA,OAAOC,GAAQ,OAAO,GACtB,KAAA,OAAOA,GAAQ,OAAO;AAAA,EAAA;AAAA,EAcnB,SAAS;AACV,WAAAC;AAAA,gCACuB,KAAK,IAAI,SAAS,KAAK,IAAI,WAAW,KAAK,KAAK,YAAYC,EAAA,MAAKR,GAASC,CAAA,CAAA;AAAA;AAAA;AAAA,EAAA;AAI1G;AA7BOD,IAAA,oBAAA,QAAA;AAkBNC,IAAS,SAACQ,GAA2D;AAC/D,OAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAIC,GAAgB;AACxC;AAnBOC,EAAA;AAAA,EADNC,EAAS;AAAA,GADEV,EAEL,WAAA,SAAA,CAAA;AAWPS,EAAA;AAAA,EADCE,EAAM;AAAA,GAZKX,EAaZ,WAAA,QAAA,CAAA;AAGAS,EAAA;AAAA,EADCE,EAAM;AAAA,GAfKX,EAgBZ,WAAA,QAAA,CAAA;AAhBYA,IAANS,EAAA;AAAA,EADNG,EAAc,0CAA0C;AAAA,GAC5CZ,CAAA;AA+Bb,MAAAa,IAAeb;"}