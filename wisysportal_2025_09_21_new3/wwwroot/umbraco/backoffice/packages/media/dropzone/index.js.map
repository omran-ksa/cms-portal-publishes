{"version":3,"file":"index.js","sources":["../../../../src/packages/media/dropzone/constants.ts","../../../../src/packages/media/dropzone/dropzone-manager.class.ts","../../../../src/packages/media/dropzone/dropzone-change.event.ts","../../../../src/packages/media/dropzone/dropzone-submitted.event.ts","../../../../src/packages/media/dropzone/components/input-dropzone/input-dropzone.element.ts"],"sourcesContent":["export enum UmbFileDropzoneItemStatus {\r\n\tWAITING = 'waiting',\r\n\tCOMPLETE = 'complete',\r\n\tNOT_ALLOWED = 'not allowed',\r\n\tCANCELLED = 'cancelled',\r\n\tERROR = 'error',\r\n}\r\n","import { UmbFileDropzoneItemStatus } from './constants.js';\r\nimport type {\r\n\tUmbUploadableFile,\r\n\tUmbFileDropzoneDroppedItems,\r\n\tUmbFileDropzoneProgress,\r\n\tUmbUploadableItem,\r\n} from './types.js';\r\nimport {\r\n\tTemporaryFileStatus,\r\n\tUmbTemporaryFileManager,\r\n\ttype UmbTemporaryFileModel,\r\n} from '@umbraco-cms/backoffice/temporary-file';\r\nimport { UmbArrayState, UmbObjectState } from '@umbraco-cms/backoffice/observable-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\n\r\n/**\r\n * Manages the dropzone and uploads folders and files to the server.\r\n * @function createMediaItems - Upload files and folders to the server and creates the items using corresponding media type.\r\n * @function createTemporaryFiles - Upload the files as temporary files and returns the data.\r\n * @observable progress - Emits the number of completed items and total items.\r\n * @observable progressItems - Emits the items with their current status.\r\n */\r\nexport class UmbDropzoneManager extends UmbControllerBase {\r\n\tprotected readonly _tempFileManager = new UmbTemporaryFileManager(this);\r\n\r\n\treadonly #progress = new UmbObjectState<UmbFileDropzoneProgress>({ total: 0, completed: 0 });\r\n\tpublic readonly progress = this.#progress.asObservable();\r\n\r\n\treadonly #progressItems = new UmbArrayState<UmbUploadableItem>([], (x) => x.unique);\r\n\tpublic readonly progressItems = this.#progressItems.asObservable();\r\n\r\n\t/**\r\n\t * Uploads the files as temporary files and returns the data.\r\n\t * @param { File[] } files - The files to upload.\r\n\t * @returns {Promise<Array<UmbUploadableItem>>} - Files as temporary files.\r\n\t */\r\n\tpublic async createTemporaryFiles(files: Array<File>): Promise<Array<UmbUploadableItem>> {\r\n\t\tconst uploadableItems = this._setupProgress({ files, folders: [] }, null) as Array<UmbUploadableFile>;\r\n\r\n\t\tconst uploadedItems: Array<UmbUploadableItem> = [];\r\n\r\n\t\tfor (const item of uploadableItems) {\r\n\t\t\t// Upload as temp file\r\n\t\t\tconst uploaded = await this._tempFileManager.uploadOne(item.temporaryFile);\r\n\r\n\t\t\t// Update progress\r\n\t\t\tif (uploaded.status === TemporaryFileStatus.CANCELLED) {\r\n\t\t\t\tthis._updateStatus(item, UmbFileDropzoneItemStatus.CANCELLED);\r\n\t\t\t} else if (uploaded.status === TemporaryFileStatus.SUCCESS) {\r\n\t\t\t\tthis._updateStatus(item, UmbFileDropzoneItemStatus.COMPLETE);\r\n\t\t\t} else {\r\n\t\t\t\tthis._updateStatus(item, UmbFileDropzoneItemStatus.ERROR);\r\n\t\t\t}\r\n\r\n\t\t\t// Add to return value\r\n\t\t\tuploadedItems.push(item);\r\n\t\t}\r\n\r\n\t\treturn uploadedItems;\r\n\t}\r\n\r\n\tpublic removeOne(item: UmbUploadableItem) {\r\n\t\titem.temporaryFile?.abortController?.abort();\r\n\t\tthis.#progressItems.removeOne(item.unique);\r\n\t\tif (item.temporaryFile) {\r\n\t\t\tthis._tempFileManager.removeOne(item.temporaryFile.temporaryUnique);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic remove(items: Array<UmbUploadableItem>) {\r\n\t\tconst uniques: string[] = [];\r\n\t\tfor (const item of items) {\r\n\t\t\titem.temporaryFile?.abortController?.abort();\r\n\t\t\tif (item.temporaryFile) {\r\n\t\t\t\tuniques.push(item.temporaryFile.temporaryUnique);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.#progressItems.remove(uniques);\r\n\t\tconst temporaryUniques = items.map((x) => x.temporaryFile?.temporaryUnique).filter((x): x is string => !!x);\r\n\t\tthis._tempFileManager.remove(temporaryUniques);\r\n\t}\r\n\r\n\tpublic removeAll() {\r\n\t\tfor (const item of this.#progressItems.getValue()) {\r\n\t\t\titem.temporaryFile?.abortController?.abort();\r\n\t\t}\r\n\t\tthis.#progressItems.setValue([]);\r\n\t\tthis._tempFileManager.removeAll();\r\n\t}\r\n\r\n\t// Progress handling\r\n\tprotected _setupProgress(items: UmbFileDropzoneDroppedItems, parent: string | null) {\r\n\t\tconst current = this.#progress.getValue();\r\n\t\tconst currentItems = this.#progressItems.getValue();\r\n\r\n\t\tconst uploadableItems = this.#prepareItemsAsUploadable({ folders: items.folders, files: items.files }, parent);\r\n\r\n\t\tthis.#progressItems.setValue([...currentItems, ...uploadableItems]);\r\n\t\tthis.#progress.setValue({ total: current.total + uploadableItems.length, completed: current.completed });\r\n\r\n\t\treturn uploadableItems;\r\n\t}\r\n\r\n\tprotected _updateStatus(item: UmbUploadableItem, status: UmbFileDropzoneItemStatus) {\r\n\t\tthis.#progressItems.updateOne(item.unique, { status });\r\n\t\tconst progress = this.#progress.getValue();\r\n\t\tthis.#progress.update({ completed: progress.completed + 1 });\r\n\t}\r\n\r\n\t#updateProgress(item: UmbUploadableItem, progress: number) {\r\n\t\tthis.#progressItems.updateOne(item.unique, { progress });\r\n\t}\r\n\r\n\treadonly #prepareItemsAsUploadable = (\r\n\t\t{ folders, files }: UmbFileDropzoneDroppedItems,\r\n\t\tparentUnique: string | null,\r\n\t): Array<UmbUploadableItem> => {\r\n\t\tconst items: Array<UmbUploadableItem> = [];\r\n\r\n\t\tfor (const file of files) {\r\n\t\t\tconst temporaryFile: UmbTemporaryFileModel = {\r\n\t\t\t\tfile,\r\n\t\t\t\ttemporaryUnique: UmbId.new(),\r\n\t\t\t\tabortController: new AbortController(),\r\n\t\t\t\tonProgress: (progress) => this.#updateProgress(uploadableItem, progress),\r\n\t\t\t};\r\n\r\n\t\t\tconst uploadableItem: UmbUploadableFile = {\r\n\t\t\t\tunique: UmbId.new(),\r\n\t\t\t\tparentUnique,\r\n\t\t\t\tstatus: UmbFileDropzoneItemStatus.WAITING,\r\n\t\t\t\tprogress: 0,\r\n\t\t\t\ttemporaryFile,\r\n\t\t\t};\r\n\r\n\t\t\ttemporaryFile.abortController?.signal.addEventListener('abort', () => {\r\n\t\t\t\tthis._updateStatus(uploadableItem, UmbFileDropzoneItemStatus.CANCELLED);\r\n\t\t\t});\r\n\r\n\t\t\titems.push(uploadableItem);\r\n\t\t}\r\n\r\n\t\tfor (const subfolder of folders) {\r\n\t\t\tconst unique = UmbId.new();\r\n\t\t\titems.push({\r\n\t\t\t\tunique,\r\n\t\t\t\tparentUnique,\r\n\t\t\t\tstatus: UmbFileDropzoneItemStatus.WAITING,\r\n\t\t\t\tprogress: 100, // Folders are created instantly.\r\n\t\t\t\tfolder: { name: subfolder.folderName },\r\n\t\t\t});\r\n\r\n\t\t\titems.push(...this.#prepareItemsAsUploadable({ folders: subfolder.folders, files: subfolder.files }, unique));\r\n\t\t}\r\n\t\treturn items;\r\n\t};\r\n\r\n\tpublic override destroy() {\r\n\t\tthis._tempFileManager.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n","import type { UmbUploadableItem } from './types.js';\r\n\r\nexport class UmbDropzoneChangeEvent extends Event {\r\n\tpublic static readonly TYPE = 'change';\r\n\r\n\t/**\r\n\t * An array of resolved uploadable items.\r\n\t */\r\n\tpublic items;\r\n\r\n\tpublic constructor(items: Array<UmbUploadableItem>, args?: EventInit) {\r\n\t\tsuper(UmbDropzoneChangeEvent.TYPE, { bubbles: false, composed: false, cancelable: false, ...args });\r\n\t\tthis.items = items;\r\n\t}\r\n}\r\n","import type { UmbUploadableItem } from './types.js';\r\n\r\nexport class UmbDropzoneSubmittedEvent extends Event {\r\n\tpublic static readonly TYPE = 'submitted';\r\n\r\n\t/**\r\n\t * An array of resolved uploadable items.\r\n\t */\r\n\tpublic items;\r\n\r\n\tpublic constructor(items: Array<UmbUploadableItem>, args?: EventInit) {\r\n\t\tsuper(UmbDropzoneSubmittedEvent.TYPE, { bubbles: false, composed: false, cancelable: false, ...args });\r\n\t\tthis.items = items;\r\n\t}\r\n}\r\n","import type { UmbUploadableItem } from '../../types.js';\r\nimport { UmbFileDropzoneItemStatus } from '../../constants.js';\r\nimport { UmbDropzoneManager } from '../../dropzone-manager.class.js';\r\nimport { UmbDropzoneChangeEvent } from '../../dropzone-change.event.js';\r\nimport { UmbDropzoneSubmittedEvent } from '../../dropzone-submitted.event.js';\r\nimport {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tifDefined,\r\n\tnothing,\r\n\tproperty,\r\n\tquery,\r\n\trepeat,\r\n\tstate,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UUIFileDropzoneElement, UUIFileDropzoneEvent } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { formatBytes } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\n/**\r\n * A dropzone for uploading files and folders.\r\n * The files will be uploaded to the server as temporary files and can be used in the backoffice.\r\n * @element umb-input-dropzone\r\n * @fires ProgressEvent When the progress of the upload changes.\r\n * @fires UmbDropzoneChangeEvent When the upload is complete.\r\n * @fires UmbDropzoneSubmittedEvent When the upload is submitted.\r\n * @slot - The default slot.\r\n * @slot text - A text shown above the dropzone graphic.\r\n */\r\n@customElement('umb-input-dropzone')\r\nexport class UmbInputDropzoneElement extends UmbFormControlMixin<UmbUploadableItem[], typeof UmbLitElement>(\r\n\tUmbLitElement,\r\n) {\r\n\t/**\r\n\t * Comma-separated list of accepted mime types or file extensions.\r\n\t */\r\n\t@property({ type: String })\r\n\taccept?: string;\r\n\r\n\t/**\r\n\t * Disable folder uploads.\r\n\t */\r\n\t@property({ type: Boolean, attribute: 'disable-folder-upload' })\r\n\tdisableFolderUpload: boolean = false;\r\n\r\n\t/**\r\n\t * Disables the dropzone.\r\n\t * @description The dropzone will not accept any uploads.\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\tdisabled: boolean = false;\r\n\r\n\t/**\r\n\t * Determines if the dropzone should accept multiple files.\r\n\t */\r\n\t@property({ type: Boolean })\r\n\tmultiple: boolean = false;\r\n\r\n\t/**\r\n\t * Style the dropzone with a border.\r\n\t * @description This is useful if you want to display the dropzone directly rather than as a part of a separate component.\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\tstandalone: boolean = false;\r\n\r\n\t/**\r\n\t * The label for the dropzone.\r\n\t */\r\n\t@property({ type: String })\r\n\tlabel = 'dropzone';\r\n\r\n\t@query('#dropzone', true)\r\n\tprotected _dropzone?: UUIFileDropzoneElement;\r\n\r\n\t@state()\r\n\tprotected _progressItems: Array<UmbUploadableItem> = [];\r\n\r\n\tprotected _manager = new UmbDropzoneManager(this);\r\n\r\n\t/**\r\n\t * Determines if the dropzone should be disabled.\r\n\t * If the dropzone is disabled, it will not accept any uploads.\r\n\t * It is considered disabled if the `disabled` property is set or if `multiple` is set to `false` and there is already an upload in progress.\r\n\t * @returns {boolean} True if the dropzone should not accept uploads, otherwise false.\r\n\t */\r\n\tget #isDisabled(): boolean {\r\n\t\treturn this.disabled || (!this.multiple && this._progressItems.length > 0);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._observeProgress();\r\n\t\tthis._observeProgressItems();\r\n\t}\r\n\r\n\t_observeProgress() {\r\n\t\tthis.observe(\r\n\t\t\tthis._manager.progress,\r\n\t\t\t(progress) => {\r\n\t\t\t\tthis.dispatchEvent(new ProgressEvent('progress', { loaded: progress.completed, total: progress.total }));\r\n\t\t\t},\r\n\t\t\t'_observeProgress',\r\n\t\t);\r\n\t}\r\n\r\n\tprotected _observeProgressItems() {\r\n\t\tthis.observe(\r\n\t\t\tthis._manager.progressItems,\r\n\t\t\t(progressItems) => {\r\n\t\t\t\tthis._progressItems = [...progressItems];\r\n\t\t\t\tconst waiting = this._progressItems.find((item) => item.status === UmbFileDropzoneItemStatus.WAITING);\r\n\t\t\t\tif (this._progressItems.length && !waiting) {\r\n\t\t\t\t\tthis.value = [...this._progressItems];\r\n\t\t\t\t\tthis.dispatchEvent(new UmbDropzoneChangeEvent(this._progressItems));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'_observeProgressItems',\r\n\t\t);\r\n\t}\r\n\r\n\toverride disconnectedCallback(): void {\r\n\t\tsuper.disconnectedCallback();\r\n\t\tthis._manager.destroy();\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the file browse dialog.\r\n\t */\r\n\tpublic browse(): void {\r\n\t\tif (this.#isDisabled) return;\r\n\t\tthis._dropzone?.browse();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<slot name=\"text\"></slot>\r\n\t\t\t<uui-file-dropzone\r\n\t\t\t\tid=\"dropzone\"\r\n\t\t\t\tlabel=${this.label}\r\n\t\t\t\taccept=${ifDefined(this.accept)}\r\n\t\t\t\t?multiple=${this.multiple}\r\n\t\t\t\t?disabled=${this.#isDisabled}\r\n\t\t\t\t?disallowFolderUpload=${this.disableFolderUpload}\r\n\t\t\t\t@change=${this.onUpload}\r\n\t\t\t\t@click=${this.#handleBrowse}>\r\n\t\t\t\t<slot>\r\n\t\t\t\t\t<uui-button label=${this.localize.term('media_clickToUpload')} @click=${this.#handleBrowse}></uui-button>\r\n\t\t\t\t</slot>\r\n\t\t\t</uui-file-dropzone>\r\n\t\t\t${this.renderUploader()}\r\n\t\t`;\r\n\t}\r\n\r\n\tprotected renderUploader() {\r\n\t\tif (!this._progressItems?.length) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<div id=\"uploader\">\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._progressItems,\r\n\t\t\t\t\t(item) => item.unique,\r\n\t\t\t\t\t(item) => this.renderPlaceholder(item),\r\n\t\t\t\t)}\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tid=\"uploader-clear\"\r\n\t\t\t\t\tcompact\r\n\t\t\t\t\t@click=${this.#handleRemove}\r\n\t\t\t\t\tlabel=${this.localize.term('content_uploadClear')}>\r\n\t\t\t\t\t<uui-icon name=\"icon-trash\"></uui-icon>${this.localize.term('content_uploadClear')}\r\n\t\t\t\t</uui-button>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\tprotected renderPlaceholder(item: UmbUploadableItem) {\r\n\t\tconst file = item.temporaryFile?.file;\r\n\t\treturn html`\r\n\t\t\t<div class=\"placeholder\">\r\n\t\t\t\t<div class=\"fileIcon\">\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\titem.status === UmbFileDropzoneItemStatus.COMPLETE,\r\n\t\t\t\t\t\t() => html`<umb-icon name=\"check\" color=\"green\"></umb-icon>`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\titem.status === UmbFileDropzoneItemStatus.ERROR ||\r\n\t\t\t\t\t\t\titem.status === UmbFileDropzoneItemStatus.CANCELLED ||\r\n\t\t\t\t\t\t\titem.status === UmbFileDropzoneItemStatus.NOT_ALLOWED,\r\n\t\t\t\t\t\t() => html`<umb-icon name=\"wrong\" color=\"red\"></umb-icon>`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"fileDetails\">\r\n\t\t\t\t\t<div class=\"fileName\" title=${file?.name ?? ''}>${file?.name ?? ''}</div>\r\n\t\t\t\t\t<div class=\"fileSize\">\r\n\t\t\t\t\t\t${formatBytes(file?.size ?? 0, { decimals: 2 })}:\r\n\t\t\t\t\t\t${this.localize.number(item.progress, { maximumFractionDigits: 0 })}%\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\titem.status === UmbFileDropzoneItemStatus.WAITING,\r\n\t\t\t\t\t\t() => html`<div class=\"progress\"><uui-loader-bar progress=${item.progress}></uui-loader-bar></div>`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\titem.status === UmbFileDropzoneItemStatus.ERROR,\r\n\t\t\t\t\t\t() => html`<div class=\"error\">An error occured</div>`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t${when(item.status === UmbFileDropzoneItemStatus.CANCELLED, () => html`<div class=\"error\">Cancelled</div>`)}\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\titem.status === UmbFileDropzoneItemStatus.NOT_ALLOWED,\r\n\t\t\t\t\t\t() => html`<div class=\"error\">File type not allowed</div>`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"fileActions\">\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\titem.status === UmbFileDropzoneItemStatus.WAITING,\r\n\t\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\t\t@click=${() => this.#handleCancel(item)}\r\n\t\t\t\t\t\t\t\tlabel=${this.localize.term('general_cancel')}>\r\n\t\t\t\t\t\t\t\t<uui-icon name=\"icon-remove\"></uui-icon>${this.localize.term('general_cancel')}\r\n\t\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\tprotected async onUpload(e: UUIFileDropzoneEvent) {\r\n\t\te.stopImmediatePropagation();\r\n\r\n\t\tif (this.#isDisabled) return;\r\n\t\tif (!e.detail.files.length && !e.detail.folders.length) return;\r\n\r\n\t\tconst uploadables = this._manager.createTemporaryFiles(e.detail.files);\r\n\t\tthis.dispatchEvent(new UmbDropzoneSubmittedEvent(await uploadables));\r\n\t}\r\n\r\n\t#handleBrowse(e: Event) {\r\n\t\tif (!this._dropzone) return;\r\n\t\te.stopImmediatePropagation();\r\n\t\tthis._dropzone.browse();\r\n\t}\r\n\r\n\t#handleCancel(item: UmbUploadableItem) {\r\n\t\titem.temporaryFile?.abortController?.abort();\r\n\t}\r\n\r\n\t#handleRemove() {\r\n\t\tthis._manager.removeAll();\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\tplace-items: center;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\r\n\t\t\t:host([disabled]) #dropzone {\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t\tpointer-events: none;\r\n\t\t\t}\r\n\r\n\t\t\t:host([standalone]) {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tinset: 0;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tborder: 1px dashed var(--uui-color-divider-emphasis);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t}\r\n\r\n\t\t\t:host([standalone]:not([disabled]):hover) {\r\n\t\t\t\tborder-color: var(--uui-color-default-emphasis);\r\n\t\t\t\t--uui-color-default: var(--uui-color-default-emphasis);\r\n\t\t\t\tcolor: var(--uui-color-default-emphasis);\r\n\t\t\t}\r\n\r\n\t\t\t#dropzone {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tinset: 0;\r\n\t\t\t\tbackdrop-filter: opacity(1); /* Removes the built in blur effect */\r\n\r\n\t\t\t\t&[disabled] {\r\n\t\t\t\t\topacity: 0.5;\r\n\t\t\t\t\tpointer-events: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#uploader {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tgap: var(--uui-size-space-3);\r\n\r\n\t\t\t\t.placeholder {\r\n\t\t\t\t\tdisplay: grid;\r\n\t\t\t\t\tgrid-template-columns: 30px 200px 1fr;\r\n\t\t\t\t\tmax-width: fit-content;\r\n\t\t\t\t\tpadding: var(--uui-size-space-3);\r\n\t\t\t\t\tborder: 1px dashed var(--uui-color-divider-emphasis);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.fileIcon,\r\n\t\t\t\t.fileActions {\r\n\t\t\t\t\tplace-self: center center;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.fileName {\r\n\t\t\t\t\twhite-space: nowrap;\r\n\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\ttext-overflow: ellipsis;\r\n\t\t\t\t\tfont-size: var(--uui-size-5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.fileSize {\r\n\t\t\t\t\tfont-size: var(--uui-font-size-small);\r\n\t\t\t\t\tcolor: var(--uui-color-text-alt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.error {\r\n\t\t\t\t\tcolor: var(--uui-color-danger);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-dropzone': UmbInputDropzoneElement;\r\n\t}\r\n}\r\n"],"names":["UmbFileDropzoneItemStatus","UmbDropzoneManager","UmbControllerBase","UmbTemporaryFileManager","#progress","UmbObjectState","#progressItems","UmbArrayState","x","#prepareItemsAsUploadable","folders","files","parentUnique","items","file","temporaryFile","UmbId","progress","#updateProgress","uploadableItem","subfolder","unique","uploadableItems","uploadedItems","item","uploaded","TemporaryFileStatus","uniques","temporaryUniques","parent","current","currentItems","status","UmbDropzoneChangeEvent","args","UmbDropzoneSubmittedEvent","_UmbInputDropzoneElement_instances","isDisabled_get","handleBrowse_fn","handleCancel_fn","handleRemove_fn","UmbInputDropzoneElement","UmbFormControlMixin","UmbLitElement","__privateAdd","progressItems","waiting","__privateGet","html","ifDefined","__privateMethod","repeat","nothing","when","formatBytes","uploadables","UmbTextStyles","css","__decorateClass","property","query","state","customElement"],"mappings":";;;;;;;;;AAAY,IAAAA,sBAAAA,OACXA,EAAA,UAAU,WACVA,EAAA,WAAW,YACXA,EAAA,cAAc,eACdA,EAAA,YAAY,aACZA,EAAA,QAAQ,SALGA,IAAAA,KAAA,CAAA,CAAA;ACuBL,MAAMC,UAA2BC,EAAkB;AAAA,EAAnD,cAAA;AAAA,UAAA,GAAA,SAAA,GACa,KAAA,mBAAmB,IAAIC,EAAwB,IAAI,GAE7D,KAAAC,KAAY,IAAIC,EAAwC,EAAE,OAAO,GAAG,WAAW,GAAG,GAC3E,KAAA,WAAW,KAAKD,GAAU,aAAa,GAE9C,KAAAE,KAAiB,IAAIC,EAAiC,IAAI,CAACC,MAAMA,EAAE,MAAM,GAClE,KAAA,gBAAgB,KAAKF,GAAe,aAAa,GAoFjE,KAASG,KAA4B,CACpC,EAAE,SAAAC,GAAS,OAAAC,EAAA,GACXC,MAC8B;AAC9B,YAAMC,IAAkC,CAAC;AAEzC,iBAAWC,KAAQH,GAAO;AACzB,cAAMI,IAAuC;AAAA,UAC5C,MAAAD;AAAA,UACA,iBAAiBE,EAAM,IAAI;AAAA,UAC3B,iBAAiB,IAAI,gBAAgB;AAAA,UACrC,YAAY,CAACC,MAAa,KAAKC,GAAgBC,GAAgBF,CAAQ;AAAA,QACxE,GAEME,IAAoC;AAAA,UACzC,QAAQH,EAAM,IAAI;AAAA,UAClB,cAAAJ;AAAA,UACA,QAAQZ,EAA0B;AAAA,UAClC,UAAU;AAAA,UACV,eAAAe;AAAA,QACD;AAEA,QAAAA,EAAc,iBAAiB,OAAO,iBAAiB,SAAS,MAAM;AAChE,eAAA,cAAcI,GAAgBnB,EAA0B,SAAS;AAAA,QAAA,CACtE,GAEDa,EAAM,KAAKM,CAAc;AAAA,MAAA;AAG1B,iBAAWC,KAAaV,GAAS;AAC1B,cAAAW,IAASL,EAAM,IAAI;AACzB,QAAAH,EAAM,KAAK;AAAA,UACV,QAAAQ;AAAA,UACA,cAAAT;AAAA,UACA,QAAQZ,EAA0B;AAAA,UAClC,UAAU;AAAA;AAAA,UACV,QAAQ,EAAE,MAAMoB,EAAU,WAAW;AAAA,QAAA,CACrC,GAEDP,EAAM,KAAK,GAAG,KAAKJ,GAA0B,EAAE,SAASW,EAAU,SAAS,OAAOA,EAAU,MAAM,GAAGC,CAAM,CAAC;AAAA,MAAA;AAEtG,aAAAR;AAAA,IACR;AAAA,EAAA;AAAA,EAlIST;AAAA,EAGAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQT,MAAa,qBAAqBK,GAAuD;AAClF,UAAAW,IAAkB,KAAK,eAAe,EAAE,OAAAX,GAAO,SAAS,CAAA,EAAG,GAAG,IAAI,GAElEY,IAA0C,CAAC;AAEjD,eAAWC,KAAQF,GAAiB;AAEnC,YAAMG,IAAW,MAAM,KAAK,iBAAiB,UAAUD,EAAK,aAAa;AAGrE,MAAAC,EAAS,WAAWC,EAAoB,YACtC,KAAA,cAAcF,GAAMxB,EAA0B,SAAS,IAClDyB,EAAS,WAAWC,EAAoB,UAC7C,KAAA,cAAcF,GAAMxB,EAA0B,QAAQ,IAEtD,KAAA,cAAcwB,GAAMxB,EAA0B,KAAK,GAIzDuB,EAAc,KAAKC,CAAI;AAAA,IAAA;AAGjB,WAAAD;AAAA,EAAA;AAAA,EAGD,UAAUC,GAAyB;AACpC,IAAAA,EAAA,eAAe,iBAAiB,MAAM,GACtC,KAAAlB,GAAe,UAAUkB,EAAK,MAAM,GACrCA,EAAK,iBACR,KAAK,iBAAiB,UAAUA,EAAK,cAAc,eAAe;AAAA,EACnE;AAAA,EAGM,OAAOX,GAAiC;AAC9C,UAAMc,IAAoB,CAAC;AAC3B,eAAWH,KAAQX;AACb,MAAAW,EAAA,eAAe,iBAAiB,MAAM,GACvCA,EAAK,iBACAG,EAAA,KAAKH,EAAK,cAAc,eAAe;AAG5C,SAAAlB,GAAe,OAAOqB,CAAO;AAClC,UAAMC,IAAmBf,EAAM,IAAI,CAACL,MAAMA,EAAE,eAAe,eAAe,EAAE,OAAO,CAACA,MAAmB,CAAC,CAACA,CAAC;AACrG,SAAA,iBAAiB,OAAOoB,CAAgB;AAAA,EAAA;AAAA,EAGvC,YAAY;AAClB,eAAWJ,KAAQ,KAAKlB,GAAe,SAAA;AACjC,MAAAkB,EAAA,eAAe,iBAAiB,MAAM;AAEvC,SAAAlB,GAAe,SAAS,EAAE,GAC/B,KAAK,iBAAiB,UAAU;AAAA,EAAA;AAAA;AAAA,EAIvB,eAAeO,GAAoCgB,GAAuB;AAC7E,UAAAC,IAAU,KAAK1B,GAAU,SAAS,GAClC2B,IAAe,KAAKzB,GAAe,SAAS,GAE5CgB,IAAkB,KAAKb,GAA0B,EAAE,SAASI,EAAM,SAAS,OAAOA,EAAM,MAAM,GAAGgB,CAAM;AAE7G,gBAAKvB,GAAe,SAAS,CAAC,GAAGyB,GAAc,GAAGT,CAAe,CAAC,GAC7D,KAAAlB,GAAU,SAAS,EAAE,OAAO0B,EAAQ,QAAQR,EAAgB,QAAQ,WAAWQ,EAAQ,UAAA,CAAW,GAEhGR;AAAA,EAAA;AAAA,EAGE,cAAcE,GAAyBQ,GAAmC;AACnF,SAAK1B,GAAe,UAAUkB,EAAK,QAAQ,EAAE,QAAAQ,GAAQ;AAC/C,UAAAf,IAAW,KAAKb,GAAU,SAAS;AACzC,SAAKA,GAAU,OAAO,EAAE,WAAWa,EAAS,YAAY,GAAG;AAAA,EAAA;AAAA,EAG5DC,GAAgBM,GAAyBP,GAAkB;AAC1D,SAAKX,GAAe,UAAUkB,EAAK,QAAQ,EAAE,UAAAP,GAAU;AAAA,EAAA;AAAA,EAG/CR;AAAA,EA4CO,UAAU;AACzB,SAAK,iBAAiB,QAAQ,GAC9B,MAAM,QAAQ;AAAA,EAAA;AAEhB;AChKO,MAAMwB,UAA+B,MAAM;AAAA,EACjD,OAAA;AAAA,SAAuB,OAAO;AAAA,EAAA;AAAA,EAOvB,YAAYpB,GAAiCqB,GAAkB;AAC/D,UAAAD,EAAuB,MAAM,EAAE,SAAS,IAAO,UAAU,IAAO,YAAY,IAAO,GAAGC,EAAA,CAAM,GAClG,KAAK,QAAQrB;AAAA,EAAA;AAEf;ACZO,MAAMsB,UAAkC,MAAM;AAAA,EACpD,OAAA;AAAA,SAAuB,OAAO;AAAA,EAAA;AAAA,EAOvB,YAAYtB,GAAiCqB,GAAkB;AAC/D,UAAAC,EAA0B,MAAM,EAAE,SAAS,IAAO,UAAU,IAAO,YAAY,IAAO,GAAGD,EAAA,CAAM,GACrG,KAAK,QAAQrB;AAAA,EAAA;AAEf;;;;;;;+TCdAuB,GAAAC,GAAAC,GAAAC,GAAAC;AAkCO,IAAMC,IAAN,cAAsCC;AAAA,EAC5CC;AACD,EAAE;AAAA,EAyDD,cAAc;AACP,UAAA,GA5DDC,EAAA,MAAAR,CAAA,GAayB,KAAA,sBAAA,IAOX,KAAA,WAAA,IAMA,KAAA,WAAA,IAOE,KAAA,aAAA,IAMd,KAAA,QAAA,YAMR,KAAU,iBAA2C,CAAC,GAE5C,KAAA,WAAW,IAAInC,EAAmB,IAAI,GAc/C,KAAK,iBAAiB,GACtB,KAAK,sBAAsB;AAAA,EAAA;AAAA,EAG5B,mBAAmB;AACb,SAAA;AAAA,MACJ,KAAK,SAAS;AAAA,MACd,CAACgB,MAAa;AACb,aAAK,cAAc,IAAI,cAAc,YAAY,EAAE,QAAQA,EAAS,WAAW,OAAOA,EAAS,MAAO,CAAA,CAAC;AAAA,MACxG;AAAA,MACA;AAAA,IACD;AAAA,EAAA;AAAA,EAGS,wBAAwB;AAC5B,SAAA;AAAA,MACJ,KAAK,SAAS;AAAA,MACd,CAAC4B,MAAkB;AACb,aAAA,iBAAiB,CAAC,GAAGA,CAAa;AACjC,cAAAC,IAAU,KAAK,eAAe,KAAK,CAACtB,MAASA,EAAK,WAAWxB,EAA0B,OAAO;AACpG,QAAI,KAAK,eAAe,UAAU,CAAC8C,MAClC,KAAK,QAAQ,CAAC,GAAG,KAAK,cAAc,GACpC,KAAK,cAAc,IAAIb,EAAuB,KAAK,cAAc,CAAC;AAAA,MAEpE;AAAA,MACA;AAAA,IACD;AAAA,EAAA;AAAA,EAGQ,uBAA6B;AACrC,UAAM,qBAAqB,GAC3B,KAAK,SAAS,QAAQ;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAMhB,SAAe;AACrB,IAAIc,QAAKX,GAAaC,CAAA,KACtB,KAAK,WAAW,OAAO;AAAA,EAAA;AAAA,EAGf,SAAS;AACV,WAAAW;AAAA;AAAA;AAAA;AAAA,YAIG,KAAK,KAAK;AAAA,aACTC,EAAU,KAAK,MAAM,CAAC;AAAA,gBACnB,KAAK,QAAQ;AAAA,gBACbF,QAAKX,GAAWC,CAAA,CAAA;AAAA,4BACJ,KAAK,mBAAmB;AAAA,cACtC,KAAK,QAAQ;AAAA,aACda,QAAKd,GAAaE,CAAA,CAAA;AAAA;AAAA,yBAEN,KAAK,SAAS,KAAK,qBAAqB,CAAC,WAAWY,QAAKd,GAAaE,CAAA,CAAA;AAAA;AAAA;AAAA,KAG1F,KAAK,eAAgB,CAAA;AAAA;AAAA,EAAA;AAAA,EAIf,iBAAiB;AAC1B,WAAK,KAAK,gBAAgB,SAEnBU;AAAA;AAAA,MAEHG;AAAA,MACD,KAAK;AAAA,MACL,CAAC3B,MAASA,EAAK;AAAA,MACf,CAACA,MAAS,KAAK,kBAAkBA,CAAI;AAAA,IACrC,CAAA;AAAA;AAAA;AAAA;AAAA,cAIS0B,QAAKd,GAAaI,CAAA,CAAA;AAAA,aACnB,KAAK,SAAS,KAAK,qBAAqB,CAAC;AAAA,8CACR,KAAK,SAAS,KAAK,qBAAqB,CAAC;AAAA;AAAA;AAAA,MAd5CY;AAAA,EAc4C;AAAA,EAM5E,kBAAkB5B,GAAyB;AAC9C,UAAAV,IAAOU,EAAK,eAAe;AAC1B,WAAAwB;AAAA;AAAA;AAAA,OAGFK;AAAA,MACD7B,EAAK,WAAWxB,EAA0B;AAAA,MAC1C,MAAMgD;AAAA,IACN,CAAA;AAAA,OACCK;AAAA,MACD7B,EAAK,WAAWxB,EAA0B,SACzCwB,EAAK,WAAWxB,EAA0B,aAC1CwB,EAAK,WAAWxB,EAA0B;AAAA,MAC3C,MAAMgD;AAAA,IACN,CAAA;AAAA;AAAA;AAAA,mCAG6BlC,GAAM,QAAQ,EAAE,IAAIA,GAAM,QAAQ,EAAE;AAAA;AAAA,QAE/DwC,EAAYxC,GAAM,QAAQ,GAAG,EAAE,UAAU,EAAA,CAAG,CAAC;AAAA,QAC7C,KAAK,SAAS,OAAOU,EAAK,UAAU,EAAE,uBAAuB,EAAE,CAAC,CAAC;AAAA;AAAA,OAElE6B;AAAA,MACD7B,EAAK,WAAWxB,EAA0B;AAAA,MAC1C,MAAMgD,mDAAsDxB,EAAK,QAAQ;AAAA,IACzE,CAAA;AAAA,OACC6B;AAAA,MACD7B,EAAK,WAAWxB,EAA0B;AAAA,MAC1C,MAAMgD;AAAA,IACN,CAAA;AAAA,OACCK,EAAK7B,EAAK,WAAWxB,EAA0B,WAAW,MAAMgD,qCAAwC,CAAC;AAAA,OACzGK;AAAA,MACD7B,EAAK,WAAWxB,EAA0B;AAAA,MAC1C,MAAMgD;AAAA,IACN,CAAA;AAAA;AAAA;AAAA,OAGCK;AAAA,MACD7B,EAAK,WAAWxB,EAA0B;AAAA,MAC1C,MAAMgD;AAAA;AAAA;AAAA,iBAGK,MAAME,EAAA,MAAKd,GAALG,CAAA,EAAA,KAAA,MAAmBf,CAAK,CAAA;AAAA,gBAC/B,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA,kDACF,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA;AAAA;AAAA,IAGhF,CAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAML,MAAgB,SAAS,GAAyB;AAI7C,QAHJ,EAAE,yBAAyB,GAEvBuB,QAAKX,GAAaC,CAAA,KAClB,CAAC,EAAE,OAAO,MAAM,UAAU,CAAC,EAAE,OAAO,QAAQ,OAAQ;AAExD,UAAMkB,IAAc,KAAK,SAAS,qBAAqB,EAAE,OAAO,KAAK;AACrE,SAAK,cAAc,IAAIpB,EAA0B,MAAMoB,CAAW,CAAC;AAAA,EAAA;AAiGrE;AA7SOnB,IAAA,oBAAA,QAAA;AAuDFC,IAAW,WAAY;AAC1B,SAAO,KAAK,YAAa,CAAC,KAAK,YAAY,KAAK,eAAe,SAAS;AACzE;AAsJAC,IAAa,SAAC,GAAU;AACnB,EAAC,KAAK,cACV,EAAE,yBAAyB,GAC3B,KAAK,UAAU,OAAO;AACvB;AAEAC,IAAa,SAACf,GAAyB;AACjC,EAAAA,EAAA,eAAe,iBAAiB,MAAM;AAC5C;AAEAgB,IAAa,WAAG;AACf,OAAK,SAAS,UAAU;AACzB;AA3NYC,EA6Na,SAAS;AAAA,EACjCe;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6ED;AArSAC,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANdlB,EAOZ,WAAA,UAAA,CAAA;AAMAiB,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,SAAS,WAAW,wBAAyB,CAAA;AAAA,GAZnDlB,EAaZ,WAAA,uBAAA,CAAA;AAOAiB,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAnB9BlB,EAoBZ,WAAA,YAAA,CAAA;AAMAiB,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAzBflB,EA0BZ,WAAA,YAAA,CAAA;AAOAiB,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAhC9BlB,EAiCZ,WAAA,cAAA,CAAA;AAMAiB,EAAA;AAAA,EADCC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtCdlB,EAuCZ,WAAA,SAAA,CAAA;AAGUiB,EAAA;AAAA,EADTE,EAAM,aAAa,EAAI;AAAA,GAzCZnB,EA0CF,WAAA,aAAA,CAAA;AAGAiB,EAAA;AAAA,EADTG,EAAM;AAAA,GA5CKpB,EA6CF,WAAA,kBAAA,CAAA;AA7CEA,IAANiB,EAAA;AAAA,EADNI,EAAc,oBAAoB;AAAA,GACtBrB,CAAA;"}