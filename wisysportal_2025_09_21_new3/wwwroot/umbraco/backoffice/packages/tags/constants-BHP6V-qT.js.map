{"version":3,"file":"constants-BHP6V-qT.js","sources":["../../../src/packages/tags/repository/tag.store.ts","../../../src/packages/tags/repository/constants.ts"],"sourcesContent":["import type { TagResponseModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbArrayState } from '@umbraco-cms/backoffice/observable-api';\r\nimport { UmbStoreBase } from '@umbraco-cms/backoffice/store';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\nexport const UMB_TAG_STORE_CONTEXT_ALIAS = 'UMB_TAG_STORE';\r\nexport const UMB_TAG_STORE_CONTEXT = new UmbContextToken<UmbTagStore>(UMB_TAG_STORE_CONTEXT_ALIAS);\r\n\r\n/**\r\n * @class UmbTagStore\r\n * @augments {UmbStoreBase}\r\n * @description - Data Store for Template Details\r\n */\r\nexport class UmbTagStore extends UmbStoreBase {\r\n\tpublic readonly data = this._data.asObservable();\r\n\r\n\t/**\r\n\t * Creates an instance of UmbTagStore.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbTagStore\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_TAG_STORE_CONTEXT.toString(), new UmbArrayState<TagResponseModel>([], (x) => x.id));\r\n\t}\r\n\r\n\t/**\r\n\t * Append a tag to the store\r\n\t * @param {TagResponseModel} TAG\r\n\t * @param tag\r\n\t * @memberof UmbTagStore\r\n\t */\r\n\toverride append(tag: TagResponseModel) {\r\n\t\tthis._data.append([tag]);\r\n\t}\r\n\r\n\t/**\r\n\t * Append a tag to the store\r\n\t * @param {id} TagResponseModel id.\r\n\t * @param id\r\n\t * @memberof UmbTagStore\r\n\t */\r\n\tbyId(id: TagResponseModel['id']) {\r\n\t\treturn this._data.asObservablePart((x) => x.find((y) => y.id === id));\r\n\t}\r\n\r\n\titems(group: TagResponseModel['group'], culture: string) {\r\n\t\treturn this._data.asObservablePart((items) =>\r\n\t\t\titems.filter((item) => item.group === group && item.culture === culture),\r\n\t\t);\r\n\t}\r\n\r\n\t// TODO\r\n\t// There isnt really any way to exclude certain tags when searching for suggestions.\r\n\t// This is important for the skip/take in the endpoint. We do not want to get the tags from database that we already have picked.\r\n\t// Forexample: we have 10 different tags that includes \"berry\" (and searched for \"berry\") and we have a skip of 0 and take of 5.\r\n\t// If we already has picked lets say 4 of them, the list will only show 1 more, even though there is more remaining in the database.\r\n\r\n\tbyQuery(group: TagResponseModel['group'], culture: string, query: string) {\r\n\t\treturn this._data.asObservablePart((items) =>\r\n\t\t\titems.filter(\r\n\t\t\t\t(item) =>\r\n\t\t\t\t\titem.group === group &&\r\n\t\t\t\t\titem.culture === culture &&\r\n\t\t\t\t\titem.query?.toLocaleLowerCase().includes(query.toLocaleLowerCase()),\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes tag in the store with the given uniques\r\n\t * @param {string[]} uniques\r\n\t * @memberof UmbTagStore\r\n\t */\r\n\tremove(uniques: Array<TagResponseModel['id']>) {\r\n\t\tthis._data.remove(uniques);\r\n\t}\r\n}\r\n\r\nexport default UmbTagStore;\r\n","export { UMB_TAG_STORE_CONTEXT_ALIAS, UMB_TAG_STORE_CONTEXT } from './tag.store.js';\r\nexport const UMB_TAG_REPOSITORY_ALIAS = 'Umb.Repository.Tags';\r\nexport const UMB_TAG_STORE_ALIAS = 'Umb.Store.Tags';\r\n"],"names":["UMB_TAG_STORE_CONTEXT_ALIAS","UMB_TAG_STORE_CONTEXT","UmbContextToken","UmbTagStore","UmbStoreBase","host","UmbArrayState","x","tag","id","y","group","culture","items","item","query","uniques","UMB_TAG_REPOSITORY_ALIAS","UMB_TAG_STORE_ALIAS"],"mappings":";;;AAMO,MAAMA,IAA8B,iBAC9BC,IAAwB,IAAIC,EAA6BF,CAA2B;AAO1F,MAAMG,UAAoBC,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ7C,YAAYC,GAAyB;AACpC,UAAMA,GAAMJ,EAAsB,YAAY,IAAIK,EAAgC,CAAA,GAAI,CAACC,MAAMA,EAAE,EAAE,CAAC,GARnF,KAAA,OAAO,KAAK,MAAM,aAAa;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBtC,OAAOC,GAAuB;AACtC,SAAK,MAAM,OAAO,CAACA,CAAG,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASxB,KAAKC,GAA4B;AAChC,WAAO,KAAK,MAAM,iBAAiB,CAACF,MAAMA,EAAE,KAAK,CAACG,MAAMA,EAAE,OAAOD,CAAE,CAAC;AAAA,EAAA;AAAA,EAGrE,MAAME,GAAkCC,GAAiB;AACxD,WAAO,KAAK,MAAM;AAAA,MAAiB,CAACC,MACnCA,EAAM,OAAO,CAACC,MAASA,EAAK,UAAUH,KAASG,EAAK,YAAYF,CAAO;AAAA,IACxE;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,QAAQD,GAAkCC,GAAiBG,GAAe;AACzE,WAAO,KAAK,MAAM;AAAA,MAAiB,CAACF,MACnCA,EAAM;AAAA,QACL,CAACC,MACAA,EAAK,UAAUH,KACfG,EAAK,YAAYF,KACjBE,EAAK,OAAO,kBAAkB,EAAE,SAASC,EAAM,kBAAmB,CAAA;AAAA,MAAA;AAAA,IAErE;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,OAAOC,GAAwC;AACzC,SAAA,MAAM,OAAOA,CAAO;AAAA,EAAA;AAE3B;;;;;;;8CC5EaC,IAA2B,uBAC3BC,IAAsB;"}