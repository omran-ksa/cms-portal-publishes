{"version":3,"file":"user-group-detail.repository-BfG3QhFr.js","sources":["../../../src/packages/user/user-group/repository/detail/user-group-detail.server.data-source.ts","../../../src/packages/user/user-group/repository/detail/user-group-detail.repository.ts"],"sourcesContent":["import type { UmbUserGroupDetailModel } from '../../types.js';\r\nimport { UMB_USER_GROUP_ENTITY_TYPE } from '../../entity.js';\r\nimport type {\r\n\tCreateUserGroupRequestModel,\r\n\tUpdateUserGroupRequestModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UserGroupService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\nimport { UmbManagementApiDataMapper, type UmbDetailDataSource } from '@umbraco-cms/backoffice/repository';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the User Group that fetches data from the server\r\n * @class UmbUserGroupServerDataSource\r\n * @implements {RepositoryDetailDataSource}\r\n */\r\nexport class UmbUserGroupServerDataSource\r\n\textends UmbControllerBase\r\n\timplements UmbDetailDataSource<UmbUserGroupDetailModel>\r\n{\r\n\t#dataMapper = new UmbManagementApiDataMapper(this);\r\n\r\n\t/**\r\n\t * Creates a new User Group scaffold\r\n\t * @param {(string | null)} parentUnique\r\n\t * @returns { CreateUserGroupRequestModel }\r\n\t * @memberof UmbUserGroupServerDataSource\r\n\t */\r\n\tasync createScaffold() {\r\n\t\tconst data: UmbUserGroupDetailModel = {\r\n\t\t\talias: '',\r\n\t\t\taliasCanBeChanged: true,\r\n\t\t\tdocumentRootAccess: false,\r\n\t\t\tdocumentStartNode: null,\r\n\t\t\tentityType: UMB_USER_GROUP_ENTITY_TYPE,\r\n\t\t\tfallbackPermissions: [],\r\n\t\t\thasAccessToAllLanguages: false,\r\n\t\t\ticon: 'icon-users',\r\n\t\t\tisDeletable: true,\r\n\t\t\tlanguages: [],\r\n\t\t\tmediaRootAccess: false,\r\n\t\t\tmediaStartNode: null,\r\n\t\t\tname: '',\r\n\t\t\tpermissions: [],\r\n\t\t\tsections: [],\r\n\t\t\tunique: UmbId.new(),\r\n\t\t};\r\n\r\n\t\treturn { data };\r\n\t}\r\n\r\n\t/**\r\n\t * Fetches a User Group with the given id from the server\r\n\t * @param {string} unique\r\n\t * @returns {*}\r\n\t * @memberof UmbUserGroupServerDataSource\r\n\t */\r\n\tasync read(unique: string) {\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\r\n\t\tconst { data, error } = await tryExecute(this, UserGroupService.getUserGroupById({ path: { id: unique } }));\r\n\r\n\t\tif (error || !data) {\r\n\t\t\treturn { error };\r\n\t\t}\r\n\r\n\t\tconst permissionDataPromises = data.permissions.map(async (item) => {\r\n\t\t\treturn this.#dataMapper.map({\r\n\t\t\t\tforDataModel: item.$type,\r\n\t\t\t\tdata: item,\r\n\t\t\t\tfallback: async () => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tpermissionType: 'unknown',\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst permissions = await Promise.all(permissionDataPromises);\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst userGroup: UmbUserGroupDetailModel = {\r\n\t\t\talias: data.alias,\r\n\t\t\tdocumentRootAccess: data.documentRootAccess,\r\n\t\t\tdocumentStartNode: data.documentStartNode ? { unique: data.documentStartNode.id } : null,\r\n\t\t\tentityType: UMB_USER_GROUP_ENTITY_TYPE,\r\n\t\t\tfallbackPermissions: data.fallbackPermissions,\r\n\t\t\thasAccessToAllLanguages: data.hasAccessToAllLanguages,\r\n\t\t\ticon: data.icon || null,\r\n\t\t\tisDeletable: data.isDeletable,\r\n\t\t\taliasCanBeChanged: data.aliasCanBeChanged,\r\n\t\t\tlanguages: data.languages,\r\n\t\t\tmediaRootAccess: data.mediaRootAccess,\r\n\t\t\tmediaStartNode: data.mediaStartNode ? { unique: data.mediaStartNode.id } : null,\r\n\t\t\tname: data.name,\r\n\t\t\tpermissions,\r\n\t\t\tsections: data.sections,\r\n\t\t\tunique: data.id,\r\n\t\t};\r\n\r\n\t\treturn { data: userGroup };\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a new User Group on the server\r\n\t * @param {UmbUserGroupDetailModel} model\r\n\t * @returns {*}\r\n\t * @memberof UmbUserGroupServerDataSource\r\n\t */\r\n\tasync create(model: UmbUserGroupDetailModel) {\r\n\t\tif (!model) throw new Error('User Group is missing');\r\n\r\n\t\tconst permissionDataPromises = model.permissions.map(async (item) => {\r\n\t\t\treturn this.#dataMapper.map({\r\n\t\t\t\tforDataModel: item.permissionType,\r\n\t\t\t\tdata: item,\r\n\t\t\t\tfallback: async () => item,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst permissions = await Promise.all(permissionDataPromises);\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst body: CreateUserGroupRequestModel = {\r\n\t\t\talias: model.alias,\r\n\t\t\tdocumentRootAccess: model.documentRootAccess,\r\n\t\t\tdocumentStartNode: model.documentStartNode ? { id: model.documentStartNode.unique } : null,\r\n\t\t\tfallbackPermissions: model.fallbackPermissions,\r\n\t\t\thasAccessToAllLanguages: model.hasAccessToAllLanguages,\r\n\t\t\ticon: model.icon,\r\n\t\t\tlanguages: model.languages,\r\n\t\t\tmediaRootAccess: model.mediaRootAccess,\r\n\t\t\tmediaStartNode: model.mediaStartNode ? { id: model.mediaStartNode.unique } : null,\r\n\t\t\tname: model.name,\r\n\t\t\tpermissions,\r\n\t\t\tsections: model.sections,\r\n\t\t};\r\n\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis,\r\n\t\t\tUserGroupService.postUserGroup({\r\n\t\t\t\tbody,\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\tif (data) {\r\n\t\t\treturn this.read(data as never);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n\r\n\t/**\r\n\t * Updates a UserGroup on the server\r\n\t * @param {UmbUserGroupDetailModel} UserGroup\r\n\t * @param model\r\n\t * @returns {*}\r\n\t * @memberof UmbUserGroupServerDataSource\r\n\t */\r\n\tasync update(model: UmbUserGroupDetailModel) {\r\n\t\tif (!model.unique) throw new Error('Unique is missing');\r\n\r\n\t\tconst permissionDataPromises = model.permissions.map(async (item) => {\r\n\t\t\treturn this.#dataMapper.map({\r\n\t\t\t\tforDataModel: item.userPermissionType,\r\n\t\t\t\tdata: item,\r\n\t\t\t\tfallback: async () => item,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst permissions = await Promise.all(permissionDataPromises);\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst body: UpdateUserGroupRequestModel = {\r\n\t\t\talias: model.alias,\r\n\t\t\tdocumentRootAccess: model.documentRootAccess,\r\n\t\t\tdocumentStartNode: model.documentStartNode ? { id: model.documentStartNode.unique } : null,\r\n\t\t\tfallbackPermissions: model.fallbackPermissions,\r\n\t\t\thasAccessToAllLanguages: model.hasAccessToAllLanguages,\r\n\t\t\ticon: model.icon,\r\n\t\t\tlanguages: model.languages,\r\n\t\t\tmediaRootAccess: model.mediaRootAccess,\r\n\t\t\tmediaStartNode: model.mediaStartNode ? { id: model.mediaStartNode.unique } : null,\r\n\t\t\tname: model.name,\r\n\t\t\tpermissions,\r\n\t\t\tsections: model.sections,\r\n\t\t};\r\n\r\n\t\tconst { error } = await tryExecute(\r\n\t\t\tthis,\r\n\t\t\tUserGroupService.putUserGroupById({\r\n\t\t\t\tpath: { id: model.unique },\r\n\t\t\t\tbody,\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\tif (!error) {\r\n\t\t\treturn this.read(model.unique);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes a User Group on the server\r\n\t * @param {string} unique\r\n\t * @returns {*}\r\n\t * @memberof UmbUserGroupServerDataSource\r\n\t */\r\n\tasync delete(unique: string) {\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\r\n\t\treturn tryExecute(\r\n\t\t\tthis,\r\n\t\t\tUserGroupService.deleteUserGroupById({\r\n\t\t\t\tpath: { id: unique },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import type { UmbUserGroupDetailModel } from '../../types.js';\r\nimport { UmbUserGroupServerDataSource } from './user-group-detail.server.data-source.js';\r\nimport { UMB_USER_GROUP_DETAIL_STORE_CONTEXT } from './user-group-detail.store.token.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbDetailRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbUserGroupDetailRepository extends UmbDetailRepositoryBase<UmbUserGroupDetailModel> {\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UmbUserGroupServerDataSource, UMB_USER_GROUP_DETAIL_STORE_CONTEXT);\r\n\t}\r\n\r\n\toverride async create(model: UmbUserGroupDetailModel) {\r\n\t\treturn super.create(model, null);\r\n\t}\r\n}\r\nexport default UmbUserGroupDetailRepository;\r\n"],"names":["UmbUserGroupServerDataSource","UmbControllerBase","#dataMapper","UmbManagementApiDataMapper","UMB_USER_GROUP_ENTITY_TYPE","UmbId","unique","data","error","tryExecute","UserGroupService","permissionDataPromises","item","permissions","model","body","UmbUserGroupDetailRepository","UmbDetailRepositoryBase","host","UMB_USER_GROUP_DETAIL_STORE_CONTEXT"],"mappings":"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"}