{"version":3,"file":"current-user-config.repository-DOpvOxyc.js","sources":["../../../src/packages/user/user/repository/config/current-user-config.server.data-source.ts","../../../src/packages/user/user/repository/config/current-user-config.repository.ts"],"sourcesContent":["import type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UserService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\nexport class UmbCurrentUserConfigServerDataSource {\r\n\t#host;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the current user configuration.\r\n\t * @memberof UmbCurrentUserConfigServerDataSource\r\n\t */\r\n\tgetCurrentUserConfig() {\r\n\t\treturn tryExecute(this.#host, UserService.getUserCurrentConfiguration());\r\n\t}\r\n}\r\n","import type { UmbCurrentUserConfigurationModel } from '../../types.js';\r\nimport { UmbCurrentUserConfigServerDataSource } from './current-user-config.server.data-source.js';\r\nimport { UMB_CURRENT_USER_CONFIG_STORE_CONTEXT } from './current-user-config.store.token.js';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbApi } from '@umbraco-cms/backoffice/extension-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { Observable } from '@umbraco-cms/backoffice/observable-api';\r\n\r\nexport class UmbCurrentUserConfigRepository extends UmbRepositoryBase implements UmbApi {\r\n\t/**\r\n\t * Promise that resolves when the repository has been initialized, i.e. when the user configuration has been fetched from the server.\r\n\t * @memberof UmbCurrentUserConfigRepository\r\n\t */\r\n\tinitialized: Promise<void>;\r\n\r\n\t#dataStore?: typeof UMB_CURRENT_USER_CONFIG_STORE_CONTEXT.TYPE;\r\n\t#dataSource = new UmbCurrentUserConfigServerDataSource(this);\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.initialized = new Promise<void>((resolve) => {\r\n\t\t\tthis.consumeContext(UMB_CURRENT_USER_CONFIG_STORE_CONTEXT, async (store) => {\r\n\t\t\t\tif (store) {\r\n\t\t\t\t\tthis.#dataStore = store;\r\n\t\t\t\t\tawait this.#init();\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tasync #init() {\r\n\t\t// Check if the store already has data\r\n\t\tif (this.#dataStore?.getState()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { data } = await this.#dataSource.getCurrentUserConfig();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#dataStore?.update(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Subscribe to the entire user configuration.\r\n\t */\r\n\tall() {\r\n\t\tif (!this.#dataStore) {\r\n\t\t\tthrow new Error('Data store not initialized');\r\n\t\t}\r\n\r\n\t\treturn this.#dataStore.all();\r\n\t}\r\n\r\n\t/**\r\n\t * Subscribe to a part of the user configuration.\r\n\t * @param part\r\n\t */\r\n\tpart<Part extends keyof UmbCurrentUserConfigurationModel>(\r\n\t\tpart: Part,\r\n\t): Observable<UmbCurrentUserConfigurationModel[Part]> {\r\n\t\tif (!this.#dataStore) {\r\n\t\t\tthrow new Error('Data store not initialized');\r\n\t\t}\r\n\r\n\t\treturn this.#dataStore.part(part);\r\n\t}\r\n}\r\n\r\nexport default UmbCurrentUserConfigRepository;\r\n"],"names":["UmbCurrentUserConfigServerDataSource","#host","host","tryExecute","UserService","UmbCurrentUserConfigRepository","UmbRepositoryBase","#dataStore","#dataSource","resolve","UMB_CURRENT_USER_CONFIG_STORE_CONTEXT","store","#init","data","part"],"mappings":";;;;AAIO,MAAMA,EAAqC;AAAA,EACjDC;AAAA,EAEA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOd,uBAAuB;AACtB,WAAOC,EAAW,KAAKF,IAAOG,EAAY,6BAA6B;AAAA,EAAA;AAEzE;ACVO,MAAMC,UAAuCC,EAAoC;AAAA,EAOvFC;AAAA,EACAC,KAAc,IAAIR,EAAqC,IAAI;AAAA,EAE3D,YAAYE,GAAyB;AACpC,UAAMA,CAAI,GACV,KAAK,cAAc,IAAI,QAAc,CAACO,MAAY;AAC5C,WAAA,eAAeC,GAAuC,OAAOC,MAAU;AAC3E,QAAIA,MACH,KAAKJ,KAAaI,GAClB,MAAM,KAAKC,GAAM,GACTH,EAAA;AAAA,MACT,CACA;AAAA,IAAA,CACD;AAAA,EAAA;AAAA,EAGF,MAAMG,KAAQ;AAET,QAAA,KAAKL,IAAY;AACpB;AAGD,UAAM,EAAE,MAAAM,EAAK,IAAI,MAAM,KAAKL,GAAY,qBAAqB;AAE7D,IAAIK,KACE,KAAAN,IAAY,OAAOM,CAAI;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAMD,MAAM;AACD,QAAA,CAAC,KAAKN;AACH,YAAA,IAAI,MAAM,4BAA4B;AAGtC,WAAA,KAAKA,GAAW,IAAI;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B,KACCO,GACqD;AACjD,QAAA,CAAC,KAAKP;AACH,YAAA,IAAI,MAAM,4BAA4B;AAGtC,WAAA,KAAKA,GAAW,KAAKO,CAAI;AAAA,EAAA;AAElC;"}