{"version":3,"file":"user-avatar.repository-BB-a5rpL.js","sources":["../../../src/packages/user/user/repository/avatar/user-avatar.server.data-source.ts","../../../src/packages/user/user/repository/avatar/user-avatar.repository.ts"],"sourcesContent":["import type { SetAvatarRequestModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UserService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbDataSourceErrorResponse } from '@umbraco-cms/backoffice/repository';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\nexport class UmbUserAvatarServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an avatar for the user with the given id based on a temporary uploaded file\r\n\t * @param {string} unique\r\n\t * @param {string} fileUnique\r\n\t * @returns {*}  {Promise<UmbDataSourceErrorResponse>}\r\n\t * @memberof UmbUserServerDataSource\r\n\t */\r\n\tcreateAvatar(unique: string, fileUnique: string): Promise<UmbDataSourceErrorResponse> {\r\n\t\tconst body: SetAvatarRequestModel = {\r\n\t\t\tfile: {\r\n\t\t\t\tid: fileUnique,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn tryExecute(this.#host, UserService.postUserAvatarById({ path: { id: unique }, body }));\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes the avatar for the user with the given id\r\n\t * @param {string} unique\r\n\t * @returns {*}  {Promise<UmbDataSourceErrorResponse>}\r\n\t * @memberof UmbUserServerDataSource\r\n\t */\r\n\tdeleteAvatar(unique: string): Promise<UmbDataSourceErrorResponse> {\r\n\t\treturn tryExecute(this.#host, UserService.deleteUserAvatarById({ path: { id: unique } }));\r\n\t}\r\n}\r\n","import { UmbUserRepositoryBase } from '../user-repository-base.js';\r\nimport { UmbUserAvatarServerDataSource } from './user-avatar.server.data-source.js';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\nimport { TemporaryFileStatus, UmbTemporaryFileManager } from '@umbraco-cms/backoffice/temporary-file';\r\n\r\nexport class UmbUserAvatarRepository extends UmbUserRepositoryBase {\r\n\t#temporaryFileManager = new UmbTemporaryFileManager(this);\r\n\t#avatarSource = new UmbUserAvatarServerDataSource(this);\r\n\t#abortController = new AbortController();\r\n\r\n\t/**\r\n\t * Uploads an avatar for the user with the given id\r\n\t * @param {string} userUnique\r\n\t * @param {File} file\r\n\t * @returns {Promise<UmbDataSourceErrorResponse>}\r\n\t * @memberof UmbUserRepository\r\n\t */\r\n\tasync uploadAvatar(userUnique: string, file: File) {\r\n\t\tif (!userUnique) throw new Error('Id is missing');\r\n\t\tawait this.init;\r\n\r\n\t\t// upload temp file\r\n\t\tconst temporaryUnique = UmbId.new();\r\n\t\tconst { status } = await this.#temporaryFileManager.uploadOne({\r\n\t\t\tfile,\r\n\t\t\ttemporaryUnique,\r\n\t\t\tabortController: this.#abortController,\r\n\t\t});\r\n\r\n\t\tif (status === TemporaryFileStatus.ERROR) {\r\n\t\t\treturn { error: new Error('Avatar upload failed') };\r\n\t\t}\r\n\r\n\t\t// assign temp file to avatar\r\n\t\tconst { error } = await this.#avatarSource.createAvatar(userUnique, temporaryUnique);\r\n\r\n\t\tif (!error) {\r\n\t\t\t// TODO: update store + current user\r\n\t\t\tconst localUrl = URL.createObjectURL(file);\r\n\r\n\t\t\t// The server returns 5 different sizes of the avatar, so we need to mimick that here\r\n\t\t\tthis.detailStore?.updateItem(userUnique, { avatarUrls: [localUrl, localUrl, localUrl, localUrl, localUrl] });\r\n\r\n\t\t\tconst notification = { data: { message: `Avatar uploaded` } };\r\n\t\t\tthis.notificationContext?.peek('positive', notification);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the avatar for the user with the given id\r\n\t * @param {string} userUnique\r\n\t * @returns {Promise<UmbDataSourceErrorResponse>}\r\n\t * @memberof UmbUserRepository\r\n\t */\r\n\tasync deleteAvatar(userUnique: string) {\r\n\t\tif (!userUnique) throw new Error('Id is missing');\r\n\t\tawait this.init;\r\n\r\n\t\tconst { error } = await this.#avatarSource.deleteAvatar(userUnique);\r\n\r\n\t\tif (!error) {\r\n\t\t\tthis.detailStore?.updateItem(userUnique, { avatarUrls: [] });\r\n\r\n\t\t\tconst notification = { data: { message: `Avatar deleted` } };\r\n\t\t\tthis.notificationContext?.peek('positive', notification);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n\r\n\toverride destroy() {\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\nexport default UmbUserAvatarRepository;\r\n"],"names":["UmbUserAvatarServerDataSource","#host","host","unique","fileUnique","body","tryExecute","UserService","UmbUserAvatarRepository","UmbUserRepositoryBase","#temporaryFileManager","UmbTemporaryFileManager","#avatarSource","#abortController","userUnique","file","temporaryUnique","UmbId","status","TemporaryFileStatus","error","localUrl","notification"],"mappings":";;;;;AAMO,MAAMA,EAA8B;AAAA,EAC1CC;AAAA,EAEA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUd,aAAaC,GAAgBC,GAAyD;AACrF,UAAMC,IAA8B;AAAA,MACnC,MAAM;AAAA,QACL,IAAID;AAAA,MAAA;AAAA,IAEN;AAEA,WAAOE,EAAW,KAAKL,IAAOM,EAAY,mBAAmB,EAAE,MAAM,EAAE,IAAIJ,KAAU,MAAAE,EAAM,CAAA,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS7F,aAAaF,GAAqD;AACjE,WAAOG,EAAW,KAAKL,IAAOM,EAAY,qBAAqB,EAAE,MAAM,EAAE,IAAIJ,EAAA,EAAU,CAAA,CAAC;AAAA,EAAA;AAE1F;AClCO,MAAMK,UAAgCC,EAAsB;AAAA,EAClEC,KAAwB,IAAIC,EAAwB,IAAI;AAAA,EACxDC,KAAgB,IAAIZ,EAA8B,IAAI;AAAA,EACtDa,KAAmB,IAAI,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASvC,MAAM,aAAaC,GAAoBC,GAAY;AAClD,QAAI,CAACD,EAAkB,OAAA,IAAI,MAAM,eAAe;AAChD,UAAM,KAAK;AAGL,UAAAE,IAAkBC,EAAM,IAAI,GAC5B,EAAE,QAAAC,EAAO,IAAI,MAAM,KAAKR,GAAsB,UAAU;AAAA,MAC7D,MAAAK;AAAA,MACA,iBAAAC;AAAA,MACA,iBAAiB,KAAKH;AAAA,IAAA,CACtB;AAEG,QAAAK,MAAWC,EAAoB;AAClC,aAAO,EAAE,OAAO,IAAI,MAAM,sBAAsB,EAAE;AAI7C,UAAA,EAAE,OAAAC,MAAU,MAAM,KAAKR,GAAc,aAAaE,GAAYE,CAAe;AAEnF,QAAI,CAACI,GAAO;AAEL,YAAAC,IAAW,IAAI,gBAAgBN,CAAI;AAGzC,WAAK,aAAa,WAAWD,GAAY,EAAE,YAAY,CAACO,GAAUA,GAAUA,GAAUA,GAAUA,CAAQ,EAAA,CAAG;AAE3G,YAAMC,IAAe,EAAE,MAAM,EAAE,SAAS,oBAAoB;AACvD,WAAA,qBAAqB,KAAK,YAAYA,CAAY;AAAA,IAAA;AAGxD,WAAO,EAAE,OAAAF,EAAM;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAShB,MAAM,aAAaN,GAAoB;AACtC,QAAI,CAACA,EAAkB,OAAA,IAAI,MAAM,eAAe;AAChD,UAAM,KAAK;AAEX,UAAM,EAAE,OAAAM,EAAM,IAAI,MAAM,KAAKR,GAAc,aAAaE,CAAU;AAElE,QAAI,CAACM,GAAO;AACX,WAAK,aAAa,WAAWN,GAAY,EAAE,YAAY,CAAA,GAAI;AAE3D,YAAMQ,IAAe,EAAE,MAAM,EAAE,SAAS,mBAAmB;AACtD,WAAA,qBAAqB,KAAK,YAAYA,CAAY;AAAA,IAAA;AAGxD,WAAO,EAAE,OAAAF,EAAM;AAAA,EAAA;AAAA,EAGP,UAAU;AAClB,UAAM,QAAQ;AAAA,EAAA;AAEhB;"}