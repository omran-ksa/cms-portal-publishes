{"version":3,"file":"new-user-password.repository-ECuxFuZ6.js","sources":["../../../src/packages/user/user/repository/new-password/new-user-password.server.data-source.ts","../../../src/packages/user/user/repository/new-password/new-user-password.repository.ts"],"sourcesContent":["import { UserService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A server data source for generating and assigning a new password for a user\r\n * @class UmbNewUserPasswordServerDataSource\r\n */\r\nexport class UmbNewUserPasswordServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbNewUserPasswordServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbNewUserPasswordServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Generate a new password for a user\r\n\t * @param {string} unique\r\n\t * @returns {*}\r\n\t * @memberof UmbNewUserPasswordServerDataSource\r\n\t */\r\n\tasync newPassword(unique: string) {\r\n\t\tif (!unique) throw new Error('User unique is missing');\r\n\r\n\t\treturn tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tUserService.postUserByIdResetPassword({\r\n\t\t\t\tpath: { id: unique },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbUserRepositoryBase } from '../user-repository-base.js';\r\nimport { UmbNewUserPasswordServerDataSource as UmbNewUserPasswordServerDataSource } from './new-user-password.server.data-source.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\n/**\r\n * A repository for generating and assigning a new password for a user\r\n * @class UmbNewUserPasswordRepository\r\n * @augments {UmbUserRepositoryBase}\r\n */\r\nexport class UmbNewUserPasswordRepository extends UmbUserRepositoryBase {\r\n\tdataSource: UmbNewUserPasswordServerDataSource;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbNewUserPasswordRepository.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbNewUserPasswordRepository\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.dataSource = new UmbNewUserPasswordServerDataSource(host);\r\n\t}\r\n\r\n\t/**\r\n\t * Request a new password for a user\r\n\t * @param {string} userUnique\r\n\t * @returns {*}\r\n\t * @memberof UmbNewUserPasswordRepository\r\n\t */\r\n\tasync requestNewPassword(userUnique: string) {\r\n\t\tif (!userUnique) throw new Error('User unique is missing');\r\n\t\tawait this.init;\r\n\t\treturn this.dataSource.newPassword(userUnique);\r\n\t}\r\n}\r\n\r\nexport default UmbNewUserPasswordRepository;\r\n"],"names":["UmbNewUserPasswordServerDataSource","#host","host","unique","tryExecute","UserService","UmbNewUserPasswordRepository","UmbUserRepositoryBase","userUnique"],"mappings":";;;AAQO,MAAMA,EAAmC;AAAA,EAC/CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASd,MAAM,YAAYC,GAAgB;AACjC,QAAI,CAACA,EAAc,OAAA,IAAI,MAAM,wBAAwB;AAE9C,WAAAC;AAAA,MACN,KAAKH;AAAA,MACLI,EAAY,0BAA0B;AAAA,QACrC,MAAM,EAAE,IAAIF,EAAO;AAAA,MACnB,CAAA;AAAA,IACF;AAAA,EAAA;AAEF;AC3BO,MAAMG,UAAqCC,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQvE,YAAYL,GAAyB;AACpC,UAAMA,CAAI,GACL,KAAA,aAAa,IAAIF,EAAmCE,CAAI;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS9D,MAAM,mBAAmBM,GAAoB;AAC5C,QAAI,CAACA,EAAkB,OAAA,IAAI,MAAM,wBAAwB;AACzD,iBAAM,KAAK,MACJ,KAAK,WAAW,YAAYA,CAAU;AAAA,EAAA;AAE/C;"}