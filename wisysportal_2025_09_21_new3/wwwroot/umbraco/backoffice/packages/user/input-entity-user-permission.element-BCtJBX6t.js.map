{"version":3,"file":"input-entity-user-permission.element-BCtJBX6t.js","sources":["../../../src/packages/user/user-permission/components/input-entity-user-permission/input-entity-user-permission.element.ts"],"sourcesContent":["import type { ManifestEntityUserPermission } from '../../entity-user-permission.extension.js';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { html, customElement, property, state, nothing, ifDefined, css } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbObserverController } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbUserPermissionVerbElement } from '@umbraco-cms/backoffice/user';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\n@customElement('umb-input-entity-user-permission')\r\nexport class UmbInputEntityUserPermissionElement extends UmbFormControlMixin(UmbLitElement) {\r\n\t@property({ type: String, attribute: 'entity-type' })\r\n\tpublic get entityType(): string {\r\n\t\treturn this._entityType;\r\n\t}\r\n\tpublic set entityType(value: string) {\r\n\t\tif (value === this._entityType) return;\r\n\t\tthis._entityType = value;\r\n\t\tthis.#observeEntityUserPermissions();\r\n\t}\r\n\tprivate _entityType: string = '';\r\n\r\n\t@property({ attribute: false })\r\n\tallowedVerbs: Array<string> = [];\r\n\r\n\t@state()\r\n\tprivate _manifests: Array<ManifestEntityUserPermission> = [];\r\n\r\n\t#manifestObserver?: UmbObserverController<Array<ManifestEntityUserPermission>>;\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#isAllowed(permissionVerbs: Array<string>) {\r\n\t\treturn permissionVerbs.every((verb) => this.allowedVerbs.includes(verb));\r\n\t}\r\n\r\n\t#observeEntityUserPermissions() {\r\n\t\tthis.#manifestObserver?.destroy();\r\n\r\n\t\tthis.#manifestObserver = this.observe(\r\n\t\t\tumbExtensionsRegistry.byType('entityUserPermission'),\r\n\t\t\t(userPermissionManifests) => {\r\n\t\t\t\tthis._manifests = userPermissionManifests.filter((manifest) =>\r\n\t\t\t\t\tmanifest.forEntityTypes.includes(this.entityType),\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t'umbUserPermissionManifestsObserver',\r\n\t\t);\r\n\t}\r\n\r\n\t#onChangeUserPermission(event: UmbChangeEvent, permissionVerbs: Array<string>) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst target = event.target as UmbUserPermissionVerbElement;\r\n\t\tif (target.allowed) {\r\n\t\t\tthis.#addUserPermission(permissionVerbs);\r\n\t\t} else {\r\n\t\t\tthis.#removeUserPermission(permissionVerbs);\r\n\t\t}\r\n\t}\r\n\r\n\t#addUserPermission(permissionVerbs: Array<string>) {\r\n\t\tconst verbs = [...this.allowedVerbs, ...permissionVerbs];\r\n\t\t// ensure we only have unique verbs\r\n\t\tthis.allowedVerbs = [...new Set(verbs)];\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t#removeUserPermission(permissionVerbs: Array<string>) {\r\n\t\tthis.allowedVerbs = this.allowedVerbs.filter((p) => !permissionVerbs.includes(p));\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`${this.#renderGroupedPermissions(this._manifests)} `;\r\n\t}\r\n\r\n\t#renderGroupedPermissions(permissionManifests: Array<ManifestEntityUserPermission>) {\r\n\t\t// TODO: groupBy is not known by TS yet\r\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t// @ts-expect-error\r\n\t\tconst groupedPermissions = Object.groupBy(\r\n\t\t\tpermissionManifests,\r\n\t\t\t(manifest: ManifestEntityUserPermission) => manifest.meta.group,\r\n\t\t) as Record<string, Array<ManifestEntityUserPermission>>;\r\n\t\treturn html`\r\n\t\t\t${Object.entries(groupedPermissions).map(\r\n\t\t\t\t([group, manifests]) => html`\r\n\t\t\t\t\t${group !== 'undefined'\r\n\t\t\t\t\t\t? html` <h5><umb-localize .key=${`actionCategories_${group}`}>${group}</umb-localize></h5> `\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t<div>${manifests.map((manifest) => html` ${this.#renderPermission(manifest)} `)}</div>\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderPermission(manifest: ManifestEntityUserPermission) {\r\n\t\treturn html` <umb-input-user-permission-verb\r\n\t\t\tlabel=${ifDefined(manifest.meta.label ? this.localize.string(manifest.meta.label) : manifest.name)}\r\n\t\t\tdescription=${ifDefined(manifest.meta.description ? this.localize.string(manifest.meta.description) : undefined)}\r\n\t\t\t?allowed=${this.#isAllowed(manifest.meta.verbs)}\r\n\t\t\t@change=${(event: UmbChangeEvent) =>\r\n\t\t\t\tthis.#onChangeUserPermission(event, manifest.meta.verbs)}></umb-input-user-permission-verb>`;\r\n\t}\r\n\r\n\toverride disconnectedCallback() {\r\n\t\tsuper.disconnectedCallback();\r\n\t\tthis.#manifestObserver?.destroy();\r\n\t}\r\n\r\n\tstatic override styles = css`\r\n\t\tumb-input-user-permission-verb:not(:last-of-type) {\r\n\t\t\tborder-bottom: 1px solid var(--uui-color-divider);\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default UmbInputEntityUserPermissionElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-entity-user-permission': UmbInputEntityUserPermissionElement;\r\n\t}\r\n}\r\n"],"names":["_manifestObserver","_UmbInputEntityUserPermissionElement_instances","isAllowed_fn","observeEntityUserPermissions_fn","onChangeUserPermission_fn","addUserPermission_fn","removeUserPermission_fn","renderGroupedPermissions_fn","renderPermission_fn","UmbInputEntityUserPermissionElement","UmbFormControlMixin","UmbLitElement","__privateAdd","value","__privateMethod","html","__privateGet","permissionVerbs","verb","__privateSet","umbExtensionsRegistry","userPermissionManifests","manifest","event","verbs","UmbChangeEvent","p","permissionManifests","groupedPermissions","group","manifests","nothing","ifDefined","css","__decorateClass","property","state","customElement"],"mappings":";;;;;;;;;;;wXAAAA,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;AAUO,IAAMC,IAAN,cAAkDC,EAAoBC,CAAa,EAAE;AAAA,EAArF,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAX,CAAA,GAUN,KAAQ,cAAsB,IAG9B,KAAA,eAA8B,CAAC,GAG/B,KAAQ,aAAkD,CAAC,GAE3DW,EAAA,MAAAZ,CAAA;AAAA,EAAA;AAAA,EAhBA,IAAW,aAAqB;AAC/B,WAAO,KAAK;AAAA,EAAA;AAAA,EAEb,IAAW,WAAWa,GAAe;AAChC,IAAAA,MAAU,KAAK,gBACnB,KAAK,cAAcA,GACnBC,EAAA,MAAKb,GAALE,CAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAYkB,iBAAiB;AAAA,EAC5B;AAAA,EA2CC,SAAS;AACjB,WAAOY,IAAOD,EAAA,MAAKb,GAALM,CAAA,EAAA,KAAA,MAA+B,KAAK,UAAW,CAAA;AAAA,EAAA;AAAA,EAgCrD,uBAAuB;AAC/B,UAAM,qBAAqB,GAC3BS,EAAA,MAAKhB,IAAmB,QAAQ;AAAA,EAAA;AAQlC;AAzFCA,IAAA,oBAAA,QAAA;AAlBMC,IAAA,oBAAA,QAAA;AAwBNC,IAAU,SAACe,GAAgC;AACnC,SAAAA,EAAgB,MAAM,CAACC,MAAS,KAAK,aAAa,SAASA,CAAI,CAAC;AACxE;AAEAf,IAA6B,WAAG;AAC/B,EAAAa,EAAA,MAAKhB,IAAmB,QAAQ,GAEhCmB,EAAA,MAAKnB,GAAoB,KAAK;AAAA,IAC7BoB,EAAsB,OAAO,sBAAsB;AAAA,IACnD,CAACC,MAA4B;AAC5B,WAAK,aAAaA,EAAwB;AAAA,QAAO,CAACC,MACjDA,EAAS,eAAe,SAAS,KAAK,UAAU;AAAA,MACjD;AAAA,IACD;AAAA,IACA;AAAA,EAAA,CACD;AACD;AAEAlB,IAAuB,SAACmB,GAAuBN,GAAgC;AAC9E,EAAAM,EAAM,gBAAgB,GACPA,EAAM,OACV,UACVT,EAAA,MAAKb,MAAL,KAAwB,MAAAgB,CAAA,IAExBH,EAAA,MAAKb,MAAL,KAA2B,MAAAgB,CAAA;AAE7B;AAEAZ,IAAkB,SAACY,GAAgC;AAClD,QAAMO,IAAQ,CAAC,GAAG,KAAK,cAAc,GAAGP,CAAe;AAEvD,OAAK,eAAe,CAAC,GAAG,IAAI,IAAIO,CAAK,CAAC,GACjC,KAAA,cAAc,IAAIC,GAAgB;AACxC;AAEAnB,IAAqB,SAACW,GAAgC;AAChD,OAAA,eAAe,KAAK,aAAa,OAAO,CAACS,MAAM,CAACT,EAAgB,SAASS,CAAC,CAAC,GAC3E,KAAA,cAAc,IAAID,GAAgB;AACxC;AAMAlB,IAAyB,SAACoB,GAA0D;AAInF,QAAMC,IAAqB,OAAO;AAAA,IACjCD;AAAA,IACA,CAACL,MAA2CA,EAAS,KAAK;AAAA,EAC3D;AACO,SAAAP;AAAA,KACJ,OAAO,QAAQa,CAAkB,EAAE;AAAA,IACpC,CAAC,CAACC,GAAOC,CAAS,MAAMf;AAAA,OACrBc,MAAU,cACTd,4BAA+B,oBAAoBc,CAAK,EAAE,IAAIA,CAAK,0BACnEE,CAAO;AAAA,YACHD,EAAU,IAAI,CAACR,MAAaP,KAAQD,QAAKb,GAALO,CAAA,EAAA,KAAA,MAAuBc,CAAS,CAAA,GAAG,CAAC;AAAA;AAAA,EAEhF,CAAA;AAAA;AAEH;AAEAd,IAAiB,SAACc,GAAwC;AAClD,SAAAP;AAAA,WACEiB,EAAUV,EAAS,KAAK,QAAQ,KAAK,SAAS,OAAOA,EAAS,KAAK,KAAK,IAAIA,EAAS,IAAI,CAAC;AAAA,iBACpFU,EAAUV,EAAS,KAAK,cAAc,KAAK,SAAS,OAAOA,EAAS,KAAK,WAAW,IAAI,MAAS,CAAC;AAAA,cACrGR,EAAK,MAAAb,GAAAC,CAAA,EAAL,KAAgB,MAAAoB,EAAS,KAAK,KAAM,CAAA;AAAA,aACrC,CAACC,MACVT,EAAK,MAAAb,GAAAG,CAAA,EAAL,WAA6BmB,GAAOD,EAAS,KAAK,KAAM,CAAA;AAC3D;AA/FYb,EAsGI,SAASwB;AAAA;AAAA;AAAA;AAAA;AApGdC,EAAA;AAAA,EADVC,EAAS,EAAE,MAAM,QAAQ,WAAW,cAAe,CAAA;AAAA,GADxC1B,EAED,WAAA,cAAA,CAAA;AAWXyB,EAAA;AAAA,EADCC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAZlB1B,EAaZ,WAAA,gBAAA,CAAA;AAGQyB,EAAA;AAAA,EADPE,EAAM;AAAA,GAfK3B,EAgBJ,WAAA,cAAA,CAAA;AAhBIA,IAANyB,EAAA;AAAA,EADNG,EAAc,kCAAkC;AAAA,GACpC5B,CAAA;"}