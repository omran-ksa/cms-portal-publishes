{"version":3,"file":"create-user-modal.element-BsEWNoMc.js","sources":["../../../src/packages/user/user/entity-actions/create/modal/create-user-modal.element.ts"],"sourcesContent":["import { UmbUserDetailRepository } from '../../../repository/index.js';\r\nimport { UmbUserKind } from '../../../utils/index.js';\r\nimport { UMB_CREATE_USER_SUCCESS_MODAL } from './create-user-success-modal.token.js';\r\nimport type { UmbCreateUserModalData } from './create-user-modal.token.js';\r\nimport type { UmbUserGroupInputElement } from '@umbraco-cms/backoffice/user-group';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { umbOpenModal, UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { css, html, customElement, query } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbReferenceByUnique } from '@umbraco-cms/backoffice/models';\r\n\r\n@customElement('umb-create-user-modal')\r\nexport class UmbCreateUserModalElement extends UmbModalBaseElement<UmbCreateUserModalData> {\r\n\t#userDetailRepository = new UmbUserDetailRepository(this);\r\n\r\n\t@query('#CreateUserForm')\r\n\t_form?: HTMLFormElement;\r\n\r\n\tasync #onSubmit(e: SubmitEvent) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst form = e.target as HTMLFormElement;\r\n\t\tif (!form) return;\r\n\r\n\t\tconst isValid = form.checkValidity();\r\n\t\tif (!isValid) return;\r\n\r\n\t\tconst formData = new FormData(form);\r\n\r\n\t\tconst name = formData.get('name') as string;\r\n\t\tconst email = formData.get('email') as string;\r\n\r\n\t\tconst userGroupPicker = form.querySelector('#userGroups') as UmbUserGroupInputElement;\r\n\t\tconst userGroupReferences: Array<UmbReferenceByUnique> = userGroupPicker?.selection.map((unique) => {\r\n\t\t\treturn { unique };\r\n\t\t});\r\n\r\n\t\tconst { data: userScaffold } = await this.#userDetailRepository.createScaffold();\r\n\t\tif (!userScaffold) return;\r\n\r\n\t\tuserScaffold.kind = this.data?.user.kind ?? UmbUserKind.DEFAULT;\r\n\t\tuserScaffold.name = name;\r\n\t\tuserScaffold.email = email;\r\n\t\tuserScaffold.userName = email;\r\n\t\tuserScaffold.userGroupUniques = userGroupReferences;\r\n\r\n\t\t// TODO: figure out when to use email or username\r\n\t\tconst { data } = await this.#userDetailRepository.create(userScaffold);\r\n\r\n\t\tif (data) {\r\n\t\t\tif (data.kind === UmbUserKind.DEFAULT) {\r\n\t\t\t\tthis.#openSuccessModal(data.unique);\r\n\t\t\t} else {\r\n\t\t\t\tthis._submitModal();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync #openSuccessModal(userUnique: string) {\r\n\t\tawait umbOpenModal(this, UMB_CREATE_USER_SUCCESS_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tunique: userUnique,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis._submitModal();\r\n\t\t\t})\r\n\t\t\t.catch((reason: any) => {\r\n\t\t\t\tif (reason?.type === 'createAnotherUser') {\r\n\t\t\t\t\tthis._form?.reset();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._rejectModal();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`<uui-dialog-layout headline=${this.localize.term('user_createUserHeadline', this.data?.user.kind)}>\r\n\t\t\t<p>${this.localize.term('user_createUserDescription', this.data?.user.kind)}</p>\r\n\r\n\t\t\t${this.#renderForm()}\r\n\t\t\t<uui-button @click=${this._rejectModal} slot=\"actions\" label=\"Cancel\" look=\"secondary\"></uui-button>\r\n\t\t\t<uui-button\r\n\t\t\t\tform=\"CreateUserForm\"\r\n\t\t\t\tslot=\"actions\"\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tlabel=\"Create user\"\r\n\t\t\t\tlook=\"primary\"\r\n\t\t\t\tcolor=\"positive\"></uui-button>\r\n\t\t</uui-dialog-layout>`;\r\n\t}\r\n\r\n\t#renderForm() {\r\n\t\treturn html` <uui-form>\r\n\t\t\t<form id=\"CreateUserForm\" name=\"form\" @submit=\"${this.#onSubmit}\">\r\n\t\t\t\t<uui-form-layout-item>\r\n\t\t\t\t\t<uui-label id=\"nameLabel\" slot=\"label\" for=\"name\" required>Name</uui-label>\r\n\t\t\t\t\t<uui-input id=\"name\" label=\"name\" type=\"text\" name=\"name\" required></uui-input>\r\n\t\t\t\t</uui-form-layout-item>\r\n\t\t\t\t<uui-form-layout-item>\r\n\t\t\t\t\t<uui-label id=\"emailLabel\" slot=\"label\" for=\"email\" required>Email</uui-label>\r\n\t\t\t\t\t<uui-input id=\"email\" label=\"email\" type=\"email\" name=\"email\" required></uui-input>\r\n\t\t\t\t</uui-form-layout-item>\r\n\t\t\t\t<uui-form-layout-item>\r\n\t\t\t\t\t<uui-label id=\"userGroupsLabel\" slot=\"label\" for=\"userGroups\" required>User group</uui-label>\r\n\t\t\t\t\t<span slot=\"description\">Add groups to assign access and permissions</span>\r\n\t\t\t\t\t<umb-user-group-input id=\"userGroups\" name=\"userGroups\"></umb-user-group-input>\r\n\t\t\t\t</uui-form-layout-item>\r\n\t\t\t</form>\r\n\t\t</uui-form>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\tuui-input,\r\n\t\t\tuui-input-password,\r\n\t\t\tuui-combobox {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\tp {\r\n\t\t\t\twidth: 580px;\r\n\t\t\t}\r\n\r\n\t\t\tuui-textarea {\r\n\t\t\t\t--uui-textarea-min-height: 100px;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbCreateUserModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-create-user-modal': UmbCreateUserModalElement;\r\n\t}\r\n}\r\n"],"names":["_userDetailRepository","_UmbCreateUserModalElement_instances","onSubmit_fn","openSuccessModal_fn","renderForm_fn","UmbCreateUserModalElement","UmbModalBaseElement","__privateAdd","UmbUserDetailRepository","html","__privateMethod","e","form","formData","name","email","userGroupReferences","unique","userScaffold","__privateGet","UmbUserKind","data","userUnique","umbOpenModal","UMB_CREATE_USER_SUCCESS_MODAL","reason","UmbTextStyles","css","__decorateClass","query","customElement","UmbCreateUserModalElement$1"],"mappings":";;;;;;;;;;;;;;;;;;;;+TAAAA,GAAAC,GAAAC,GAAAC,GAAAC;AAWa,IAAAC,IAAN,cAAwCC,EAA4C;AAAA,EAApF,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAN,CAAA,GACkBM,EAAA,MAAAP,GAAA,IAAIQ,EAAwB,IAAI,CAAA;AAAA,EAAA;AAAA,EAiE/C,SAAS;AACV,WAAAC,gCAAmC,KAAK,SAAS,KAAK,2BAA2B,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,QACvG,KAAK,SAAS,KAAK,8BAA8B,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA;AAAA,KAEzEC,EAAA,MAAKT,MAAL,KAAkB,IAAA,CAAA;AAAA,wBACC,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAiDzC;AAvHCD,IAAA,oBAAA,QAAA;AADMC,IAAA,oBAAA,QAAA;AAMAC,IAAS,eAACS,GAAgB;AAC/B,EAAAA,EAAE,eAAe;AAEjB,QAAMC,IAAOD,EAAE;AAIf,MAHI,CAACC,KAGD,CADYA,EAAK,cAAc,EACrB;AAER,QAAAC,IAAW,IAAI,SAASD,CAAI,GAE5BE,IAAOD,EAAS,IAAI,MAAM,GAC1BE,IAAQF,EAAS,IAAI,OAAO,GAG5BG,IADkBJ,EAAK,cAAc,aAAa,GACkB,UAAU,IAAI,CAACK,OACjF,EAAE,QAAAA,EAAO,EAChB,GAEK,EAAE,MAAMC,MAAiB,MAAMC,EAAA,MAAKnB,GAAsB,eAAe;AAC/E,MAAI,CAACkB,EAAc;AAEnB,EAAAA,EAAa,OAAO,KAAK,MAAM,KAAK,QAAQE,EAAY,SACxDF,EAAa,OAAOJ,GACpBI,EAAa,QAAQH,GACrBG,EAAa,WAAWH,GACxBG,EAAa,mBAAmBF;AAGhC,QAAM,EAAE,MAAAK,EAAK,IAAI,MAAMF,EAAK,MAAAnB,CAAA,EAAsB,OAAOkB,CAAY;AAErE,EAAIG,MACCA,EAAK,SAASD,EAAY,UACxBV,EAAA,MAAAT,GAAAE,CAAA,EAAL,WAAuBkB,EAAK,MAAA,IAE5B,KAAK,aAAa;AAGrB;AAEMlB,IAAiB,eAACmB,GAAoB;AACrC,QAAAC,EAAa,MAAMC,GAA+B;AAAA,IACvD,MAAM;AAAA,MACL,MAAM;AAAA,QACL,QAAQF;AAAA,MAAA;AAAA,IACT;AAAA,EACD,CACA,EACC,KAAK,MAAM;AACX,SAAK,aAAa;AAAA,EAAA,CAClB,EACA,MAAM,CAACG,MAAgB;AACnB,IAAAA,GAAQ,SAAS,sBACpB,KAAK,OAAO,MAAM,IAElB,KAAK,aAAa;AAAA,EACnB,CACA;AACH;AAkBArB,IAAW,WAAG;AACN,SAAAK;AAAA,oDAC2CC,QAAKT,GAASC,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBjE;AApGYG,EAsGI,SAAS;AAAA,EACxBqB;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeD;AAnHAC,EAAA;AAAA,EADCC,EAAM,iBAAiB;AAAA,GAHZxB,EAIZ,WAAA,SAAA,CAAA;AAJYA,IAANuB,EAAA;AAAA,EADNE,EAAc,uBAAuB;AAAA,GACzBzB,CAAA;AA0Hb,MAAA0B,IAAe1B;"}