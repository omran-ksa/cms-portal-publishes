{"version":3,"file":"change-user-password.action-lRPUbEY3.js","sources":["../../../src/packages/user/change-password/entity-action/change-user-password.action.ts"],"sourcesContent":["import { UMB_CHANGE_PASSWORD_MODAL } from '../modal/index.js';\r\nimport { UmbChangeUserPasswordRepository } from '@umbraco-cms/backoffice/user';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbEntityActionArgs } from '@umbraco-cms/backoffice/entity-action';\r\nimport { UmbEntityActionBase } from '@umbraco-cms/backoffice/entity-action';\r\nimport { umbOpenModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UMB_CURRENT_USER_CONTEXT, UmbCurrentUserRepository } from '@umbraco-cms/backoffice/current-user';\r\n\r\nexport class UmbChangeUserPasswordEntityAction extends UmbEntityActionBase<never> {\r\n\tconstructor(host: UmbControllerHost, args: UmbEntityActionArgs<never>) {\r\n\t\tsuper(host, args);\r\n\t}\r\n\r\n\toverride async execute() {\r\n\t\tif (!this.args.unique) throw new Error('Unique is not available');\r\n\r\n\t\tconst data = await umbOpenModal(this, UMB_CHANGE_PASSWORD_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tunique: this.args.unique,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}).catch(() => undefined);\r\n\t\tif (!data) return;\r\n\r\n\t\tconst currentUserContext = await this.getContext(UMB_CURRENT_USER_CONTEXT);\r\n\t\tif (!currentUserContext) {\r\n\t\t\tthrow new Error('Current user context is not available');\r\n\t\t}\r\n\t\tconst isCurrentUser = await currentUserContext.isUserCurrentUser(this.args.unique);\r\n\r\n\t\tif (isCurrentUser) {\r\n\t\t\tconst repository = new UmbCurrentUserRepository(this);\r\n\t\t\tconst { error } = await repository.changePassword(data.newPassword, data.oldPassword);\r\n\t\t\tif (error) throw error;\r\n\t\t} else {\r\n\t\t\tconst repository = new UmbChangeUserPasswordRepository(this);\r\n\t\t\tconst { error } = await repository.changePassword(this.args.unique, data.newPassword);\r\n\t\t\tif (error) throw error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { UmbChangeUserPasswordEntityAction as api };\r\n"],"names":["UmbChangeUserPasswordEntityAction","UmbEntityActionBase","host","args","data","umbOpenModal","UMB_CHANGE_PASSWORD_MODAL","currentUserContext","UMB_CURRENT_USER_CONTEXT","repository","UmbCurrentUserRepository","error","UmbChangeUserPasswordRepository"],"mappings":";;;;;AAQO,MAAMA,UAA0CC,EAA2B;AAAA,EACjF,YAAYC,GAAyBC,GAAkC;AACtE,UAAMD,GAAMC,CAAI;AAAA,EAAA;AAAA,EAGjB,MAAe,UAAU;AACxB,QAAI,CAAC,KAAK,KAAK,OAAc,OAAA,IAAI,MAAM,yBAAyB;AAEhE,UAAMC,IAAO,MAAMC,EAAa,MAAMC,GAA2B;AAAA,MAChE,MAAM;AAAA,QACL,MAAM;AAAA,UACL,QAAQ,KAAK,KAAK;AAAA,QAAA;AAAA,MACnB;AAAA,IACD,CACA,EAAE,MAAM,MAAA;AAAA,KAAe;AACxB,QAAI,CAACF,EAAM;AAEX,UAAMG,IAAqB,MAAM,KAAK,WAAWC,CAAwB;AACzE,QAAI,CAACD;AACE,YAAA,IAAI,MAAM,uCAAuC;AAIxD,QAFsB,MAAMA,EAAmB,kBAAkB,KAAK,KAAK,MAAM,GAE9D;AACZ,YAAAE,IAAa,IAAIC,EAAyB,IAAI,GAC9C,EAAE,OAAAC,EAAU,IAAA,MAAMF,EAAW,eAAeL,EAAK,aAAaA,EAAK,WAAW;AACpF,UAAIO,EAAa,OAAAA;AAAA,IAAA,OACX;AACA,YAAAF,IAAa,IAAIG,EAAgC,IAAI,GACrD,EAAE,OAAAD,MAAU,MAAMF,EAAW,eAAe,KAAK,KAAK,QAAQL,EAAK,WAAW;AACpF,UAAIO,EAAa,OAAAA;AAAA,IAAA;AAAA,EAClB;AAEF;"}