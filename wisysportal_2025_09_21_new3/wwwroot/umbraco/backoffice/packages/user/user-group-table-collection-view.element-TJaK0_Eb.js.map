{"version":3,"file":"user-group-table-collection-view.element-TJaK0_Eb.js","sources":["../../../src/packages/user/user-group/collection/components/user-group-table-name-column-layout.element.ts","../../../src/packages/user/user-group/collection/components/user-group-table-sections-column-layout.element.ts","../../../src/packages/user/user-group/collection/views/user-group-table-collection-view.element.ts"],"sourcesContent":["import { UMB_USER_GROUP_WORKSPACE_PATH } from '../../paths.js';\r\nimport { css, html, LitElement, customElement, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbTableItem } from '@umbraco-cms/backoffice/components';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\n\r\n@customElement('umb-user-group-table-name-column-layout')\r\nexport class UmbUserGroupTableNameColumnLayoutElement extends LitElement {\r\n\t@property({ type: Object, attribute: false })\r\n\titem!: UmbTableItem;\r\n\r\n\t@property({ attribute: false })\r\n\tvalue!: any;\r\n\r\n\toverride render() {\r\n\t\tconst href = UMB_USER_GROUP_WORKSPACE_PATH + '/edit/' + this.item.id;\r\n\t\treturn html`<a href=${href}>${this.value.name}</a>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\ta {\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbUserGroupTableNameColumnLayoutElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-user-group-table-name-column-layout': UmbUserGroupTableNameColumnLayoutElement;\r\n\t}\r\n}\r\n","import { html, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbTableItem } from '@umbraco-cms/backoffice/components';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-user-group-table-sections-column-layout')\r\nexport class UmbUserGroupTableSectionsColumnLayoutElement extends UmbLitElement {\r\n\t@property({ type: Object, attribute: false })\r\n\titem!: UmbTableItem;\r\n\r\n\t@property({ attribute: false })\r\n\tvalue!: any;\r\n\r\n\t@state()\r\n\tprivate _sectionsNames: Array<string> = [];\r\n\r\n\toverride updated(changedProperties: Map<string, any>) {\r\n\t\tif (changedProperties.has('value')) {\r\n\t\t\tthis.observeSectionNames();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate observeSectionNames() {\r\n\t\tthis.observe(\r\n\t\t\tumbExtensionsRegistry.byType('section'),\r\n\t\t\t(sections) => {\r\n\t\t\t\tthis._sectionsNames = sections\r\n\t\t\t\t\t.filter((x) => this.value.includes(x.alias))\r\n\t\t\t\t\t.map((x) => (x.meta.label ? this.localize.string(x.meta.label) : x.name));\r\n\t\t\t},\r\n\t\t\t'umbUserGroupTableSectionsColumnLayoutObserver',\r\n\t\t);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`${this._sectionsNames.join(', ')}`;\r\n\t}\r\n}\r\n\r\nexport default UmbUserGroupTableSectionsColumnLayoutElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-user-group-table-sections-column-layout': UmbUserGroupTableSectionsColumnLayoutElement;\r\n\t}\r\n}\r\n","import { UMB_USER_GROUP_COLLECTION_CONTEXT } from '../user-group-collection.context-token.js';\r\nimport type { UmbUserGroupDetailModel } from '../../types.js';\r\nimport type { UmbUserGroupCollectionContext } from '../user-group-collection.context.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { html, customElement, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type {\r\n\tUmbTableColumn,\r\n\tUmbTableConfig,\r\n\tUmbTableDeselectedEvent,\r\n\tUmbTableElement,\r\n\tUmbTableItem,\r\n\tUmbTableSelectedEvent,\r\n} from '@umbraco-cms/backoffice/components';\r\nimport type { UmbItemRepository } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbUniqueItemModel } from '@umbraco-cms/backoffice/models';\r\n\r\nimport '../components/user-group-table-name-column-layout.element.js';\r\nimport '../components/user-group-table-sections-column-layout.element.js';\r\nimport { createExtensionApiByAlias } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\n@customElement('umb-user-group-collection-table-view')\r\nexport class UmbUserGroupCollectionTableViewElement extends UmbLitElement {\r\n\t@state()\r\n\tprivate _tableConfig: UmbTableConfig = {\r\n\t\tallowSelection: true,\r\n\t};\r\n\r\n\t@state()\r\n\tprivate _tableColumns: Array<UmbTableColumn> = [\r\n\t\t{\r\n\t\t\tname: this.localize.term('general_name'),\r\n\t\t\talias: 'userGroupName',\r\n\t\t\telementName: 'umb-user-group-table-name-column-layout',\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: this.localize.term('main_sections'),\r\n\t\t\talias: 'userGroupSections',\r\n\t\t\telementName: 'umb-user-group-table-sections-column-layout',\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: this.localize.term('user_startnode'),\r\n\t\t\talias: 'userGroupContentStartNode',\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: this.localize.term('user_mediastartnode'),\r\n\t\t\talias: 'userGroupMediaStartNode',\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: '',\r\n\t\t\talias: 'entityActions',\r\n\t\t\talign: 'right',\r\n\t\t},\r\n\t];\r\n\r\n\t@state()\r\n\tprivate _tableItems: Array<UmbTableItem> = [];\r\n\r\n\t@state()\r\n\tprivate _selection: Array<string | null> = [];\r\n\r\n\t#collectionContext?: UmbUserGroupCollectionContext;\r\n\r\n\t// TODO: hardcoded dependencies on document and media modules. We should figure out how these dependencies can be added through extensions.\r\n\t#documentItemRepository?: UmbItemRepository<UmbUniqueItemModel>;\r\n\t#mediaItemRepository?: UmbItemRepository<UmbUniqueItemModel>;\r\n\r\n\t#documentStartNodeMap = new Map<string, string>();\r\n\t#mediaStartNodeMap = new Map<string, string>();\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_USER_GROUP_COLLECTION_CONTEXT, (instance) => {\r\n\t\t\tthis.#collectionContext = instance;\r\n\t\t\tthis.observe(\r\n\t\t\t\tthis.#collectionContext?.selection.selection,\r\n\t\t\t\t(selection) => (this._selection = selection ?? []),\r\n\t\t\t\t'umbCollectionSelectionObserver',\r\n\t\t\t);\r\n\t\t\tthis.observe(\r\n\t\t\t\tthis.#collectionContext?.items,\r\n\t\t\t\tasync (items) => {\r\n\t\t\t\t\tawait this.#initRepositories();\r\n\t\t\t\t\tthis._createTableItems(items ?? []);\r\n\t\t\t\t},\r\n\t\t\t\t'umbCollectionItemsObserver',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tasync #initRepositories() {\r\n\t\tif (this.#documentItemRepository && this.#mediaItemRepository) return;\r\n\r\n\t\t// TODO: get back to this when documents have been decoupled from users.\r\n\t\t// The repository alias is hardcoded on purpose to avoid a document import in the user module.\r\n\t\tthis.#documentItemRepository = await createExtensionApiByAlias<UmbItemRepository<UmbUniqueItemModel>>(\r\n\t\t\tthis,\r\n\t\t\t'Umb.Repository.DocumentItem',\r\n\t\t);\r\n\r\n\t\t// TODO: get back to this when media have been decoupled from users.\r\n\t\t// The repository alias is hardcoded on purpose to avoid a media import in the user module.\r\n\t\tthis.#mediaItemRepository = await createExtensionApiByAlias<UmbItemRepository<UmbUniqueItemModel>>(\r\n\t\t\tthis,\r\n\t\t\t'Umb.Repository.MediaItem',\r\n\t\t);\r\n\t}\r\n\r\n\tprivate async _createTableItems(userGroups: Array<UmbUserGroupDetailModel>) {\r\n\t\tif (!this.#documentItemRepository || !this.#mediaItemRepository) {\r\n\t\t\tthrow new Error('Document and media item repositories are not initialized.');\r\n\t\t}\r\n\r\n\t\tawait Promise.all([\r\n\t\t\tthis.#requestAndCacheStartNodes(\r\n\t\t\t\tuserGroups,\r\n\t\t\t\t'documentStartNode',\r\n\t\t\t\tthis.#documentItemRepository,\r\n\t\t\t\tthis.#documentStartNodeMap,\r\n\t\t\t),\r\n\t\t\tthis.#requestAndCacheStartNodes(userGroups, 'mediaStartNode', this.#mediaItemRepository, this.#mediaStartNodeMap),\r\n\t\t]);\r\n\r\n\t\tthis._tableItems = userGroups.map((userGroup) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: userGroup.unique,\r\n\t\t\t\ticon: userGroup.icon,\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolumnAlias: 'userGroupName',\r\n\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\tname: userGroup.name,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolumnAlias: 'userGroupSections',\r\n\t\t\t\t\t\tvalue: userGroup.sections,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolumnAlias: 'userGroupContentStartNode',\r\n\t\t\t\t\t\tvalue: userGroup.documentStartNode\r\n\t\t\t\t\t\t\t? this.#documentStartNodeMap.get(userGroup.documentStartNode.unique)\r\n\t\t\t\t\t\t\t: this.localize.term('content_contentRoot'),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolumnAlias: 'userGroupMediaStartNode',\r\n\t\t\t\t\t\tvalue: userGroup.mediaStartNode?.unique\r\n\t\t\t\t\t\t\t? this.#mediaStartNodeMap.get(userGroup.mediaStartNode.unique)\r\n\t\t\t\t\t\t\t: this.localize.term('media_mediaRoot'),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolumnAlias: 'entityActions',\r\n\t\t\t\t\t\tvalue: html`<umb-entity-actions-table-column-view\r\n\t\t\t\t\t\t\t.value=${{\r\n\t\t\t\t\t\t\t\tentityType: userGroup.entityType,\r\n\t\t\t\t\t\t\t\tunique: userGroup.unique,\r\n\t\t\t\t\t\t\t\tname: userGroup.name,\r\n\t\t\t\t\t\t\t}}></umb-entity-actions-table-column-view>`,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tasync #requestAndCacheStartNodes(\r\n\t\tuserGroups: Array<UmbUserGroupDetailModel>,\r\n\t\tstartNodeField: 'documentStartNode' | 'mediaStartNode',\r\n\t\titemRepository: UmbItemRepository<UmbUniqueItemModel>,\r\n\t\tmap: Map<string, string>,\r\n\t) {\r\n\t\tconst allStartNodes = userGroups.map((userGroup) => userGroup[startNodeField]?.unique).filter(Boolean) as string[];\r\n\t\tconst uniqueStartNodes = [...new Set(allStartNodes)];\r\n\t\tconst uncachedStartNodes = uniqueStartNodes.filter((unique) => !map.has(unique));\r\n\r\n\t\t// If there are no uncached start nodes, we don't need to make a request\r\n\t\tif (uncachedStartNodes.length === 0) return;\r\n\r\n\t\tconst { data: items } = await itemRepository.requestItems(uncachedStartNodes);\r\n\r\n\t\tif (items) {\r\n\t\t\titems.forEach((item) => {\r\n\t\t\t\t// cache the start node\r\n\t\t\t\tmap.set(item.unique, item.name);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t#onSelected(event: UmbTableSelectedEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst table = event.target as UmbTableElement;\r\n\t\tconst selection = table.selection;\r\n\t\tthis.#collectionContext?.selection.setSelection(selection);\r\n\t}\r\n\r\n\t#onDeselected(event: UmbTableDeselectedEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst table = event.target as UmbTableElement;\r\n\t\tconst selection = table.selection;\r\n\t\tthis.#collectionContext?.selection.setSelection(selection);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-table\r\n\t\t\t\t.config=${this._tableConfig}\r\n\t\t\t\t.columns=${this._tableColumns}\r\n\t\t\t\t.items=${this._tableItems}\r\n\t\t\t\t.selection=${this._selection}\r\n\t\t\t\t@selected=\"${this.#onSelected}\"\r\n\t\t\t\t@deselected=\"${this.#onDeselected}\"></umb-table>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [UmbTextStyles];\r\n}\r\n\r\nexport default UmbUserGroupCollectionTableViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-user-group-collection-table-view': UmbUserGroupCollectionTableViewElement;\r\n\t}\r\n}\r\n"],"names":["UmbUserGroupTableNameColumnLayoutElement","LitElement","href","UMB_USER_GROUP_WORKSPACE_PATH","html","UmbTextStyles","css","__decorateClass","property","customElement","UmbUserGroupTableSectionsColumnLayoutElement","UmbLitElement","changedProperties","umbExtensionsRegistry","sections","x","state","_collectionContext","_documentItemRepository","_mediaItemRepository","_documentStartNodeMap","_mediaStartNodeMap","_UmbUserGroupCollectionTableViewElement_instances","initRepositories_fn","requestAndCacheStartNodes_fn","onSelected_fn","onDeselected_fn","UmbUserGroupCollectionTableViewElement","__privateAdd","UMB_USER_GROUP_COLLECTION_CONTEXT","instance","__privateSet","__privateGet","selection","items","__privateMethod","userGroups","userGroup","createExtensionApiByAlias","startNodeField","itemRepository","map","allStartNodes","uncachedStartNodes","unique","item","event","UmbUserGroupCollectionTableViewElement$1"],"mappings":"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"}