{"version":3,"file":"current-user-allow-mfa-action.condition-DSXQ9VE6.js","sources":["../../../src/packages/user/user/conditions/allow-mfa/current-user-allow-mfa-action.condition.ts"],"sourcesContent":["import { UmbCurrentUserConfigRepository } from '../../repository/config/index.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbConditionBase, umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\n\r\nexport class UmbCurrentUserAllowMfaActionCondition extends UmbConditionBase<never> {\r\n\t#configRepository = new UmbCurrentUserConfigRepository(this._host);\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n\tconstructor(host: UmbControllerHost, args: any) {\r\n\t\tsuper(host, args);\r\n\t\tthis.#init();\r\n\t}\r\n\r\n\tasync #init() {\r\n\t\tawait this.#configRepository.initialized;\r\n\t\tthis.observe(\r\n\t\t\tobserveMultiple([\r\n\t\t\t\tthis.#configRepository.part('allowTwoFactor'),\r\n\t\t\t\tumbExtensionsRegistry.byType('mfaLoginProvider'),\r\n\t\t\t]),\r\n\t\t\t([allowTwoFactor, exts]) => {\r\n\t\t\t\tthis.permitted = allowTwoFactor && exts.length > 0;\r\n\t\t\t},\r\n\t\t\t'_userAllowMfaActionCondition',\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport { UmbCurrentUserAllowMfaActionCondition as api };\r\n"],"names":["UmbCurrentUserAllowMfaActionCondition","UmbConditionBase","#configRepository","UmbCurrentUserConfigRepository","host","args","#init","observeMultiple","umbExtensionsRegistry","allowTwoFactor","exts"],"mappings":";;;;;;;AAKO,MAAMA,UAA8CC,EAAwB;AAAA,EAClFC,KAAoB,IAAIC,EAA+B,KAAK,KAAK;AAAA;AAAA,EAGjE,YAAYC,GAAyBC,GAAW;AAC/C,UAAMD,GAAMC,CAAI,GAChB,KAAKC,GAAM;AAAA,EAAA;AAAA,EAGZ,MAAMA,KAAQ;AACb,UAAM,KAAKJ,GAAkB,aACxB,KAAA;AAAA,MACJK,EAAgB;AAAA,QACf,KAAKL,GAAkB,KAAK,gBAAgB;AAAA,QAC5CM,EAAsB,OAAO,kBAAkB;AAAA,MAAA,CAC/C;AAAA,MACD,CAAC,CAACC,GAAgBC,CAAI,MAAM;AACtB,aAAA,YAAYD,KAAkBC,EAAK,SAAS;AAAA,MAClD;AAAA,MACA;AAAA,IACD;AAAA,EAAA;AAEF;"}