{"version":3,"file":"user-mfa-modal.element-BTPxvCH8.js","sources":["../../../src/packages/user/user/modals/user-mfa/user-mfa-modal.element.ts"],"sourcesContent":["import { UmbUserRepository } from '../../repository/index.js';\r\nimport type { UmbUserMfaProviderModel } from '../../types.js';\r\nimport type { UmbUserMfaModalConfiguration } from './user-mfa-modal.token.js';\r\nimport { css, customElement, html, nothing, property, repeat, state, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { umbConfirmModal, type UmbModalContext } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { mergeObservables } from '@umbraco-cms/backoffice/observable-api';\r\n\r\ntype UmbMfaLoginProviderOption = UmbUserMfaProviderModel & {\r\n\tdisplayName: string;\r\n\texistsOnServer: boolean;\r\n};\r\n\r\n@customElement('umb-user-mfa-modal')\r\nexport class UmbUserMfaModalElement extends UmbLitElement {\r\n\t@property({ attribute: false })\r\n\tmodalContext?: UmbModalContext<UmbUserMfaModalConfiguration, never>;\r\n\r\n\t@state()\r\n\t_items: Array<UmbMfaLoginProviderOption> = [];\r\n\r\n\t#unique = '';\r\n\t#userRepository = new UmbUserRepository(this);\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis.#unique = this.modalContext?.data.unique ?? '';\r\n\t\tthis.#loadProviders();\r\n\t}\r\n\r\n\tasync #loadProviders() {\r\n\t\tconst serverLoginProviders$ = (await this.#userRepository.requestMfaProviders(this.#unique)).asObservable();\r\n\t\tconst manifestLoginProviders$ = umbExtensionsRegistry.byType('mfaLoginProvider');\r\n\r\n\t\t// Merge the server and manifest providers to get the final list of providers\r\n\t\tconst mfaLoginProviders$ = mergeObservables(\r\n\t\t\t[serverLoginProviders$, manifestLoginProviders$],\r\n\t\t\t([serverLoginProviders, manifestLoginProviders]) => {\r\n\t\t\t\treturn manifestLoginProviders.map((manifestLoginProvider) => {\r\n\t\t\t\t\tconst serverLoginProvider = serverLoginProviders.find(\r\n\t\t\t\t\t\t(serverLoginProvider) => serverLoginProvider.providerName === manifestLoginProvider.forProviderName,\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\texistsOnServer: !!serverLoginProvider,\r\n\t\t\t\t\t\tisEnabledOnUser: serverLoginProvider?.isEnabledOnUser ?? false,\r\n\t\t\t\t\t\tproviderName: serverLoginProvider?.providerName ?? manifestLoginProvider.forProviderName,\r\n\t\t\t\t\t\tdisplayName:\r\n\t\t\t\t\t\t\tmanifestLoginProvider.meta?.label ?? serverLoginProvider?.providerName ?? manifestLoginProvider.name,\r\n\t\t\t\t\t} satisfies UmbMfaLoginProviderOption;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tmfaLoginProviders$,\r\n\t\t\t(providers) => {\r\n\t\t\t\tthis._items = providers;\r\n\t\t\t},\r\n\t\t\t'_mfaLoginProviders',\r\n\t\t);\r\n\t}\r\n\r\n\t#close() {\r\n\t\tthis.modalContext?.submit();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=\"${this.localize.term('member_2fa')}\">\r\n\t\t\t\t<div id=\"main\">\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\tthis._items.length > 0,\r\n\t\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\t\tthis._items,\r\n\t\t\t\t\t\t\t\t(item) => item.providerName,\r\n\t\t\t\t\t\t\t\t(item) => this.#renderProvider(item),\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div slot=\"actions\">\r\n\t\t\t\t\t<uui-button @click=${this.#close} look=\"secondary\" .label=${this.localize.term('general_close')}></uui-button>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\t/**\r\n\t * Render a provider with a toggle to enable/disable it\r\n\t * @param item\r\n\t */\r\n\t#renderProvider(item: UmbMfaLoginProviderOption) {\r\n\t\treturn html`\r\n\t\t\t<uui-box headline=${item.displayName}>\r\n\t\t\t\t${when(\r\n\t\t\t\t\titem.existsOnServer,\r\n\t\t\t\t\t() => nothing,\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t\thtml`<div style=\"position:relative\" slot=\"header-actions\">\r\n\t\t\t\t\t\t\t<uui-badge\r\n\t\t\t\t\t\t\t\tstyle=\"cursor:default\"\r\n\t\t\t\t\t\t\t\ttitle=\"Warning: This provider is not configured on the server\"\r\n\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\tlook=\"primary\">\r\n\t\t\t\t\t\t\t\t!\r\n\t\t\t\t\t\t\t</uui-badge>\r\n\t\t\t\t\t\t</div>`,\r\n\t\t\t\t)}\r\n\t\t\t\t${when(\r\n\t\t\t\t\titem.isEnabledOnUser,\r\n\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t<p style=\"margin-top:0\">\r\n\t\t\t\t\t\t\t<umb-localize key=\"user_2faProviderIsEnabled\">This two-factor provider is enabled</umb-localize>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t.label=${this.localize.term('actions_disable')}\r\n\t\t\t\t\t\t\t@click=${() => this.#onProviderDisable(item)}></uui-button>\r\n\t\t\t\t\t`,\r\n\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\t\t.label=${this.localize.term('actions_enable')}></uui-button>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\t/**\r\n\t * This method is called when the user clicks the disable button on a provider.\r\n\t * It will show a confirmation dialog and then disable the provider if the user confirms.\r\n\t * NB! The user must have administrative rights before doing so.\r\n\t * @param item\r\n\t */\r\n\tasync #onProviderDisable(item: UmbMfaLoginProviderOption) {\r\n\t\tawait umbConfirmModal(this, {\r\n\t\t\theadline: this.localize.term('actions_disable'),\r\n\t\t\tcontent: this.localize.term('user_2faDisableForUser', item.displayName),\r\n\t\t\tconfirmLabel: this.localize.term('actions_disable'),\r\n\t\t\tcolor: 'danger',\r\n\t\t});\r\n\r\n\t\tawait this.#userRepository.disableMfaProvider(this.#unique, item.providerName, item.displayName);\r\n\t\tthis.#loadProviders();\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\tuui-box {\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-3);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbUserMfaModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-user-mfa-modal': UmbUserMfaModalElement;\r\n\t}\r\n}\r\n"],"names":["_unique","_userRepository","_UmbUserMfaModalElement_instances","loadProviders_fn","close_fn","renderProvider_fn","onProviderDisable_fn","UmbUserMfaModalElement","UmbLitElement","__privateAdd","UmbUserRepository","__privateSet","__privateMethod","html","when","repeat","item","serverLoginProviders$","__privateGet","manifestLoginProviders$","umbExtensionsRegistry","mfaLoginProviders$","mergeObservables","serverLoginProviders","manifestLoginProviders","manifestLoginProvider","serverLoginProvider","providers","nothing","umbConfirmModal","UmbTextStyles","css","__decorateClass","property","state","customElement","UmbUserMfaModalElement$1"],"mappings":"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"}