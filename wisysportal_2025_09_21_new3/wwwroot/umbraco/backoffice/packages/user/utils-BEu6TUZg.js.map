{"version":3,"file":"utils-BEu6TUZg.js","sources":["../../../src/packages/user/user/utils.ts"],"sourcesContent":["import type { UUIInterfaceColor, UUIInterfaceLook } from '@umbraco-cms/backoffice/external/uui';\r\nimport type { UserStateModel } from '@umbraco-cms/backoffice/external/backend-api';\r\n\r\nexport interface UmbUserDisplayStatus {\r\n\tlook: UUIInterfaceLook;\r\n\tcolor: UUIInterfaceColor;\r\n\tkey: string;\r\n}\r\n\r\nconst userStates: UmbUserDisplayStatus[] = [\r\n\t{ key: 'All', color: 'positive', look: 'secondary' },\r\n\t{ key: 'Active', color: 'positive', look: 'primary' },\r\n\t{ key: 'Disabled', color: 'danger', look: 'primary' },\r\n\t{ key: 'LockedOut', color: 'danger', look: 'secondary' },\r\n\t{ key: 'Invited', color: 'warning', look: 'primary' },\r\n\t{ key: 'Inactive', color: 'warning', look: 'primary' },\r\n];\r\n\r\nexport const getDisplayStateFromUserStatus = (status: UserStateModel): UmbUserDisplayStatus =>\r\n\tuserStates\r\n\t\t.filter((state) => state.key === status)\r\n\t\t.map((state) => ({\r\n\t\t\t...state,\r\n\t\t\tkey: 'state' + state.key,\r\n\t\t}))[0];\r\n\r\nexport const TimeFormatOptions: Intl.DateTimeFormatOptions = { dateStyle: 'long', timeStyle: 'short' };\r\n"],"names":["userStates","getDisplayStateFromUserStatus","status","state","TimeFormatOptions"],"mappings":"AASA,MAAMA,IAAqC;AAAA,EAC1C,EAAE,KAAK,OAAO,OAAO,YAAY,MAAM,YAAY;AAAA,EACnD,EAAE,KAAK,UAAU,OAAO,YAAY,MAAM,UAAU;AAAA,EACpD,EAAE,KAAK,YAAY,OAAO,UAAU,MAAM,UAAU;AAAA,EACpD,EAAE,KAAK,aAAa,OAAO,UAAU,MAAM,YAAY;AAAA,EACvD,EAAE,KAAK,WAAW,OAAO,WAAW,MAAM,UAAU;AAAA,EACpD,EAAE,KAAK,YAAY,OAAO,WAAW,MAAM,UAAU;AACtD,GAEaC,IAAgC,CAACC,MAC7CF,EACE,OAAO,CAACG,MAAUA,EAAM,QAAQD,CAAM,EACtC,IAAI,CAACC,OAAW;AAAA,EAChB,GAAGA;AAAA,EACH,KAAK,UAAUA,EAAM;AACtB,EAAE,EAAE,CAAC,GAEMC,IAAgD,EAAE,WAAW,QAAQ,WAAW,QAAQ;"}