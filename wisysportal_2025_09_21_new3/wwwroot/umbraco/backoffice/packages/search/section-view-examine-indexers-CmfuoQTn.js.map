{"version":3,"file":"section-view-examine-indexers-CmfuoQTn.js","sources":["../../../src/packages/search/examine-management-dashboard/views/section-view-examine-indexers.ts"],"sourcesContent":["import type { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { css, html, nothing, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nimport type { HealthStatusResponseModel, IndexResponseModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { HealthStatusModel, IndexerService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\nimport './section-view-examine-searchers.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\n\r\n@customElement('umb-dashboard-examine-index')\r\nexport class UmbDashboardExamineIndexElement extends UmbLitElement {\r\n\t@property()\r\n\tindexName!: string;\r\n\r\n\t@state()\r\n\tprivate _buttonState?: UUIButtonState = undefined;\r\n\r\n\t@state()\r\n\tprivate _indexData?: IndexResponseModel;\r\n\r\n\t@state()\r\n\tprivate _loading = true;\r\n\r\n\toverride connectedCallback() {\r\n\t\tsuper.connectedCallback();\r\n\t\tthis.#loadData();\r\n\t}\r\n\r\n\tasync #loadData() {\r\n\t\tthis._indexData = await this.#getIndexData();\r\n\r\n\t\tif (this._indexData?.healthStatus.status === HealthStatusModel.REBUILDING) {\r\n\t\t\tthis._buttonState = 'waiting';\r\n\t\t\tthis._continuousPolling();\r\n\t\t} else {\r\n\t\t\tthis._loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync #getIndexData() {\r\n\t\tconst { data } = await tryExecute(\r\n\t\t\tthis,\r\n\t\t\tIndexerService.getIndexerByIndexName({ path: { indexName: this.indexName } }),\r\n\t\t);\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate async _continuousPolling() {\r\n\t\t//Checking the server every 5 seconds to see if the index is still rebuilding.\r\n\t\twhile (this._buttonState === 'waiting') {\r\n\t\t\tawait new Promise((resolve) => setTimeout(resolve, 5000));\r\n\t\t\tthis._indexData = await this.#getIndexData();\r\n\t\t\tif (this._indexData?.healthStatus.status !== HealthStatusModel.REBUILDING) {\r\n\t\t\t\tthis._buttonState = 'success';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tprivate async _onRebuildHandler() {\r\n\t\tawait umbConfirmModal(this, {\r\n\t\t\theadline: `${this.localize.term('examineManagement_rebuildIndex')} ${this.indexName}`,\r\n\t\t\tcontent: html`<umb-localize key=\"examineManagement_rebuildIndexWarning\"\r\n\t\t\t\t>This will cause the index to be rebuilt.<br />\r\n\t\t\t\tDepending on how much content there is in your site this could take a while.<br />\r\n\t\t\t\tIt is not recommended to rebuild an index during times of high website traffic or when editors are editing\r\n\t\t\t\tcontent.</umb-localize\r\n\t\t\t> `,\r\n\t\t\tcolor: 'danger',\r\n\t\t\tconfirmLabel: this.localize.term('examineManagement_rebuildIndex'),\r\n\t\t});\r\n\r\n\t\tthis._rebuild();\r\n\t}\r\n\tprivate async _rebuild() {\r\n\t\tthis._buttonState = 'waiting';\r\n\t\tconst { error } = await tryExecute(\r\n\t\t\tthis,\r\n\t\t\tIndexerService.postIndexerByIndexNameRebuild({ path: { indexName: this.indexName } }),\r\n\t\t);\r\n\t\tif (error) {\r\n\t\t\tthis._buttonState = 'failed';\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._buttonState = 'success';\r\n\t\tawait this.#loadData();\r\n\t}\r\n\r\n\t#renderHealthStatus(healthStatus: HealthStatusResponseModel) {\r\n\t\tconst msg = healthStatus.message ? healthStatus.message : healthStatus.status;\r\n\t\tswitch (healthStatus.status) {\r\n\t\t\tcase HealthStatusModel.HEALTHY:\r\n\t\t\t\treturn html`<umb-icon name=\"icon-check color-green\"></umb-icon>${msg}`;\r\n\t\t\tcase HealthStatusModel.CORRUPT:\r\n\t\t\t\treturn html`<umb-icon name=\"icon-alert color-red\"></umb-icon><div>\r\n\t\t\t\t\t<a href=\"https://umbra.co/corrupt-indexes\" target=\"_blank\"><umb-localize key=\"examineManagement_corruptStatus\">Possible corrupt index detected</umb-localize></a>\r\n\t\t\t\t\t<p><umb-localize key=\"examineManagement_corruptErrorDescription\">Error received when evaluating the index:</umb-localize> </br> </p>${msg}</div>`;\r\n\t\t\tcase HealthStatusModel.UNHEALTHY:\r\n\t\t\t\treturn html`<umb-icon name=\"icon-alert color-red\"></umb-icon>${msg}`;\r\n\t\t\tcase HealthStatusModel.REBUILDING:\r\n\t\t\t\treturn html`<umb-icon name=\"icon-time color-yellow\"></umb-icon>${msg}`;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (!this._indexData || this._loading) return html` <uui-loader-bar></uui-loader-bar>`;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-box headline=\"${this.indexName}\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<strong><umb-localize key=\"examineManagement_healthStatus\">Health Status</umb-localize></strong\r\n\t\t\t\t\t><br />\r\n\t\t\t\t\t<umb-localize key=\"examineManagement_healthStatusDescription\"\r\n\t\t\t\t\t\t>The health status of the ${this.indexName} and if it can be read</umb-localize\r\n\t\t\t\t\t>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div id=\"health-status\">${this.#renderHealthStatus(this._indexData.healthStatus)}</div>\r\n\t\t\t</uui-box>\r\n\t\t\t${this.renderIndexSearch()} ${this.renderPropertyList()} ${this.renderTools()}\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate renderIndexSearch() {\r\n\t\t// Do we want to show the search while rebuilding?\r\n\t\tif (!this._indexData || this._indexData.healthStatus.status === HealthStatusModel.REBUILDING) return nothing;\r\n\t\treturn html`<umb-dashboard-examine-searcher .searcherName=\"${this.indexName}\"></umb-dashboard-examine-searcher>`;\r\n\t}\r\n\r\n\tprivate renderPropertyList() {\r\n\t\tif (!this._indexData) return nothing;\r\n\r\n\t\treturn html`<uui-box headline=${this.localize.term('examineManagement_indexInfo')}>\r\n\t\t\t<p>\r\n\t\t\t\t<umb-localize key=\"examineManagement_indexInfoDescription\"\r\n\t\t\t\t\t>Lists the properties of the ${this.indexName}</umb-localize\r\n\t\t\t\t>\r\n\t\t\t</p>\r\n\t\t\t<uui-table class=\"info\">\r\n\t\t\t\t<uui-table-row>\r\n\t\t\t\t\t<uui-table-cell style=\"width:0px; font-weight: bold;\">DocumentCount</uui-table-cell>\r\n\t\t\t\t\t<uui-table-cell>${this._indexData.documentCount}</uui-table-cell>\r\n\t\t\t\t</uui-table-row>\r\n\t\t\t\t<uui-table-row>\r\n\t\t\t\t\t<uui-table-cell style=\"width:0px; font-weight: bold;\">FieldCount</uui-table-cell>\r\n\t\t\t\t\t<uui-table-cell>${this._indexData.fieldCount}</uui-table-cell>\r\n\t\t\t\t</uui-table-row>\r\n\t\t\t\t${this._indexData.providerProperties\r\n\t\t\t\t\t? Object.entries(this._indexData.providerProperties).map((entry) => {\r\n\t\t\t\t\t\t\treturn html`<uui-table-row>\r\n\t\t\t\t\t\t\t\t<uui-table-cell style=\"width:0; font-weight: bold;\"> ${entry[0]} </uui-table-cell>\r\n\t\t\t\t\t\t\t\t<uui-table-cell clip-text> ${entry[1]} </uui-table-cell>\r\n\t\t\t\t\t\t\t</uui-table-row>`;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t: ''}\r\n\t\t\t</uui-table>\r\n\t\t</uui-box>`;\r\n\t}\r\n\r\n\tprivate renderTools() {\r\n\t\treturn html` <uui-box headline=${this.localize.term('examineManagement_tools')}>\r\n\t\t\t<p><umb-localize key=\"examineManagement_toolsDescription\">Tools to manage the ${this.indexName}</umb-localize></p>\r\n\t\t\t<uui-button\r\n\t\t\t\tcolor=\"danger\"\r\n\t\t\t\tlook=\"primary\"\r\n\t\t\t\t.state=\"${this._buttonState}\"\r\n\t\t\t\t@click=\"${this._onRebuildHandler}\"\r\n\t\t\t\t.disabled=\"${this._indexData?.canRebuild ? false : true}\"\r\n\t\t\t\tlabel=${this.localize.term('examineManagement_rebuildIndex')}></uui-button>\r\n\t\t</uui-box>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#health-status {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: start;\r\n\t\t\t\tgap: var(--uui-size-6);\r\n\t\t\t}\r\n\r\n\t\t\t#health-status umb-icon {\r\n\t\t\t\tmargin-top: var(--uui-size-1);\r\n\t\t\t}\r\n\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\r\n\t\t\tuui-box,\r\n\t\t\tumb-dashboard-examine-searcher {\r\n\t\t\t\tmargin-top: var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\tuui-box p {\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.flex {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t}\r\n\t\t\tdiv.flex > uui-button {\r\n\t\t\t\tpadding-left: var(--uui-size-space-4);\r\n\t\t\t\theight: 0;\r\n\t\t\t}\r\n\r\n\t\t\tuui-input {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\tuui-table.info uui-table-row:first-child uui-table-cell {\r\n\t\t\t\tborder-top: none;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-head-cell {\r\n\t\t\t\ttext-transform: capitalize;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-row:last-child uui-table-cell {\r\n\t\t\t\tpadding-bottom: 0;\r\n\t\t\t}\r\n\r\n\t\t\tuui-icon {\r\n\t\t\t\tvertical-align: top;\r\n\t\t\t\tpadding-right: var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\tbutton {\r\n\t\t\t\tbackground: none;\r\n\t\t\t\tborder: none;\r\n\t\t\t\ttext-decoration: underline;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t\tbutton.bright {\r\n\t\t\t\tfont-style: italic;\r\n\t\t\t\tcolor: var(--uui-color-positive-emphasis);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDashboardExamineIndexElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-dashboard-examine-index': UmbDashboardExamineIndexElement;\r\n\t}\r\n}\r\n"],"names":["_UmbDashboardExamineIndexElement_instances","loadData_fn","getIndexData_fn","renderHealthStatus_fn","UmbDashboardExamineIndexElement","UmbLitElement","__privateAdd","__privateMethod","resolve","HealthStatusModel","umbConfirmModal","html","error","tryExecute","IndexerService","nothing","entry","data","healthStatus","msg","UmbTextStyles","css","__decorateClass","property","state","customElement","UmbDashboardExamineIndexElement$1"],"mappings":"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"}