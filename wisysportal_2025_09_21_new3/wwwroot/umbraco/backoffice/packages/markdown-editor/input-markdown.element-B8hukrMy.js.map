{"version":3,"file":"input-markdown.element-B8hukrMy.js","sources":["../../../src/packages/markdown-editor/components/input-markdown-editor/input-markdown.element.ts"],"sourcesContent":["import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tproperty,\r\n\tquery,\r\n\tstate,\r\n\tunsafeHTML,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { createExtensionApi } from '@umbraco-cms/backoffice/extension-api';\r\nimport { marked } from '@umbraco-cms/backoffice/external/marked';\r\nimport { monaco } from '@umbraco-cms/backoffice/external/monaco-editor';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbChangeEvent, type UmbInputEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { umbOpenModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UMB_MEDIA_PICKER_MODAL, UmbMediaUrlRepository } from '@umbraco-cms/backoffice/media';\r\nimport { UmbCodeEditorLoadedEvent } from '@umbraco-cms/backoffice/code-editor';\r\nimport type { UmbCodeEditorController, UmbCodeEditorElement } from '@umbraco-cms/backoffice/code-editor';\r\nimport type { UUIModalSidebarSize } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\nimport { sanitizeHTML } from '@umbraco-cms/backoffice/utils';\r\n\r\ninterface UmbMarkdownEditorAction extends monaco.editor.IActionDescriptor {\r\n\ticon?: string | null;\r\n}\r\n\r\n/**\r\n * @element umb-input-markdown\r\n * @fires change - when the value of the input changes\r\n */\r\n@customElement('umb-input-markdown')\r\nexport class UmbInputMarkdownElement extends UmbFormControlMixin<string, typeof UmbLitElement, undefined>(\r\n\tUmbLitElement,\r\n) {\r\n\tprotected override getFormElement() {\r\n\t\treturn this._codeEditor;\r\n\t}\r\n\r\n\t// TODO: Make actions be able to handle multiple selection\r\n\r\n\t@property({ type: Boolean })\r\n\tpreview: boolean = false;\r\n\r\n\t@property()\r\n\toverlaySize?: UUIModalSidebarSize;\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\tpublic get readonly() {\r\n\t\treturn this.#readonly;\r\n\t}\r\n\tpublic set readonly(value) {\r\n\t\tthis.#readonly = value;\r\n\t\tthis.#editor?.monacoEditor?.updateOptions({ readOnly: this.#readonly });\r\n\t}\r\n\t#readonly = false;\r\n\r\n\t#editor?: UmbCodeEditorController;\r\n\r\n\t@query('umb-code-editor')\r\n\tprivate _codeEditor?: UmbCodeEditorElement;\r\n\r\n\t@state()\r\n\tprivate _actionExtensions: Array<UmbMarkdownEditorAction> = [];\r\n\r\n\t#mediaUrlRepository = new UmbMediaUrlRepository(this);\r\n\r\n\t#onCodeEditorLoaded(event: UmbCodeEditorLoadedEvent) {\r\n\t\tif (event.type !== UmbCodeEditorLoadedEvent.TYPE) return;\r\n\r\n\t\ttry {\r\n\t\t\tthis.#editor = this._codeEditor?.editor;\r\n\r\n\t\t\t// Set read only mode\r\n\t\t\tthis.#editor?.monacoEditor?.updateOptions({ readOnly: this.#readonly });\r\n\r\n\t\t\t// TODO: make all action into extensions\r\n\t\t\tthis.observe(umbExtensionsRegistry.byType('monacoMarkdownEditorAction'), (manifests) => {\r\n\t\t\t\tmanifests.forEach(async (manifest) => {\r\n\t\t\t\t\tconst api = await createExtensionApi(this, manifest, [this]);\r\n\r\n\t\t\t\t\tif (api) {\r\n\t\t\t\t\t\t(api as any).manifest = manifest;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst action: UmbMarkdownEditorAction = {\r\n\t\t\t\t\t\tid: manifest.alias ?? api.getUnique(),\r\n\t\t\t\t\t\tlabel: this.localize.string(manifest.meta?.label ?? api.getLabel()),\r\n\t\t\t\t\t\ticon: manifest.meta?.icon,\r\n\t\t\t\t\t\tkeybindings: api.getKeybindings(),\r\n\t\t\t\t\t\trun: async () => await api.execute({ editor: this.#editor, overlaySize: this.overlaySize }),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.#editor?.monacoEditor?.addAction(action);\r\n\t\t\t\t\tthis._actionExtensions.push(action);\r\n\t\t\t\t\tthis.requestUpdate('_actionExtensions');\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.#loadActions();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\t#loadActions() {\r\n\t\t//Note: UI Buttons have the keybindings hardcoded in its title. If you change the keybindings here, please update the render as well.\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Heading H1',\r\n\t\t\tid: 'h1',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit1],\r\n\t\t\trun: () => this._insertAtCurrentLine('# '),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Heading H2',\r\n\t\t\tid: 'h2',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit2],\r\n\t\t\trun: () => this._insertAtCurrentLine('## '),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Heading H3',\r\n\t\t\tid: 'h3',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit3],\r\n\t\t\trun: () => this._insertAtCurrentLine('### '),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Heading H4',\r\n\t\t\tid: 'h4',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit4],\r\n\t\t\trun: () => this._insertAtCurrentLine('#### '),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Heading H5',\r\n\t\t\tid: 'h5',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit5],\r\n\t\t\trun: () => this._insertAtCurrentLine('##### '),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Heading H6',\r\n\t\t\tid: 'h6',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit6],\r\n\t\t\trun: () => this._insertAtCurrentLine('###### '),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Bold Text',\r\n\t\t\tid: 'b',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyB],\r\n\t\t\trun: () => this._insertBetweenSelection('**', '**', 'Your Bold Text'),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Italic Text',\r\n\t\t\tid: 'i',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyI],\r\n\t\t\trun: () => this._insertBetweenSelection('*', '*', 'Your Italic Text'),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Quote',\r\n\t\t\tid: 'q',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Period],\r\n\t\t\trun: () => this._insertQuote(),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Ordered List',\r\n\t\t\tid: 'ol',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit7],\r\n\t\t\trun: () => this._insertAtCurrentLine('1. '),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Unordered List',\r\n\t\t\tid: 'ul',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit8],\r\n\t\t\trun: () => this._insertAtCurrentLine('- '),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Code',\r\n\t\t\tid: 'code',\r\n\t\t\tkeybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyE],\r\n\t\t\trun: () => this._insertBetweenSelection('`', '`', 'Code'),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Fenced Code',\r\n\t\t\tid: 'fenced-code',\r\n\t\t\trun: () => this._insertBetweenSelection('```', '```', 'Code'),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Horizontal Line',\r\n\t\t\tid: 'line',\r\n\t\t\trun: () => this._insertLine(),\r\n\t\t});\r\n\t\tthis.#editor?.monacoEditor?.addAction({\r\n\t\t\tlabel: 'Add Image',\r\n\t\t\tid: 'image',\r\n\t\t\t//keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyJ], // What keybinding would be good for image?\r\n\t\t\trun: () => this.#insertMedia(),\r\n\t\t\t// TODO: Update when media picker is complete.\r\n\t\t});\r\n\t}\r\n\r\n\t#onActionClick(event: Event, action: monaco.editor.IActionDescriptor) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst hasAction = this.#editor?.monacoEditor?.getAction(action.id);\r\n\t\tif (!hasAction) throw new Error(`Action ${action.id} not found in the editor.`);\r\n\t\tthis.#editor?.monacoEditor?.getAction(action.id)?.run();\r\n\t}\r\n\r\n\tprivate _focusEditor(): void {\r\n\t\t// If we press one of the action buttons manually (which is outside the editor), we need to focus the editor again.\r\n\t\tthis.#editor?.monacoEditor?.focus();\r\n\t}\r\n\r\n\tasync #insertMedia() {\r\n\t\tconst selection = this.#editor?.getSelections()[0];\r\n\t\tif (!selection) return;\r\n\r\n\t\tconst alt = this.#editor?.getValueInRange(selection) || 'enter image description here';\r\n\r\n\t\tthis._focusEditor(); // Focus before opening modal, otherwise cannot regain focus back after modal\r\n\r\n\t\tconst value = await umbOpenModal(this, UMB_MEDIA_PICKER_MODAL)\r\n\t\t\t.catch(() => undefined)\r\n\t\t\t.finally(() => this._focusEditor());\r\n\t\tif (!value) return;\r\n\r\n\t\tconst uniques = value.selection.filter((unique) => unique !== null) as Array<string>;\r\n\t\tconst { data: mediaUrls } = await this.#mediaUrlRepository.requestItems(uniques);\r\n\t\tconst mediaUrl = mediaUrls?.length ? (mediaUrls[0].url ?? 'URL') : 'URL';\r\n\r\n\t\tthis.#editor?.monacoEditor?.executeEdits('', [\r\n\t\t\t{\r\n\t\t\t\trange: selection,\r\n\t\t\t\ttext: `![${alt}](${mediaUrl})`,\r\n\t\t\t},\r\n\t\t]);\r\n\r\n\t\tthis.#editor?.select({\r\n\t\t\tstartColumn: selection.startColumn + 2,\r\n\t\t\tendColumn: selection.startColumn + alt.length + 2, // +2 because of ![\r\n\t\t\tendLineNumber: selection.startLineNumber,\r\n\t\t\tstartLineNumber: selection.startLineNumber,\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _insertLine() {\r\n\t\tconst selection = this.#editor?.getSelections()[0];\r\n\t\tif (!selection) return;\r\n\r\n\t\tconst endColumn = this.#editor?.monacoModel?.getLineMaxColumn(selection.endLineNumber) ?? 1;\r\n\r\n\t\tif (endColumn === 1) {\r\n\t\t\tthis.#editor?.insertAtPosition('---\\n', {\r\n\t\t\t\tlineNumber: selection.endLineNumber,\r\n\t\t\t\tcolumn: 1,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.#editor?.insertAtPosition('\\n\\n---\\n', {\r\n\t\t\t\tlineNumber: selection.endLineNumber,\r\n\t\t\t\tcolumn: endColumn,\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._focusEditor();\r\n\t}\r\n\r\n\tprivate _insertBetweenSelection(startValue: string, endValue: string, placeholder?: string) {\r\n\t\tthis._focusEditor();\r\n\t\tconst selection = this.#editor?.getSelections()[0];\r\n\t\tif (!selection) return;\r\n\r\n\t\tconst selectedValue = this.#editor?.getValueInRange({\r\n\t\t\tstartLineNumber: selection.startLineNumber,\r\n\t\t\tendLineNumber: selection.endLineNumber,\r\n\t\t\tstartColumn: selection.startColumn - startValue.length,\r\n\t\t\tendColumn: selection.endColumn + endValue.length,\r\n\t\t});\r\n\r\n\t\tif (\r\n\t\t\tselectedValue?.startsWith(startValue) &&\r\n\t\t\tselectedValue.endsWith(endValue) &&\r\n\t\t\tselectedValue.length > startValue.length + endValue.length\r\n\t\t) {\r\n\t\t\t//Cancel previous insert\r\n\t\t\tthis.#editor?.select({ ...selection, startColumn: selection.startColumn + startValue.length });\r\n\t\t\tthis.#editor?.monacoEditor?.executeEdits('', [\r\n\t\t\t\t{\r\n\t\t\t\t\trange: {\r\n\t\t\t\t\t\tstartColumn: selection.startColumn - startValue.length,\r\n\t\t\t\t\t\tstartLineNumber: selection.startLineNumber,\r\n\t\t\t\t\t\tendColumn: selection.startColumn,\r\n\t\t\t\t\t\tendLineNumber: selection.startLineNumber,\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: '',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\trange: {\r\n\t\t\t\t\t\tstartColumn: selection.endColumn + startValue.length,\r\n\t\t\t\t\t\tstartLineNumber: selection.startLineNumber,\r\n\t\t\t\t\t\tendColumn: selection.endColumn,\r\n\t\t\t\t\t\tendLineNumber: selection.startLineNumber,\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: '',\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t} else {\r\n\t\t\t// Insert\r\n\t\t\tthis.#editor?.insertAtPosition(startValue, {\r\n\t\t\t\tlineNumber: selection.startLineNumber,\r\n\t\t\t\tcolumn: selection.startColumn,\r\n\t\t\t});\r\n\t\t\tthis.#editor?.insertAtPosition(endValue, {\r\n\t\t\t\tlineNumber: selection.endLineNumber,\r\n\t\t\t\tcolumn: selection.endColumn + startValue.length,\r\n\t\t\t});\r\n\r\n\t\t\tthis.#editor?.select({\r\n\t\t\t\tstartLineNumber: selection.startLineNumber,\r\n\t\t\t\tendLineNumber: selection.endLineNumber,\r\n\t\t\t\tstartColumn: selection.startColumn + startValue.length,\r\n\t\t\t\tendColumn: selection.endColumn + startValue.length,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// if no text were selected when action fired\r\n\t\tif (selection.startColumn === selection.endColumn && selection.startLineNumber === selection.endLineNumber) {\r\n\t\t\tif (placeholder) {\r\n\t\t\t\tthis.#editor?.insertAtPosition(placeholder, {\r\n\t\t\t\t\tlineNumber: selection.startLineNumber,\r\n\t\t\t\t\tcolumn: selection.startColumn + startValue.length,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.#editor?.select({\r\n\t\t\t\tstartLineNumber: selection.startLineNumber,\r\n\t\t\t\tendLineNumber: selection.endLineNumber,\r\n\t\t\t\tstartColumn: selection.startColumn + startValue.length,\r\n\t\t\t\tendColumn: selection.startColumn + startValue.length + (placeholder?.length ?? 0),\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _insertAtCurrentLine(value: string) {\r\n\t\tthis._focusEditor();\r\n\t\tconst selection = this.#editor?.getSelections()[0];\r\n\t\tif (!selection) return;\r\n\r\n\t\tconst previousLineValue = this.#editor?.getValueInRange({\r\n\t\t\t...selection,\r\n\t\t\tstartLineNumber: selection.startLineNumber - 1,\r\n\t\t});\r\n\t\tconst lineValue = this.#editor?.getValueInRange({ ...selection, startColumn: 1 });\r\n\r\n\t\t// Regex: check if the line starts with a positive number followed by dot and a space\r\n\t\tif (lineValue?.startsWith(value) || lineValue?.match(/^[1-9]\\d*\\.\\s.*/)) {\r\n\t\t\t// Cancel previous insert\r\n\t\t\tthis.#editor?.monacoEditor?.executeEdits('', [\r\n\t\t\t\t{\r\n\t\t\t\t\trange: {\r\n\t\t\t\t\t\tstartColumn: 1,\r\n\t\t\t\t\t\tstartLineNumber: selection.startLineNumber,\r\n\t\t\t\t\t\tendColumn: 1 + value.length,\r\n\t\t\t\t\t\tendLineNumber: selection.startLineNumber,\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: '',\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t} else if (value.match(/^[1-9]\\d*\\.\\s.*/) && previousLineValue?.match(/^[1-9]\\d*\\.\\s.*/)) {\r\n\t\t\t// Check if the PREVIOUS line starts with a positive number followed by dot and a space. If yes, get that number.\r\n\t\t\tconst previousNumber = parseInt(previousLineValue, 10);\r\n\t\t\tthis.#editor?.insertAtPosition(`${previousNumber + 1}. `, {\r\n\t\t\t\tlineNumber: selection.startLineNumber,\r\n\t\t\t\tcolumn: 1,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// Insert\r\n\t\t\tthis.#editor?.insertAtPosition(value, {\r\n\t\t\t\tlineNumber: selection.startLineNumber,\r\n\t\t\t\tcolumn: 1,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _insertQuote() {\r\n\t\tconst selection = this.#editor?.getSelections()[0];\r\n\t\tif (!selection) return;\r\n\r\n\t\tlet index = selection.startLineNumber;\r\n\t\tfor (index; index <= selection.endLineNumber; index++) {\r\n\t\t\tconst line = this.#editor?.getValueInRange({\r\n\t\t\t\tstartLineNumber: index,\r\n\t\t\t\tendLineNumber: index,\r\n\t\t\t\tstartColumn: 1,\r\n\t\t\t\tendColumn: 3,\r\n\t\t\t});\r\n\t\t\tif (!line?.startsWith('> ')) {\r\n\t\t\t\tthis.#editor?.insertAtPosition('> ', {\r\n\t\t\t\t\tlineNumber: index,\r\n\t\t\t\t\tcolumn: 1,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._focusEditor();\r\n\t}\r\n\r\n\t#onKeyPress(e: KeyboardEvent) {\r\n\t\tif (e.key !== 'Enter') return;\r\n\t\t//TODO: Tab does not seem to trigger keyboard events. We need to make some logic for ordered and unordered lists when tab is being used.\r\n\r\n\t\tconst selection = this.#editor?.getSelections()[0];\r\n\t\tif (!selection) return;\r\n\r\n\t\tconst lineValue = this.#editor?.getValueInRange({ ...selection, startColumn: 1 }).trimStart();\r\n\t\tif (!lineValue) return;\r\n\r\n\t\tif (lineValue.startsWith('- ') && lineValue.length > 2) {\r\n\t\t\trequestAnimationFrame(() => this.#editor?.insert('- '));\r\n\t\t} else if (lineValue.match(/^[1-9]\\d*\\.\\s.*/) && lineValue.length > 3) {\r\n\t\t\tconst previousNumber = parseInt(lineValue, 10);\r\n\t\t\trequestAnimationFrame(() => this.#editor?.insert(`${previousNumber + 1}. `));\r\n\t\t}\r\n\t}\r\n\r\n\t#onInput(e: UmbInputEvent) {\r\n\t\te.stopPropagation();\r\n\t\tthis.value = this.#editor?.value ?? '';\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t${this.#renderToolbar()}\r\n\r\n\t\t\t<umb-code-editor\r\n\t\t\t\tlanguage=\"markdown\"\r\n\t\t\t\t.code=${this.value as string}\r\n\t\t\t\tdisable-line-numbers\r\n\t\t\t\tdisable-minimap\r\n\t\t\t\tdisable-folding\r\n\t\t\t\t@input=${this.#onInput}\r\n\t\t\t\t@keypress=${this.#onKeyPress}\r\n\t\t\t\t@loaded=${this.#onCodeEditorLoaded}>\r\n\t\t\t</umb-code-editor>\r\n\r\n\t\t\t${this.#renderPreview()}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderToolbar() {\r\n\t\tif (this.readonly) return nothing;\r\n\t\treturn html`\r\n\t\t\t<div id=\"toolbar\">\r\n\t\t\t\t<div id=\"buttons\">\r\n\t\t\t\t\t<uui-button-group>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Heading\"\r\n\t\t\t\t\t\t\ttitle=\"Heading, &lt;Ctrl+Shift+1&gt;\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('h1')?.run()}>\r\n\t\t\t\t\t\t\t<umb-icon name=\"icon-heading-1\"></umb-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Bold\"\r\n\t\t\t\t\t\t\ttitle=\"Bold, &lt;Ctrl+B&gt;\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('b')?.run()}>\r\n\t\t\t\t\t\t\t<umb-icon name=\"icon-bold\"></umb-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Italic\"\r\n\t\t\t\t\t\t\ttitle=\"Italic, &lt;Ctrl+I&gt;\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('i')?.run()}>\r\n\t\t\t\t\t\t\t<umb-icon name=\"icon-italic\"></umb-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t</uui-button-group>\r\n\r\n\t\t\t\t\t<uui-button-group>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Blockquote\"\r\n\t\t\t\t\t\t\ttitle=\"Blockquote, &lt;Ctrl+Shift+.&gt;\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('q')?.run()}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-blockquote\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Ordered List\"\r\n\t\t\t\t\t\t\ttitle=\"Ordered List, &lt;Ctrl+Shift+7&gt;\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('ol')?.run()}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-ordered-list\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Unordered List\"\r\n\t\t\t\t\t\t\ttitle=\"Unordered List, &lt;Ctrl+Shift+8&gt;\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('ul')?.run()}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-bulleted-list\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t</uui-button-group>\r\n\t\t\t\t\t<uui-button-group>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Code\"\r\n\t\t\t\t\t\t\ttitle=\"Code, &lt;Ctrl+E&gt;\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('code')?.run()}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-code\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Horizontal Rule\"\r\n\t\t\t\t\t\t\ttitle=\"Horizontal Rule\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('line')?.run()}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-horizontal-rule\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\tlabel=\"Image\"\r\n\t\t\t\t\t\t\ttitle=\"Image\"\r\n\t\t\t\t\t\t\t@click=${() => this.#editor?.monacoEditor?.getAction('image')?.run()}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-picture\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t</uui-button-group>\r\n\r\n\t\t\t\t\t<uui-button-group>\r\n\t\t\t\t\t\t${this._actionExtensions.map(\r\n\t\t\t\t\t\t\t(action) => html`\r\n\t\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\t\t\t\t\tlabel=${this.localize.string(action.label)}\r\n\t\t\t\t\t\t\t\t\ttitle=${this.localize.string(action.label)}\r\n\t\t\t\t\t\t\t\t\t@click=${(event: Event) => this.#onActionClick(event, action)}>\r\n\t\t\t\t\t\t\t\t\t${when(\r\n\t\t\t\t\t\t\t\t\t\taction.icon,\r\n\t\t\t\t\t\t\t\t\t\t() => html`<uui-icon name=${action.icon!}></uui-icon>`,\r\n\t\t\t\t\t\t\t\t\t\t() => html`<span>${this.localize.string(action.label)}</span>`,\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</uui-button-group>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"actions\">\r\n\t\t\t\t\t<uui-button-group>\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\tlabel=\"Press F1 for all actions\"\r\n\t\t\t\t\t\t\ttitle=\"Press F1 for all actions\"\r\n\t\t\t\t\t\t\t@click=${() => {\r\n\t\t\t\t\t\t\t\tthis._focusEditor();\r\n\t\t\t\t\t\t\t\tthis.#editor?.monacoEditor?.trigger('', 'editor.action.quickCommand', '');\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<uui-key>F1</uui-key>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t</uui-button-group>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderPreview() {\r\n\t\tif (!this.preview || !this.value) return;\r\n\t\tconst markdownAsHtml = marked.parse(this.value as string) as string;\r\n\t\tconst sanitizedHtml = markdownAsHtml ? sanitizeHTML(markdownAsHtml) : '';\r\n\t\treturn html`<uui-scroll-container id=\"preview\">${unsafeHTML(sanitizedHtml)}</uui-scroll-container>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\r\n\t\t\t#toolbar {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: center;\r\n\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t\tborder-bottom: 0;\r\n\t\t\t\tborder-bottom-left-radius: 0;\r\n\t\t\t\tborder-bottom-right-radius: 0;\r\n\t\t\t\tbox-shadow:\r\n\t\t\t\t\t0 2px 2px -2px rgba(34, 47, 62, 0.1),\r\n\t\t\t\t\t0 8px 8px -4px rgba(34, 47, 62, 0.07);\r\n\r\n\t\t\t\tbackground-color: var(--uui-color-surface-alt);\r\n\t\t\t\tcolor: var(--color-text);\r\n\r\n\t\t\t\tposition: sticky;\r\n\t\t\t\ttop: -25px;\r\n\t\t\t\tleft: 0px;\r\n\t\t\t\tright: 0px;\r\n\t\t\t\tpadding: var(--uui-size-3);\r\n\t\t\t\tz-index: 9999999;\r\n\r\n\t\t\t\tuui-key {\r\n\t\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#buttons {\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\talign-items: center;\r\n\r\n\t\t\t\tuui-button-group:not(:last-child)::after {\r\n\t\t\t\t\tcontent: '';\r\n\t\t\t\t\tbackground-color: var(--uui-color-border);\r\n\t\t\t\t\twidth: 1px;\r\n\t\t\t\t\tplace-self: center;\r\n\t\t\t\t\theight: 22px;\r\n\t\t\t\t\tmargin: 0 var(--uui-size-3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tumb-code-editor {\r\n\t\t\t\theight: 200px;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t\tborder-top: 0;\r\n\t\t\t\tborder-top-left-radius: 0;\r\n\t\t\t\tborder-top-right-radius: 0;\r\n\t\t\t\tpadding-top: var(--uui-size-3);\r\n\t\t\t}\r\n\r\n\t\t\t#preview {\r\n\t\t\t\tmax-height: 400px;\r\n\t\t\t}\r\n\r\n\t\t\t#preview blockquote {\r\n\t\t\t\tborder-left: 2px solid var(--uui-color-default-emphasis);\r\n\t\t\t\tmargin-inline: 0;\r\n\t\t\t\tpadding-inline: var(--uui-size-3);\r\n\t\t\t}\r\n\r\n\t\t\t#preview img {\r\n\t\t\t\tmax-width: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t#preview hr {\r\n\t\t\t\tborder: none;\r\n\t\t\t\tborder-bottom: 1px solid var(--uui-palette-cocoa-black);\r\n\t\t\t}\r\n\r\n\t\t\t#preview p > code,\r\n\t\t\t#preview pre {\r\n\t\t\t\tborder: 1px solid var(--uui-color-divider-emphasis);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tpadding: 0 var(--uui-size-1);\r\n\t\t\t\tbackground-color: var(--uui-color-background);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\nexport default UmbInputMarkdownElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-markdown': UmbInputMarkdownElement;\r\n\t}\r\n}\r\n"],"names":["_readonly","_editor","_mediaUrlRepository","_UmbInputMarkdownElement_instances","onCodeEditorLoaded_fn","loadActions_fn","onActionClick_fn","insertMedia_fn","onKeyPress_fn","onInput_fn","renderToolbar_fn","renderPreview_fn","UmbInputMarkdownElement","UmbFormControlMixin","UmbLitElement","__privateAdd","UmbMediaUrlRepository","__privateGet","value","__privateSet","selection","endColumn","startValue","endValue","placeholder","selectedValue","previousLineValue","lineValue","previousNumber","index","html","__privateMethod","event","UmbCodeEditorLoadedEvent","umbExtensionsRegistry","manifests","manifest","api","createExtensionApi","action","error","monaco","alt","umbOpenModal","UMB_MEDIA_PICKER_MODAL","uniques","unique","mediaUrls","mediaUrl","e","UmbChangeEvent","nothing","when","markdownAsHtml","marked","sanitizedHtml","sanitizeHTML","unsafeHTML","UmbTextStyles","css","__decorateClass","property","query","state","customElement"],"mappings":"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"}