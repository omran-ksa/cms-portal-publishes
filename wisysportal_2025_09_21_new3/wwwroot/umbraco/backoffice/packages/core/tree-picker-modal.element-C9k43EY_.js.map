{"version":3,"file":"tree-picker-modal.element-C9k43EY_.js","sources":["../../../src/packages/core/tree/tree-item-picker/tree-item-picker.context.ts","../../../src/packages/core/tree/tree-picker-modal/tree-picker-modal.element.ts"],"sourcesContent":["import { UmbPickerContext } from '@umbraco-cms/backoffice/picker';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbTreeItemPickerContext extends UmbPickerContext {\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t}\r\n}\r\n\r\nexport { UmbTreeItemPickerContext as api };\r\n","import type { UmbTreeItemModelBase, UmbTreeSelectionConfiguration } from '../types.js';\r\nimport { UmbTreeItemPickerContext } from '../tree-item-picker/index.js';\r\nimport type { UmbTreePickerModalData, UmbTreePickerModalValue } from './tree-picker-modal.token.js';\r\nimport type { PropertyValueMap } from '@umbraco-cms/backoffice/external/lit';\r\nimport { html, customElement, state, ifDefined, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UmbDeselectedEvent, UmbSelectedEvent } from '@umbraco-cms/backoffice/event';\r\n\r\n@customElement('umb-tree-picker-modal')\r\nexport class UmbTreePickerModalElement<TreeItemType extends UmbTreeItemModelBase> extends UmbModalBaseElement<\r\n\tUmbTreePickerModalData<TreeItemType>,\r\n\tUmbTreePickerModalValue\r\n> {\r\n\t@state()\r\n\t_selectionConfiguration: UmbTreeSelectionConfiguration = {\r\n\t\tmultiple: false,\r\n\t\tselectable: true,\r\n\t\tselection: [],\r\n\t};\r\n\r\n\t@state()\r\n\t_hasSelection: boolean = false;\r\n\r\n\t@state()\r\n\t_createPath?: string;\r\n\r\n\t@state()\r\n\t_createLabel?: string;\r\n\r\n\t@state()\r\n\t_searchQuery?: string;\r\n\r\n\t#pickerContext = new UmbTreeItemPickerContext(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#pickerContext.selection.setSelectable(true);\r\n\t\tthis.observe(this.#pickerContext.selection.hasSelection, (hasSelection) => {\r\n\t\t\tthis._hasSelection = hasSelection;\r\n\t\t});\r\n\t\tthis.#observePickerSelection();\r\n\t\tthis.#observeSearch();\r\n\t}\r\n\r\n\toverride connectedCallback(): void {\r\n\t\tsuper.connectedCallback();\r\n\t\tthis.#initCreateAction();\r\n\t}\r\n\r\n\tprotected override async updated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>) {\r\n\t\tsuper.updated(_changedProperties);\r\n\r\n\t\tif (_changedProperties.has('data')) {\r\n\t\t\tif (this.data?.search) {\r\n\t\t\t\tthis.#pickerContext.search.updateConfig({\r\n\t\t\t\t\t...this.data.search,\r\n\t\t\t\t\tsearchFrom: this.data.startNode,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst multiple = this.data?.multiple ?? false;\r\n\t\t\tthis.#pickerContext.selection.setMultiple(multiple);\r\n\r\n\t\t\tthis._selectionConfiguration = {\r\n\t\t\t\t...this._selectionConfiguration,\r\n\t\t\t\tmultiple,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (_changedProperties.has('value')) {\r\n\t\t\tconst selection = this.value?.selection ?? [];\r\n\t\t\tthis.#pickerContext.selection.setSelection(selection);\r\n\t\t\tthis._selectionConfiguration = {\r\n\t\t\t\t...this._selectionConfiguration,\r\n\t\t\t\tselection: [...selection],\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t#observePickerSelection() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#pickerContext.selection.selection,\r\n\t\t\t(selection) => {\r\n\t\t\t\tthis.updateValue({ selection });\r\n\t\t\t\tthis.requestUpdate();\r\n\t\t\t},\r\n\t\t\t'umbPickerSelectionObserver',\r\n\t\t);\r\n\t}\r\n\r\n\t#observeSearch() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#pickerContext.search.query,\r\n\t\t\t(query) => {\r\n\t\t\t\tthis._searchQuery = query?.query;\r\n\t\t\t},\r\n\t\t\t'umbPickerSearchQueryObserver',\r\n\t\t);\r\n\t}\r\n\r\n\t// Tree Selection\r\n\t#onTreeItemSelected(event: UmbSelectedEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.#pickerContext.selection.select(event.unique);\r\n\t\tthis.modalContext?.dispatchEvent(new UmbSelectedEvent(event.unique));\r\n\t}\r\n\r\n\t#onTreeItemDeselected(event: UmbDeselectedEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.#pickerContext.selection.deselect(event.unique);\r\n\t\tthis.modalContext?.dispatchEvent(new UmbDeselectedEvent(event.unique));\r\n\t}\r\n\r\n\t// Create action\r\n\t#initCreateAction() {\r\n\t\t// TODO: If data.enableCreate is true, we should add a button to create a new item. [NL]\r\n\t\t// Does the tree know enough about this, for us to be able to create a new item? [NL]\r\n\t\t// I think we need to be able to get entityType and a parentId?, or do we only allow creation in the root? and then create via entity actions? [NL]\r\n\t\t// To remove the hardcoded URLs for workspaces of entity types, we could make an create event from the tree, which either this or the sidebar impl. will pick up and react to. [NL]\r\n\t\t// Or maybe the tree item context base can handle this? [NL]\r\n\t\t// Maybe its a general item context problem to be solved. [NL]\r\n\t\tconst createAction = this.data?.createAction;\r\n\t\tif (createAction) {\r\n\t\t\tthis._createLabel = createAction.label;\r\n\t\t\tnew UmbModalRouteRegistrationController(\r\n\t\t\t\tthis,\r\n\t\t\t\t(createAction.modalToken as typeof UMB_WORKSPACE_MODAL) ?? UMB_WORKSPACE_MODAL,\r\n\t\t\t)\r\n\t\t\t\t.onSetup(() => {\r\n\t\t\t\t\treturn { data: createAction.modalData };\r\n\t\t\t\t})\r\n\t\t\t\t.onSubmit((value) => {\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\tthis.value = { selection: [value.unique] };\r\n\t\t\t\t\t\tthis._submitModal();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._rejectModal();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\t\tconst oldPath = this._createPath;\r\n\t\t\t\t\tthis._createPath =\r\n\t\t\t\t\t\trouteBuilder({}) + createAction.extendWithPathPattern.generateLocal(createAction.extendWithPathParams);\r\n\t\t\t\t\tthis.requestUpdate('_createPath', oldPath);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${this.localize.term('general_choose')}>\r\n\t\t\t\t<uui-box> ${this.#renderSearch()} ${this.#renderTree()}</uui-box>\r\n\t\t\t\t${this.#renderActions()}\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\t#renderSearch() {\r\n\t\treturn html`\r\n\t\t\t<umb-picker-search-field></umb-picker-search-field>\r\n\t\t\t<umb-picker-search-result .pickableFilter=${this.data?.pickableFilter}></umb-picker-search-result>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderTree() {\r\n\t\tif (this._searchQuery) {\r\n\t\t\treturn nothing;\r\n\t\t}\r\n\r\n\t\treturn html`\r\n\t\t\t<umb-tree\r\n\t\t\t\talias=${ifDefined(this.data?.treeAlias)}\r\n\t\t\t\t.props=${{\r\n\t\t\t\t\thideTreeItemActions: true,\r\n\t\t\t\t\thideTreeRoot: this.data?.hideTreeRoot,\r\n\t\t\t\t\texpandTreeRoot: this.data?.expandTreeRoot,\r\n\t\t\t\t\tselectionConfiguration: this._selectionConfiguration,\r\n\t\t\t\t\tfilter: this.data?.filter,\r\n\t\t\t\t\tselectableFilter: this.data?.pickableFilter,\r\n\t\t\t\t\tstartNode: this.data?.startNode,\r\n\t\t\t\t\tfoldersOnly: this.data?.foldersOnly,\r\n\t\t\t\t}}\r\n\t\t\t\t@selected=${this.#onTreeItemSelected}\r\n\t\t\t\t@deselected=${this.#onTreeItemDeselected}></umb-tree>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderActions() {\r\n\t\treturn html`\r\n\t\t\t<div slot=\"actions\">\r\n\t\t\t\t<uui-button label=${this.localize.term('general_close')} @click=${this._rejectModal}></uui-button>\r\n\t\t\t\t${this._createPath\r\n\t\t\t\t\t? html` <uui-button\r\n\t\t\t\t\t\t\tlabel=${this.localize.string(this._createLabel ?? '#general_create')}\r\n\t\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\t\thref=${this._createPath}></uui-button>`\r\n\t\t\t\t\t: nothing}\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tlabel=${this.localize.term('general_choose')}\r\n\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\tcolor=\"positive\"\r\n\t\t\t\t\t@click=${this._submitModal}\r\n\t\t\t\t\t?disabled=${!this._hasSelection}></uui-button>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default UmbTreePickerModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-tree-picker-modal': UmbTreePickerModalElement<UmbTreeItemModelBase>;\r\n\t}\r\n}\r\n"],"names":["UmbTreeItemPickerContext","UmbPickerContext","host","_pickerContext","_UmbTreePickerModalElement_instances","observePickerSelection_fn","observeSearch_fn","onTreeItemSelected_fn","onTreeItemDeselected_fn","initCreateAction_fn","renderSearch_fn","renderTree_fn","renderActions_fn","UmbTreePickerModalElement","UmbModalBaseElement","__privateAdd","__privateGet","hasSelection","__privateMethod","_changedProperties","multiple","selection","html","query","event","UmbSelectedEvent","UmbDeselectedEvent","createAction","UmbModalRouteRegistrationController","UMB_WORKSPACE_MODAL","value","routeBuilder","oldPath","nothing","ifDefined","__decorateClass","state","customElement","UmbTreePickerModalElement$1"],"mappings":"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"}