{"version":3,"file":"index.js","sources":["../../../../src/packages/core/variant/context/variant.context.token.ts","../../../../src/packages/core/variant/context/variant.context.ts","../../../../src/packages/core/variant/variant-object-compare.function.ts"],"sourcesContent":["import type { UmbVariantContext } from './variant.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\nexport const UMB_VARIANT_CONTEXT = new UmbContextToken<UmbVariantContext>('UmbVariantContext');\r\n","import { UmbVariantId } from '../variant-id.class.js';\r\nimport { UMB_VARIANT_CONTEXT } from './variant.context.token.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { mergeObservables, UmbClassState, UmbStringState } from '@umbraco-cms/backoffice/observable-api';\r\n\r\n/**\r\n * A context for the current variant state.\r\n * @class UmbVariantContext\r\n * @augments {UmbContextBase}\r\n * @implements {UmbVariantContext}\r\n */\r\nexport class UmbVariantContext extends UmbContextBase {\r\n\t#variantId = new UmbClassState<UmbVariantId | undefined>(undefined);\r\n\tpublic readonly variantId = this.#variantId.asObservable();\r\n\tpublic readonly culture = this.#variantId.asObservablePart((x) => x?.culture);\r\n\tpublic readonly segment = this.#variantId.asObservablePart((x) => x?.segment);\r\n\r\n\t#fallbackCulture = new UmbStringState<string | null | undefined>(undefined);\r\n\tpublic fallbackCulture = this.#fallbackCulture.asObservable();\r\n\r\n\t#appCulture = new UmbStringState<string | null | undefined>(undefined);\r\n\tpublic appCulture = this.#appCulture.asObservable();\r\n\r\n\tpublic readonly displayCulture = mergeObservables([this.culture, this.appCulture], ([culture, appCulture]) => {\r\n\t\treturn culture ?? appCulture;\r\n\t});\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_VARIANT_CONTEXT);\r\n\t}\r\n\r\n\t/**\r\n\t * Inherit values from the parent variant context\r\n\t * @returns {UmbVariantContext} - The current instance of the context\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tinherit(): UmbVariantContext {\r\n\t\tthis.consumeContext(UMB_VARIANT_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext?.fallbackCulture,\r\n\t\t\t\t(fallbackCulture) => {\r\n\t\t\t\t\tif (!fallbackCulture) return;\r\n\t\t\t\t\tthis.#fallbackCulture.setValue(fallbackCulture);\r\n\t\t\t\t},\r\n\t\t\t\t'observeFallbackCulture',\r\n\t\t\t);\r\n\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext?.appCulture,\r\n\t\t\t\t(appCulture) => {\r\n\t\t\t\t\tif (!appCulture) return;\r\n\t\t\t\t\tthis.#appCulture.setValue(appCulture);\r\n\t\t\t\t},\r\n\t\t\t\t'observeAppCulture',\r\n\t\t\t);\r\n\t\t}).skipHost();\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the variant id state\r\n\t * @param {UmbVariantId | undefined} variantId - The variant to set\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync setVariantId(variantId: UmbVariantId | undefined): Promise<void> {\r\n\t\tthis.#variantId.setValue(variantId);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets variant state\r\n\t * @returns {Promise<UmbVariantId | undefined>} - The variant state\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync getVariantId(): Promise<UmbVariantId | undefined> {\r\n\t\treturn this.#variantId.getValue();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the culture state\r\n\t * @returns {(Promise<string | null | undefined>)} - The culture state\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync getCulture(): Promise<string | null | undefined> {\r\n\t\treturn this.#variantId.getValue()?.culture;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the variant culture state\r\n\t * @param {string | undefined} culture - The culture to set\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync setCulture(culture: string | null): Promise<void> {\r\n\t\tconst variantId = new UmbVariantId(culture, this.#variantId.getValue()?.segment);\r\n\t\tthis.#variantId.setValue(variantId);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the variant segment state\r\n\t * @returns {(Promise<string | null | undefined>)} - The segment state\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync getSegment(): Promise<string | null | undefined> {\r\n\t\treturn this.#variantId.getValue()?.segment;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the variant segment state\r\n\t * @param {string | undefined} segment - The segment to set\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync setSegment(segment: string | null): Promise<void> {\r\n\t\tconst variantId = new UmbVariantId(this.#variantId.getValue()?.culture, segment);\r\n\t\tthis.#variantId.setValue(variantId);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the fallback culture state\r\n\t * @returns {(Promise<string | null | undefined>)} - The fallback culture state\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync getFallbackCulture(): Promise<string | null | undefined> {\r\n\t\treturn this.#fallbackCulture.getValue();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the fallback culture state\r\n\t * @param {string | undefined} culture - The fallback culture to set\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync setFallbackCulture(culture: string | null): Promise<void> {\r\n\t\tthis.removeUmbControllerByAlias('observeFallbackCulture');\r\n\t\tthis.#fallbackCulture.setValue(culture);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the app culture state\r\n\t * @returns {(Promise<string | null | undefined>)} - The app culture state\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync getAppCulture(): Promise<string | null | undefined> {\r\n\t\treturn this.#appCulture.getValue();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the app culture state\r\n\t * @param {string | undefined} culture - The app culture to set\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync setAppCulture(culture: string | null): Promise<void> {\r\n\t\tthis.removeUmbControllerByAlias('observeAppCulture');\r\n\t\tthis.#appCulture.setValue(culture);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the display culture state\r\n\t * @returns {(Promise<string | null | undefined>)} - The app culture state\r\n\t * @memberof UmbVariantContext\r\n\t */\r\n\tasync getDisplayCulture(): Promise<string | null | undefined> {\r\n\t\treturn this.observe(this.displayCulture).asPromise();\r\n\t}\r\n}\r\n","import type { UmbObjectWithVariantProperties } from './types.js';\r\n\r\n/**\r\n *\r\n * @param a\r\n * @param b\r\n */\r\nexport function umbVariantObjectCompare(a: UmbObjectWithVariantProperties, b: UmbObjectWithVariantProperties): boolean {\r\n\treturn a.culture === b.culture && a.segment === b.segment;\r\n}\r\n"],"names":["UMB_VARIANT_CONTEXT","UmbContextToken","UmbVariantContext","UmbContextBase","host","#variantId","UmbClassState","x","#fallbackCulture","UmbStringState","#appCulture","mergeObservables","culture","appCulture","context","fallbackCulture","variantId","UmbVariantId","segment","umbVariantObjectCompare","a","b"],"mappings":";;;;;AAGa,MAAAA,IAAsB,IAAIC,EAAmC,mBAAmB;ACStF,MAAMC,UAA0BC,EAAe;AAAA,EAgBrD,YAAYC,GAAyB;AACpC,UAAMA,GAAMJ,CAAmB,GAhBnB,KAAAK,KAAA,IAAIC,EAAwC,MAAS,GAClD,KAAA,YAAY,KAAKD,GAAW,aAAa,GACzD,KAAgB,UAAU,KAAKA,GAAW,iBAAiB,CAACE,MAAMA,GAAG,OAAO,GAC5E,KAAgB,UAAU,KAAKF,GAAW,iBAAiB,CAACE,MAAMA,GAAG,OAAO,GAEzD,KAAAC,KAAA,IAAIC,EAA0C,MAAS,GACnE,KAAA,kBAAkB,KAAKD,GAAiB,aAAa,GAE9C,KAAAE,KAAA,IAAID,EAA0C,MAAS,GAC9D,KAAA,aAAa,KAAKC,GAAY,aAAa,GAElD,KAAgB,iBAAiBC,EAAiB,CAAC,KAAK,SAAS,KAAK,UAAU,GAAG,CAAC,CAACC,GAASC,CAAU,MAChGD,KAAWC,CAClB;AAAA,EAAA;AAAA,EAbDR;AAAA,EAKAG;AAAA,EAGAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA,UAA6B;AACvB,gBAAA,eAAeV,GAAqB,CAACc,MAAY;AAChD,WAAA;AAAA,QACJA,GAAS;AAAA,QACT,CAACC,MAAoB;AACpB,UAAKA,KACA,KAAAP,GAAiB,SAASO,CAAe;AAAA,QAC/C;AAAA,QACA;AAAA,MACD,GAEK,KAAA;AAAA,QACJD,GAAS;AAAA,QACT,CAACD,MAAe;AACf,UAAKA,KACA,KAAAH,GAAY,SAASG,CAAU;AAAA,QACrC;AAAA,QACA;AAAA,MACD;AAAA,IACA,CAAA,EAAE,SAAS,GAEL;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQR,MAAM,aAAaG,GAAoD;AACjE,SAAAX,GAAW,SAASW,CAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnC,MAAM,eAAkD;AAChD,WAAA,KAAKX,GAAW,SAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjC,MAAM,aAAiD;AAC/C,WAAA,KAAKA,GAAW,SAAA,GAAY;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpC,MAAM,WAAWO,GAAuC;AACjD,UAAAI,IAAY,IAAIC,EAAaL,GAAS,KAAKP,GAAW,YAAY,OAAO;AAC1E,SAAAA,GAAW,SAASW,CAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnC,MAAM,aAAiD;AAC/C,WAAA,KAAKX,GAAW,SAAA,GAAY;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpC,MAAM,WAAWa,GAAuC;AACjD,UAAAF,IAAY,IAAIC,EAAa,KAAKZ,GAAW,SAAS,GAAG,SAASa,CAAO;AAC1E,SAAAb,GAAW,SAASW,CAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnC,MAAM,qBAAyD;AACvD,WAAA,KAAKR,GAAiB,SAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQvC,MAAM,mBAAmBI,GAAuC;AAC/D,SAAK,2BAA2B,wBAAwB,GACnD,KAAAJ,GAAiB,SAASI,CAAO;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQvC,MAAM,gBAAoD;AAClD,WAAA,KAAKF,GAAY,SAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlC,MAAM,cAAcE,GAAuC;AAC1D,SAAK,2BAA2B,mBAAmB,GAC9C,KAAAF,GAAY,SAASE,CAAO;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlC,MAAM,oBAAwD;AAC7D,WAAO,KAAK,QAAQ,KAAK,cAAc,EAAE,UAAU;AAAA,EAAA;AAErD;AC5JgB,SAAAO,EAAwBC,GAAmCC,GAA4C;AACtH,SAAOD,EAAE,YAAYC,EAAE,WAAWD,EAAE,YAAYC,EAAE;AACnD;"}