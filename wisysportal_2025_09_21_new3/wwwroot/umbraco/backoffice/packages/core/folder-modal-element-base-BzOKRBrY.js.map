{"version":3,"file":"folder-modal-element-base-BzOKRBrY.js","sources":["../../../src/packages/core/tree/folder/modal/folder-modal-element-base.ts"],"sourcesContent":["import type { UmbFolderModel } from '../types.js';\r\nimport { css, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbExtensionApiInitializer } from '@umbraco-cms/backoffice/extension-api';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { umbFocus } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbDetailRepository } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport abstract class UmbFolderModalElementBase<\r\n\tFolderModalDataType extends { folderRepositoryAlias: string },\r\n\tFolderModalValueType extends { folder: UmbFolderModel },\r\n> extends UmbModalBaseElement<FolderModalDataType, FolderModalValueType> {\r\n\t@state()\r\n\t_isNew = false;\r\n\r\n\tfolderRepository?: UmbDetailRepository<UmbFolderModel>;\r\n\r\n\toverride connectedCallback(): void {\r\n\t\tsuper.connectedCallback();\r\n\t\tthis.#observeRepository();\r\n\t}\r\n\r\n\t#observeRepository() {\r\n\t\tif (!this.data?.folderRepositoryAlias) throw new Error('A folder repository alias is required');\r\n\r\n\t\tnew UmbExtensionApiInitializer(\r\n\t\t\tthis,\r\n\t\t\tumbExtensionsRegistry,\r\n\t\t\tthis.data.folderRepositoryAlias,\r\n\t\t\t[this],\r\n\t\t\t(permitted, ctrl) => {\r\n\t\t\t\tthis.folderRepository = permitted ? (ctrl.api as UmbDetailRepository<UmbFolderModel>) : undefined;\r\n\t\t\t\tif (this.folderRepository) {\r\n\t\t\t\t\tthis.init();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\tabstract init(): void;\r\n\tabstract onFormSubmit({ name }: { name: string }): void;\r\n\r\n\tasync #onSubmit(event: SubmitEvent) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst form = event.target as HTMLFormElement;\r\n\t\tif (!form) return;\r\n\r\n\t\tconst isValid = form.checkValidity();\r\n\t\tif (!isValid) return;\r\n\r\n\t\tconst formData = new FormData(form);\r\n\t\tconst name = formData.get('name') as string;\r\n\r\n\t\tthis.onFormSubmit({ name });\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${this.localize.term(this._isNew ? 'actions_folderCreate' : 'actions_folderRename')}>\r\n\t\t\t\t<uui-box>\r\n\t\t\t\t\t<uui-form>\r\n\t\t\t\t\t\t<form id=\"FolderForm\" @submit=\"${this.#onSubmit}\">\r\n\t\t\t\t\t\t\t<uui-form-layout-item>\r\n\t\t\t\t\t\t\t\t<uui-label id=\"nameLabel\" for=\"name\" slot=\"label\" required>\r\n\t\t\t\t\t\t\t\t\t<umb-localize key=\"create_enterFolderName\">Enter folder name</umb-localize>\r\n\t\t\t\t\t\t\t\t</uui-label>\r\n\t\t\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t.label=${this.localize.term('create_enterFolderName')}\r\n\t\t\t\t\t\t\t\t\t.value=\"${this.value?.folder?.name || ''}\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t${umbFocus()}></uui-input>\r\n\t\t\t\t\t\t\t</uui-form-layout-item>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</uui-form>\r\n\t\t\t\t</uui-box>\r\n\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tslot=\"actions\"\r\n\t\t\t\t\tid=\"cancel\"\r\n\t\t\t\t\tlabel=${this.localize.term('buttons_confirmActionCancel')}\r\n\t\t\t\t\t@click=\"${this._rejectModal}\"></uui-button>\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tform=\"FolderForm\"\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tslot=\"actions\"\r\n\t\t\t\t\tid=\"confirm\"\r\n\t\t\t\t\tcolor=\"positive\"\r\n\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\tlabel=${this.localize.term(this._isNew ? 'actions_folderCreate' : 'actions_folderRename')}></uui-button>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#name {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n"],"names":["UmbFolderModalElementBase","UmbModalBaseElement","#observeRepository","UmbExtensionApiInitializer","umbExtensionsRegistry","permitted","ctrl","#onSubmit","event","form","name","html","umbFocus","UmbTextStyles","css","__decorateClass","state"],"mappings":";;;;;;;;;;;AASO,MAAeA,UAGZC,EAA+D;AAAA,EAHlE,cAAA;AAAA,UAAA,GAAA,SAAA,GAKG,KAAA,SAAA;AAAA,EAAA;AAAA,EAIA,oBAA0B;AAClC,UAAM,kBAAkB,GACxB,KAAKC,GAAmB;AAAA,EAAA;AAAA,EAGzBA,KAAqB;AACpB,QAAI,CAAC,KAAK,MAAM,sBAA6B,OAAA,IAAI,MAAM,uCAAuC;AAE1F,QAAAC;AAAA,MACH;AAAA,MACAC;AAAA,MACA,KAAK,KAAK;AAAA,MACV,CAAC,IAAI;AAAA,MACL,CAACC,GAAWC,MAAS;AACf,aAAA,mBAAmBD,IAAaC,EAAK,MAA8C,QACpF,KAAK,oBACR,KAAK,KAAK;AAAA,MACX;AAAA,IAEF;AAAA,EAAA;AAAA,EAMD,MAAMC,GAAUC,GAAoB;AACnC,IAAAA,EAAM,eAAe;AAErB,UAAMC,IAAOD,EAAM;AAInB,QAHI,CAACC,KAGD,CADYA,EAAK,cAAc,EACrB;AAGR,UAAAC,IADW,IAAI,SAASD,CAAI,EACZ,IAAI,MAAM;AAE3B,SAAA,aAAa,EAAE,MAAAC,GAAM;AAAA,EAAA;AAAA,EAGlB,SAAS;AACV,WAAAC;AAAA,+BACsB,KAAK,SAAS,KAAK,KAAK,SAAS,yBAAyB,sBAAsB,CAAC;AAAA;AAAA;AAAA,uCAGzE,KAAKJ,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASnC,KAAK,SAAS,KAAK,wBAAwB,CAAC;AAAA,mBAC3C,KAAK,OAAO,QAAQ,QAAQ,EAAE;AAAA;AAAA,WAEtCK,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASR,KAAK,SAAS,KAAK,6BAA6B,CAAC;AAAA,eAC/C,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQnB,KAAK,SAAS,KAAK,KAAK,SAAS,yBAAyB,sBAAsB,CAAC;AAAA;AAAA;AAAA,EAAA;AAAA,EAK7F,OAAA;AAAA,SAAgB,SAAS;AAAA,MACxBC;AAAA,MACAC;AAAA;AAAA;AAAA;AAAA;AAAA,IAKD;AAAA,EAAA;AACD;AA5FCC,EAAA;AAAA,EADCC,EAAM;AAAA,GAJchB,EAKrB,WAAA,QAAA;"}