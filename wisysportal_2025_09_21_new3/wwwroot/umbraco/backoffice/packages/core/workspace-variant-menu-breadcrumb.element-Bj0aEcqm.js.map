{"version":3,"file":"workspace-variant-menu-breadcrumb.element-Bj0aEcqm.js","sources":["../../../src/packages/core/workspace/components/workspace-breadcrumb/workspace-variant-menu-breadcrumb/workspace-variant-menu-breadcrumb.element.ts"],"sourcesContent":["import { UMB_VARIANT_WORKSPACE_CONTEXT } from '../../../contexts/index.js';\r\nimport type { UmbVariantDatasetWorkspaceContext } from '../../../contexts/index.js';\r\nimport { css, customElement, html, ifDefined, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport { UMB_APP_LANGUAGE_CONTEXT } from '@umbraco-cms/backoffice/language';\r\nimport { UMB_MENU_VARIANT_STRUCTURE_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/menu';\r\nimport { UMB_SECTION_CONTEXT } from '@umbraco-cms/backoffice/section';\r\nimport type { UmbAppLanguageContext } from '@umbraco-cms/backoffice/language';\r\nimport type { UmbVariantStructureItemModel } from '@umbraco-cms/backoffice/menu';\r\n\r\n@customElement('umb-workspace-variant-menu-breadcrumb')\r\nexport class UmbWorkspaceVariantMenuBreadcrumbElement extends UmbLitElement {\r\n\t@state()\r\n\t_name: string = '';\r\n\r\n\t@state()\r\n\t_structure: Array<UmbVariantStructureItemModel> = [];\r\n\r\n\t@state()\r\n\t_workspaceActiveVariantId?: UmbVariantId;\r\n\r\n\t@state()\r\n\t_appDefaultCulture?: string;\r\n\r\n\t#sectionContext?: typeof UMB_SECTION_CONTEXT.TYPE;\r\n\t#workspaceContext?: UmbVariantDatasetWorkspaceContext;\r\n\t#appLanguageContext?: UmbAppLanguageContext;\r\n\t#structureContext?: typeof UMB_MENU_VARIANT_STRUCTURE_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_APP_LANGUAGE_CONTEXT, (instance) => {\r\n\t\t\tthis.#appLanguageContext = instance;\r\n\t\t\tthis.#observeDefaultCulture();\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_SECTION_CONTEXT, (instance) => {\r\n\t\t\tthis.#sectionContext = instance;\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_VARIANT_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tif (!instance) return;\r\n\t\t\tthis.#workspaceContext = instance;\r\n\t\t\tthis.#observeWorkspaceActiveVariant();\r\n\t\t\tthis.#observeStructure();\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_MENU_VARIANT_STRUCTURE_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tif (!instance) return;\r\n\t\t\tthis.#structureContext = instance;\r\n\t\t\tthis.#observeStructure();\r\n\t\t});\r\n\t}\r\n\r\n\t#observeStructure() {\r\n\t\tif (!this.#structureContext || !this.#workspaceContext) return;\r\n\r\n\t\tthis.observe(this.#structureContext.structure, (value) => {\r\n\t\t\tif (!this.#workspaceContext) return;\r\n\t\t\tconst unique = this.#workspaceContext.getUnique();\r\n\t\t\t// exclude the current unique from the structure. We append this with an observer of the name\r\n\t\t\tthis._structure = value.filter((structureItem) => structureItem.unique !== unique);\r\n\t\t});\r\n\t}\r\n\r\n\t#observeDefaultCulture() {\r\n\t\tthis.observe(this.#appLanguageContext?.appDefaultLanguage, (value) => {\r\n\t\t\tthis._appDefaultCulture = value?.unique;\r\n\t\t});\r\n\t}\r\n\r\n\t#observeWorkspaceActiveVariant() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#workspaceContext?.splitView.activeVariantsInfo,\r\n\t\t\t(value) => {\r\n\t\t\t\tif (!value) return;\r\n\t\t\t\tthis._workspaceActiveVariantId = UmbVariantId.Create(value[0]);\r\n\t\t\t\tthis.#observeActiveVariantName();\r\n\t\t\t},\r\n\r\n\t\t\t'breadcrumbWorkspaceActiveVariantObserver',\r\n\t\t);\r\n\t}\r\n\r\n\t#observeActiveVariantName() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#workspaceContext?.name(this._workspaceActiveVariantId),\r\n\t\t\t(value) => (this._name = value || ''),\r\n\t\t\t'breadcrumbWorkspaceNameObserver',\r\n\t\t);\r\n\t}\r\n\r\n\t// TODO: we should move the fallback name logic to a helper class. It will be used in multiple places\r\n\t#getItemVariantName(structureItem: UmbVariantStructureItemModel) {\r\n\t\t// If the active workspace is a variant, we will try to find the matching variant name.\r\n\t\tif (!this._workspaceActiveVariantId?.isInvariant()) {\r\n\t\t\tconst variant = structureItem.variants.find((variantId) => this._workspaceActiveVariantId?.compare(variantId));\r\n\t\t\tif (variant) {\r\n\t\t\t\treturn variant.name;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If the active workspace is invariant, we will try to find the variant that matches the app default culture.\r\n\t\tconst variant = structureItem.variants.find((variant) => variant.culture === this._appDefaultCulture);\r\n\t\tif (variant) {\r\n\t\t\treturn `(${variant.name})`;\r\n\t\t}\r\n\r\n\t\t// If an active variant can not be found, then we fallback to the first variant name or a generic \"unknown\" label.\r\n\t\treturn structureItem.variants?.[0]?.name ?? '(#general_unknown)';\r\n\t}\r\n\r\n\t#getHref(structureItem: any) {\r\n\t\tif (structureItem.isFolder) return undefined;\r\n\t\tconst workspaceBasePath = `section/${this.#sectionContext?.getPathname()}/workspace/${structureItem.entityType}/edit`;\r\n\t\treturn `${workspaceBasePath}/${structureItem.unique}/${this._workspaceActiveVariantId?.culture}`;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-breadcrumbs>\r\n\t\t\t\t${this._structure.map(\r\n\t\t\t\t\t(structureItem) =>\r\n\t\t\t\t\t\thtml`<uui-breadcrumb-item href=${ifDefined(this.#getHref(structureItem))}\r\n\t\t\t\t\t\t\t>${this.localize.string(this.#getItemVariantName(structureItem))}</uui-breadcrumb-item\r\n\t\t\t\t\t\t>`,\r\n\t\t\t\t)}\r\n\t\t\t\t<uui-breadcrumb-item last-item>${this._name}</uui-breadcrumb-item>\r\n\t\t\t</uui-breadcrumbs>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\t/* TODO: This is a temp solution to handle an issue where long nested breadcrumbs would hide workspace actions */\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: row-reverse;\r\n\t\t\t\tmargin-left: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbWorkspaceVariantMenuBreadcrumbElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-workspace-variant-menu-breadcrumb': UmbWorkspaceVariantMenuBreadcrumbElement;\r\n\t}\r\n}\r\n"],"names":["_sectionContext","_workspaceContext","_appLanguageContext","_structureContext","_UmbWorkspaceVariantMenuBreadcrumbElement_instances","observeStructure_fn","observeDefaultCulture_fn","observeWorkspaceActiveVariant_fn","observeActiveVariantName_fn","getItemVariantName_fn","getHref_fn","UmbWorkspaceVariantMenuBreadcrumbElement","UmbLitElement","__privateAdd","UMB_APP_LANGUAGE_CONTEXT","instance","__privateSet","__privateMethod","UMB_SECTION_CONTEXT","UMB_VARIANT_WORKSPACE_CONTEXT","UMB_MENU_VARIANT_STRUCTURE_WORKSPACE_CONTEXT","html","structureItem","ifDefined","__privateGet","value","unique","UmbVariantId","variant","variantId","UmbTextStyles","css","__decorateClass","state","customElement","UmbWorkspaceVariantMenuBreadcrumbElement$1"],"mappings":"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"}