{"version":3,"file":"culture.repository-DzCkYKoo.js","sources":["../../../src/packages/core/culture/repository/sources/culture.server.data.ts","../../../src/packages/core/culture/repository/culture.repository.ts"],"sourcesContent":["import type { UmbCultureDataSource } from './index.js';\r\nimport { CultureService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the Language that fetches data from the server\r\n * @class UmbLanguageServerDataSource\r\n * @implements {RepositoryDetailDataSource}\r\n */\r\nexport class UmbCultureServerDataSource implements UmbCultureDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbLanguageServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbLanguageServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of cultures on the server\r\n\t * @param root0\r\n\t * @param root0.skip\r\n\t * @param root0.take\r\n\t * @returns {*}\r\n\t * @memberof UmbLanguageServerDataSource\r\n\t */\r\n\tasync getCollection({ skip, take }: { skip: number; take: number }) {\r\n\t\treturn tryExecute(this.#host, CultureService.getCulture({ query: { skip, take } }));\r\n\t}\r\n}\r\n","import { UmbCultureServerDataSource } from './sources/culture.server.data.js';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbApi } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nexport class UmbCultureRepository extends UmbControllerBase implements UmbApi {\r\n\t#dataSource: UmbCultureServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#dataSource = new UmbCultureServerDataSource(this);\r\n\t}\r\n\r\n\trequestCultures({ skip, take } = { skip: 0, take: 1000 }) {\r\n\t\treturn this.#dataSource.getCollection({ skip, take });\r\n\t}\r\n\r\n\toverride destroy() {}\r\n}\r\n\r\nexport { UmbCultureRepository as api };\r\n"],"names":["UmbCultureServerDataSource","#host","host","skip","take","tryExecute","CultureService","UmbCultureRepository","UmbControllerBase","#dataSource"],"mappings":";;;AAUO,MAAMA,EAA2D;AAAA,EACvEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWd,MAAM,cAAc,EAAE,MAAAC,GAAM,MAAAC,KAAwC;AACnE,WAAOC,EAAW,KAAKJ,IAAOK,EAAe,WAAW,EAAE,OAAO,EAAE,MAAAH,GAAM,MAAAC,EAAA,EAAQ,CAAA,CAAC;AAAA,EAAA;AAEpF;AC5BO,MAAMG,UAA6BC,EAAoC;AAAA,EAC7EC;AAAA,EAEA,YAAYP,GAAyB;AACpC,UAAMA,CAAI,GAEL,KAAAO,KAAc,IAAIT,EAA2B,IAAI;AAAA,EAAA;AAAA,EAGvD,gBAAgB,EAAE,MAAAG,GAAM,MAAAC,EAAK,IAAI,EAAE,MAAM,GAAG,MAAM,OAAQ;AACzD,WAAO,KAAKK,GAAY,cAAc,EAAE,MAAAN,GAAM,MAAAC,GAAM;AAAA,EAAA;AAAA,EAG5C,UAAU;AAAA,EAAA;AACpB;"}