{"version":3,"file":"entity-type.condition-BGBIgS0c.js","sources":["../../../src/packages/core/entity/entity-type/entity-type.condition.ts"],"sourcesContent":["import { UMB_ENTITY_CONTEXT } from '../entity.context-token.js';\r\nimport type { UmbEntityTypeConditionConfig } from './types.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbConditionControllerArguments, UmbExtensionCondition } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbConditionBase } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport class UmbEntityTypeCondition\r\n\textends UmbConditionBase<UmbEntityTypeConditionConfig>\r\n\timplements UmbExtensionCondition\r\n{\r\n\tconstructor(host: UmbControllerHost, args: UmbConditionControllerArguments<UmbEntityTypeConditionConfig>) {\r\n\t\tsuper(host, args);\r\n\r\n\t\tthis.consumeContext(UMB_ENTITY_CONTEXT, (context) => {\r\n\t\t\tthis.observe(context?.entityType, (entityType) => this.#check(entityType), 'umbEntityTypeObserver');\r\n\t\t});\r\n\t}\r\n\r\n\t#check(value: string | undefined) {\r\n\t\tif (!value) {\r\n\t\t\tthis.permitted = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if the config has a match, we only check that\r\n\t\tif (this.config.match) {\r\n\t\t\tthis.permitted = value === this.config.match;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.permitted = this.config.oneOf?.some((configValue) => configValue === value) ?? false;\r\n\t}\r\n}\r\n\r\nexport { UmbEntityTypeCondition as api };\r\n"],"names":["UmbEntityTypeCondition","UmbConditionBase","host","args","UMB_ENTITY_CONTEXT","context","entityType","#check","value","configValue"],"mappings":";;AAMO,MAAMA,UACJC,EAET;AAAA,EACC,YAAYC,GAAyBC,GAAqE;AACzG,UAAMD,GAAMC,CAAI,GAEX,KAAA,eAAeC,GAAoB,CAACC,MAAY;AAC/C,WAAA,QAAQA,GAAS,YAAY,CAACC,MAAe,KAAKC,GAAOD,CAAU,GAAG,uBAAuB;AAAA,IAAA,CAClG;AAAA,EAAA;AAAA,EAGFC,GAAOC,GAA2B;AACjC,QAAI,CAACA,GAAO;AACX,WAAK,YAAY;AACjB;AAAA,IAAA;AAIG,QAAA,KAAK,OAAO,OAAO;AACjB,WAAA,YAAYA,MAAU,KAAK,OAAO;AACvC;AAAA,IAAA;AAGI,SAAA,YAAY,KAAK,OAAO,OAAO,KAAK,CAACC,MAAgBA,MAAgBD,CAAK,KAAK;AAAA,EAAA;AAEtF;"}