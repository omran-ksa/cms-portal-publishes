{"version":3,"file":"sort-children-of-modal.element-Cs83_Yer.js","sources":["../../../src/packages/core/tree/entity-actions/sort-children-of/modal/sort-children-of-modal.element.ts"],"sourcesContent":["import type { UmbSortChildrenOfRepository, UmbTreeItemModel } from '../../../types.js';\r\nimport type { UmbTreeRepository } from '../../../data/index.js';\r\nimport type { UmbSortChildrenOfModalData, UmbSortChildrenOfModalValue } from './sort-children-of-modal.token.js';\r\nimport type { PropertyValueMap } from '@umbraco-cms/backoffice/external/lit';\r\nimport { html, customElement, css, state, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { createExtensionApiByAlias } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbPaginationManager } from '@umbraco-cms/backoffice/utils';\r\nimport { observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\nimport type {\r\n\tUmbTableColumn,\r\n\tUmbTableConfig,\r\n\tUmbTableElement,\r\n\tUmbTableItem,\r\n\tUmbTableOrderedEvent,\r\n\tUmbTableSortedEvent,\r\n} from '@umbraco-cms/backoffice/components';\r\n\r\nconst elementName = 'umb-sort-children-of-modal';\r\n\r\n@customElement(elementName)\r\nexport class UmbSortChildrenOfModalElement<\r\n\tTreeItemModelType extends UmbTreeItemModel = UmbTreeItemModel,\r\n> extends UmbModalBaseElement<UmbSortChildrenOfModalData, UmbSortChildrenOfModalValue> {\r\n\t@state()\r\n\tprotected _children: Array<TreeItemModelType> = [];\r\n\r\n\t@state()\r\n\t_currentPage = 1;\r\n\r\n\t@state()\r\n\t_totalPages = 1;\r\n\r\n\t@state()\r\n\tprotected _tableColumns: Array<UmbTableColumn> = [];\r\n\r\n\t@state()\r\n\tprivate _tableConfig: UmbTableConfig = {\r\n\t\tallowSelection: false,\r\n\t};\r\n\r\n\t@state()\r\n\tprotected _tableItems: Array<UmbTableItem> = [];\r\n\r\n\t@state()\r\n\tprivate _sortable = false;\r\n\r\n\tprotected _sortedUniques = new Set<string>();\r\n\r\n\t#pagination = new UmbPaginationManager();\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#pagination.setPageSize(50);\r\n\r\n\t\tthis.observe(\r\n\t\t\tobserveMultiple([this.#pagination.currentPage, this.#pagination.totalPages]),\r\n\t\t\t([currentPage, totalPages]) => {\r\n\t\t\t\tthis._currentPage = currentPage;\r\n\t\t\t\tthis._totalPages = totalPages;\r\n\t\t\t},\r\n\t\t\t'umbPaginationObserver',\r\n\t\t);\r\n\t}\r\n\r\n\tprotected _setTableColumns() {\r\n\t\tthis._tableColumns = [\r\n\t\t\t{\r\n\t\t\t\tname: this.localize.term('general_name'),\r\n\t\t\t\talias: 'name',\r\n\t\t\t\tallowSorting: true,\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\r\n\tprotected override async firstUpdated(\r\n\t\t_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\r\n\t): Promise<void> {\r\n\t\tsuper.firstUpdated(_changedProperties);\r\n\t\tawait this.#requestChildren();\r\n\t\tthis._setTableColumns();\r\n\t}\r\n\r\n\tasync #requestChildren() {\r\n\t\tif (this.data?.unique === undefined) throw new Error('unique is required');\r\n\t\tif (!this.data?.treeRepositoryAlias) throw new Error('treeRepositoryAlias is required');\r\n\r\n\t\tconst treeRepository = await createExtensionApiByAlias<UmbTreeRepository<TreeItemModelType>>(\r\n\t\t\tthis,\r\n\t\t\tthis.data.treeRepositoryAlias,\r\n\t\t);\r\n\r\n\t\tconst { data } = await treeRepository.requestTreeItemsOf({\r\n\t\t\tparent: {\r\n\t\t\t\tunique: this.data.unique,\r\n\t\t\t\tentityType: this.data.entityType,\r\n\t\t\t},\r\n\t\t\tskip: this.#pagination.getSkip(),\r\n\t\t\ttake: this.#pagination.getPageSize(),\r\n\t\t});\r\n\r\n\t\tif (data) {\r\n\t\t\tthis._children = [...this._children, ...data.items];\r\n\t\t\tthis.#pagination.setTotalItems(data.total);\r\n\t\t\tthis._sortable = this._children.length > 0;\r\n\t\t\tthis._createTableItems();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _createTableItems() {\r\n\t\tthis._tableItems = this._children.map((treeItem) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: treeItem.unique,\r\n\t\t\t\ticon: 'icon-globe',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolumnAlias: 'name',\r\n\t\t\t\t\t\tvalue: html`${treeItem.name}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tprotected _hasMorePages() {\r\n\t\treturn this._currentPage < this._totalPages;\r\n\t}\r\n\r\n\tprotected _onLoadMore(event: PointerEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tif (this._currentPage >= this._totalPages) return;\r\n\t\tthis.#pagination.setCurrentPageNumber(this._currentPage + 1);\r\n\t\tthis.#requestChildren();\r\n\t}\r\n\r\n\tasync #onSubmit(event: PointerEvent) {\r\n\t\tevent?.stopPropagation();\r\n\t\tif (!this.data?.sortChildrenOfRepositoryAlias) throw new Error('sortChildrenOfRepositoryAlias is required');\r\n\r\n\t\tconst sortChildrenOfRepository = await createExtensionApiByAlias<UmbSortChildrenOfRepository>(\r\n\t\t\tthis,\r\n\t\t\tthis.data.sortChildrenOfRepositoryAlias,\r\n\t\t);\r\n\r\n\t\tconst { error } = await sortChildrenOfRepository.sortChildrenOf({\r\n\t\t\tunique: this.data.unique,\r\n\t\t\tsorting: this.#getSortOrderOfSortedItems(),\r\n\t\t});\r\n\r\n\t\tif (!error) {\r\n\t\t\tthis._submitModal();\r\n\t\t}\r\n\t}\r\n\r\n\t#getSortOrderOfSortedItems() {\r\n\t\tconst sorting = [];\r\n\r\n\t\t// get the new sort order from the sorted uniques\r\n\t\tfor (const value of this._sortedUniques) {\r\n\t\t\tconst index = this._tableItems.findIndex((tableItem) => tableItem.id === value);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tconst entry = {\r\n\t\t\t\t\tunique: value,\r\n\t\t\t\t\tsortOrder: index,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsorting.push(entry);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sorting;\r\n\t}\r\n\r\n\t#onSorted(event: UmbTableSortedEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst sortedId = event.getItemId();\r\n\t\tthis._sortedUniques.add(sortedId);\r\n\t\tconst target = event.target as UmbTableElement;\r\n\t\tconst items = target.items;\r\n\t\tthis._tableItems = items;\r\n\t}\r\n\r\n\t#onOrdered(event: UmbTableOrderedEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst target = event.target as UmbTableElement;\r\n\t\tconst orderingColumn = target.orderingColumn;\r\n\t\tconst orderingDesc = target.orderingDesc;\r\n\r\n\t\tthis._tableItems = [...this._tableItems].sort((a, b) => {\r\n\t\t\tconst aColumn = a.data.find((column) => column.columnAlias === orderingColumn);\r\n\t\t\tconst bColumn = b.data.find((column) => column.columnAlias === orderingColumn);\r\n\t\t\treturn this._sortCompare(orderingColumn, aColumn?.value, bColumn?.value);\r\n\t\t});\r\n\r\n\t\tif (orderingDesc) {\r\n\t\t\tthis._tableItems.reverse();\r\n\t\t}\r\n\r\n\t\tthis._sortedUniques.clear();\r\n\t\tthis._tableItems.map((tableItem) => tableItem.id).forEach((u) => this._sortedUniques.add(u));\r\n\t}\r\n\r\n\tprotected _sortCompare(columnAlias: string, valueA: unknown, valueB: unknown): number {\r\n\t\tif (columnAlias === 'name') {\r\n\t\t\treturn (valueA as string).localeCompare(valueB as string);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${'Sort Children'}>\r\n\t\t\t\t${this._children.length === 0 ? this.#renderEmptyState() : this.#renderTable()}\r\n\t\t\t\t<uui-button slot=\"actions\" label=\"Cancel\" @click=\"${this._rejectModal}\"></uui-button>\r\n\t\t\t\t<uui-button slot=\"actions\" color=\"positive\" look=\"primary\" label=\"Sort\" @click=${this.#onSubmit}></uui-button>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderEmptyState() {\r\n\t\treturn html`<uui-label>There are no children</uui-label>`;\r\n\t}\r\n\r\n\t#renderTable() {\r\n\t\treturn html`\r\n\t\t\t<umb-table\r\n\t\t\t\t.config=${this._tableConfig}\r\n\t\t\t\t.columns=${this._tableColumns}\r\n\t\t\t\t.items=${this._tableItems}\r\n\t\t\t\t.sortable=${this._sortable}\r\n\t\t\t\t@sorted=${this.#onSorted}\r\n\t\t\t\t@ordered=${this.#onOrdered}></umb-table>\r\n\r\n\t\t\t${this._hasMorePages()\r\n\t\t\t\t? html`\r\n\t\t\t\t\t\t<uui-button id=\"loadMoreButton\" look=\"placeholder\" @click=${this._onLoadMore}\r\n\t\t\t\t\t\t\t>Load more (${this._currentPage}/${this._totalPages})</uui-button\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t`\r\n\t\t\t\t: nothing}\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#loadMoreButton {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin-top: var(--uui-size-space-3);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport { UmbSortChildrenOfModalElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: UmbSortChildrenOfModalElement;\r\n\t}\r\n}\r\n"],"names":["_pagination","_UmbSortChildrenOfModalElement_instances","requestChildren_fn","onSubmit_fn","getSortOrderOfSortedItems_fn","onSorted_fn","onOrdered_fn","renderEmptyState_fn","renderTable_fn","elementName","UmbSortChildrenOfModalElement","UmbModalBaseElement","__privateAdd","UmbPaginationManager","__privateGet","observeMultiple","currentPage","totalPages","_changedProperties","__privateMethod","treeItem","html","event","columnAlias","valueA","valueB","treeRepository","createExtensionApiByAlias","data","sortChildrenOfRepository","error","sorting","value","index","tableItem","entry","sortedId","items","target","orderingColumn","orderingDesc","a","b","aColumn","column","bColumn","u","nothing","UmbTextStyles","css","__decorateClass","state","customElement"],"mappings":"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"}