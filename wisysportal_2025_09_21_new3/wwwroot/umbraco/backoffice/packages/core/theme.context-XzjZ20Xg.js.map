{"version":3,"file":"theme.context-XzjZ20Xg.js","sources":["../../../src/packages/core/themes/theme.context.ts"],"sourcesContent":["import type { ManifestTheme } from './theme.extension.js';\r\nimport { loadManifestPlainCss } from '@umbraco-cms/backoffice/extension-api';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\nimport { UmbStringState } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbObserverController } from '@umbraco-cms/backoffice/observable-api';\r\n\r\nconst LOCAL_STORAGE_KEY = 'umb-theme-alias';\r\n\r\nexport class UmbThemeContext extends UmbContextBase {\r\n\t#theme = new UmbStringState('umb-light-theme');\r\n\t#themeObserver?: UmbObserverController<ManifestTheme[]>;\r\n\r\n\tpublic readonly theme = this.#theme.asObservable();\r\n\r\n\t#styleElement: HTMLLinkElement | HTMLStyleElement | null = null;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_THEME_CONTEXT);\r\n\r\n\t\tconst storedTheme = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n\t\tif (storedTheme) {\r\n\t\t\tthis.setThemeByAlias(storedTheme);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setThemeByAlias(themeAlias: string) {\r\n\t\tthis.#theme.setValue(themeAlias);\r\n\r\n\t\tthis.#themeObserver?.destroy();\r\n\t\tif (themeAlias) {\r\n\t\t\tlocalStorage.setItem(LOCAL_STORAGE_KEY, themeAlias);\r\n\t\t\tthis.#themeObserver = this.observe(\r\n\t\t\t\tumbExtensionsRegistry.byTypeAndFilter('theme', (extension) => extension.alias === themeAlias),\r\n\t\t\t\tasync (themes) => {\r\n\t\t\t\t\tthis.#styleElement?.remove();\r\n\t\t\t\t\tif (themes.length > 0 && themes[0].css) {\r\n\t\t\t\t\t\tconst activeTheme = themes[0];\r\n\t\t\t\t\t\tif (typeof activeTheme.css === 'function') {\r\n\t\t\t\t\t\t\tthis.#styleElement = document.createElement('style') as HTMLStyleElement;\r\n\t\t\t\t\t\t\t// We store the current style element so we can check if it has been replaced by another theme in between.\r\n\t\t\t\t\t\t\tconst currentStyleEl = this.#styleElement;\r\n\t\t\t\t\t\t\tcurrentStyleEl.setAttribute('type', 'text/css');\r\n\r\n\t\t\t\t\t\t\tconst result = await loadManifestPlainCss(activeTheme.css);\r\n\t\t\t\t\t\t\t// Checking that this is still our styleElement, it has not been replaced with another theme in between.\r\n\t\t\t\t\t\t\tif (result && currentStyleEl === this.#styleElement) {\r\n\t\t\t\t\t\t\t\tcurrentStyleEl.appendChild(document.createTextNode(result));\r\n\t\t\t\t\t\t\t\tdocument.head.appendChild(currentStyleEl);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (typeof activeTheme.css === 'string') {\r\n\t\t\t\t\t\t\tthis.#styleElement = document.createElement('link');\r\n\t\t\t\t\t\t\tthis.#styleElement.setAttribute('rel', 'stylesheet');\r\n\t\t\t\t\t\t\tthis.#styleElement.setAttribute('href', activeTheme.css);\r\n\t\t\t\t\t\t\tdocument.head.appendChild(this.#styleElement);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We could not load a theme for this alias, so we remove the theme.\r\n\t\t\t\t\t\tlocalStorage.removeItem(LOCAL_STORAGE_KEY);\r\n\t\t\t\t\t\tthis.#styleElement?.childNodes.forEach((node) => node.remove());\r\n\t\t\t\t\t\tthis.#styleElement?.setAttribute('href', '');\r\n\t\t\t\t\t\tthis.#styleElement = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t// Super clean, we got a falsy value, so we remove the theme.\r\n\r\n\t\t\tlocalStorage.removeItem(LOCAL_STORAGE_KEY);\r\n\t\t\tthis.#styleElement?.remove();\r\n\t\t\tthis.#styleElement?.childNodes.forEach((node) => node.remove());\r\n\t\t\tthis.#styleElement?.setAttribute('href', '');\r\n\t\t\tthis.#styleElement = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const UMB_THEME_CONTEXT = new UmbContextToken<UmbThemeContext>('umbThemeContext');\r\n\r\n// Default export to enable this as a globalContext extension js:\r\nexport default UmbThemeContext;\r\n"],"names":["LOCAL_STORAGE_KEY","UmbThemeContext","UmbContextBase","host","UMB_THEME_CONTEXT","#theme","UmbStringState","#styleElement","storedTheme","#themeObserver","themeAlias","umbExtensionsRegistry","extension","themes","activeTheme","currentStyleEl","result","loadManifestPlainCss","node","UmbContextToken"],"mappings":";;;;;AASA,MAAMA,IAAoB;AAEnB,MAAMC,UAAwBC,EAAe;AAAA,EAQnD,YAAYC,GAAyB;AACpC,UAAMA,GAAMC,CAAiB,GARrB,KAAAC,KAAA,IAAIC,EAAe,iBAAiB,GAG7B,KAAA,QAAQ,KAAKD,GAAO,aAAa,GAEU,KAAAE,KAAA;AAKpD,UAAAC,IAAc,aAAa,QAAQR,CAAiB;AAC1D,IAAIQ,KACH,KAAK,gBAAgBA,CAAW;AAAA,EACjC;AAAA,EAbDH;AAAA,EACAI;AAAA,EAIAF;AAAA,EAWO,gBAAgBG,GAAoB;AACrC,SAAAL,GAAO,SAASK,CAAU,GAE/B,KAAKD,IAAgB,QAAQ,GACzBC,KACU,aAAA,QAAQV,GAAmBU,CAAU,GAClD,KAAKD,KAAiB,KAAK;AAAA,MAC1BE,EAAsB,gBAAgB,SAAS,CAACC,MAAcA,EAAU,UAAUF,CAAU;AAAA,MAC5F,OAAOG,MAAW;AAEjB,YADA,KAAKN,IAAe,OAAO,GACvBM,EAAO,SAAS,KAAKA,EAAO,CAAC,EAAE,KAAK;AACjC,gBAAAC,IAAcD,EAAO,CAAC;AACxB,cAAA,OAAOC,EAAY,OAAQ,YAAY;AACrC,iBAAAP,KAAgB,SAAS,cAAc,OAAO;AAEnD,kBAAMQ,IAAiB,KAAKR;AACb,YAAAQ,EAAA,aAAa,QAAQ,UAAU;AAE9C,kBAAMC,IAAS,MAAMC,EAAqBH,EAAY,GAAG;AAErD,YAAAE,KAAUD,MAAmB,KAAKR,OACrCQ,EAAe,YAAY,SAAS,eAAeC,CAAM,CAAC,GACjD,SAAA,KAAK,YAAYD,CAAc;AAAA,UAE/B,MAAA,CAAA,OAAOD,EAAY,OAAQ,aAChC,KAAAP,KAAgB,SAAS,cAAc,MAAM,GAC7C,KAAAA,GAAc,aAAa,OAAO,YAAY,GACnD,KAAKA,GAAc,aAAa,QAAQO,EAAY,GAAG,GAC9C,SAAA,KAAK,YAAY,KAAKP,EAAa;AAAA,QAC7C;AAGA,uBAAa,WAAWP,CAAiB,GACzC,KAAKO,IAAe,WAAW,QAAQ,CAACW,MAASA,EAAK,QAAQ,GACzD,KAAAX,IAAe,aAAa,QAAQ,EAAE,GAC3C,KAAKA,KAAgB;AAAA,MACtB;AAAA,IAEF,MAIA,aAAa,WAAWP,CAAiB,GACzC,KAAKO,IAAe,OAAO,GAC3B,KAAKA,IAAe,WAAW,QAAQ,CAACW,MAASA,EAAK,QAAQ,GACzD,KAAAX,IAAe,aAAa,QAAQ,EAAE,GAC3C,KAAKA,KAAgB;AAAA,EACtB;AAEF;AAEa,MAAAH,IAAoB,IAAIe,EAAiC,iBAAiB;"}