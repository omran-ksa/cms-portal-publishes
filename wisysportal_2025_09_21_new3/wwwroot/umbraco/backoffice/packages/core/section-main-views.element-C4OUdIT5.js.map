{"version":3,"file":"section-main-views.element-C4OUdIT5.js","sources":["../../../src/packages/core/section/section-main-views/section-main-views.element.ts"],"sourcesContent":["import type { ManifestSectionView, UmbSectionViewElement } from '../extensions/index.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, nothing, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbRoute, UmbRouterSlotChangeEvent, UmbRouterSlotInitEvent } from '@umbraco-cms/backoffice/router';\r\nimport type { ManifestDashboard, UmbDashboardElement } from '@umbraco-cms/backoffice/dashboard';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbExtensionsManifestInitializer, createExtensionElement } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { pathFolderName } from '@umbraco-cms/backoffice/utils';\r\n\r\n@customElement('umb-section-main-views')\r\nexport class UmbSectionMainViewElement extends UmbLitElement {\r\n\t@property({ type: String, attribute: 'section-alias' })\r\n\tpublic sectionAlias?: string;\r\n\r\n\t@state()\r\n\tprivate _views: Array<ManifestSectionView> = [];\r\n\r\n\t@state()\r\n\tprivate _dashboards: Array<ManifestDashboard> = [];\r\n\r\n\t@state()\r\n\tprivate _routerPath?: string;\r\n\r\n\t@state()\r\n\tprivate _activePath?: string;\r\n\r\n\t@state()\r\n\tprivate _defaultView?: string;\r\n\r\n\t@state()\r\n\tprivate _routes: Array<UmbRoute> = [];\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tnew UmbExtensionsManifestInitializer(this, umbExtensionsRegistry, 'dashboard', null, (dashboards) => {\r\n\t\t\tthis._dashboards = dashboards.map((dashboard) => dashboard.manifest);\r\n\t\t\tthis.#createRoutes();\r\n\t\t});\r\n\r\n\t\tnew UmbExtensionsManifestInitializer(this, umbExtensionsRegistry, 'sectionView', null, (views) => {\r\n\t\t\tthis._views = views.map((view) => view.manifest);\r\n\t\t\tthis.#createRoutes();\r\n\t\t});\r\n\t}\r\n\r\n\t#constructDashboardPath(manifest: ManifestDashboard) {\r\n\t\tconst dashboardName = manifest.meta.label ?? manifest.name ?? manifest.alias;\r\n\t\treturn 'dashboard/' + (manifest.meta.pathname ? manifest.meta.pathname : pathFolderName(dashboardName));\r\n\t}\r\n\r\n\t#constructViewPath(manifest: ManifestSectionView) {\r\n\t\tconst viewName = manifest.meta.label ?? manifest.name ?? manifest.alias;\r\n\t\treturn 'view/' + (manifest.meta.pathname ? manifest.meta.pathname : pathFolderName(viewName));\r\n\t}\r\n\r\n\tasync #createRoutes() {\r\n\t\tconst dashboardRoutes = this._dashboards?.map((manifest) => {\r\n\t\t\treturn {\r\n\t\t\t\tpath: this.#constructDashboardPath(manifest),\r\n\t\t\t\tcomponent: () => createExtensionElement(manifest),\r\n\t\t\t\tsetup: (component: UmbDashboardElement) => {\r\n\t\t\t\t\tcomponent.manifest = manifest;\r\n\t\t\t\t},\r\n\t\t\t} as UmbRoute;\r\n\t\t});\r\n\r\n\t\tconst viewRoutes = this._views?.map((manifest) => {\r\n\t\t\treturn {\r\n\t\t\t\tpath: this.#constructViewPath(manifest),\r\n\t\t\t\tcomponent: () => createExtensionElement(manifest),\r\n\t\t\t\tsetup: (component: UmbSectionViewElement) => {\r\n\t\t\t\t\tcomponent.manifest = manifest;\r\n\t\t\t\t},\r\n\t\t\t} as UmbRoute;\r\n\t\t});\r\n\r\n\t\tconst routes = [...dashboardRoutes, ...viewRoutes];\r\n\t\tif (routes.length > 0) {\r\n\t\t\tthis._defaultView = routes[0].path;\r\n\t\t\troutes.push({\r\n\t\t\t\t...routes[0],\r\n\t\t\t\tpath: '',\r\n\t\t\t});\r\n\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: `**`,\r\n\t\t\t\tcomponent: async () => (await import('@umbraco-cms/backoffice/router')).UmbRouteNotFoundElement,\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._routes = routes;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._routes.length > 0\r\n\t\t\t? html`\r\n\t\t\t\t\t<umb-body-layout main-no-padding>\r\n\t\t\t\t\t\t${this.#renderDashboards()} ${this.#renderViews()}\r\n\t\t\t\t\t\t<umb-router-slot\r\n\t\t\t\t\t\t\t.routes=${this._routes}\r\n\t\t\t\t\t\t\t@init=${(event: UmbRouterSlotInitEvent) => {\r\n\t\t\t\t\t\t\t\tthis._routerPath = event.target.absoluteRouterPath;\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t@change=${(event: UmbRouterSlotChangeEvent) => {\r\n\t\t\t\t\t\t\t\tthis._activePath = event.target.localActiveViewPath;\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t</umb-router-slot>\r\n\t\t\t\t\t</umb-body-layout>\r\n\t\t\t\t`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\t#renderDashboards() {\r\n\t\t// Only show dashboards if there are more than one dashboard or if there are both dashboards and views\r\n\t\treturn (this._dashboards.length > 0 && this._views.length > 0) || this._dashboards.length > 1\r\n\t\t\t? html`\r\n\t\t\t\t\t<uui-tab-group slot=\"header\" id=\"dashboards\">\r\n\t\t\t\t\t\t${this._dashboards.map((dashboard) => {\r\n\t\t\t\t\t\t\tconst dashboardPath = this.#constructDashboardPath(dashboard);\r\n\t\t\t\t\t\t\t// If this path matches, or if this is the default view and the active path is empty.\r\n\t\t\t\t\t\t\tconst isActive =\r\n\t\t\t\t\t\t\t\tthis._activePath === dashboardPath || (this._defaultView === dashboardPath && this._activePath === '');\r\n\t\t\t\t\t\t\treturn html`\r\n\t\t\t\t\t\t\t\t<uui-tab\r\n\t\t\t\t\t\t\t\t\thref=\"${this._routerPath}/${dashboardPath}\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"${dashboard.meta.label\r\n\t\t\t\t\t\t\t\t\t\t? this.localize.string(dashboard.meta.label)\r\n\t\t\t\t\t\t\t\t\t\t: (dashboard.name ?? dashboard.alias)}\"\r\n\t\t\t\t\t\t\t\t\t?active=\"${isActive}\"></uui-tab>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</uui-tab-group>\r\n\t\t\t\t`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\t#renderViews() {\r\n\t\t// Only show views if there are more than one view or if there are both dashboards and views\r\n\t\treturn (this._views.length > 0 && this._dashboards.length > 0) || this._views.length > 1\r\n\t\t\t? html`\r\n\t\t\t\t\t<uui-tab-group slot=\"navigation\" id=\"views\">\r\n\t\t\t\t\t\t${this._views.map((view) => {\r\n\t\t\t\t\t\t\tconst viewName = view.meta.label ? this.localize.string(view.meta.label) : (view.name ?? view.alias);\r\n\t\t\t\t\t\t\tconst viewPath = this.#constructViewPath(view);\r\n\t\t\t\t\t\t\t// If this path matches, or if this is the default view and the active path is empty.\r\n\t\t\t\t\t\t\tconst isActive =\r\n\t\t\t\t\t\t\t\tthis._activePath === viewPath || (this._defaultView === viewPath && this._activePath === '');\r\n\t\t\t\t\t\t\treturn html`\r\n\t\t\t\t\t\t\t\t<uui-tab href=\"${this._routerPath}/${viewPath}\" label=\"${viewName}\" ?active=\"${isActive}\">\r\n\t\t\t\t\t\t\t\t\t<umb-icon slot=\"icon\" name=${view.meta.icon}></umb-icon>\r\n\t\t\t\t\t\t\t\t\t${viewName}\r\n\t\t\t\t\t\t\t\t</uui-tab>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</uui-tab-group>\r\n\t\t\t\t`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t#views {\r\n\t\t\t\t--uui-tab-divider: var(--uui-color-divider-standalone);\r\n\t\t\t}\r\n\r\n\t\t\t#views uui-tab:first-child {\r\n\t\t\t\tborder-left: 1px solid var(--uui-color-divider-standalone);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbSectionMainViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-section-main-views': UmbSectionMainViewElement;\r\n\t}\r\n}\r\n"],"names":["_UmbSectionMainViewElement_instances","constructDashboardPath_fn","constructViewPath_fn","createRoutes_fn","renderDashboards_fn","renderViews_fn","UmbSectionMainViewElement","UmbLitElement","__privateAdd","UmbExtensionsManifestInitializer","umbExtensionsRegistry","dashboards","dashboard","__privateMethod","views","view","html","event","nothing","manifest","dashboardName","pathFolderName","viewName","dashboardRoutes","createExtensionElement","component","viewRoutes","routes","dashboardPath","isActive","viewPath","UmbTextStyles","css","__decorateClass","property","state","customElement","UmbSectionMainViewElement$1"],"mappings":"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"}