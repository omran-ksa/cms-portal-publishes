{"version":3,"file":"trash.action-KXZi2vhG.js","sources":["../../../src/packages/core/recycle-bin/entity-action/trash/trash.action.ts"],"sourcesContent":["import type { UmbRecycleBinRepository } from '../../recycle-bin-repository.interface.js';\r\nimport type { MetaEntityActionTrashKind } from './types.js';\r\nimport { UmbEntityTrashedEvent } from './trash.event.js';\r\nimport { createExtensionApiByAlias } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UMB_ACTION_EVENT_CONTEXT } from '@umbraco-cms/backoffice/action';\r\nimport type { UmbItemRepository } from '@umbraco-cms/backoffice/repository';\r\nimport { UmbEntityActionBase, UmbRequestReloadStructureForEntityEvent } from '@umbraco-cms/backoffice/entity-action';\r\nimport { UmbLocalizationController } from '@umbraco-cms/backoffice/localization-api';\r\n\r\n/**\r\n * Entity action for trashing an item.\r\n * @class UmbTrashEntityAction\r\n * @augments {UmbEntityActionBase<MetaEntityActionTrashKind>}\r\n */\r\nexport class UmbTrashEntityAction<\r\n\tMetaKindType extends MetaEntityActionTrashKind = MetaEntityActionTrashKind,\r\n> extends UmbEntityActionBase<MetaKindType> {\r\n\t#localize = new UmbLocalizationController(this);\r\n\r\n\t/**\r\n\t * Executes the action.\r\n\t * @memberof UmbTrashEntityAction\r\n\t */\r\n\toverride async execute() {\r\n\t\tif (!this.args.unique) throw new Error('Cannot trash an item without a unique identifier.');\r\n\r\n\t\tconst item = await this.#requestItem();\r\n\r\n\t\tawait this._confirmTrash(item);\r\n\r\n\t\tconst recycleBinRepository = await createExtensionApiByAlias<UmbRecycleBinRepository>(\r\n\t\t\tthis,\r\n\t\t\tthis.args.meta.recycleBinRepositoryAlias,\r\n\t\t);\r\n\r\n\t\tconst { error } = await recycleBinRepository.requestTrash({ unique: this.args.unique });\r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\tthis.#notify();\r\n\t}\r\n\r\n\tprotected async _confirmTrash(item: any) {\r\n\t\tconst headline = '#actions_trash';\r\n\t\tconst message = '#defaultdialogs_confirmTrash';\r\n\r\n\t\t// TODO: handle items with variants\r\n\t\tawait umbConfirmModal(this, {\r\n\t\t\theadline,\r\n\t\t\tcontent: this.#localize.string(message, item.name),\r\n\t\t\tcolor: 'danger',\r\n\t\t\tconfirmLabel: '#actions_trash',\r\n\t\t});\r\n\t}\r\n\r\n\tasync #requestItem() {\r\n\t\tif (!this.args.unique) throw new Error('Cannot trash an item without a unique identifier.');\r\n\r\n\t\tconst itemRepository = await createExtensionApiByAlias<UmbItemRepository<any>>(\r\n\t\t\tthis,\r\n\t\t\tthis.args.meta.itemRepositoryAlias,\r\n\t\t);\r\n\r\n\t\tconst { data } = await itemRepository.requestItems([this.args.unique]);\r\n\t\tconst item = data?.[0];\r\n\t\tif (!item) throw new Error('Item not found.');\r\n\t\treturn item;\r\n\t}\r\n\r\n\tasync #notify() {\r\n\t\tconst actionEventContext = await this.getContext(UMB_ACTION_EVENT_CONTEXT);\r\n\t\tif (!actionEventContext) throw new Error('Action event context is missing.');\r\n\r\n\t\tconst event = new UmbRequestReloadStructureForEntityEvent({\r\n\t\t\tunique: this.args.unique,\r\n\t\t\tentityType: this.args.entityType,\r\n\t\t});\r\n\r\n\t\tactionEventContext.dispatchEvent(event);\r\n\r\n\t\tconst trashedEvent = new UmbEntityTrashedEvent({\r\n\t\t\tunique: this.args.unique,\r\n\t\t\tentityType: this.args.entityType,\r\n\t\t});\r\n\r\n\t\tactionEventContext.dispatchEvent(trashedEvent);\r\n\t}\r\n}\r\n\r\nexport { UmbTrashEntityAction as api };\r\n"],"names":["UmbTrashEntityAction","UmbEntityActionBase","#localize","UmbLocalizationController","item","#requestItem","recycleBinRepository","createExtensionApiByAlias","error","#notify","umbConfirmModal","itemRepository","data","actionEventContext","UMB_ACTION_EVENT_CONTEXT","event","UmbRequestReloadStructureForEntityEvent","trashedEvent","UmbEntityTrashedEvent"],"mappings":";;;;;;AAeO,MAAMA,UAEHC,EAAkC;AAAA,EAC3CC,KAAY,IAAIC,EAA0B,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9C,MAAe,UAAU;AACxB,QAAI,CAAC,KAAK,KAAK,OAAc,OAAA,IAAI,MAAM,mDAAmD;AAEpF,UAAAC,IAAO,MAAM,KAAKC,GAAa;AAE/B,UAAA,KAAK,cAAcD,CAAI;AAE7B,UAAME,IAAuB,MAAMC;AAAA,MAClC;AAAA,MACA,KAAK,KAAK,KAAK;AAAA,IAChB,GAEM,EAAE,OAAAC,MAAU,MAAMF,EAAqB,aAAa,EAAE,QAAQ,KAAK,KAAK,QAAQ;AACtF,QAAIE;AACG,YAAAA;AAGP,SAAKC,GAAQ;AAAA,EAAA;AAAA,EAGd,MAAgB,cAAcL,GAAW;AAKxC,UAAMM,EAAgB,MAAM;AAAA,MAC3B,UALgB;AAAA,MAMhB,SAAS,KAAKR,GAAU,OALT,gCAKyBE,EAAK,IAAI;AAAA,MACjD,OAAO;AAAA,MACP,cAAc;AAAA,IAAA,CACd;AAAA,EAAA;AAAA,EAGF,MAAMC,KAAe;AACpB,QAAI,CAAC,KAAK,KAAK,OAAc,OAAA,IAAI,MAAM,mDAAmD;AAE1F,UAAMM,IAAiB,MAAMJ;AAAA,MAC5B;AAAA,MACA,KAAK,KAAK,KAAK;AAAA,IAChB,GAEM,EAAE,MAAAK,EAAK,IAAI,MAAMD,EAAe,aAAa,CAAC,KAAK,KAAK,MAAM,CAAC,GAC/DP,IAAOQ,IAAO,CAAC;AACrB,QAAI,CAACR,EAAY,OAAA,IAAI,MAAM,iBAAiB;AACrC,WAAAA;AAAA,EAAA;AAAA,EAGR,MAAMK,KAAU;AACf,UAAMI,IAAqB,MAAM,KAAK,WAAWC,CAAwB;AACzE,QAAI,CAACD,EAA0B,OAAA,IAAI,MAAM,kCAAkC;AAErE,UAAAE,IAAQ,IAAIC,EAAwC;AAAA,MACzD,QAAQ,KAAK,KAAK;AAAA,MAClB,YAAY,KAAK,KAAK;AAAA,IAAA,CACtB;AAED,IAAAH,EAAmB,cAAcE,CAAK;AAEhC,UAAAE,IAAe,IAAIC,EAAsB;AAAA,MAC9C,QAAQ,KAAK,KAAK;AAAA,MAClB,YAAY,KAAK,KAAK;AAAA,IAAA,CACtB;AAED,IAAAL,EAAmB,cAAcI,CAAY;AAAA,EAAA;AAE/C;"}