{"version":3,"file":"collection-action-button.element-TmHU9Eph.js","sources":["../../../src/packages/core/collection/conditions/constants.ts","../../../src/packages/core/collection/action/collection-action-button.element.ts"],"sourcesContent":["export const UMB_COLLECTION_ALIAS_CONDITION = 'Umb.Condition.CollectionAlias';\r\n\r\n/** @deprecated No longer used internally. This will be removed in Umbraco 17. [LK] */\r\nexport const UMB_COLLECTION_BULK_ACTION_PERMISSION_CONDITION = 'Umb.Condition.CollectionBulkActionPermission';\r\n","import type { ManifestCollectionAction } from '../extensions/types.js';\r\nimport type { UmbCollectionAction } from './collection-action-base.js';\r\nimport { UmbActionExecutedEvent } from '@umbraco-cms/backoffice/event';\r\nimport { html, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { createExtensionApi } from '@umbraco-cms/backoffice/extension-api';\r\nimport type { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('umb-collection-action-button')\r\nexport class UmbCollectionActionButtonElement extends UmbLitElement {\r\n\t#api?: UmbCollectionAction;\r\n\r\n\t@property({ type: Object, attribute: false })\r\n\tpublic get manifest() {\r\n\t\treturn this._manifest;\r\n\t}\r\n\tpublic set manifest(value: ManifestCollectionAction | undefined) {\r\n\t\tconst oldValue = this._manifest;\r\n\t\tif (oldValue !== value) {\r\n\t\t\tthis._manifest = value;\r\n\t\t\tthis._href = this.manifest?.meta.href;\r\n\t\t\tthis._additionalOptions = this.manifest?.meta.additionalOptions;\r\n\t\t\tthis.#createApi();\r\n\t\t\tthis.requestUpdate('manifest', oldValue);\r\n\t\t}\r\n\t}\r\n\tprivate _manifest?: ManifestCollectionAction;\r\n\r\n\tasync #createApi() {\r\n\t\tif (!this._manifest) throw new Error('No manifest defined');\r\n\t\tif (!this._manifest.api) return;\r\n\t\tthis.#api = await createExtensionApi<UmbCollectionAction>(this, this._manifest);\r\n\r\n\t\tthis._href = (await this.#api?.getHref?.()) ?? this.manifest?.meta.href;\r\n\t\tthis._additionalOptions = (await this.#api?.hasAddionalOptions?.()) ?? this.manifest?.meta.additionalOptions;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _buttonState?: UUIButtonState;\r\n\r\n\t@state()\r\n\tprivate _additionalOptions?: boolean;\r\n\r\n\t@state()\r\n\tprivate _href?: string;\r\n\r\n\tprivate async _onClick() {\r\n\t\t// If its a link or has additional options, then we do not want to display state on the button. [NL]\r\n\t\tif (!this._href) {\r\n\t\t\tif (!this._additionalOptions) {\r\n\t\t\t\tthis._buttonState = 'waiting';\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (!this.#api) throw new Error('No api defined');\r\n\t\t\t\tawait this.#api.execute();\r\n\t\t\t\tif (!this._additionalOptions) {\r\n\t\t\t\t\tthis._buttonState = 'success';\r\n\t\t\t\t}\r\n\t\t\t} catch {\r\n\t\t\t\tif (!this._additionalOptions) {\r\n\t\t\t\t\tthis._buttonState = 'failed';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.dispatchEvent(new UmbActionExecutedEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst label = this.manifest?.meta.label\r\n\t\t\t? this.localize.string(this.manifest.meta.label)\r\n\t\t\t: (this.manifest?.name ?? '');\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tdata-mark=\"collection-action:${this.manifest?.alias}\"\r\n\t\t\t\tcolor=\"default\"\r\n\t\t\t\tlook=\"outline\"\r\n\t\t\t\t.label=${this._additionalOptions ? label + 'â€¦' : label}\r\n\t\t\t\t.href=${this._href}\r\n\t\t\t\t.state=${this._buttonState}\r\n\t\t\t\t@click=${this._onClick}></uui-button>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default UmbCollectionActionButtonElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-collection-action-button': UmbCollectionActionButtonElement;\r\n\t}\r\n}\r\n"],"names":["UMB_COLLECTION_ALIAS_CONDITION","UMB_COLLECTION_BULK_ACTION_PERMISSION_CONDITION","_api","_UmbCollectionActionButtonElement_instances","createApi_fn","UmbCollectionActionButtonElement","UmbLitElement","__privateAdd","value","oldValue","__privateMethod","__privateGet","UmbActionExecutedEvent","label","html","__privateSet","createExtensionApi","__decorateClass","property","state","customElement","UmbCollectionActionButtonElement$1"],"mappings":";;;;AAAO,MAAMA,IAAiC,iCAGjCC,IAAkD;;;;;;;wXCH/DC,GAAAC,GAAAC;AASa,IAAAC,IAAN,cAA+CC,EAAc;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAJ,CAAA,GACNI,EAAA,MAAAL,CAAA;AAAA,EAAA;AAAA,EAGA,IAAW,WAAW;AACrB,WAAO,KAAK;AAAA,EAAA;AAAA,EAEb,IAAW,SAASM,GAA6C;AAChE,UAAMC,IAAW,KAAK;AACtB,IAAIA,MAAaD,MAChB,KAAK,YAAYA,GACZ,KAAA,QAAQ,KAAK,UAAU,KAAK,MAC5B,KAAA,qBAAqB,KAAK,UAAU,KAAK,mBAC9CE,EAAA,MAAKP,GAALC,CAAA,EAAA,KAAA,IAAA,GACK,KAAA,cAAc,YAAYK,CAAQ;AAAA,EACxC;AAAA,EAsBD,MAAc,WAAW;AAEpB,QAAA,CAAC,KAAK,OAAO;AACZ,MAAC,KAAK,uBACT,KAAK,eAAe;AAGjB,UAAA;AACH,YAAI,CAACE,EAAK,MAAAT,CAAA,EAAY,OAAA,IAAI,MAAM,gBAAgB;AAC1C,cAAAS,EAAA,MAAKT,GAAK,QAAQ,GACnB,KAAK,uBACT,KAAK,eAAe;AAAA,MACrB,QACO;AACH,QAAC,KAAK,uBACT,KAAK,eAAe;AAAA,MACrB;AAAA,IACD;AAEI,SAAA,cAAc,IAAIU,GAAwB;AAAA,EAAA;AAAA,EAGvC,SAAS;AACjB,UAAMC,IAAQ,KAAK,UAAU,KAAK,QAC/B,KAAK,SAAS,OAAO,KAAK,SAAS,KAAK,KAAK,IAC5C,KAAK,UAAU,QAAQ;AACpB,WAAAC;AAAA;AAAA,mCAE0B,KAAK,UAAU,KAAK;AAAA;AAAA;AAAA,aAG1C,KAAK,qBAAqBD,IAAQ,MAAMA,CAAK;AAAA,YAC9C,KAAK,KAAK;AAAA,aACT,KAAK,YAAY;AAAA,aACjB,KAAK,QAAQ;AAAA;AAAA,EAAA;AAG1B;AAzECX,IAAA,oBAAA,QAAA;AADMC,IAAA,oBAAA,QAAA;AAmBAC,IAAU,iBAAG;AAClB,MAAI,CAAC,KAAK,UAAiB,OAAA,IAAI,MAAM,qBAAqB;AACtD,EAAC,KAAK,UAAU,QACpBW,EAAA,MAAKb,GAAO,MAAMc,EAAwC,MAAM,KAAK,SAAS,CAAA,GAEzE,KAAA,QAAS,MAAML,EAAK,MAAAT,CAAA,GAAM,eAAgB,KAAK,UAAU,KAAK,MAC9D,KAAA,qBAAsB,MAAMS,EAAK,MAAAT,CAAA,GAAM,0BAA2B,KAAK,UAAU,KAAK;AAC5F;AAtBWe,EAAA;AAAA,EADVC,EAAS,EAAE,MAAM,QAAQ,WAAW,GAAO,CAAA;AAAA,GAHhCb,EAID,WAAA,YAAA,CAAA;AAyBHY,EAAA;AAAA,EADPE,EAAM;AAAA,GA5BKd,EA6BJ,WAAA,gBAAA,CAAA;AAGAY,EAAA;AAAA,EADPE,EAAM;AAAA,GA/BKd,EAgCJ,WAAA,sBAAA,CAAA;AAGAY,EAAA;AAAA,EADPE,EAAM;AAAA,GAlCKd,EAmCJ,WAAA,SAAA,CAAA;AAnCIA,IAANY,EAAA;AAAA,EADNG,EAAc,8BAA8B;AAAA,GAChCf,CAAA;AA4Eb,MAAAgB,IAAehB;"}