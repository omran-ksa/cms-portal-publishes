{"version":3,"file":"dashboard-performance-profiling.element-BxUm_lpX.js","sources":["../../../src/packages/performance-profiling/dashboard-performance-profiling.element.ts"],"sourcesContent":["import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, customElement, state, query, unsafeHTML } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { ProfilingService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n@customElement('umb-dashboard-performance-profiling')\r\nexport class UmbDashboardPerformanceProfilingElement extends UmbLitElement {\r\n\t@state()\r\n\tprivate _profilingStatus = true;\r\n\r\n\t// TODO: Get this from the management api configuration when available\r\n\t@state()\r\n\tprivate _isDebugMode = true;\r\n\r\n\t@query('#toggle')\r\n\tprivate _toggle!: HTMLInputElement;\r\n\r\n\t#setToggle(value: boolean) {\r\n\t\tthis._toggle.checked = value;\r\n\t\tthis._profilingStatus = value;\r\n\t}\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis._getProfilingStatus();\r\n\t}\r\n\r\n\tprivate async _getProfilingStatus() {\r\n\t\tconst { data } = await tryExecute(this, ProfilingService.getProfilingStatus());\r\n\r\n\t\tif (!data) return;\r\n\t\tthis._profilingStatus = data.enabled ?? false;\r\n\t}\r\n\r\n\tprivate async _changeProfilingStatus() {\r\n\t\tconst { error } = await tryExecute(\r\n\t\t\tthis,\r\n\t\t\tProfilingService.putProfilingStatus({ body: { enabled: !this._profilingStatus } }),\r\n\t\t);\r\n\r\n\t\tif (error) {\r\n\t\t\tthis.#setToggle(this._profilingStatus);\r\n\t\t} else {\r\n\t\t\tthis.#setToggle(!this._profilingStatus);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderProfilingStatus() {\r\n\t\treturn this._isDebugMode\r\n\t\t\t? html`\r\n\t\t\t\t\t${unsafeHTML(this.localize.term('profiling_performanceProfilingDescription'))}\r\n\r\n\t\t\t\t\t<uui-toggle\r\n\t\t\t\t\t\tid=\"toggle\"\r\n\t\t\t\t\t\tlabel=${this.localize.term('profiling_activateByDefault')}\r\n\t\t\t\t\t\tlabel-position=\"left\"\r\n\t\t\t\t\t\t?checked=\"${this._profilingStatus}\"\r\n\t\t\t\t\t\t@change=\"${this._changeProfilingStatus}\"></uui-toggle>\r\n\r\n\t\t\t\t\t<h4>${this.localize.term('profiling_reminder')}</h4>\r\n\r\n\t\t\t\t\t${unsafeHTML(this.localize.term('profiling_reminderDescription'))}\r\n\t\t\t\t`\r\n\t\t\t: html` ${unsafeHTML(this.localize.term('profiling_profilerEnabledDescription'))} `;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-box headline=${this.localize.term('profiling_performanceProfiling')}>\r\n\t\t\t\t${typeof this._profilingStatus === 'undefined' ? html`<uui-loader></uui-loader>` : this.renderProfilingStatus()}\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tpadding: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\r\n\t\t\tuui-toggle {\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t}\r\n\r\n\t\t\th4 {\r\n\t\t\t\tmargin-bottom: 0;\r\n\t\t\t}\r\n\r\n\t\t\th4 + p {\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDashboardPerformanceProfilingElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-dashboard-performance-profiling': UmbDashboardPerformanceProfilingElement;\r\n\t}\r\n}\r\n"],"names":["_UmbDashboardPerformanceProfilingElement_instances","setToggle_fn","UmbDashboardPerformanceProfilingElement","UmbLitElement","__privateAdd","data","tryExecute","ProfilingService","error","__privateMethod","html","unsafeHTML","value","UmbTextStyles","css","__decorateClass","state","query","customElement","UmbDashboardPerformanceProfilingElement$1"],"mappings":";;;;;;;;;;;8OAAAA,GAAAC;AAOa,IAAAC,IAAN,cAAsDC,EAAc;AAAA,EAApE,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAJ,CAAA,GAEN,KAAQ,mBAAmB,IAI3B,KAAQ,eAAe;AAAA,EAAA;AAAA,EAUd,eAAe;AACvB,SAAK,oBAAoB;AAAA,EAAA;AAAA,EAG1B,MAAc,sBAAsB;AAC7B,UAAA,EAAE,MAAAK,MAAS,MAAMC,EAAW,MAAMC,EAAiB,oBAAoB;AAE7E,IAAKF,MACA,KAAA,mBAAmBA,EAAK,WAAW;AAAA,EAAA;AAAA,EAGzC,MAAc,yBAAyB;AAChC,UAAA,EAAE,OAAAG,EAAM,IAAI,MAAMF;AAAA,MACvB;AAAA,MACAC,EAAiB,mBAAmB,EAAE,MAAM,EAAE,SAAS,CAAC,KAAK,mBAAoB,CAAA;AAAA,IAClF;AAEA,IAAIC,IACEC,EAAA,MAAAT,GAAAC,CAAA,EAAL,WAAgB,KAAK,gBAAA,IAEhBQ,EAAA,MAAAT,GAAAC,CAAA,EAAL,KAAgB,MAAA,CAAC,KAAK,gBAAA;AAAA,EACvB;AAAA,EAGO,wBAAwB;AAC/B,WAAO,KAAK,eACTS;AAAA,OACEC,EAAW,KAAK,SAAS,KAAK,2CAA2C,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,cAIpE,KAAK,SAAS,KAAK,6BAA6B,CAAC;AAAA;AAAA,kBAE7C,KAAK,gBAAgB;AAAA,iBACtB,KAAK,sBAAsB;AAAA;AAAA,WAEjC,KAAK,SAAS,KAAK,oBAAoB,CAAC;AAAA;AAAA,OAE5CA,EAAW,KAAK,SAAS,KAAK,+BAA+B,CAAC,CAAC;AAAA,QAEjED,KAAQC,EAAW,KAAK,SAAS,KAAK,sCAAsC,CAAC,CAAC;AAAA,EAAA;AAAA,EAGzE,SAAS;AACV,WAAAD;AAAA,uBACc,KAAK,SAAS,KAAK,gCAAgC,CAAC;AAAA,MACrE,OAAO,KAAK,mBAAqB,MAAcA,+BAAkC,KAAK,sBAAuB,CAAA;AAAA;AAAA;AAAA,EAAA;AA0BnH;AAxFOV,IAAA,oBAAA,QAAA;AAWNC,IAAU,SAACW,GAAgB;AAC1B,OAAK,QAAQ,UAAUA,GACvB,KAAK,mBAAmBA;AACzB;AAdYV,EAmEI,SAAS;AAAA,EACxBW;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBD;AArFQC,EAAA;AAAA,EADPC,EAAM;AAAA,GADKd,EAEJ,WAAA,oBAAA,CAAA;AAIAa,EAAA;AAAA,EADPC,EAAM;AAAA,GALKd,EAMJ,WAAA,gBAAA,CAAA;AAGAa,EAAA;AAAA,EADPE,EAAM,SAAS;AAAA,GARJf,EASJ,WAAA,WAAA,CAAA;AATIA,IAANa,EAAA;AAAA,EADNG,EAAc,qCAAqC;AAAA,GACvChB,CAAA;AA0Fb,MAAAiB,IAAejB;"}