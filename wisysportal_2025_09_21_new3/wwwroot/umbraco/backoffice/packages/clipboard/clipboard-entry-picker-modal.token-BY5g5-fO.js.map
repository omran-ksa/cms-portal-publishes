{"version":3,"file":"clipboard-entry-picker-modal.token-BY5g5-fO.js","sources":["../../../src/packages/clipboard/clipboard-entry/picker/clipboard-entry-picker.element.ts","../../../src/packages/clipboard/clipboard-entry/picker-modal/clipboard-entry-picker-modal.token.ts"],"sourcesContent":["import { UmbClipboardCollectionRepository } from '../../collection/index.js';\r\nimport type { UmbClipboardEntryDetailModel } from '../types.js';\r\nimport { html, customElement, state, repeat, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbSelectionManager } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbEntityContext, type UmbEntityUnique } from '@umbraco-cms/backoffice/entity';\r\nimport { UMB_ACTION_EVENT_CONTEXT } from '@umbraco-cms/backoffice/action';\r\nimport {\r\n\tUmbRequestReloadChildrenOfEntityEvent,\r\n\tUmbRequestReloadStructureForEntityEvent,\r\n} from '@umbraco-cms/backoffice/entity-action';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n// TODO: make this into an extension point (Picker) with two kinds of pickers: tree-item-picker and collection-item-picker;\r\n@customElement('umb-clipboard-entry-picker')\r\nexport class UmbClipboardEntryPickerElement extends UmbLitElement {\r\n\t@property({ type: Array })\r\n\tselection: Array<UmbEntityUnique> = [];\r\n\r\n\t@property({ type: Object })\r\n\tconfig?: any;\r\n\r\n\t@state()\r\n\tprivate _items: Array<UmbClipboardEntryDetailModel> = [];\r\n\r\n\t#collectionRepository = new UmbClipboardCollectionRepository(this);\r\n\t#selectionManager = new UmbSelectionManager(this);\r\n\t#entityContext = new UmbEntityContext(this);\r\n\t#actionEventContext?: typeof UMB_ACTION_EVENT_CONTEXT.TYPE;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#entityContext.setEntityType('clipboard-entry');\r\n\t\tthis.#entityContext.setUnique(null);\r\n\t}\r\n\r\n\toverride connectedCallback(): void {\r\n\t\tsuper.connectedCallback();\r\n\t\tthis.#selectionManager.setSelectable(true);\r\n\t\tthis.#selectionManager.setMultiple(this.config?.multiple ?? false);\r\n\t\tthis.#selectionManager.setSelection(this.selection ?? []);\r\n\r\n\t\tthis.observe(this.#selectionManager.selection, (selection) => {\r\n\t\t\tthis.selection = selection;\r\n\t\t});\r\n\r\n\t\tthis.#listenToEntityEvents();\r\n\t}\r\n\r\n\toverride async firstUpdated() {\r\n\t\tthis.#requestItems();\r\n\t}\r\n\r\n\tasync #requestItems() {\r\n\t\tconst { data } = await this.#collectionRepository.requestCollection({\r\n\t\t\ttypes: this.config?.entryTypes ?? [],\r\n\t\t});\r\n\r\n\t\tconst entries = data?.items ?? [];\r\n\t\tconst sortedEntries = entries.sort((a, b) => new Date(b.updateDate!).getTime() - new Date(a.updateDate!).getTime());\r\n\r\n\t\tif (this.config?.filter) {\r\n\t\t\tthis._items = sortedEntries.filter(this.config.filter);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.config?.asyncFilter) {\r\n\t\t\tconst promises = Promise.all(sortedEntries.map(this.config.asyncFilter));\r\n\t\t\tconst results = await promises;\r\n\t\t\tthis._items = sortedEntries.filter((_, index) => results[index]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._items = sortedEntries;\r\n\t}\r\n\r\n\tasync #listenToEntityEvents() {\r\n\t\tthis.consumeContext(UMB_ACTION_EVENT_CONTEXT, (context) => {\r\n\t\t\tthis.#actionEventContext = context;\r\n\r\n\t\t\tcontext?.removeEventListener(\r\n\t\t\t\tUmbRequestReloadStructureForEntityEvent.TYPE,\r\n\t\t\t\tthis.#onReloadStructureRequest as unknown as EventListener,\r\n\t\t\t);\r\n\r\n\t\t\tcontext?.removeEventListener(\r\n\t\t\t\tUmbRequestReloadChildrenOfEntityEvent.TYPE,\r\n\t\t\t\tthis.#onReloadChildrenRequest as unknown as EventListener,\r\n\t\t\t);\r\n\r\n\t\t\tcontext?.addEventListener(\r\n\t\t\t\tUmbRequestReloadStructureForEntityEvent.TYPE,\r\n\t\t\t\tthis.#onReloadStructureRequest as unknown as EventListener,\r\n\t\t\t);\r\n\r\n\t\t\tcontext?.addEventListener(\r\n\t\t\t\tUmbRequestReloadChildrenOfEntityEvent.TYPE,\r\n\t\t\t\tthis.#onReloadChildrenRequest as unknown as EventListener,\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#onReloadStructureRequest = (event: UmbRequestReloadStructureForEntityEvent) => {\r\n\t\tconst hasItem = this._items.some((item) => item.unique === event.getUnique());\r\n\t\tif (hasItem) {\r\n\t\t\tthis.#requestItems();\r\n\t\t}\r\n\t};\r\n\r\n\t#onReloadChildrenRequest = async (event: UmbRequestReloadChildrenOfEntityEvent) => {\r\n\t\t// check if the collection is in the same context as the entity from the event\r\n\t\tconst unique = this.#entityContext.getUnique();\r\n\t\tconst entityType = this.#entityContext.getEntityType();\r\n\r\n\t\tif (unique === event.getUnique() && entityType === event.getEntityType()) {\r\n\t\t\tthis.#requestItems();\r\n\t\t}\r\n\t};\r\n\r\n\toverride render() {\r\n\t\treturn html`${this._items.length > 0\r\n\t\t\t? repeat(\r\n\t\t\t\t\tthis._items,\r\n\t\t\t\t\t(item) => item.unique,\r\n\t\t\t\t\t(item) => this.#renderItem(item),\r\n\t\t\t\t)\r\n\t\t\t: html`There are no items in the clipboard`}`;\r\n\t}\r\n\r\n\t#renderItem(item: UmbClipboardEntryDetailModel) {\r\n\t\treturn html`\r\n\t\t\t<uui-menu-item\r\n\t\t\t\tlabel=${item.name ?? ''}\r\n\t\t\t\tselectable\r\n\t\t\t\t@selected=${() => this.#selectionManager.select(item.unique)}\r\n\t\t\t\t@deselected=${() => this.#selectionManager.deselect(item.unique)}\r\n\t\t\t\t?selected=${this.selection.includes(item.unique)}>\r\n\t\t\t\t${this.#renderItemIcon(item)} ${this.#renderItemActions(item)}\r\n\t\t\t</uui-menu-item>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItemIcon(item: UmbClipboardEntryDetailModel) {\r\n\t\tconst iconName = item.icon ?? 'icon-clipboard-entry';\r\n\t\treturn html`<uui-icon slot=\"icon\" name=${iconName}></uui-icon>`;\r\n\t}\r\n\r\n\t#renderItemActions(item: UmbClipboardEntryDetailModel) {\r\n\t\treturn html`\r\n\t\t\t<umb-entity-actions-bundle\r\n\t\t\t\tslot=\"actions\"\r\n\t\t\t\t.entityType=${item.entityType}\r\n\t\t\t\t.unique=${item.unique}\r\n\t\t\t\t.label=${this.localize.term('actions_viewActionsFor', [item.name])}>\r\n\t\t\t</umb-entity-actions-bundle>\r\n\t\t`;\r\n\t}\r\n\r\n\toverride destroy(): void {\r\n\t\tthis.#actionEventContext?.removeEventListener(\r\n\t\t\tUmbRequestReloadStructureForEntityEvent.TYPE,\r\n\t\t\tthis.#onReloadStructureRequest as unknown as EventListener,\r\n\t\t);\r\n\r\n\t\tthis.#actionEventContext?.removeEventListener(\r\n\t\t\tUmbRequestReloadChildrenOfEntityEvent.TYPE,\r\n\t\t\tthis.#onReloadChildrenRequest as unknown as EventListener,\r\n\t\t);\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-clipboard-entry-picker': UmbClipboardEntryPickerElement;\r\n\t}\r\n}\r\n","import type { UmbClipboardEntryDetailModel } from '../types.js';\r\nimport { UMB_CLIPBOARD_ENTRY_PICKER_MODAL_ALIAS } from './constants.js';\r\nimport { UmbModalToken, type UmbPickerModalData, type UmbPickerModalValue } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport interface UmbClipboardEntryPickerModalData extends UmbPickerModalData<UmbClipboardEntryDetailModel> {\r\n\tasyncFilter?: (item: UmbClipboardEntryDetailModel) => Promise<boolean>;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\r\nexport interface UmbClipboardEntryPickerModalValue extends UmbPickerModalValue {}\r\n\r\nexport const UMB_CLIPBOARD_ENTRY_PICKER_MODAL = new UmbModalToken<\r\n\tUmbClipboardEntryPickerModalData,\r\n\tUmbClipboardEntryPickerModalValue\r\n>(UMB_CLIPBOARD_ENTRY_PICKER_MODAL_ALIAS, {\r\n\tmodal: {\r\n\t\ttype: 'sidebar',\r\n\t\tsize: 'small',\r\n\t},\r\n});\r\n"],"names":["_collectionRepository","_selectionManager","_entityContext","_actionEventContext","_UmbClipboardEntryPickerElement_instances","requestItems_fn","listenToEntityEvents_fn","_onReloadStructureRequest","_onReloadChildrenRequest","renderItem_fn","renderItemIcon_fn","renderItemActions_fn","UmbClipboardEntryPickerElement","UmbLitElement","__privateAdd","UmbClipboardCollectionRepository","UmbSelectionManager","UmbEntityContext","event","item","__privateMethod","unique","__privateGet","entityType","selection","html","repeat","UmbRequestReloadStructureForEntityEvent","UmbRequestReloadChildrenOfEntityEvent","data","sortedEntries","a","b","results","_","index","UMB_ACTION_EVENT_CONTEXT","context","__privateSet","iconName","__decorateClass","property","state","customElement","UMB_CLIPBOARD_ENTRY_PICKER_MODAL","UmbModalToken","UMB_CLIPBOARD_ENTRY_PICKER_MODAL_ALIAS"],"mappings":"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"}