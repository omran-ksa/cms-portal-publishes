{"version":3,"file":"clipboard-local-storage.manager-BePfLXgL.js","sources":["../../../src/packages/clipboard/clipboard-local-storage.manager.ts"],"sourcesContent":["import type { UmbClipboardEntryDetailModel } from './clipboard-entry/index.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UMB_CURRENT_USER_CONTEXT } from '@umbraco-cms/backoffice/current-user';\r\n\r\nconst UMB_CLIPBOARD_LOCAL_STORAGE_KEY_PREFIX = 'umb:clipboard';\r\n\r\ninterface UmbClipboardLocalStorageFilterModel {\r\n\ttypes?: Array<string>;\r\n\tskip?: number;\r\n\ttake?: number;\r\n}\r\n\r\n// keep internal\r\nexport class UmbClipboardLocalStorageManager extends UmbControllerBase {\r\n\t#currentUserUnique?: string;\r\n\t#fingerprint?: string;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\t// TODO: look into encrypting the data\r\n\t\tif (!window.isSecureContext && window.crypto) {\r\n\t\t\tthrow new Error('Clipboard local storage manager can only be used in a secure context');\r\n\t\t}\r\n\t}\r\n\r\n\t// Gets all entries from local storage\r\n\tasync getEntries(): Promise<{\r\n\t\tentries: Array<UmbClipboardEntryDetailModel>;\r\n\t\ttotal: number;\r\n\t}> {\r\n\t\tconst localStorageKey = await this.#requestLocalStorageKey();\r\n\t\tconst localStorageItem = localStorage.getItem(localStorageKey);\r\n\t\tconst entries = localStorageItem ? JSON.parse(localStorageItem) : [];\r\n\t\tconst total = entries.length;\r\n\t\treturn { entries, total };\r\n\t}\r\n\r\n\t// Gets a single entry from local storage\r\n\tasync getEntry(unique: string): Promise<UmbClipboardEntryDetailModel | undefined> {\r\n\t\tconst { entries } = await this.getEntries();\r\n\t\treturn entries.find((x) => x.unique === unique);\r\n\t}\r\n\r\n\t// Sets all entries in local storage\r\n\tasync setEntries(entries: Array<UmbClipboardEntryDetailModel>) {\r\n\t\tconst currentUserUnique = await this.#requestCurrentUserUnique();\r\n\r\n\t\tif (!currentUserUnique) {\r\n\t\t\tthrow new Error('Could not get current user unique');\r\n\t\t}\r\n\r\n\t\tconst localStorageKey = await this.#requestLocalStorageKey();\r\n\r\n\t\tlocalStorage.setItem(localStorageKey, JSON.stringify(entries));\r\n\t}\r\n\r\n\t// gets a filtered list of entries\r\n\tasync filter(filter: UmbClipboardLocalStorageFilterModel) {\r\n\t\tconst { entries } = await this.getEntries();\r\n\t\tconst filteredEntries = this.#filterEntries(entries, filter);\r\n\t\tconst total = filteredEntries.length;\r\n\t\tconst skip = filter.skip || 0;\r\n\t\tconst take = filter.take || total;\r\n\t\tconst pagedEntries = filteredEntries.slice(skip, skip + take);\r\n\t\treturn { entries: pagedEntries, total };\r\n\t}\r\n\r\n\t#filterEntries(entries: Array<UmbClipboardEntryDetailModel>, filter: UmbClipboardLocalStorageFilterModel) {\r\n\t\treturn entries.filter((entry) => {\r\n\t\t\tif (filter.types?.length) {\r\n\t\t\t\tconst valueTypes = entry.values.map((x) => x.type);\r\n\t\t\t\treturn filter.types.some((type) => valueTypes.includes(type));\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tasync #requestLocalStorageKey() {\r\n\t\tif (this.#fingerprint) {\r\n\t\t\treturn this.#fingerprint;\r\n\t\t}\r\n\r\n\t\tconst currentUserUnique = await this.#requestCurrentUserUnique();\r\n\t\tconst fingerPrint = await this.#fingerPrint(`${UMB_CLIPBOARD_LOCAL_STORAGE_KEY_PREFIX}:${currentUserUnique}`);\r\n\t\tthis.#fingerprint = fingerPrint;\r\n\t\treturn this.#fingerprint;\r\n\t}\r\n\r\n\tasync #requestCurrentUserUnique() {\r\n\t\tif (this.#currentUserUnique) {\r\n\t\t\treturn this.#currentUserUnique;\r\n\t\t}\r\n\r\n\t\tconst context = await this.getContext(UMB_CURRENT_USER_CONTEXT);\r\n\t\tif (!context) {\r\n\t\t\tthrow new Error('Could not get current user context');\r\n\t\t}\r\n\t\tthis.#currentUserUnique = context.getUnique();\r\n\t\treturn this.#currentUserUnique;\r\n\t}\r\n\r\n\tasync #fingerPrint(text: string) {\r\n\t\tconst encoder = new TextEncoder();\r\n\t\tconst data = encoder.encode(text);\r\n\t\tconst hashBuffer = await window.crypto.subtle.digest('SHA-256', data);\r\n\t\tconst hashArray = Array.from(new Uint8Array(hashBuffer));\r\n\t\tconst hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\r\n\t\treturn hashHex;\r\n\t}\r\n}\r\n"],"names":["UMB_CLIPBOARD_LOCAL_STORAGE_KEY_PREFIX","UmbClipboardLocalStorageManager","UmbControllerBase","#currentUserUnique","#fingerprint","host","localStorageKey","#requestLocalStorageKey","localStorageItem","entries","total","unique","x","#requestCurrentUserUnique","filter","filteredEntries","#filterEntries","skip","take","entry","valueTypes","type","currentUserUnique","fingerPrint","#fingerPrint","context","UMB_CURRENT_USER_CONTEXT","text","data","hashBuffer","b"],"mappings":";;AAKA,MAAMA,IAAyC;AASxC,MAAMC,UAAwCC,EAAkB;AAAA,EACtEC;AAAA,EACAC;AAAA,EAEA,YAAYC,GAAyB;AAIpC,QAHA,MAAMA,CAAI,GAGN,CAAC,OAAO,mBAAmB,OAAO;AAC/B,YAAA,IAAI,MAAM,sEAAsE;AAAA,EACvF;AAAA;AAAA,EAID,MAAM,aAGH;AACI,UAAAC,IAAkB,MAAM,KAAKC,GAAwB,GACrDC,IAAmB,aAAa,QAAQF,CAAe,GACvDG,IAAUD,IAAmB,KAAK,MAAMA,CAAgB,IAAI,CAAC,GAC7DE,IAAQD,EAAQ;AACf,WAAA,EAAE,SAAAA,GAAS,OAAAC,EAAM;AAAA,EAAA;AAAA;AAAA,EAIzB,MAAM,SAASC,GAAmE;AACjF,UAAM,EAAE,SAAAF,EAAA,IAAY,MAAM,KAAK,WAAW;AAC1C,WAAOA,EAAQ,KAAK,CAACG,MAAMA,EAAE,WAAWD,CAAM;AAAA,EAAA;AAAA;AAAA,EAI/C,MAAM,WAAWF,GAA8C;AAG9D,QAAI,CAFsB,MAAM,KAAKI,GAA0B;AAGxD,YAAA,IAAI,MAAM,mCAAmC;AAG9C,UAAAP,IAAkB,MAAM,KAAKC,GAAwB;AAE3D,iBAAa,QAAQD,GAAiB,KAAK,UAAUG,CAAO,CAAC;AAAA,EAAA;AAAA;AAAA,EAI9D,MAAM,OAAOK,GAA6C;AACzD,UAAM,EAAE,SAAAL,EAAA,IAAY,MAAM,KAAK,WAAW,GACpCM,IAAkB,KAAKC,GAAeP,GAASK,CAAM,GACrDJ,IAAQK,EAAgB,QACxBE,IAAOH,EAAO,QAAQ,GACtBI,IAAOJ,EAAO,QAAQJ;AAErB,WAAA,EAAE,SADYK,EAAgB,MAAME,GAAMA,IAAOC,CAAI,GAC5B,OAAAR,EAAM;AAAA,EAAA;AAAA,EAGvCM,GAAeP,GAA8CK,GAA6C;AAClG,WAAAL,EAAQ,OAAO,CAACU,MAAU;AAC5B,UAAAL,EAAO,OAAO,QAAQ;AACzB,cAAMM,IAAaD,EAAM,OAAO,IAAI,CAACP,MAAMA,EAAE,IAAI;AAC1C,eAAAE,EAAO,MAAM,KAAK,CAACO,MAASD,EAAW,SAASC,CAAI,CAAC;AAAA,MAAA;AAEtD,aAAA;AAAA,IAAA,CACP;AAAA,EAAA;AAAA,EAGF,MAAMd,KAA0B;AAC/B,QAAI,KAAKH;AACR,aAAO,KAAKA;AAGP,UAAAkB,IAAoB,MAAM,KAAKT,GAA0B,GACzDU,IAAc,MAAM,KAAKC,GAAa,GAAGxB,CAAsC,IAAIsB,CAAiB,EAAE;AAC5G,gBAAKlB,KAAemB,GACb,KAAKnB;AAAA,EAAA;AAAA,EAGb,MAAMS,KAA4B;AACjC,QAAI,KAAKV;AACR,aAAO,KAAKA;AAGb,UAAMsB,IAAU,MAAM,KAAK,WAAWC,CAAwB;AAC9D,QAAI,CAACD;AACE,YAAA,IAAI,MAAM,oCAAoC;AAEhD,gBAAAtB,KAAqBsB,EAAQ,UAAU,GACrC,KAAKtB;AAAA,EAAA;AAAA,EAGb,MAAMqB,GAAaG,GAAc;AAE1B,UAAAC,IADU,IAAI,YAAY,EACX,OAAOD,CAAI,GAC1BE,IAAa,MAAM,OAAO,OAAO,OAAO,OAAO,WAAWD,CAAI;AAG7D,WAFW,MAAM,KAAK,IAAI,WAAWC,CAAU,CAAC,EAC7B,IAAI,CAACC,MAAMA,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AAAA,EACtE;AAET;"}