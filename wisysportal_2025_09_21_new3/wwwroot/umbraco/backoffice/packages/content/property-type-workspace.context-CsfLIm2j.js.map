{"version":3,"file":"property-type-workspace.context-CsfLIm2j.js","sources":["../../../src/packages/content/property-type/workspace/property-type-workspace-editor.element.ts","../../../src/packages/content/property-type/workspace/property-type-workspace.context.ts"],"sourcesContent":["import { UMB_PROPERTY_TYPE_WORKSPACE_CONTEXT } from './property-type-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { customElement, css, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n@customElement('umb-property-type-workspace-editor')\r\nexport class UmbPropertyTypeWorkspaceEditorElement extends UmbLitElement {\r\n\t#workspaceContext?: typeof UMB_PROPERTY_TYPE_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\t_isNew?: boolean;\r\n\r\n\t@state()\r\n\t_name?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_TYPE_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis.#workspaceContext = context;\r\n\t\t\tthis.observe(context?.isNew, (isNew) => {\r\n\t\t\t\tthis._isNew = isNew;\r\n\t\t\t});\r\n\t\t\tthis.observe(context?.name, (name) => {\r\n\t\t\t\tthis._name = name;\r\n\t\t\t});\r\n\t\t\tthis.#workspaceContext?.createPropertyDatasetContext(this);\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._isNew !== undefined\r\n\t\t\t? html`\r\n\t\t\t\t\t<umb-workspace-editor\r\n\t\t\t\t\t\theadline=${this.localize.term(\r\n\t\t\t\t\t\t\tthis._isNew ? 'contentTypeEditor_addProperty' : 'contentTypeEditor_editProperty',\r\n\t\t\t\t\t\t\t[this._name],\r\n\t\t\t\t\t\t)}>\r\n\t\t\t\t\t</umb-workspace-editor>\r\n\t\t\t\t`\r\n\t\t\t: '';\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbPropertyTypeWorkspaceEditorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-type-workspace-editor': UmbPropertyTypeWorkspaceEditorElement;\r\n\t}\r\n}\r\n","import { UmbDataPathPropertyTypeQuery } from '../utils/index.js';\r\nimport { UmbPropertyTypeWorkspaceEditorElement } from './property-type-workspace-editor.element.js';\r\nimport type { UmbPropertyTypeWorkspaceData } from './property-type-workspace.modal-token.js';\r\nimport type { UmbPropertyDatasetContext, UmbPropertyValueData } from '@umbraco-cms/backoffice/property';\r\nimport type {\r\n\tUmbInvariantDatasetWorkspaceContext,\r\n\tUmbRoutableWorkspaceContext,\r\n\tManifestWorkspace,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport {\r\n\tUmbSubmittableWorkspaceContextBase,\r\n\tUmbInvariantWorkspacePropertyDatasetContext,\r\n\tUmbWorkspaceIsNewRedirectController,\r\n\tUmbWorkspaceIsNewRedirectControllerAlias,\r\n\tumbObjectToPropertyValueArray,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbObjectState } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbPropertyTypeScaffoldModel, UmbPropertyTypeModel } from '@umbraco-cms/backoffice/content-type';\r\nimport { UMB_CONTENT_TYPE_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/content-type';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\nimport { firstValueFrom } from '@umbraco-cms/backoffice/external/rxjs';\r\nimport { UmbValidationContext } from '@umbraco-cms/backoffice/validation';\r\n\r\ntype PropertyTypeDataModel = UmbPropertyTypeScaffoldModel;\r\n\r\nexport class UmbPropertyTypeWorkspaceContext\r\n\textends UmbSubmittableWorkspaceContextBase<PropertyTypeDataModel>\r\n\timplements UmbInvariantDatasetWorkspaceContext, UmbRoutableWorkspaceContext\r\n{\r\n\t// Just for context token safety:\r\n\tpublic readonly IS_PROPERTY_TYPE_WORKSPACE_CONTEXT = true;\r\n\r\n\t#init: Promise<unknown>;\r\n\t#contentTypeContext?: typeof UMB_CONTENT_TYPE_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t#entityType: string;\r\n\r\n\tvalidationContext: UmbValidationContext;\r\n\r\n\t// #persistedData\r\n\t// #currentData\r\n\t#data = new UmbObjectState<PropertyTypeDataModel | undefined>(undefined);\r\n\treadonly data = this.#data.asObservable();\r\n\r\n\treadonly name = this.#data.asObservablePart((data) => data?.name);\r\n\treadonly unique = this.#data.asObservablePart((data) => data?.id);\r\n\r\n\treadonly values = this.#data.asObservablePart((data) => {\r\n\t\treturn umbObjectToPropertyValueArray(data);\r\n\t});\r\n\tasync getValues(): Promise<Array<UmbPropertyValueData> | undefined> {\r\n\t\treturn umbObjectToPropertyValueArray(await firstValueFrom(this.data));\r\n\t}\r\n\r\n\tconstructor(host: UmbControllerHost, args: { manifest: ManifestWorkspace }) {\r\n\t\tsuper(host, args.manifest.alias);\r\n\r\n\t\tconst manifest = args.manifest;\r\n\t\tthis.#entityType = manifest.meta?.entityType;\r\n\r\n\t\tthis.validationContext = new UmbValidationContext(this);\r\n\t\tthis.addValidationContext(this.validationContext);\r\n\r\n\t\tthis.observe(this.unique, (unique) => {\r\n\t\t\tif (unique) {\r\n\t\t\t\tthis.validationContext.setDataPath(UmbDataPathPropertyTypeQuery({ id: unique }));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.#init = this.consumeContext(UMB_CONTENT_TYPE_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis.#contentTypeContext = context;\r\n\t\t})\r\n\t\t\t.skipHost()\r\n\t\t\t.asPromise({ preventTimeout: true })\r\n\t\t\t.catch(() => {\r\n\t\t\t\t// If the context is not available, we can assume that the context is not available.\r\n\t\t\t\tthis.#contentTypeContext = undefined;\r\n\t\t\t});\r\n\r\n\t\tthis.routes.setRoutes([\r\n\t\t\t{\r\n\t\t\t\t// Would it make more sense to have groupKey before elementTypeKey?\r\n\t\t\t\tpath: 'create/:containerUnique',\r\n\t\t\t\tcomponent: UmbPropertyTypeWorkspaceEditorElement,\r\n\t\t\t\tsetup: async (component, info) => {\r\n\t\t\t\t\tconst containerUnique =\r\n\t\t\t\t\t\tinfo.match.params.containerUnique === 'null' ? null : info.match.params.containerUnique;\r\n\t\t\t\t\tawait this.create(containerUnique);\r\n\r\n\t\t\t\t\tnew UmbWorkspaceIsNewRedirectController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis.getHostElement().shadowRoot!.querySelector('umb-router-slot')!,\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'edit/:unique',\r\n\t\t\t\tcomponent: UmbPropertyTypeWorkspaceEditorElement,\r\n\t\t\t\tsetup: (component, info) => {\r\n\t\t\t\t\tconst unique = info.match.params.unique;\r\n\t\t\t\t\tthis.load(unique);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\t}\r\n\r\n\tprotected override resetState() {\r\n\t\tsuper.resetState();\r\n\t\tthis.#data.setValue(undefined);\r\n\t\tthis.removeUmbControllerByAlias(UmbWorkspaceIsNewRedirectControllerAlias);\r\n\t\tthis.removeUmbControllerByAlias('observePropertyTypeData');\r\n\t}\r\n\r\n\tcreatePropertyDatasetContext(host: UmbControllerHost): UmbPropertyDatasetContext {\r\n\t\treturn new UmbInvariantWorkspacePropertyDatasetContext(host, this);\r\n\t}\r\n\r\n\tasync load(unique: string) {\r\n\t\tthis.resetState();\r\n\t\tawait this.#init;\r\n\t\tthis.observe(\r\n\t\t\tawait this.#contentTypeContext?.structure.propertyStructureById(unique),\r\n\t\t\t(property) => {\r\n\t\t\t\tif (property) {\r\n\t\t\t\t\tthis.#data.setValue(property as PropertyTypeDataModel);\r\n\t\t\t\t\t//this.#persistedData.setValue(property);\r\n\t\t\t\t\t//this.#currentData.setValue(property);\r\n\r\n\t\t\t\t\tthis.setIsNew(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Fallback to undefined:\r\n\t\t\t\t\tthis.#data.setValue(undefined);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'observePropertyTypeData',\r\n\t\t);\r\n\t}\r\n\r\n\tasync create(containerId?: string | null) {\r\n\t\tthis.resetState();\r\n\r\n\t\tconst unique = UmbId.new();\r\n\t\tlet data: PropertyTypeDataModel = {\r\n\t\t\tid: unique,\r\n\t\t\tunique: unique,\r\n\t\t\tcontainer: containerId ? { id: containerId } : null,\r\n\t\t\talias: '',\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\tvariesByCulture: false,\r\n\t\t\tvariesBySegment: false,\r\n\t\t\tvalidation: {\r\n\t\t\t\tmandatory: false,\r\n\t\t\t\tmandatoryMessage: null,\r\n\t\t\t\tregEx: null,\r\n\t\t\t\tregExMessage: null,\r\n\t\t\t},\r\n\t\t\tappearance: {\r\n\t\t\t\tlabelOnTop: false,\r\n\t\t\t},\r\n\t\t\tsortOrder: 0,\r\n\t\t};\r\n\r\n\t\t// If we have a modal context, we blend in the modal preset data: [NL]\r\n\t\tif (this.modalContext) {\r\n\t\t\tdata = { ...data, ...this.modalContext.data.preset };\r\n\t\t}\r\n\r\n\t\tthis.#data.setValue(data);\r\n\t\t//this.#persistedData.setValue(property);\r\n\t\t//this.#currentData.setValue(property);\r\n\t\tthis.setIsNew(true);\r\n\t}\r\n\r\n\tgetData() {\r\n\t\treturn this.#data.getValue();\r\n\t}\r\n\tupdateData(partialData: Partial<PropertyTypeDataModel>) {\r\n\t\tthis.#data?.update(partialData);\r\n\t}\r\n\r\n\tgetUnique() {\r\n\t\treturn this.getData()!.id;\r\n\t}\r\n\r\n\tgetEntityType() {\r\n\t\treturn this.#entityType;\r\n\t}\r\n\r\n\tgetName() {\r\n\t\treturn this.#data.getValue()?.name;\r\n\t}\r\n\tsetName(name: string | undefined) {\r\n\t\tthis.updateData({ name: name } as any);\r\n\t}\r\n\r\n\t/**\r\n\t * @function propertyValueByAlias\r\n\t * @param {string} propertyAlias\r\n\t * @returns {Promise<Observable<ReturnType | undefined> | undefined>}\r\n\t * @description Get an Observable for the value of this property.\r\n\t */\r\n\tasync propertyValueByAlias<ReturnType = unknown>(propertyAlias: keyof PropertyTypeDataModel) {\r\n\t\treturn this.#data.asObservablePart((data) => data?.[propertyAlias] as ReturnType);\r\n\t}\r\n\r\n\tgetPropertyValue<ReturnType = unknown>(propertyAlias: keyof PropertyTypeDataModel) {\r\n\t\treturn this.#data.getValue()?.[propertyAlias] as ReturnType;\r\n\t}\r\n\r\n\t/**\r\n\t * @function setPropertyValue\r\n\t * @param {string} propertyAlias\r\n\t * @param alias\r\n\t * @param {PromiseLike<unknown>} value - value can be a promise resolving into the actual value or the raw value it self.\r\n\t * @returns {Promise<void>}\r\n\t * @description Set the value of this property.\r\n\t */\r\n\tasync setPropertyValue(alias: string, value: unknown) {\r\n\t\tconst currentData = this.#data.value;\r\n\t\tif (currentData) {\r\n\t\t\tthis.#data.update({ ...currentData, [alias]: value });\r\n\t\t}\r\n\t}\r\n\r\n\tasync submit() {\r\n\t\tif (!this.modalContext) {\r\n\t\t\tthrow new Error('Needs to be in a modal to submit.');\r\n\t\t}\r\n\t\tconst contentTypeUnique = (this.modalContext.data as UmbPropertyTypeWorkspaceData).contentTypeUnique;\r\n\r\n\t\tconst data = this.#data.getValue();\r\n\t\tif (!data) {\r\n\t\t\tthrow new Error('No data to submit.');\r\n\t\t}\r\n\r\n\t\tawait this.#init;\r\n\t\tif (this.#contentTypeContext) {\r\n\t\t\tthis.validationContext.report();\r\n\t\t\tawait this.#contentTypeContext.structure.insertProperty(contentTypeUnique, data as UmbPropertyTypeModel);\r\n\r\n\t\t\tthis.setIsNew(false);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Failed to find content type context.');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override destroy(): void {\r\n\t\tthis.#data.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\nexport { UmbPropertyTypeWorkspaceContext as api };\r\n"],"names":["_workspaceContext","UmbPropertyTypeWorkspaceEditorElement","UmbLitElement","__privateAdd","UMB_PROPERTY_TYPE_WORKSPACE_CONTEXT","context","__privateSet","isNew","name","__privateGet","html","UmbTextStyles","css","__decorateClass","state","customElement","UmbPropertyTypeWorkspaceContext","UmbSubmittableWorkspaceContextBase","host","args","#data","UmbObjectState","data","umbObjectToPropertyValueArray","manifest","#entityType","UmbValidationContext","unique","UmbDataPathPropertyTypeQuery","#init","UMB_CONTENT_TYPE_WORKSPACE_CONTEXT","#contentTypeContext","component","info","containerUnique","UmbWorkspaceIsNewRedirectController","firstValueFrom","UmbWorkspaceIsNewRedirectControllerAlias","UmbInvariantWorkspacePropertyDatasetContext","property","containerId","UmbId","partialData","propertyAlias","alias","value","currentData","contentTypeUnique"],"mappings":"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"}