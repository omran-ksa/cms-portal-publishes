{"version":3,"file":"manifests.js","sources":["../../../src/packages/content/content/collection/workspace-has-content-collection/manifests.ts","../../../src/packages/content/content/collection/manifests.ts","../../../src/packages/content/content/conditions/has-properties/content-has-properties.condition.manifest.ts","../../../src/packages/content/content/conditions/manifests.ts","../../../src/packages/content/content/tree/sort-children-of-content/sort-children-of-content.action.kind.ts","../../../src/packages/content/content/tree/sort-children-of-content/modal/manifests.ts","../../../src/packages/content/content/tree/sort-children-of-content/manifests.ts","../../../src/packages/content/content/tree/manifests.ts","../../../src/packages/content/content/workspace/views/edit/manifests.ts","../../../src/packages/content/content/workspace/manifests.ts","../../../src/packages/content/content/manifests.ts","../../../src/packages/content/content-type/conditions/workspace-content-type-alias.condition.ts","../../../src/packages/content/content-type/conditions/manifests.ts","../../../src/packages/content/content-type/modals/composition-picker/manifest.ts","../../../src/packages/content/content-type/modals/manifests.ts","../../../src/packages/content/content-type/workspace/views/design/manifest.ts","../../../src/packages/content/content-type/workspace/manifests.ts","../../../src/packages/content/content-type/manifests.ts","../../../src/packages/content/property-type/manifests.ts","../../../src/packages/content/manifests.ts"],"sourcesContent":["import { UMB_WORKSPACE_HAS_CONTENT_COLLECTION_CONDITION_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'condition',\r\n\t\tname: 'Workspace Has Collection Condition',\r\n\t\talias: UMB_WORKSPACE_HAS_CONTENT_COLLECTION_CONDITION_ALIAS,\r\n\t\tapi: () => import('./workspace-has-content-collection.condition.js'),\r\n\t},\r\n];\r\n","import { manifests as workspaceHasContentCollectionManifests } from './workspace-has-content-collection/manifests.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\t{\r\n\t\ttype: 'kind',\r\n\t\talias: 'Umb.Kind.WorkspaceView.Content.Collection',\r\n\t\tmatchKind: 'contentCollection',\r\n\t\tmatchType: 'workspaceView',\r\n\t\tmanifest: {\r\n\t\t\ttype: 'workspaceView',\r\n\t\t\tkind: 'contentCollection',\r\n\t\t\telement: () => import('./content-collection-workspace-view.element.js'),\r\n\t\t\tweight: 300,\r\n\t\t\tmeta: {\r\n\t\t\t\tlabel: 'Collection',\r\n\t\t\t\tpathname: 'collection',\r\n\t\t\t\ticon: 'icon-grid',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t...workspaceHasContentCollectionManifests,\r\n];\r\n","import type { ManifestCondition } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nexport const manifest: ManifestCondition = {\r\n\ttype: 'condition',\r\n\tname: 'Content has properties Workspace Condition',\r\n\talias: 'Umb.Condition.Workspace.ContentHasProperties',\r\n\tapi: () => import('./content-has-properties.condition.js'),\r\n};\r\n","import { manifest as hasPropertiesManifest } from './has-properties/content-has-properties.condition.manifest.js';\r\n\r\nexport const manifests = [hasPropertiesManifest];\r\n","import type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UMB_ENTITY_ACTION_SORT_CHILDREN_OF_KIND_MANIFEST } from '@umbraco-cms/backoffice/tree';\r\n\r\nexport const manifest: UmbExtensionManifestKind = {\r\n\ttype: 'kind',\r\n\talias: 'Umb.Kind.EntityAction.SortChildrenOfContent',\r\n\tmatchKind: 'sortChildrenOfContent',\r\n\tmatchType: 'entityAction',\r\n\tmanifest: {\r\n\t\t...UMB_ENTITY_ACTION_SORT_CHILDREN_OF_KIND_MANIFEST.manifest,\r\n\t\ttype: 'entityAction',\r\n\t\tkind: 'sortChildrenOfContent',\r\n\t\tapi: () => import('./sort-children-of-content.action.js'),\r\n\t},\r\n};\r\n","import { UMB_SORT_CHILDREN_OF_CONTENT_MODAL_ALIAS } from './constants.js';\r\nimport type { ManifestModal } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport const manifests: Array<ManifestModal> = [\r\n\t{\r\n\t\ttype: 'modal',\r\n\t\talias: UMB_SORT_CHILDREN_OF_CONTENT_MODAL_ALIAS,\r\n\t\tname: 'Sort Children Of Content Modal',\r\n\t\telement: () => import('./sort-children-of-content-modal.element.js'),\r\n\t},\r\n];\r\n","import { manifest as sortChildrenOfContentKindManifest } from './sort-children-of-content.action.kind.js';\r\nimport { manifests as modalManifests } from './modal/manifests.js';\r\n\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\tsortChildrenOfContentKindManifest,\r\n\t...modalManifests,\r\n];\r\n","import { manifests as sortChildrenOfContentManifests } from './sort-children-of-content/manifests.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [...sortChildrenOfContentManifests];\r\n","import type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nconst contentEditorManifest: UmbExtensionManifestKind = {\r\n\ttype: 'kind',\r\n\talias: 'Umb.Kind.WorkspaceView.ContentEditor',\r\n\tmatchKind: 'contentEditor',\r\n\tmatchType: 'workspaceView',\r\n\tmanifest: {\r\n\t\ttype: 'workspaceView',\r\n\t\tkind: 'contentEditor',\r\n\t\telement: () => import('./content-editor.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Content',\r\n\t\t\tpathname: 'edit',\r\n\t\t\ticon: 'icon-document-line',\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport const manifests = [contentEditorManifest];\r\n","import { manifests as contentEditorManifests } from './views/edit/manifests.js';\r\n\r\nexport const manifests = [...contentEditorManifests];\r\n","import { manifests as collectionManifests } from './collection/manifests.js';\r\nimport { manifests as conditionManifests } from './conditions/manifests.js';\r\nimport { manifests as contentTreeManifests } from './tree/manifests.js';\r\nimport { manifests as workspaceManifests } from './workspace/manifests.js';\r\n\r\nexport const manifests = [\r\n\t...collectionManifests,\r\n\t...conditionManifests,\r\n\t...contentTreeManifests,\r\n\t...workspaceManifests,\r\n];\r\n","import { UMB_PROPERTY_STRUCTURE_WORKSPACE_CONTEXT } from '../contexts/index.js';\r\nimport type { UmbWorkspaceContentTypeAliasConditionConfig } from './types.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbConditionControllerArguments, UmbExtensionCondition } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbConditionBase } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nconst ObserveSymbol = Symbol();\r\n\r\n/**\r\n * Condition to apply workspace extension based on a content type alias\r\n */\r\nexport class UmbWorkspaceContentTypeAliasCondition\r\n\textends UmbConditionBase<UmbWorkspaceContentTypeAliasConditionConfig>\r\n\timplements UmbExtensionCondition\r\n{\r\n\tconstructor(\r\n\t\thost: UmbControllerHost,\r\n\t\targs: UmbConditionControllerArguments<UmbWorkspaceContentTypeAliasConditionConfig>,\r\n\t) {\r\n\t\tsuper(host, args);\r\n\r\n\t\tlet permissionCheck: ((contentTypeAliases: string[]) => boolean) | undefined = undefined;\r\n\t\tif (this.config.match) {\r\n\t\t\tpermissionCheck = (contentTypeAliases: string[]) => contentTypeAliases.includes(this.config.match!);\r\n\t\t} else if (this.config.oneOf) {\r\n\t\t\tpermissionCheck = (contentTypeAliases: string[]) =>\r\n\t\t\t\tcontentTypeAliases.some((item) => this.config.oneOf!.includes(item));\r\n\t\t}\r\n\r\n\t\tif (permissionCheck !== undefined) {\r\n\t\t\tthis.consumeContext(UMB_PROPERTY_STRUCTURE_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\t\tthis.observe(\r\n\t\t\t\t\tcontext?.structure.contentTypeAliases,\r\n\t\t\t\t\t(contentTypeAliases) => {\r\n\t\t\t\t\t\tthis.permitted = contentTypeAliases ? permissionCheck!(contentTypeAliases) : false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tObserveSymbol,\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Condition `Umb.Condition.WorkspaceContentTypeAlias` could not be initialized properly. Either \"match\" or \"oneOf\" must be defined',\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const manifest: UmbExtensionManifest = {\r\n\ttype: 'condition',\r\n\tname: 'Workspace Content Type Alias Condition',\r\n\talias: 'Umb.Condition.WorkspaceContentTypeAlias',\r\n\tapi: UmbWorkspaceContentTypeAliasCondition,\r\n};\r\n","import { manifest as workspaceContentTypeAliasCondition } from './workspace-content-type-alias.condition.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [workspaceContentTypeAliasCondition];\r\n","import type { ManifestModal } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport const manifest: ManifestModal = {\r\n\ttype: 'modal',\r\n\talias: 'Umb.Modal.CompositionPicker',\r\n\tname: 'ContentType Composition Picker Modal',\r\n\telement: () => import('./composition-picker-modal.element.js'),\r\n};\r\n","import { manifest } from './composition-picker/manifest.js';\r\n\r\nexport const manifests = [manifest];\r\n","import type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const contentTypeDesignEditorManifest: UmbExtensionManifestKind = {\r\n\ttype: 'kind',\r\n\talias: 'Umb.Kind.WorkspaceView.ContentTypeDesignEditor',\r\n\tmatchKind: 'contentTypeDesignEditor',\r\n\tmatchType: 'workspaceView',\r\n\tmanifest: {\r\n\t\ttype: 'workspaceView',\r\n\t\tkind: 'contentTypeDesignEditor',\r\n\t\telement: () => import('./content-type-design-editor.element.js'),\r\n\t\tweight: 1000,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_design',\r\n\t\t\tpathname: 'design',\r\n\t\t\ticon: 'icon-document-dashed-line',\r\n\t\t},\r\n\t},\r\n};\r\n","import { contentTypeDesignEditorManifest } from './views/design/manifest.js';\r\n\r\nexport const manifests = [contentTypeDesignEditorManifest];\r\n","import { manifests as conditionManifests } from './conditions/manifests.js';\r\nimport { manifests as modalManifests } from './modals/manifests.js';\r\nimport { manifests as workspaceManifests } from './workspace/manifests.js';\r\n\r\nexport const manifests = [...workspaceManifests, ...modalManifests, ...conditionManifests];\r\n","import { manifests as workspaceManifests } from './workspace/manifests.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [...workspaceManifests];\r\n","import { manifests as contentManifests } from './content/manifests.js';\r\nimport { manifests as contentTypeManifests } from './content-type/manifests.js';\r\nimport { manifests as propertyTypeManifests } from './property-type/manifests.js';\r\nimport type { UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const manifests: Array<UmbExtensionManifest | UmbExtensionManifestKind> = [\r\n\t...contentManifests,\r\n\t...contentTypeManifests,\r\n\t...propertyTypeManifests,\r\n];\r\n"],"names":["manifests","UMB_WORKSPACE_HAS_CONTENT_COLLECTION_CONDITION_ALIAS","workspaceHasContentCollectionManifests","manifest","hasPropertiesManifest","UMB_ENTITY_ACTION_SORT_CHILDREN_OF_KIND_MANIFEST","UMB_SORT_CHILDREN_OF_CONTENT_MODAL_ALIAS","sortChildrenOfContentKindManifest","modalManifests","sortChildrenOfContentManifests","contentEditorManifest","contentEditorManifests","collectionManifests","conditionManifests","contentTreeManifests","workspaceManifests","ObserveSymbol","UmbWorkspaceContentTypeAliasCondition","UmbConditionBase","host","args","permissionCheck","contentTypeAliases","item","UMB_PROPERTY_STRUCTURE_WORKSPACE_CONTEXT","context","workspaceContentTypeAliasCondition","contentTypeDesignEditorManifest","contentManifests","contentTypeManifests","propertyTypeManifests"],"mappings":"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"}