{"version":3,"file":"property-editor-ui-overlay-size.element-DjG8O7FG.js","sources":["../../../src/packages/property-editors/overlay-size/property-editor-ui-overlay-size.element.ts"],"sourcesContent":["import { html, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport type {\r\n\tUmbPropertyEditorUiElement,\r\n\tUmbPropertyEditorConfigCollection,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UUIModalSidebarSize, UUISelectEvent } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\n\r\n/**\r\n * @element umb-property-editor-ui-overlay-size\r\n */\r\n@customElement('umb-property-editor-ui-overlay-size')\r\nexport class UmbPropertyEditorUIOverlaySizeElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n\t@property()\r\n\tvalue: UUIModalSidebarSize | string = '';\r\n\r\n\t// TODO: Stop having global type of the UUI-SELECT element. And make it possible to have undefined as an option.\r\n\t@state()\r\n\tprivate _list: Array<Option> = [\r\n\t\t{ value: undefined as any, name: 'Default', selected: true },\r\n\t\t{ value: 'small', name: 'Small' },\r\n\t\t{ value: 'medium', name: 'Medium' },\r\n\t\t{ value: 'large', name: 'Large' },\r\n\t\t{ value: 'full', name: 'Full' },\r\n\t];\r\n\r\n\t@property({ attribute: false })\r\n\tpublic config?: UmbPropertyEditorConfigCollection;\r\n\r\n\toverride firstUpdated() {\r\n\t\tif (!this.value) return;\r\n\t\tthis._list = this._list.map((option) => ({\r\n\t\t\t...option,\r\n\t\t\tselected: option.value === this.value,\r\n\t\t}));\r\n\t}\r\n\r\n\t#onChange(event: UUISelectEvent) {\r\n\t\tthis.value = event.target.value as string;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-select\r\n\t\t\t\tlabel=${this.localize.term('rte_config_overlaySize')}\r\n\t\t\t\t.options=${this._list}\r\n\t\t\t\t@change=${this.#onChange}>\r\n\t\t\t</uui-select>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default UmbPropertyEditorUIOverlaySizeElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-overlay-size': UmbPropertyEditorUIOverlaySizeElement;\r\n\t}\r\n}\r\n"],"names":["_UmbPropertyEditorUIOverlaySizeElement_instances","onChange_fn","UmbPropertyEditorUIOverlaySizeElement","UmbLitElement","__privateAdd","option","html","__privateMethod","event","UmbChangeEvent","__decorateClass","property","state","customElement","UmbPropertyEditorUIOverlaySizeElement$1"],"mappings":";;;;;;;;;8OAAAA,GAAAC;AAaa,IAAAC,IAAN,cAAoDC,EAAoD;AAAA,EAAxG,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAJ,CAAA,GAEgC,KAAA,QAAA,IAItC,KAAQ,QAAuB;AAAA,MAC9B,EAAE,OAAO,QAAkB,MAAM,WAAW,UAAU,GAAK;AAAA,MAC3D,EAAE,OAAO,SAAS,MAAM,QAAQ;AAAA,MAChC,EAAE,OAAO,UAAU,MAAM,SAAS;AAAA,MAClC,EAAE,OAAO,SAAS,MAAM,QAAQ;AAAA,MAChC,EAAE,OAAO,QAAQ,MAAM,OAAO;AAAA,IAC/B;AAAA,EAAA;AAAA,EAKS,eAAe;AACnB,IAAC,KAAK,UACV,KAAK,QAAQ,KAAK,MAAM,IAAI,CAACK,OAAY;AAAA,MACxC,GAAGA;AAAA,MACH,UAAUA,EAAO,UAAU,KAAK;AAAA,IAAA,EAC/B;AAAA,EAAA;AAAA,EAQM,SAAS;AACV,WAAAC;AAAA;AAAA,YAEG,KAAK,SAAS,KAAK,wBAAwB,CAAC;AAAA,eACzC,KAAK,KAAK;AAAA,cACXC,QAAKP,GAASC,CAAA,CAAA;AAAA;AAAA;AAAA,EAAA;AAI5B;AAvCOD,IAAA,oBAAA,QAAA;AAyBNC,IAAS,SAACO,GAAuB;AAC3B,OAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAIC,GAAgB;AACxC;AA1BAC,EAAA;AAAA,EADCC,EAAS;AAAA,GADET,EAEZ,WAAA,SAAA,CAAA;AAIQQ,EAAA;AAAA,EADPE,EAAM;AAAA,GALKV,EAMJ,WAAA,SAAA,CAAA;AASDQ,EAAA;AAAA,EADNC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAdlBT,EAeL,WAAA,UAAA,CAAA;AAfKA,IAANQ,EAAA;AAAA,EADNG,EAAc,qCAAqC;AAAA,GACvCX,CAAA;AAyCb,MAAAY,IAAeZ;"}