{"version":3,"file":"property-editor-ui-radio-button-list.element-aZVWdGc2.js","sources":["../../../src/packages/property-editors/radio-button-list/property-editor-ui-radio-button-list.element.ts"],"sourcesContent":["import type { UmbInputRadioButtonListElement, UmbRadioButtonItem } from '@umbraco-cms/backoffice/components';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { html, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_VALIDATION_EMPTY_LOCALIZATION_KEY, UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\nimport type {\r\n\tUmbPropertyEditorConfigCollection,\r\n\tUmbPropertyEditorUiElement,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\n\r\n/**\r\n * @element umb-property-editor-ui-radio-button-list\r\n */\r\n@customElement('umb-property-editor-ui-radio-button-list')\r\nexport class UmbPropertyEditorUIRadioButtonListElement\r\n\textends UmbFormControlMixin<string | undefined, typeof UmbLitElement, undefined>(UmbLitElement)\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\t@state()\r\n\tprivate _list: Array<UmbRadioButtonItem> = [];\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t/**\r\n\t * Sets the input to mandatory, meaning validation will fail if the value is empty.\r\n\t * @type {boolean}\r\n\t */\r\n\t@property({ type: Boolean })\r\n\tmandatory?: boolean;\r\n\r\n\t@property({ type: String })\r\n\tmandatoryMessage = UMB_VALIDATION_EMPTY_LOCALIZATION_KEY;\r\n\r\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n\t\tif (!config) return;\r\n\r\n\t\tconst items = config.getValueByAlias('items');\r\n\r\n\t\tif (Array.isArray(items) && items.length > 0) {\r\n\t\t\tthis._list =\r\n\t\t\t\ttypeof items[0] === 'string'\r\n\t\t\t\t\t? items.map((item) => ({ label: item, value: item }))\r\n\t\t\t\t\t: items.map((item) => ({ label: item.name, value: item.value }));\r\n\r\n\t\t\t// If selection includes a value that is not in the list, add it to the list\r\n\t\t\tif (this.value && !this._list.find((item) => item.value === this.value)) {\r\n\t\t\t\tthis._list.push({ label: this.value, value: this.value, invalid: true });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected override firstUpdated() {\r\n\t\tthis.addFormControlElement(this.shadowRoot!.querySelector('umb-input-radio-button-list')!);\r\n\t}\r\n\r\n\t#onChange(event: CustomEvent & { target: UmbInputRadioButtonListElement }) {\r\n\t\tthis.value = event.target.value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-input-radio-button-list\r\n\t\t\t\t.list=${this._list}\r\n\t\t\t\t.required=${this.mandatory}\r\n\t\t\t\t.requiredMessage=${this.mandatoryMessage}\r\n\t\t\t\t.value=${this.value ?? ''}\r\n\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\t@change=${this.#onChange}>\r\n\t\t\t</umb-input-radio-button-list>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default UmbPropertyEditorUIRadioButtonListElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-radio-button-list': UmbPropertyEditorUIRadioButtonListElement;\r\n\t}\r\n}\r\n"],"names":["_UmbPropertyEditorUIRadioButtonListElement_instances","onChange_fn","UmbPropertyEditorUIRadioButtonListElement","UmbFormControlMixin","UmbLitElement","__privateAdd","UMB_VALIDATION_EMPTY_LOCALIZATION_KEY","config","items","item","html","__privateMethod","event","UmbChangeEvent","__decorateClass","state","property","customElement","UmbPropertyEditorUIRadioButtonListElement$1"],"mappings":";;;;;;;;;;8OAAAA,GAAAC;AAcO,IAAMC,IAAN,cACEC,EAAyEC,CAAa,EAE/F;AAAA,EAHO,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAL,CAAA,GAKN,KAAQ,QAAmC,CAAC,GASjC,KAAA,WAAA,IAUQ,KAAA,mBAAAM;AAAA,EAAA;AAAA,EAEnB,IAAW,OAAOC,GAAuD;AACxE,QAAI,CAACA,EAAQ;AAEP,UAAAC,IAAQD,EAAO,gBAAgB,OAAO;AAE5C,IAAI,MAAM,QAAQC,CAAK,KAAKA,EAAM,SAAS,MAC1C,KAAK,QACJ,OAAOA,EAAM,CAAC,KAAM,WACjBA,EAAM,IAAI,CAACC,OAAU,EAAE,OAAOA,GAAM,OAAOA,EAAK,EAAE,IAClDD,EAAM,IAAI,CAACC,OAAU,EAAE,OAAOA,EAAK,MAAM,OAAOA,EAAK,MAAQ,EAAA,GAG7D,KAAK,SAAS,CAAC,KAAK,MAAM,KAAK,CAACA,MAASA,EAAK,UAAU,KAAK,KAAK,KAChE,KAAA,MAAM,KAAK,EAAE,OAAO,KAAK,OAAO,OAAO,KAAK,OAAO,SAAS,GAAA,CAAM;AAAA,EAEzE;AAAA,EAGkB,eAAe;AACjC,SAAK,sBAAsB,KAAK,WAAY,cAAc,6BAA6B,CAAE;AAAA,EAAA;AAAA,EAQjF,SAAS;AACV,WAAAC;AAAA;AAAA,YAEG,KAAK,KAAK;AAAA,gBACN,KAAK,SAAS;AAAA,uBACP,KAAK,gBAAgB;AAAA,aAC/B,KAAK,SAAS,EAAE;AAAA,gBACb,KAAK,QAAQ;AAAA,cACfC,QAAKX,GAASC,CAAA,CAAA;AAAA;AAAA;AAAA,EAAA;AAI5B;AAjEOD,IAAA,oBAAA,QAAA;AAgDNC,IAAS,SAACW,GAAiE;AACrE,OAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAIC,GAAgB;AACxC;AA9CQC,EAAA;AAAA,EADPC,EAAM;AAAA,GAJKb,EAKJ,WAAA,SAAA,CAAA;AASRY,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAb9Bd,EAcZ,WAAA,YAAA,CAAA;AAOAY,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GApBfd,EAqBZ,WAAA,aAAA,CAAA;AAGAY,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAvBdd,EAwBZ,WAAA,oBAAA,CAAA;AAxBYA,IAANY,EAAA;AAAA,EADNG,EAAc,0CAA0C;AAAA,GAC5Cf,CAAA;AAmEb,MAAAgB,IAAehB;"}