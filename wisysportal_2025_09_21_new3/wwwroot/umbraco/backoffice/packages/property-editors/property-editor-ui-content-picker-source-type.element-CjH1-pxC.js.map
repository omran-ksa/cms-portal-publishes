{"version":3,"file":"property-editor-ui-content-picker-source-type.element-CjH1-pxC.js","sources":["../../../src/packages/property-editors/content-picker/config/source-type/property-editor-ui-content-picker-source-type.element.ts"],"sourcesContent":["import type { UmbContentPickerSource } from '../../types.js';\r\nimport type { UmbInputMemberTypeElement } from '@umbraco-cms/backoffice/member-type';\r\nimport type { UmbInputDocumentTypeElement } from '@umbraco-cms/backoffice/document-type';\r\nimport type { UmbInputMediaTypeElement } from '@umbraco-cms/backoffice/media-type';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/property-editor';\r\nimport { customElement, html, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\n\r\n/**\r\n * @element umb-property-editor-ui-content-picker-source-type\r\n */\r\n@customElement('umb-property-editor-ui-content-picker-source-type')\r\nexport class UmbPropertyEditorUIContentPickerSourceTypeElement\r\n\textends UmbLitElement\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\t#datasetContext?: typeof UMB_PROPERTY_DATASET_CONTEXT.TYPE;\r\n\r\n\t@property()\r\n\tpublic set value(value: string) {\r\n\t\tif (value) {\r\n\t\t\tthis.#selection = value.split(',');\r\n\t\t} else {\r\n\t\t\tthis.#selection = [];\r\n\t\t}\r\n\t}\r\n\tpublic get value(): string {\r\n\t\treturn this.#selection.join(',');\r\n\t}\r\n\r\n\t@state()\r\n\tprivate sourceType: string = 'content';\r\n\r\n\t#initialized: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, (datasetContext) => {\r\n\t\t\tthis.#datasetContext = datasetContext;\r\n\t\t\tthis._observeProperty();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _observeProperty() {\r\n\t\tif (!this.#datasetContext) return;\r\n\t\tthis.observe(\r\n\t\t\tawait this.#datasetContext.propertyValueByAlias('startNode'),\r\n\t\t\t(value) => {\r\n\t\t\t\tif (!value) return;\r\n\r\n\t\t\t\tconst startNode = value as UmbContentPickerSource;\r\n\t\t\t\tif (startNode?.type) {\r\n\t\t\t\t\t// If we had a sourceType before, we can see this as a change and not the initial value,\r\n\t\t\t\t\t// so let's reset the value, so we don't carry over content-types to the new source type.\r\n\t\t\t\t\tif (this.#initialized && this.sourceType !== startNode.type) {\r\n\t\t\t\t\t\tthis.#setValue([]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.sourceType = startNode.type;\r\n\r\n\t\t\t\t\tif (!this.#initialized) {\r\n\t\t\t\t\t\tthis.#initialized = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'observeValue',\r\n\t\t);\r\n\t}\r\n\r\n\t#onChange(event: CustomEvent) {\r\n\t\tswitch (this.sourceType) {\r\n\t\t\tcase 'content':\r\n\t\t\t\tthis.#setValue((<UmbInputDocumentTypeElement>event.target).selection);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'media':\r\n\t\t\t\tthis.#setValue((<UmbInputMediaTypeElement>event.target).selection);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'member':\r\n\t\t\t\tthis.#setValue((<UmbInputMemberTypeElement>event.target).selection);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t#selection: Array<string> = [];\r\n\r\n\t#setValue(value: string[]) {\r\n\t\tthis.value = value.join(',');\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this.#renderType();\r\n\t}\r\n\r\n\t#renderType() {\r\n\t\tswitch (this.sourceType) {\r\n\t\t\tcase 'content':\r\n\t\t\t\treturn this.#renderTypeContent();\r\n\t\t\tcase 'media':\r\n\t\t\t\treturn this.#renderTypeMedia();\r\n\t\t\tcase 'member':\r\n\t\t\t\treturn this.#renderTypeMember();\r\n\t\t\tdefault:\r\n\t\t\t\treturn html`<p>No source type found</p>`;\r\n\t\t}\r\n\t}\r\n\r\n\t#renderTypeContent() {\r\n\t\treturn html`<umb-input-document-type\r\n\t\t\t@change=${this.#onChange}\r\n\t\t\t.selection=${this.#selection}></umb-input-document-type>`;\r\n\t}\r\n\r\n\t#renderTypeMedia() {\r\n\t\treturn html`<umb-input-media-type @change=${this.#onChange} .selection=${this.#selection}></umb-input-media-type>`;\r\n\t}\r\n\r\n\t#renderTypeMember() {\r\n\t\treturn html`<umb-input-member-type\r\n\t\t\t@change=${this.#onChange}\r\n\t\t\t.selection=${this.#selection}></umb-input-member-type>`;\r\n\t}\r\n}\r\n\r\nexport default UmbPropertyEditorUIContentPickerSourceTypeElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-content-picker-source-type': UmbPropertyEditorUIContentPickerSourceTypeElement;\r\n\t}\r\n}\r\n"],"names":["_datasetContext","_initialized","_UmbPropertyEditorUIContentPickerSourceTypeElement_instances","onChange_fn","_selection","setValue_fn","renderType_fn","renderTypeContent_fn","renderTypeMedia_fn","renderTypeMember_fn","UmbPropertyEditorUIContentPickerSourceTypeElement","UmbLitElement","__privateAdd","UMB_PROPERTY_DATASET_CONTEXT","datasetContext","__privateSet","value","__privateGet","startNode","__privateMethod","event","UmbChangeEvent","html","__decorateClass","property","state","customElement","UmbPropertyEditorUIContentPickerSourceTypeElement$1"],"mappings":"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"}