{"version":3,"file":"property-editor-ui-dropdown.element-Du_OKxO1.js","sources":["../../../src/packages/property-editors/dropdown/property-editor-ui-dropdown.element.ts"],"sourcesContent":["import { css, customElement, html, map, nothing, property, state, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_VALIDATION_EMPTY_LOCALIZATION_KEY, UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\nimport { UUISelectElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport type {\r\n\tUmbPropertyEditorConfigCollection,\r\n\tUmbPropertyEditorUiElement,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\nimport type { UmbInputDropdownListElement } from '@umbraco-cms/backoffice/components';\r\n\r\n/**\r\n * @element umb-property-editor-ui-dropdown\r\n */\r\n@customElement('umb-property-editor-ui-dropdown')\r\nexport class UmbPropertyEditorUIDropdownElement\r\n\textends UmbFormControlMixin<Array<string> | string | undefined, typeof UmbLitElement, undefined>(\r\n\t\tUmbLitElement,\r\n\t\tundefined,\r\n\t)\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\t#selection: Array<string> = [];\r\n\r\n\t@state()\r\n\tprivate _multiple: boolean = false;\r\n\r\n\t@state()\r\n\tprivate _options: Array<Option & { invalid?: boolean }> = [];\r\n\r\n\t@property({ type: Array })\r\n\tpublic override set value(value: Array<string> | string | undefined) {\r\n\t\tthis.#selection = this.#ensureValueIsArray(value);\r\n\t}\r\n\tpublic override get value(): Array<string> | undefined {\r\n\t\treturn this.#selection;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t/**\r\n\t * Sets the input to mandatory, meaning validation will fail if the value is empty.\r\n\t * @type {boolean}\r\n\t */\r\n\t@property({ type: Boolean })\r\n\tmandatory?: boolean;\r\n\r\n\t@property({ type: String })\r\n\tmandatoryMessage = UMB_VALIDATION_EMPTY_LOCALIZATION_KEY;\r\n\r\n\t@property({ type: String })\r\n\tname?: string;\r\n\r\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n\t\tif (!config) return;\r\n\r\n\t\tconst items = config.getValueByAlias('items');\r\n\r\n\t\tif (Array.isArray(items) && items.length > 0) {\r\n\t\t\tthis._options =\r\n\t\t\t\ttypeof items[0] === 'string'\r\n\t\t\t\t\t? items.map((item) => ({ name: item, value: item, selected: this.#selection.includes(item) }))\r\n\t\t\t\t\t: items.map((item) => ({\r\n\t\t\t\t\t\t\tname: item.name,\r\n\t\t\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\t\t\tselected: this.#selection.includes(item.value),\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t// If selection includes a value that is not in the list, add it to the list\r\n\t\t\tthis.#selection.forEach((value) => {\r\n\t\t\t\tif (!this._options.find((item) => item.value === value)) {\r\n\t\t\t\t\tthis._options.push({\r\n\t\t\t\t\t\tname: `${value} (${this.localize.term('validation_legacyOption')})`,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\tselected: true,\r\n\t\t\t\t\t\tinvalid: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._multiple = config.getValueByAlias<boolean>('multiple') ?? false;\r\n\t}\r\n\r\n\tprotected override firstUpdated() {\r\n\t\tif (this._multiple) {\r\n\t\t\tthis.addFormControlElement(this.shadowRoot!.querySelector('select')!);\r\n\t\t} else {\r\n\t\t\tthis.addFormControlElement(this.shadowRoot!.querySelector('umb-input-dropdown-list')!);\r\n\t\t}\r\n\t}\r\n\r\n\t#ensureValueIsArray(value: Array<string> | string | null | undefined): Array<string> {\r\n\t\treturn Array.isArray(value) ? value : value ? [value] : [];\r\n\t}\r\n\r\n\t#onChange(event: CustomEvent & { target: UmbInputDropdownListElement }) {\r\n\t\tconst value = event.target.value as string;\r\n\t\tthis.#setValue(value ? [value] : []);\r\n\t}\r\n\r\n\t#onChangeMulitple(event: Event & { target: HTMLSelectElement }) {\r\n\t\tconst selected = event.target.selectedOptions;\r\n\t\tconst value = selected ? Array.from(selected).map((option) => option.value) : [];\r\n\t\tthis.#setValue(value);\r\n\t}\r\n\r\n\t#setValue(value: Array<string> | string | null | undefined) {\r\n\t\tif (!value) return;\r\n\t\tconst selection = this.#ensureValueIsArray(value);\r\n\t\tthis._options.forEach((item) => (item.selected = selection.includes(item.value)));\r\n\t\tthis.value = value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t${when(\r\n\t\t\t\tthis._multiple,\r\n\t\t\t\t() => this.#renderDropdownMultiple(),\r\n\t\t\t\t() => this.#renderDropdownSingle(),\r\n\t\t\t)}\r\n\t\t\t${this.#renderDropdownValidation()}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderDropdownMultiple() {\r\n\t\tif (this.readonly) {\r\n\t\t\treturn html`<div>${this.value?.join(', ')}</div>`;\r\n\t\t}\r\n\r\n\t\treturn html`\r\n\t\t\t<select id=\"native\" multiple ?required=${this.mandatory} @change=${this.#onChangeMulitple}>\r\n\t\t\t\t${map(\r\n\t\t\t\t\tthis._options,\r\n\t\t\t\t\t(item) => html`<option value=${item.value} ?selected=${item.selected}>${item.name}</option>`,\r\n\t\t\t\t)}\r\n\t\t\t</select>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderDropdownSingle() {\r\n\t\treturn html`\r\n\t\t\t<umb-input-dropdown-list\r\n\t\t\t\t.name=${this.name}\r\n\t\t\t\t.options=${this._options}\r\n\t\t\t\t.required=${this.mandatory}\r\n\t\t\t\t.requiredMessage=${this.mandatoryMessage}\r\n\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\t@change=${this.#onChange}>\r\n\t\t\t</umb-input-dropdown-list>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderDropdownValidation() {\r\n\t\tconst selectionHasInvalids = this.#selection.some((value) => {\r\n\t\t\tconst option = this._options.find((item) => item.value === value);\r\n\t\t\treturn option ? option.invalid : false;\r\n\t\t});\r\n\r\n\t\tif (selectionHasInvalids) {\r\n\t\t\treturn html`<div class=\"error\"><umb-localize key=\"validation_legacyOptionDescription\"></umb-localize></div>`;\r\n\t\t}\r\n\r\n\t\treturn nothing;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tUUISelectElement.styles,\r\n\t\tcss`\r\n\t\t\t#native {\r\n\t\t\t\theight: auto;\r\n\t\t\t}\r\n\r\n\t\t\t.error {\r\n\t\t\t\tcolor: var(--uui-color-invalid);\r\n\t\t\t\tfont-size: var(--uui-font-size-small);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbPropertyEditorUIDropdownElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-dropdown': UmbPropertyEditorUIDropdownElement;\r\n\t}\r\n}\r\n"],"names":["_selection","_UmbPropertyEditorUIDropdownElement_instances","ensureValueIsArray_fn","onChange_fn","onChangeMulitple_fn","setValue_fn","renderDropdownMultiple_fn","renderDropdownSingle_fn","renderDropdownValidation_fn","UmbPropertyEditorUIDropdownElement","UmbFormControlMixin","UmbLitElement","__privateAdd","UMB_VALIDATION_EMPTY_LOCALIZATION_KEY","value","__privateSet","__privateMethod","__privateGet","config","items","item","html","when","event","selected","option","selection","UmbChangeEvent","map","nothing","UUISelectElement","css","__decorateClass","state","property","customElement","UmbPropertyEditorUIDropdownElement$1"],"mappings":"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"}