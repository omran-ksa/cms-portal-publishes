{"version":3,"file":"donut-slice.element-a3-k1WNw.js","sources":["../../../src/packages/log-viewer/components/donut-chart/donut-chart.element.ts","../../../src/packages/log-viewer/components/donut-chart/donut-slice.element.ts"],"sourcesContent":["import type { UmbDonutSliceElement } from './donut-slice.element.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport {\r\n\tcss,\r\n\thtml,\r\n\tLitElement,\r\n\tsvg,\r\n\tcustomElement,\r\n\tproperty,\r\n\tquery,\r\n\tqueryAssignedElements,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { clamp } from '@umbraco-cms/backoffice/utils';\r\n\r\nexport interface Circle {\r\n\tcolor: string;\r\n\tname: string;\r\n\tpercent: number;\r\n\tkind: string;\r\n\tnumber: number;\r\n}\r\n\r\ninterface CircleWithCommands extends Circle {\r\n\toffset: number;\r\n\tcommands: string;\r\n}\r\n//TODO: maybe move to UI Library\r\n/**\r\n * This is a donut chart component that can be used to display data in a circular way.\r\n * @class UmbDonutChartElement\r\n * @augments {LitElement}\r\n */\r\n@customElement('umb-donut-chart')\r\nexport class UmbDonutChartElement extends LitElement {\r\n\tstatic percentToDegrees(percent: number): number {\r\n\t\treturn percent * 3.6;\r\n\t}\r\n\r\n\t/**\r\n\t * Circle radius in pixels\r\n\t * @memberof UmbDonutChartElement\r\n\t */\r\n\t@property({ type: Number })\r\n\tradius = 45;\r\n\r\n\t/**\r\n\t * The circle thickness in pixels\r\n\t * @memberof UmbDonutChartElement\r\n\t */\r\n\t@property({ type: Number, attribute: 'border-size' })\r\n\tborderSize = 20;\r\n\r\n\t/**\r\n\t * The size of SVG element in pixels\r\n\t * @memberof UmbDonutChartElement\r\n\t */\r\n\t@property({ type: Number, attribute: 'svg-size' })\r\n\tsvgSize = 100;\r\n\r\n\t/**\r\n\t * Description of the graph, added for accessibility purposes\r\n\t * @memberof UmbDonutChartElement\r\n\t */\r\n\t@property()\r\n\tdescription = '';\r\n\r\n\t/**\r\n\t * Hides the box that appears oh hover with the details of the slice\r\n\t * @memberof UmbDonutChartElement\r\n\t */\r\n\t@property({ type: Boolean })\r\n\thideDetailBox = false;\r\n\r\n\t@queryAssignedElements({ selector: 'umb-donut-slice' })\r\n\tprivate _slices!: UmbDonutSliceElement[];\r\n\r\n\t@query('#container')\r\n\tprivate _container!: HTMLDivElement;\r\n\r\n\t@query('#details-box')\r\n\tprivate _detailsBox!: HTMLDivElement;\r\n\r\n\t@state()\r\n\tprivate circles: CircleWithCommands[] = [];\r\n\r\n\t@state()\r\n\tprivate viewBox = 100;\r\n\r\n\t@state()\r\n\tprivate _posY = 0;\r\n\r\n\t@state()\r\n\tprivate _posX = 0;\r\n\r\n\t@state()\r\n\tprivate _detailName = '';\r\n\r\n\t@state()\r\n\tprivate _detailAmount = 0;\r\n\r\n\t@state()\r\n\tprivate _detailColor = 'black';\r\n\r\n\t@state()\r\n\tprivate _totalAmount = 0;\r\n\r\n\t@state()\r\n\tprivate _detailKind = '';\r\n\r\n\t#containerBounds: DOMRect | undefined;\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis.#containerBounds = this._container.getBoundingClientRect();\r\n\t}\r\n\r\n\tprotected override willUpdate(_changedProperties: Map<PropertyKey, unknown>): void {\r\n\t\tif (_changedProperties.has('radius') || _changedProperties.has('borderSize') || _changedProperties.has('svgSize')) {\r\n\t\t\tif (this.borderSize > this.radius) {\r\n\t\t\t\tthrow new Error('Border size cannot be bigger than radius');\r\n\t\t\t}\r\n\r\n\t\t\tthis.#printCircles();\r\n\t\t}\r\n\t}\r\n\r\n\t#calculatePercentage(partialValue: number) {\r\n\t\tif (this._totalAmount === 0) return 0;\r\n\t\tconst percent = Math.round((100 * partialValue) / this._totalAmount);\r\n\t\treturn clamp(percent, 0, 99);\r\n\t}\r\n\r\n\t#printCircles(event: Event | null = null) {\r\n\t\tthis._totalAmount = this._slices.reduce((acc, slice) => acc + slice.amount, 0);\r\n\t\tevent?.stopPropagation();\r\n\t\tthis.circles = this.#addCommands(\r\n\t\t\tthis._slices.map((slice) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpercent: this.#calculatePercentage(slice.amount),\r\n\t\t\t\t\tnumber: slice.amount,\r\n\t\t\t\t\tcolor: slice.color,\r\n\t\t\t\t\tname: slice.name,\r\n\t\t\t\t\tkind: slice.kind,\r\n\t\t\t\t};\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\t#addCommands(Circles: Circle[]): CircleWithCommands[] {\r\n\t\tlet previousPercent = 0;\r\n\t\treturn Circles.map((slice) => {\r\n\t\t\tconst sliceWithCommands: CircleWithCommands = {\r\n\t\t\t\t...slice,\r\n\t\t\t\tcommands: this.#getSliceCommands(slice, this.radius, this.svgSize, this.borderSize),\r\n\t\t\t\toffset: previousPercent * 3.6 * -1,\r\n\t\t\t};\r\n\t\t\tpreviousPercent += slice.percent;\r\n\t\t\treturn sliceWithCommands;\r\n\t\t});\r\n\t}\r\n\r\n\t#getSliceCommands(Circle: Circle, radius: number, svgSize: number, borderSize: number): string {\r\n\t\tconst degrees = UmbDonutChartElement.percentToDegrees(Circle.percent);\r\n\t\tconst longPathFlag = degrees > 180 ? 1 : 0;\r\n\t\tconst innerRadius = radius - borderSize;\r\n\r\n\t\tconst commands: string[] = [];\r\n\t\tcommands.push(`M ${svgSize / 2 + radius} ${svgSize / 2}`);\r\n\t\tcommands.push(`A ${radius} ${radius} 0 ${longPathFlag} 0 ${this.#getCoordFromDegrees(degrees, radius, svgSize)}`);\r\n\t\tcommands.push(`L ${this.#getCoordFromDegrees(degrees, innerRadius, svgSize)}`);\r\n\t\tcommands.push(`A ${innerRadius} ${innerRadius} 0 ${longPathFlag} 1 ${svgSize / 2 + innerRadius} ${svgSize / 2}`);\r\n\t\treturn commands.join(' ');\r\n\t}\r\n\r\n\t#getCoordFromDegrees(angle: number, radius: number, svgSize: number): string {\r\n\t\tconst x = Math.cos((angle * Math.PI) / 180);\r\n\t\tconst y = Math.sin((angle * Math.PI) / 180);\r\n\t\tconst coordX = x * radius + svgSize / 2;\r\n\t\tconst coordY = y * -radius + svgSize / 2;\r\n\t\treturn [coordX, coordY].join(' ');\r\n\t}\r\n\r\n\t#calculateDetailsBoxPosition = (event: MouseEvent) => {\r\n\t\tconst x = this.#containerBounds ? event.clientX - this.#containerBounds?.left : 0;\r\n\t\tconst y = this.#containerBounds ? event.clientY - this.#containerBounds?.top : 0;\r\n\t\tthis._posX = x - 10;\r\n\t\tthis._posY = y - 70;\r\n\t};\r\n\r\n\t#setDetailsBoxData(event: MouseEvent) {\r\n\t\tconst target = event.target as SVGPathElement;\r\n\t\tconst index = target.dataset.index as unknown as number;\r\n\t\tconst circle = this.circles[index];\r\n\t\tthis._detailName = circle.name;\r\n\t\tthis._detailAmount = circle.number;\r\n\t\tthis._detailColor = circle.color;\r\n\t\tthis._detailKind = circle.kind;\r\n\t}\r\n\r\n\t#showDetailsBox(event: MouseEvent) {\r\n\t\tif (this.hideDetailBox) return;\r\n\t\tthis.#setDetailsBoxData(event);\r\n\t\tthis._detailsBox.classList.add('show');\r\n\t}\r\n\r\n\t#hideDetailsBox() {\r\n\t\tif (this.hideDetailBox) return;\r\n\t\tthis._detailsBox.classList.remove('show');\r\n\t}\r\n\r\n\t#renderCircles() {\r\n\t\treturn svg`\r\n\t\t\t\t<filter id=\"erode\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\" filterUnits=\"objectBoundingBox\" primitiveUnits=\"userSpaceOnUse\" color-interpolation-filters=\"linearRGB\">\r\n\t\t\t\t\t<feMorphology operator=\"erode\" radius=\"0.5 0.5\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" in=\"SourceGraphic\" result=\"morphology\"/>\r\n\t\t\t\t</filter>\r\n\t\t\t\t<filter id=\"filter\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\" filterUnits=\"objectBoundingBox\" primitiveUnits=\"userSpaceOnUse\" color-interpolation-filters=\"linearRGB\">\r\n\t\t\t\t\t<feColorMatrix\r\n\t\t\t\t\t\ttype=\"matrix\"\r\n\t\t\t\t\t\tvalues=\"1.8 0 0 0 0\r\n\t\t\t\t\t\t0 1.8 0 0 0\r\n\t\t\t\t\t\t0 0 1.8 0 0\r\n\t\t\t\t\t\t0 0 0 500 -20\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" in=\"merge1\" result=\"colormatrix2\"/>\r\n\t\t\t\t\t<feMorphology operator=\"erode\" radius=\"0.5 0.5\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" in=\"colormatrix2\" result=\"morphology2\"/>\r\n\t\t\t\t\t<feFlood flood-color=\"#ffffff\" flood-opacity=\"0.3\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" result=\"flood3\"/>\r\n\t\t\t\t\t<feComposite in=\"flood3\" in2=\"SourceAlpha\" operator=\"in\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" result=\"composite3\"/>\r\n\t\t\t\t\t<feMorphology operator=\"erode\" radius=\"1 1\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" in=\"composite3\" result=\"morphology1\"/>\r\n\t\t\t\t\t<feMerge x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" result=\"merge1\">\r\n\t\t\t\t\t\t<feMergeNode in=\"morphology2\"/>\r\n\t\t\t\t\t\t<feMergeNode in=\"morphology1\"/>\r\n\t\t\t\t\t</feMerge>\r\n\t\t\t\t\t<feDropShadow stdDeviation=\"1 1\" in=\"merge1\" dx=\"0\" dy=\"0\" flood-color=\"#000\" flood-opacity=\"0.8\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" result=\"dropShadow1\"/>\r\n\t\t\t\t</filter>\r\n\t\t\t\t<desc>${this.description}</desc>\r\n\t\t\t\t\t${this.circles.map(\r\n\t\t\t\t\t\t(circle, i) => svg`\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\tclass=\"circle\"\r\n\r\n\t\t\t\t\t\t\t\tdata-index=\"${i}\"\r\n\t\t\t\t\t\t\t\t\tfill=\"${circle.color}\"\r\n\t\t\t\t\t\t\t\t\trole=\"listitem\"\r\n\t\t\t\t\t\t\t\t\td=\"${circle.commands}\"\r\n\t\t\t\t\t\t\t\t\ttransform=\"rotate(${circle.offset} ${this.viewBox / 2} ${this.viewBox / 2})\">\r\n\t\t\t\t\t\t\t\t</path>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\tdata-index=\"${i}\"\r\n\t\t\t\t\t\t\t\t@mouseenter=${this.#showDetailsBox}\r\n\t\t\t\t\t\t\t\t@mouseleave=${this.#hideDetailsBox}\r\n\t\t\t\t\t\t\t\t\tclass=\"highlight\"\r\n\t\t\t\t\t\t\t\t\tfill=\"${circle.color}\"\r\n\t\t\t\t\t\t\t\t\trole=\"listitem\"\r\n\t\t\t\t\t\t\t\t\td=\"${circle.commands}\"\r\n\t\t\t\t\t\t\t\t\ttransform=\"rotate(${circle.offset} ${this.viewBox / 2} ${this.viewBox / 2})\">\r\n\t\t\t\t\t\t\t\t</path>`,\r\n\t\t\t\t\t)}\r\n\r\n        `;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html` <div id=\"container\" @mousemove=${this.#calculateDetailsBoxPosition}>\r\n\t\t\t\t<svg viewBox=\"0 0 ${this.viewBox} ${this.viewBox}\" role=\"list\">${this.#renderCircles()}</svg>\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"details-box\"\r\n\t\t\t\t\tstyle=\"--pos-y: ${this._posY}px; --pos-x: ${this._posX}px; --umb-donut-detail-color: ${this._detailColor}\">\r\n\t\t\t\t\t<div id=\"details-title\"><uui-icon name=\"icon-record\"></uui-icon>${this._detailName}</div>\r\n\t\t\t\t\t<span>${this._detailAmount} ${this._detailKind}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<slot @slotchange=${this.#printCircles} @slice-update=${this.#printCircles}></slot>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\tpath {\r\n\t\t\t\tpointer-events: visibleFill;\r\n\t\t\t}\r\n\t\t\t.circle {\r\n\t\t\t\tfilter: url(#erode);\r\n\t\t\t}\r\n\r\n\t\t\t.highlight {\r\n\t\t\t\ttransition: opacity 200ms linear;\r\n\t\t\t\tfilter: url(#filter);\r\n\t\t\t\topacity: 0;\r\n\t\t\t}\r\n\r\n\t\t\t.highlight:hover {\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t}\r\n\r\n\t\t\t#container {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\twidth: 200px;\r\n\t\t\t}\r\n\r\n\t\t\t#details-box {\r\n\t\t\t\tbackground: #ffffffe6;\r\n\t\t\t\tborder: 1px solid var(--uui-color-border-standalone);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\topacity: 0;\r\n\t\t\t\tpadding: 0.5em;\r\n\t\t\t\tline-height: 1.5;\r\n\t\t\t\tfont-size: var(--uui-type-small-size);\r\n\t\t\t\tbox-shadow: var(--uui-shadow-depth-1);\r\n\t\t\t\ttransform: translate3d(var(--pos-x), var(--pos-y), 0);\r\n\t\t\t\ttransition: transform 0.2s cubic-bezier(0.02, 1.23, 0.79, 1.08);\r\n\t\t\t\ttransition: opacity 150ms linear;\r\n\t\t\t}\r\n\r\n\t\t\t#details-box.show {\r\n\t\t\t\topacity: 1;\r\n\t\t\t}\r\n\r\n\t\t\t#details-box uui-icon {\r\n\t\t\t\t/* optically correct alignment */\r\n\t\t\t\tcolor: var(--umb-donut-detail-color);\r\n\t\t\t\tmargin-right: 0.2em;\r\n\t\t\t}\r\n\r\n\t\t\t#details-title {\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-donut-chart': UmbDonutChartElement;\r\n\t}\r\n}\r\n","import { LitElement, customElement, property } from '@umbraco-cms/backoffice/external/lit';\r\n/**\r\n * This component is used to display a single slice of a donut chart. It only makes sense insice the donut chart\r\n * @class UmbDonutSliceElement\r\n * @fires slice-update - This event is fired when the slice is updated\r\n * @augments {LitElement}\r\n */\r\n@customElement('umb-donut-slice')\r\nexport class UmbDonutSliceElement extends LitElement {\r\n\t/**\r\n\t * Number of items that this slice represents\r\n\t * @memberof UmbDonutSliceElement\r\n\t */\r\n\t@property({ type: Number })\r\n\tamount = 0;\r\n\t/**\r\n\t * Color of the slice. Any valid css color is accepted, custom properties are also supported\r\n\t * @memberof UmbDonutSliceElement\r\n\t */\r\n\t@property()\r\n\tcolor = 'red';\r\n\t/**\r\n\t * Name of the slice. This is used to display the name of the slice in the donut chart\r\n\t * @memberof UmbDonutSliceElement\r\n\t */\r\n\t@property()\r\n\tname = '';\r\n\t/**\r\n\t * Kind of the slice. This is shown on a details box when hovering over the slice\r\n\t * @memberof UmbDonutSliceElement\r\n\t */\r\n\t@property()\r\n\tkind = '';\r\n\r\n\toverride willUpdate() {\r\n\t\tthis.dispatchEvent(new CustomEvent('slice-update', { composed: true, bubbles: true }));\r\n\t}\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-donut-slice': UmbDonutSliceElement;\r\n\t}\r\n}\r\n"],"names":["_containerBounds","_UmbDonutChartElement_instances","calculatePercentage_fn","printCircles_fn","addCommands_fn","getSliceCommands_fn","getCoordFromDegrees_fn","_calculateDetailsBoxPosition","setDetailsBoxData_fn","showDetailsBox_fn","hideDetailsBox_fn","renderCircles_fn","UmbDonutChartElement","LitElement","__privateAdd","event","x","__privateGet","y","percent","__privateSet","_changedProperties","__privateMethod","html","partialValue","clamp","acc","slice","Circles","previousPercent","sliceWithCommands","Circle","radius","svgSize","borderSize","degrees","longPathFlag","innerRadius","commands","angle","coordX","coordY","index","circle","svg","i","UmbTextStyles","css","__decorateClass","property","queryAssignedElements","query","state","customElement","UmbDonutSliceElement"],"mappings":"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"}