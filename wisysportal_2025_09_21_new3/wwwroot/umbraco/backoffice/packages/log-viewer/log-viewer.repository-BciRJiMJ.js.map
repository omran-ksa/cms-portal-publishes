{"version":3,"file":"log-viewer.repository-BciRJiMJ.js","sources":["../../../src/packages/log-viewer/repository/sources/log-viewer.server.data.ts","../../../src/packages/log-viewer/repository/log-viewer.repository.ts"],"sourcesContent":["import type { LogMessagesDataSource, LogSearchDataSource } from './index.js';\r\nimport type {\r\n\tDirectionModel,\r\n\tLogLevelModel,\r\n\tSavedLogSearchResponseModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { LogViewerService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the log saved searches\r\n * @class UmbLogSearchesServerDataSource\r\n * @implements {TemplateDetailDataSource}\r\n */\r\nexport class UmbLogSearchesServerDataSource implements LogSearchDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbLogSearchesServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbLogSearchesServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs all the log viewer saved searches from the server\r\n\t * @param {{ skip?: number; take?: number }} { skip = 0, take = 100 }\r\n\t * @returns {*}\r\n\t * @memberof UmbLogSearchesServerDataSource\r\n\t */\r\n\tasync getAllSavedSearches({ skip = 0, take = 100 }: { skip?: number; take?: number }) {\r\n\t\treturn await tryExecute(this.#host, LogViewerService.getLogViewerSavedSearch({ query: { skip, take } }));\r\n\t}\r\n\t/**\r\n\t * Get a log viewer saved search by name from the server\r\n\t * @param {{ name: string }} { name }\r\n\t * @returns {*}\r\n\t * @memberof UmbLogSearchesServerDataSource\r\n\t */\r\n\tasync getSavedSearchByName({ name }: { name: string }) {\r\n\t\treturn await tryExecute(this.#host, LogViewerService.getLogViewerSavedSearchByName({ path: { name } }));\r\n\t}\r\n\r\n\t/**\r\n\t *\tPost a new log viewer saved search to the server\r\n\t * @param {{ body?: SavedLogSearch }} { body }\r\n\t * @returns {*}\r\n\t * @memberof UmbLogSearchesServerDataSource\r\n\t */\r\n\tasync postLogViewerSavedSearch({ name, query }: SavedLogSearchResponseModel) {\r\n\t\treturn await tryExecute(this.#host, LogViewerService.postLogViewerSavedSearch({ body: { name, query } }));\r\n\t}\r\n\t/**\r\n\t * Remove a log viewer saved search by name from the server\r\n\t * @param {{ name: string }} { name }\r\n\t * @returns {*}\r\n\t * @memberof UmbLogSearchesServerDataSource\r\n\t */\r\n\tasync deleteSavedSearchByName({ name }: { name: string }) {\r\n\t\treturn await tryExecute(this.#host, LogViewerService.deleteLogViewerSavedSearchByName({ path: { name } }));\r\n\t}\r\n}\r\n/**\r\n * A data source for the log messages and levels\r\n * @class UmbLogMessagesServerDataSource\r\n * @implements {LogMessagesDataSource}\r\n */\r\nexport class UmbLogMessagesServerDataSource implements LogMessagesDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbLogMessagesServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbLogMessagesServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs all the loggers from the server\r\n\t * @param {{ skip?: number; take?: number }} { skip = 0, take = 100 }\r\n\t * @returns {*}\r\n\t * @memberof UmbLogMessagesServerDataSource\r\n\t */\r\n\tasync getLogViewerLevel({ skip = 0, take = 100 }: { skip?: number; take?: number }) {\r\n\t\treturn await tryExecute(this.#host, LogViewerService.getLogViewerLevel({ query: { skip, take } }));\r\n\t}\r\n\r\n\t/**\r\n\t * Grabs all the number of different log messages from the server\r\n\t * @param {{ skip?: number; take?: number }} { skip = 0, take = 100 }\r\n\t * @returns {*}\r\n\t * @memberof UmbLogMessagesServerDataSource\r\n\t */\r\n\tasync getLogViewerLevelCount({ startDate, endDate }: { startDate?: string; endDate?: string }) {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tLogViewerService.getLogViewerLevelCount({\r\n\t\t\t\tquery: { startDate, endDate },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\t/**\r\n\t *\tGrabs all the log messages from the server\r\n\t * @param {{\r\n\t * \t\tskip?: number;\r\n\t * \t\ttake?: number;\r\n\t * \t\torderDirection?: DirectionModel;\r\n\t * \t\tfilterExpression?: string;\r\n\t * \t\tlogLevel?: Array<LogLevelModel>;\r\n\t * \t\tstartDate?: string;\r\n\t * \t\tendDate?: string;\r\n\t * \t}} {\r\n\t * \t\tskip = 0,\r\n\t * \t\ttake = 100,\r\n\t * \t\torderDirection,\r\n\t * \t\tfilterExpression,\r\n\t * \t\tlogLevel,\r\n\t * \t\tstartDate,\r\n\t * \t\tendDate,\r\n\t * \t}\r\n\t * @returns {*}\r\n\t * @memberof UmbLogMessagesServerDataSource\r\n\t */\r\n\tasync getLogViewerLogs({\r\n\t\tskip = 0,\r\n\t\ttake = 100,\r\n\t\torderDirection,\r\n\t\tfilterExpression,\r\n\t\tlogLevel,\r\n\t\tstartDate,\r\n\t\tendDate,\r\n\t}: {\r\n\t\tskip?: number;\r\n\t\ttake?: number;\r\n\t\torderDirection?: DirectionModel;\r\n\t\tfilterExpression?: string;\r\n\t\tlogLevel?: Array<LogLevelModel>;\r\n\t\tstartDate?: string;\r\n\t\tendDate?: string;\r\n\t}) {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tLogViewerService.getLogViewerLog({\r\n\t\t\t\tquery: {\r\n\t\t\t\t\tskip,\r\n\t\t\t\t\ttake,\r\n\t\t\t\t\torderDirection,\r\n\t\t\t\t\tfilterExpression,\r\n\t\t\t\t\tlogLevel: logLevel?.length ? logLevel : undefined,\r\n\t\t\t\t\tstartDate,\r\n\t\t\t\t\tendDate,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\t/**\r\n\t * Grabs all the log message templates from the server\r\n\t * @param {{\r\n\t * \t\tskip?: number;\r\n\t * \t\ttake?: number;\r\n\t * \t\tstartDate?: string;\r\n\t * \t\tendDate?: string;\r\n\t * \t}} {\r\n\t * \t\tskip,\r\n\t * \t\ttake = 100,\r\n\t * \t\tstartDate,\r\n\t * \t\tendDate,\r\n\t * \t}\r\n\t * @returns {*}\r\n\t * @memberof UmbLogMessagesServerDataSource\r\n\t */\r\n\tasync getLogViewerMessageTemplate({\r\n\t\tskip,\r\n\t\ttake = 100,\r\n\t\tstartDate,\r\n\t\tendDate,\r\n\t}: {\r\n\t\tskip?: number;\r\n\t\ttake?: number;\r\n\t\tstartDate?: string;\r\n\t\tendDate?: string;\r\n\t}) {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tLogViewerService.getLogViewerMessageTemplate({\r\n\t\t\t\tquery: { skip, take, startDate, endDate },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\tasync getLogViewerValidateLogsSize({ startDate, endDate }: { startDate?: string; endDate?: string }) {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tLogViewerService.getLogViewerValidateLogsSize({\r\n\t\t\t\tquery: { startDate, endDate },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbLogMessagesServerDataSource, UmbLogSearchesServerDataSource } from './sources/log-viewer.server.data.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type {\r\n\tDirectionModel,\r\n\tLogLevelModel,\r\n\tSavedLogSearchResponseModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\n\r\nexport class UmbLogViewerRepository {\r\n\t#host: UmbControllerHost;\r\n\t#searchDataSource: UmbLogSearchesServerDataSource;\r\n\t#messagesDataSource: UmbLogMessagesServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t\tthis.#searchDataSource = new UmbLogSearchesServerDataSource(this.#host);\r\n\t\tthis.#messagesDataSource = new UmbLogMessagesServerDataSource(this.#host);\r\n\t}\r\n\r\n\tasync getSavedSearches({ skip, take }: { skip: number; take: number }) {\r\n\t\treturn this.#searchDataSource.getAllSavedSearches({ skip, take });\r\n\t}\r\n\r\n\tasync saveSearch({ name, query }: SavedLogSearchResponseModel) {\r\n\t\treturn this.#searchDataSource.postLogViewerSavedSearch({ name, query });\r\n\t}\r\n\r\n\tasync removeSearch({ name }: { name: string }) {\r\n\t\treturn this.#searchDataSource.deleteSavedSearchByName({ name });\r\n\t}\r\n\r\n\tasync getMessageTemplates({\r\n\t\tskip,\r\n\t\ttake,\r\n\t\tstartDate,\r\n\t\tendDate,\r\n\t}: {\r\n\t\tskip: number;\r\n\t\ttake: number;\r\n\t\tstartDate?: string;\r\n\t\tendDate?: string;\r\n\t}) {\r\n\t\treturn this.#messagesDataSource.getLogViewerMessageTemplate({ skip, take, startDate, endDate });\r\n\t}\r\n\r\n\tasync getLogCount({ startDate, endDate }: { startDate?: string; endDate?: string }) {\r\n\t\treturn this.#messagesDataSource.getLogViewerLevelCount({ startDate, endDate });\r\n\t}\r\n\r\n\tasync getLogs({\r\n\t\tskip = 0,\r\n\t\ttake = 100,\r\n\t\torderDirection,\r\n\t\tfilterExpression,\r\n\t\tlogLevel,\r\n\t\tstartDate,\r\n\t\tendDate,\r\n\t}: {\r\n\t\tskip?: number;\r\n\t\ttake?: number;\r\n\t\torderDirection?: DirectionModel;\r\n\t\tfilterExpression?: string;\r\n\t\tlogLevel?: Array<LogLevelModel>;\r\n\t\tstartDate?: string;\r\n\t\tendDate?: string;\r\n\t}) {\r\n\t\treturn this.#messagesDataSource.getLogViewerLogs({\r\n\t\t\tskip,\r\n\t\t\ttake,\r\n\t\t\torderDirection,\r\n\t\t\tfilterExpression,\r\n\t\t\tlogLevel,\r\n\t\t\tstartDate,\r\n\t\t\tendDate,\r\n\t\t});\r\n\t}\r\n\r\n\tasync getLogLevels({ skip = 0, take = 100 }: { skip: number; take: number }) {\r\n\t\treturn this.#messagesDataSource.getLogViewerLevel({ skip, take });\r\n\t}\r\n\r\n\tasync getLogViewerValidateLogsSize({ startDate, endDate }: { startDate?: string; endDate?: string }) {\r\n\t\treturn this.#messagesDataSource.getLogViewerValidateLogsSize({ startDate, endDate });\r\n\t}\r\n}\r\n"],"names":["UmbLogSearchesServerDataSource","#host","host","skip","take","tryExecute","LogViewerService","name","query","UmbLogMessagesServerDataSource","startDate","endDate","orderDirection","filterExpression","logLevel","UmbLogViewerRepository","#searchDataSource","#messagesDataSource"],"mappings":"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"}