{"version":3,"file":"logviewer-workspace.context-BJe3efdM.js","sources":["../../../src/packages/log-viewer/workspace/logviewer-workspace.context.ts"],"sourcesContent":["import { UmbLogViewerRepository } from '../repository/log-viewer.repository.js';\r\nimport { UMB_APP_LOG_VIEWER_CONTEXT } from './logviewer-workspace.context-token.js';\r\nimport { UmbBasicState, UmbArrayState, UmbObjectState, UmbStringState } from '@umbraco-cms/backoffice/observable-api';\r\nimport type {\r\n\tLogLevelCountsReponseModel,\r\n\tPagedLoggerResponseModel,\r\n\tPagedLogMessageResponseModel,\r\n\tPagedLogTemplateResponseModel,\r\n\tPagedSavedLogSearchResponseModel,\r\n\tSavedLogSearchResponseModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { DirectionModel, LogLevelModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { query } from '@umbraco-cms/backoffice/router';\r\nimport type { UmbWorkspaceContext } from '@umbraco-cms/backoffice/workspace';\r\nimport { UMB_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport type PoolingInterval = 0 | 2000 | 5000 | 10000 | 20000 | 30000;\r\nexport interface PoolingCOnfig {\r\n\tenabled: boolean;\r\n\tinterval: PoolingInterval;\r\n}\r\nexport interface LogViewerDateRange {\r\n\tstartDate: string;\r\n\tendDate: string;\r\n}\r\n\r\n// TODO: Revisit usage of workspace for this case...\r\nexport class UmbLogViewerWorkspaceContext extends UmbContextBase implements UmbWorkspaceContext {\r\n\tpublic readonly workspaceAlias: string = 'Umb.Workspace.LogViewer';\r\n\t#repository: UmbLogViewerRepository;\r\n\r\n\tgetEntityType() {\r\n\t\treturn 'log-viewer';\r\n\t}\r\n\r\n\tgetEntityName() {\r\n\t\treturn 'Log Viewer';\r\n\t}\r\n\r\n\tget today() {\r\n\t\tconst today = new Date();\r\n\t\tconst dd = String(today.getDate()).padStart(2, '0');\r\n\t\tconst mm = String(today.getMonth() + 1).padStart(2, '0');\r\n\t\tconst yyyy = today.getFullYear();\r\n\r\n\t\treturn yyyy + '-' + mm + '-' + dd;\r\n\t}\r\n\r\n\tget yesterday() {\r\n\t\tconst yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n\t\tconst dd = String(yesterday.getDate()).padStart(2, '0');\r\n\t\tconst mm = String(yesterday.getMonth() + 1).padStart(2, '0');\r\n\t\tconst yyyy = yesterday.getFullYear();\r\n\r\n\t\treturn yyyy + '-' + mm + '-' + dd;\r\n\t}\r\n\r\n\tdefaultDateRange: LogViewerDateRange = {\r\n\t\tstartDate: this.yesterday,\r\n\t\tendDate: this.today,\r\n\t};\r\n\r\n\t#savedSearches = new UmbObjectState<PagedSavedLogSearchResponseModel | undefined>(undefined);\r\n\tsavedSearches = this.#savedSearches.asObservablePart((data) => data);\r\n\r\n\t#logCount = new UmbObjectState<LogLevelCountsReponseModel | null>(null);\r\n\tlogCount = this.#logCount.asObservable();\r\n\r\n\t#dateRange = new UmbObjectState<LogViewerDateRange>(this.defaultDateRange);\r\n\tdateRange = this.#dateRange.asObservable();\r\n\r\n\t#loggers = new UmbObjectState<PagedLoggerResponseModel | null>(null);\r\n\tloggers = this.#loggers.asObservablePart((data) => data?.items);\r\n\r\n\t#canShowLogs = new UmbBasicState<boolean | null>(null);\r\n\tcanShowLogs = this.#canShowLogs.asObservable();\r\n\r\n\t#isLoadingLogs = new UmbBasicState<boolean | null>(null);\r\n\tisLoadingLogs = this.#isLoadingLogs.asObservable();\r\n\r\n\t#filterExpression = new UmbStringState<string>('');\r\n\tfilterExpression = this.#filterExpression.asObservable();\r\n\r\n\t#messageTemplates = new UmbObjectState<PagedLogTemplateResponseModel | null>(null);\r\n\tmessageTemplates = this.#messageTemplates.asObservable();\r\n\r\n\t#logLevelsFilter = new UmbArrayState<LogLevelModel>([], (x) => x);\r\n\tlogLevelsFilter = this.#logLevelsFilter.asObservable();\r\n\r\n\t#logs = new UmbObjectState<PagedLogMessageResponseModel | null>(null);\r\n\tlogs = this.#logs.asObservablePart((data) => data?.items);\r\n\tlogsTotal = this.#logs.asObservablePart((data) => data?.total);\r\n\r\n\t#polling = new UmbObjectState<PoolingCOnfig>({ enabled: false, interval: 2000 });\r\n\tpolling = this.#polling.asObservable();\r\n\r\n\t#sortingDirection = new UmbBasicState<DirectionModel>(DirectionModel.DESCENDING);\r\n\tsortingDirection = this.#sortingDirection.asObservable();\r\n\r\n\t#intervalID: number | null = null;\r\n\r\n\tcurrentPage = 1;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_APP_LOG_VIEWER_CONTEXT);\r\n\t\t// TODO: Revisit usage of workspace for this case... currently no other workspace context provides them self with their own token, we need to update UMB_APP_LOG_VIEWER_CONTEXT to become a workspace context. [NL]\r\n\t\tthis.provideContext(UMB_WORKSPACE_CONTEXT, this);\r\n\t\tthis.#repository = new UmbLogViewerRepository(host);\r\n\t}\r\n\r\n\toverride hostConnected() {\r\n\t\tsuper.hostConnected();\r\n\t\twindow.addEventListener('changestate', this.onChangeState);\r\n\t\tthis.onChangeState();\r\n\t}\r\n\r\n\toverride hostDisconnected(): void {\r\n\t\tsuper.hostDisconnected();\r\n\t\twindow.removeEventListener('changestate', this.onChangeState);\r\n\t}\r\n\r\n\tonChangeState = () => {\r\n\t\tconst searchQuery = query();\r\n\t\tthis.setFilterExpression(searchQuery.lq ?? '');\r\n\r\n\t\tlet validLogLevels: LogLevelModel[] = [];\r\n\t\tif (searchQuery.loglevels) {\r\n\t\t\tconst loglevels = searchQuery.loglevels.split(',') as LogLevelModel[];\r\n\r\n\t\t\t// Filter out invalid log levels that do not exist in LogLevelModel\r\n\t\t\tvalidLogLevels = loglevels.filter((loglevel) => {\r\n\t\t\t\treturn Object.values(LogLevelModel).includes(loglevel);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.setLogLevelsFilter(validLogLevels);\r\n\r\n\t\tconst dateRange: LogViewerDateRange = this.getDateRange() as LogViewerDateRange;\r\n\r\n\t\tthis.setDateRange({\r\n\t\t\tstartDate: searchQuery.startDate || dateRange.startDate,\r\n\t\t\tendDate: searchQuery.endDate || dateRange.endDate,\r\n\t\t});\r\n\r\n\t\tthis.setCurrentPage(searchQuery.page ? Number(searchQuery.page) : 1);\r\n\r\n\t\tthis.getLogs();\r\n\t};\r\n\r\n\tsetDateRange(dateRange: Partial<LogViewerDateRange>) {\r\n\t\tlet { startDate, endDate } = dateRange;\r\n\r\n\t\tif (!startDate) startDate = this.defaultDateRange.startDate;\r\n\t\tif (!endDate) endDate = this.defaultDateRange.endDate;\r\n\r\n\t\tconst isAnyDateInTheFuture = new Date(startDate) > new Date() || new Date(endDate) > new Date();\r\n\t\tconst isStartDateBiggerThenEndDate = new Date(startDate) > new Date(endDate);\r\n\t\tif (isAnyDateInTheFuture || isStartDateBiggerThenEndDate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.#dateRange.setValue({ startDate, endDate });\r\n\t\tthis.validateLogSize();\r\n\t\tthis.getLogCount();\r\n\t\tthis.getMessageTemplates(0, 10);\r\n\t}\r\n\r\n\tgetDateRange() {\r\n\t\treturn this.#dateRange.getValue();\r\n\t}\r\n\r\n\tasync getSavedSearches({ skip = 0, take = 999 }: { skip?: number; take?: number } = {}) {\r\n\t\tconst { data } = await this.#repository.getSavedSearches({ skip, take });\r\n\t\tif (data) {\r\n\t\t\tthis.#savedSearches.setValue(data);\r\n\t\t} else {\r\n\t\t\t//fallback to some default searches resembling Umbraco <= 13\r\n\t\t\tthis.#savedSearches.setValue({\r\n\t\t\t\titems: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Find all logs where the Level is NOT Verbose and NOT Debug',\r\n\t\t\t\t\t\tquery: \"Not(@Level='Verbose') and Not(@Level='Debug')\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Find all logs that has an exception property (Warning, Error & Fatal with Exceptions)',\r\n\t\t\t\t\t\tquery: 'Has(@Exception)',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"Find all logs that have the property 'Duration'\",\r\n\t\t\t\t\t\tquery: 'Has(Duration)',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"Find all logs that have the property 'Duration' and the duration is greater than 1000ms\",\r\n\t\t\t\t\t\tquery: 'Has(Duration) and Duration > 1000',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: \"Find all logs that are from the namespace 'Umbraco.Core'\",\r\n\t\t\t\t\t\tquery: \"StartsWith(SourceContext, 'Umbraco.Core')\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Find all logs that use a specific log message template',\r\n\t\t\t\t\t\tquery: \"@MessageTemplate = '[Timing {TimingId}] {EndMessage} ({TimingDuration}ms)'\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\ttotal: 6,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tasync saveSearch({ name, query }: SavedLogSearchResponseModel) {\r\n\t\tconst previousSavedSearches = this.#savedSearches.getValue()?.items ?? [];\r\n\t\ttry {\r\n\t\t\tthis.#savedSearches.update({ items: [...previousSavedSearches, { name, query }] });\r\n\t\t\tawait this.#repository.saveSearch({ name, query });\r\n\t\t} catch {\r\n\t\t\tthis.#savedSearches.update({ items: previousSavedSearches });\r\n\t\t}\r\n\t}\r\n\r\n\tasync removeSearch({ name }: { name: string }) {\r\n\t\tconst previousSavedSearches = this.#savedSearches.getValue()?.items ?? [];\r\n\t\ttry {\r\n\t\t\tthis.#savedSearches.update({ items: previousSavedSearches.filter((search) => search.name !== name) });\r\n\t\t\tawait this.#repository.removeSearch({ name });\r\n\t\t} catch {\r\n\t\t\tthis.#savedSearches.update({ items: previousSavedSearches });\r\n\t\t}\r\n\t}\r\n\r\n\tasync getLogCount() {\r\n\t\tconst { data } = await this.#repository.getLogCount({ ...this.#dateRange.getValue() });\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#logCount.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getMessageTemplates(skip: number, take: number) {\r\n\t\tconst { data } = await this.#repository.getMessageTemplates({ skip, take, ...this.#dateRange.getValue() });\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#messageTemplates.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getLogLevels(skip: number, take: number) {\r\n\t\tconst { data } = await this.#repository.getLogLevels({ skip, take });\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#loggers.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync validateLogSize() {\r\n\t\tconst { error } = await this.#repository.getLogViewerValidateLogsSize({ ...this.#dateRange.getValue() });\r\n\t\tif (error) {\r\n\t\t\tthis.#canShowLogs.setValue(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#canShowLogs.setValue(true);\r\n\t}\r\n\r\n\tsetCurrentPage(page: number) {\r\n\t\tthis.currentPage = page;\r\n\t}\r\n\r\n\tgetLogs = async () => {\r\n\t\tif (this.#canShowLogs.getValue() === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst isPollingEnabled = this.#polling.getValue().enabled;\r\n\r\n\t\tif (!isPollingEnabled) this.#isLoadingLogs.setValue(true);\r\n\r\n\t\tconst skip = (this.currentPage - 1) * 100;\r\n\t\tconst take = 100;\r\n\r\n\t\tconst options = {\r\n\t\t\tskip,\r\n\t\t\ttake,\r\n\t\t\torderDirection: this.#sortingDirection.getValue(),\r\n\t\t\tfilterExpression: this.#filterExpression.getValue(),\r\n\t\t\tlogLevel: this.#logLevelsFilter.getValue(),\r\n\t\t\t...this.#dateRange.getValue(),\r\n\t\t};\r\n\r\n\t\tconst { data } = await this.#repository.getLogs(options);\r\n\t\tthis.#isLoadingLogs.setValue(false);\r\n\t\tif (data) {\r\n\t\t\tthis.#logs.setValue(data);\r\n\t\t}\r\n\t};\r\n\r\n\tsetFilterExpression(query: string) {\r\n\t\tthis.#filterExpression.setValue(query);\r\n\t}\r\n\r\n\tsetLogLevelsFilter(logLevels: LogLevelModel[]) {\r\n\t\tthis.#logLevelsFilter.setValue(logLevels);\r\n\t}\r\n\r\n\ttogglePolling() {\r\n\t\tconst isEnabled = !this.#polling.getValue().enabled;\r\n\t\tthis.#polling.update({\r\n\t\t\tenabled: isEnabled,\r\n\t\t});\r\n\r\n\t\tif (isEnabled) {\r\n\t\t\tthis.#intervalID = setInterval(() => {\r\n\t\t\t\tthis.currentPage = 1;\r\n\t\t\t\tthis.getLogs();\r\n\t\t\t}, this.#polling.getValue().interval) as unknown as number;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearInterval(this.#intervalID as number);\r\n\t}\r\n\r\n\tsetPollingInterval(interval: PoolingInterval) {\r\n\t\tthis.#polling.update({ interval });\r\n\t}\r\n\r\n\ttoggleSortOrder() {\r\n\t\tconst direction = this.#sortingDirection.getValue();\r\n\t\tconst newDirection = direction === DirectionModel.ASCENDING ? DirectionModel.DESCENDING : DirectionModel.ASCENDING;\r\n\t\tthis.#sortingDirection.setValue(newDirection);\r\n\t}\r\n}\r\n\r\nexport { UmbLogViewerWorkspaceContext as api };\r\n"],"names":["UmbLogViewerWorkspaceContext","UmbContextBase","host","UMB_APP_LOG_VIEWER_CONTEXT","#savedSearches","UmbObjectState","data","#logCount","#dateRange","#loggers","#canShowLogs","UmbBasicState","#isLoadingLogs","#filterExpression","UmbStringState","#messageTemplates","#logLevelsFilter","UmbArrayState","x","#logs","#polling","#sortingDirection","DirectionModel","#intervalID","searchQuery","query","validLogLevels","loglevel","LogLevelModel","dateRange","options","#repository","UMB_WORKSPACE_CONTEXT","UmbLogViewerRepository","today","dd","mm","yesterday","startDate","endDate","isAnyDateInTheFuture","isStartDateBiggerThenEndDate","skip","take","name","previousSavedSearches","search","error","page","logLevels","isEnabled","interval","newDirection"],"mappings":"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"}