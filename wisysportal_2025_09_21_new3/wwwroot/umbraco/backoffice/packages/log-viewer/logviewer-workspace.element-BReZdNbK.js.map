{"version":3,"file":"logviewer-workspace.element-BReZdNbK.js","sources":["../../../src/packages/log-viewer/components/log-viewer-date-range-selector.element.ts","../../../src/packages/log-viewer/components/log-viewer-too-many-logs-warning.element.ts","../../../src/packages/log-viewer/workspace/logviewer-workspace.element.ts"],"sourcesContent":["import type { LogViewerDateRange, UmbLogViewerWorkspaceContext } from '../workspace/logviewer-workspace.context.js';\r\nimport { UMB_APP_LOG_VIEWER_CONTEXT } from '../workspace/logviewer-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { query as getQuery, path, toQueryString } from '@umbraco-cms/backoffice/router';\r\nimport type { UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('umb-log-viewer-date-range-selector')\r\nexport class UmbLogViewerDateRangeSelectorElement extends UmbLitElement {\r\n\t@state()\r\n\tprivate _startDate = '';\r\n\r\n\t@state()\r\n\tprivate _endDate = '';\r\n\r\n\t@property({ type: Boolean, reflect: true })\r\n\thorizontal = false;\r\n\r\n\t#logViewerContext?: UmbLogViewerWorkspaceContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.consumeContext(UMB_APP_LOG_VIEWER_CONTEXT, (instance) => {\r\n\t\t\tthis.#logViewerContext = instance;\r\n\t\t\tthis.#observeStuff();\r\n\t\t});\r\n\t}\r\n\r\n\t#observeStuff() {\r\n\t\tif (!this.#logViewerContext) return;\r\n\t\tthis.observe(\r\n\t\t\tthis.#logViewerContext.dateRange,\r\n\t\t\t(dateRange: LogViewerDateRange) => {\r\n\t\t\t\tthis._startDate = dateRange.startDate;\r\n\t\t\t\tthis._endDate = dateRange.endDate;\r\n\t\t\t},\r\n\t\t\t'_observeDateRange',\r\n\t\t);\r\n\t}\r\n\r\n\t#setStartDate(e: UUIInputEvent) {\r\n\t\tthis._startDate = e.target.value as string;\r\n\t\tthis.#updateFiltered();\r\n\t}\r\n\r\n\t#setEndDate(e: UUIInputEvent) {\r\n\t\tthis._endDate = e.target.value as string;\r\n\t\tthis.#updateFiltered();\r\n\t}\r\n\r\n\t#updateFiltered() {\r\n\t\tthis.#logViewerContext?.setDateRange({ startDate: this._startDate, endDate: this._endDate });\r\n\r\n\t\tconst query = getQuery();\r\n\t\tconst qs = toQueryString({\r\n\t\t\t...query,\r\n\t\t\tstartDate: this._startDate,\r\n\t\t\tendDate: this._endDate,\r\n\t\t});\r\n\r\n\t\twindow.history.pushState({}, '', `${path()}?${qs}`);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<uui-label for=\"start-date\">From:</uui-label>\r\n\t\t\t\t<umb-input-date\r\n\t\t\t\t\t@change=${this.#setStartDate}\r\n\t\t\t\t\tid=\"start-date\"\r\n\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\tlabel=\"From\"\r\n\t\t\t\t\t.max=${this.#logViewerContext?.today ?? ''}\r\n\t\t\t\t\t.value=${this._startDate}></umb-input-date>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"input-container\">\r\n\t\t\t\t<uui-label for=\"end-date\">To: </uui-label>\r\n\t\t\t\t<umb-input-date\r\n\t\t\t\t\t@change=${this.#setEndDate}\r\n\t\t\t\t\tid=\"end-date\"\r\n\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\tlabel=\"To\"\r\n\t\t\t\t\t.min=${this._startDate}\r\n\t\t\t\t\t.max=${this.#logViewerContext?.today ?? ''}\r\n\t\t\t\t\t.value=${this._endDate}></umb-input-date>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tgap: var(--uui-size-space-3);\r\n\t\t\t}\r\n\t\t\tumb-input-date {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t:host([horizontal]) .input-container {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: baseline;\r\n\t\t\t\tgap: var(--uui-size-space-3);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-log-viewer-date-range-selector': UmbLogViewerDateRangeSelectorElement;\r\n\t}\r\n}\r\n","import { css, html, LitElement, customElement } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n@customElement('umb-log-viewer-too-many-logs-warning')\r\nexport class UmbLogViewerTooManyLogsWarningElement extends LitElement {\r\n\toverride render() {\r\n\t\treturn html`<uui-box id=\"to-many-logs-warning\">\r\n\t\t\t<h3>Unable to view logs</h3>\r\n\t\t\t<p>Today's log file is too large to be viewed and would cause performance problems.</p>\r\n\t\t\t<p>If you need to view the log files, narrow your date range or try opening them manually.</p>\r\n\t\t</uui-box>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-log-viewer-too-many-logs-warning': UmbLogViewerTooManyLogsWarningElement;\r\n\t}\r\n}\r\n","// TODO: I don't feel sure this is good, seems wrong: [NL]\r\nimport '../components/index.js';\r\nimport { css, html, customElement } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-logviewer-workspace')\r\nexport class UmbLogViewerWorkspaceElement extends UmbLitElement {\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-workspace-editor\r\n\t\t\t\theadline=${this.localize.term('treeHeaders_logViewer')}\r\n\t\t\t\t.enforceNoFooter=${true}></umb-workspace-editor>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\r\n\t\t\t\t--umb-log-viewer-debug-color: var(--uui-color-default-emphasis);\r\n\t\t\t\t--umb-log-viewer-information-color: var(--uui-color-positive);\r\n\t\t\t\t--umb-log-viewer-warning-color: var(--uui-color-warning);\r\n\t\t\t\t--umb-log-viewer-error-color: var(--uui-color-danger);\r\n\t\t\t\t--umb-log-viewer-fatal-color: var(--uui-palette-black);\r\n\t\t\t\t--umb-log-viewer-verbose-color: var(--uui-color-current);\r\n\t\t\t}\r\n\r\n\t\t\tuui-tab-group {\r\n\t\t\t\t--uui-tab-divider: var(--uui-color-border);\r\n\t\t\t\tborder-left: 1px solid var(--uui-color-border);\r\n\t\t\t\tborder-right: 1px solid var(--uui-color-border);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport { UmbLogViewerWorkspaceElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-logviewer-workspace': UmbLogViewerWorkspaceElement;\r\n\t}\r\n}\r\n"],"names":["_logViewerContext","_UmbLogViewerDateRangeSelectorElement_instances","observeStuff_fn","setStartDate_fn","setEndDate_fn","updateFiltered_fn","UmbLogViewerDateRangeSelectorElement","UmbLitElement","__privateAdd","UMB_APP_LOG_VIEWER_CONTEXT","instance","__privateSet","__privateMethod","html","__privateGet","dateRange","query","getQuery","qs","toQueryString","path","UmbTextStyles","css","__decorateClass","state","property","customElement","UmbLogViewerTooManyLogsWarningElement","LitElement","UmbLogViewerWorkspaceElement"],"mappings":";;;;;;;;;;;;wYAAAA,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;AASa,IAAAC,IAAN,cAAmDC,EAAc;AAAA,EAYvE,cAAc;AACP,UAAA,GAbDC,EAAA,MAAAP,CAAA,GAEN,KAAQ,aAAa,IAGrB,KAAQ,WAAW,IAGN,KAAA,aAAA,IAEbO,EAAA,MAAAR,CAAA,GAIM,KAAA,eAAeS,GAA4B,CAACC,MAAa;AAC7D,MAAAC,EAAA,MAAKX,GAAoBU,CAAA,GACzBE,EAAA,MAAKX,GAALC,CAAA,EAAA,KAAA,IAAA;AAAA,IAAA,CACA;AAAA,EAAA;AAAA,EAsCO,SAAS;AACV,WAAAW;AAAA;AAAA;AAAA;AAAA,eAIMD,QAAKX,GAAaE,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA,YAIrBW,EAAA,MAAKd,CAAmB,GAAA,SAAS,EAAE;AAAA,cACjC,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,eAKdY,QAAKX,GAAWG,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA,YAInB,KAAK,UAAU;AAAA,YACfU,EAAA,MAAKd,CAAmB,GAAA,SAAS,EAAE;AAAA,cACjC,KAAK,QAAQ;AAAA;AAAA;AAAA,EAAA;AAwB3B;AA1FCA,IAAA,oBAAA,QAAA;AAVMC,IAAA,oBAAA,QAAA;AAoBNC,IAAa,WAAG;AACX,EAACY,QAAKd,CAAmB,KACxB,KAAA;AAAA,IACJc,QAAKd,CAAkB,EAAA;AAAA,IACvB,CAACe,MAAkC;AAClC,WAAK,aAAaA,EAAU,WAC5B,KAAK,WAAWA,EAAU;AAAA,IAC3B;AAAA,IACA;AAAA,EACD;AACD;AAEAZ,IAAa,SAAC,GAAkB;AAC1B,OAAA,aAAa,EAAE,OAAO,OAC3BS,EAAA,MAAKX,GAALI,CAAA,EAAA,KAAA,IAAA;AACD;AAEAD,IAAW,SAAC,GAAkB;AACxB,OAAA,WAAW,EAAE,OAAO,OACzBQ,EAAA,MAAKX,GAALI,CAAA,EAAA,KAAA,IAAA;AACD;AAEAA,IAAe,WAAG;AACZ,EAAAS,EAAA,MAAAd,CAAA,GAAmB,aAAa,EAAE,WAAW,KAAK,YAAY,SAAS,KAAK,SAAA,CAAU;AAE3F,QAAMgB,IAAQC,EAAS,GACjBC,IAAKC,EAAc;AAAA,IACxB,GAAGH;AAAAA,IACH,WAAW,KAAK;AAAA,IAChB,SAAS,KAAK;AAAA,EAAA,CACd;AAEM,SAAA,QAAQ,UAAU,CAAA,GAAI,IAAI,GAAGI,GAAM,IAAIF,CAAE,EAAE;AACnD;AArDYZ,EAiFI,SAAS;AAAA,EACxBe;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBD;AAjGQC,EAAA;AAAA,EADPC,EAAM;AAAA,GADKlB,EAEJ,WAAA,cAAA,CAAA;AAGAiB,EAAA;AAAA,EADPC,EAAM;AAAA,GAJKlB,EAKJ,WAAA,YAAA,CAAA;AAGRiB,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAP9BnB,EAQZ,WAAA,cAAA,CAAA;AARYA,IAANiB,EAAA;AAAA,EADNG,EAAc,oCAAoC;AAAA,GACtCpB,CAAA;;;;;;ACNA,IAAAqB,IAAN,cAAoDC,EAAW;AAAA,EAC5D,SAAS;AACV,WAAAf;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAcT;AAhBac,EASI,SAAS;AAAA,EACxBL;AAAA;AAAA;AAAA;AAAA;AAKD;AAfYK,IAANJ,EAAA;AAAA,EADNG,EAAc,sCAAsC;AAAA,GACxCC,CAAA;;;;;;ACIA,IAAAE,IAAN,cAA2CtB,EAAc;AAAA,EACtD,SAAS;AACV,WAAAM;AAAA;AAAA,eAEM,KAAK,SAAS,KAAK,uBAAuB,CAAC;AAAA,uBACnC,EAAI;AAAA;AAAA,EAAA;AA2B3B;AAhCagB,EASI,SAAS;AAAA,EACxBR;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBD;AA/BYO,IAANN,EAAA;AAAA,EADNG,EAAc,yBAAyB;AAAA,GAC3BG,CAAA;"}