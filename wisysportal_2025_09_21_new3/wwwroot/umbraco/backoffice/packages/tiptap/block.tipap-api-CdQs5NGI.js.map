{"version":3,"file":"block.tipap-api-CdQs5NGI.js","sources":["../../../src/packages/tiptap/extensions/block/block.tipap-api.ts"],"sourcesContent":["import { UmbTiptapExtensionApiBase } from '../base.js';\r\nimport { distinctUntilChanged } from '@umbraco-cms/backoffice/external/rxjs';\r\nimport { Node } from '@umbraco-cms/backoffice/external/tiptap';\r\nimport { UMB_BLOCK_RTE_DATA_CONTENT_KEY } from '@umbraco-cms/backoffice/rte';\r\nimport { UMB_BLOCK_RTE_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/block-rte';\r\nimport type { UmbBlockDataModel } from '@umbraco-cms/backoffice/block';\r\nimport type { UmbBlockRteLayoutModel } from '@umbraco-cms/backoffice/block-rte';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\ndeclare module '@tiptap/core' {\r\n\tinterface Commands<ReturnType> {\r\n\t\tumbRteBlock: {\r\n\t\t\tsetBlock: (options: { contentKey: string }) => ReturnType;\r\n\t\t};\r\n\t\tumbRteBlockInline: {\r\n\t\t\tsetBlockInline: (options: { contentKey: string }) => ReturnType;\r\n\t\t};\r\n\t}\r\n}\r\n\r\nconst umbRteBlock = Node.create({\r\n\tname: 'umbRteBlock',\r\n\tgroup: 'block',\r\n\tcontent: undefined, // The block does not have any content, it is just a wrapper.\r\n\tatom: true, // The block is an atom, meaning it is a single unit that cannot be split.\r\n\tmarks: '', // We do not allow marks on the block\r\n\tdraggable: true,\r\n\tselectable: true,\r\n\r\n\taddAttributes() {\r\n\t\treturn {\r\n\t\t\t[UMB_BLOCK_RTE_DATA_CONTENT_KEY]: {\r\n\t\t\t\tisRequired: true,\r\n\t\t\t},\r\n\t\t};\r\n\t},\r\n\r\n\tparseHTML() {\r\n\t\treturn [{ tag: `umb-rte-block[${UMB_BLOCK_RTE_DATA_CONTENT_KEY}]` }];\r\n\t},\r\n\r\n\trenderHTML({ HTMLAttributes }) {\r\n\t\treturn ['umb-rte-block', HTMLAttributes];\r\n\t},\r\n\r\n\taddCommands() {\r\n\t\treturn {\r\n\t\t\tsetBlock:\r\n\t\t\t\t(options) =>\r\n\t\t\t\t({ commands }) => {\r\n\t\t\t\t\tconst attrs = { [UMB_BLOCK_RTE_DATA_CONTENT_KEY]: options.contentKey };\r\n\t\t\t\t\treturn commands.insertContent({\r\n\t\t\t\t\t\ttype: this.name,\r\n\t\t\t\t\t\tattrs,\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t};\r\n\t},\r\n});\r\n\r\nconst umbRteBlockInline = umbRteBlock.extend({\r\n\tname: 'umbRteBlockInline',\r\n\tgroup: 'inline',\r\n\tinline: true,\r\n\r\n\tparseHTML() {\r\n\t\treturn [{ tag: `umb-rte-block-inline[${UMB_BLOCK_RTE_DATA_CONTENT_KEY}]` }];\r\n\t},\r\n\r\n\trenderHTML({ HTMLAttributes }) {\r\n\t\treturn ['umb-rte-block-inline', HTMLAttributes];\r\n\t},\r\n\r\n\taddCommands() {\r\n\t\treturn {\r\n\t\t\tsetBlockInline:\r\n\t\t\t\t(options) =>\r\n\t\t\t\t({ commands }) => {\r\n\t\t\t\t\tconst attrs = { [UMB_BLOCK_RTE_DATA_CONTENT_KEY]: options.contentKey };\r\n\t\t\t\t\treturn commands.insertContent({\r\n\t\t\t\t\t\ttype: this.name,\r\n\t\t\t\t\t\tattrs,\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t};\r\n\t},\r\n});\r\n\r\nexport default class UmbTiptapBlockElementApi extends UmbTiptapExtensionApiBase {\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_RTE_MANAGER_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext?.contents.pipe(\r\n\t\t\t\t\tdistinctUntilChanged((prev, curr) => prev.map((y) => y.key).join() === curr.map((y) => y.key).join()),\r\n\t\t\t\t),\r\n\t\t\t\t(contents) => {\r\n\t\t\t\t\tif (!contents || !context) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.#updateBlocks(contents, context.getLayouts());\r\n\t\t\t\t},\r\n\t\t\t\t'contents',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tgetTiptapExtensions() {\r\n\t\treturn [umbRteBlock, umbRteBlockInline];\r\n\t}\r\n\r\n\t#updateBlocks(blocks: UmbBlockDataModel[], layouts: Array<UmbBlockRteLayoutModel>) {\r\n\t\tconst editor = this._editor;\r\n\t\tif (!editor) return;\r\n\r\n\t\tconst existingBlocks = Array.from(editor.view.dom.querySelectorAll('umb-rte-block, umb-rte-block-inline')).map(\r\n\t\t\t(x) => x.getAttribute(UMB_BLOCK_RTE_DATA_CONTENT_KEY),\r\n\t\t);\r\n\t\tconst newBlocks = blocks.filter((x) => !existingBlocks.find((contentKey) => contentKey === x.key));\r\n\r\n\t\tnewBlocks.forEach((block) => {\r\n\t\t\t// Find layout for block\r\n\t\t\tconst layout = layouts.find((x) => x.contentKey === block.key);\r\n\t\t\tconst inline = layout?.displayInline ?? false;\r\n\r\n\t\t\tif (inline) {\r\n\t\t\t\teditor.commands.setBlockInline({ contentKey: block.key });\r\n\t\t\t} else {\r\n\t\t\t\teditor.commands.setBlock({ contentKey: block.key });\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["umbRteBlock","Node","UMB_BLOCK_RTE_DATA_CONTENT_KEY","HTMLAttributes","options","commands","attrs","umbRteBlockInline","UmbTiptapBlockElementApi","UmbTiptapExtensionApiBase","host","UMB_BLOCK_RTE_MANAGER_CONTEXT","context","distinctUntilChanged","prev","curr","y","contents","#updateBlocks","blocks","layouts","editor","existingBlocks","x","contentKey","block"],"mappings":"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"}