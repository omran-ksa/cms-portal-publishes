{"version":3,"file":"input-tiptap.element-Cd5xxPhZ.js","sources":["../../../src/packages/tiptap/components/input-tiptap/tiptap-toolbar.element.ts","../../../src/packages/tiptap/components/input-tiptap/tiptap-statusbar.element.ts","../../../src/packages/tiptap/components/input-tiptap/input-tiptap.element.ts"],"sourcesContent":["import type { UmbTiptapToolbarValue } from '../types.js';\r\nimport { css, customElement, html, map, nothing, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbExtensionsElementAndApiInitializer } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { Editor } from '@umbraco-cms/backoffice/external/tiptap';\r\nimport type { UmbPropertyEditorConfigCollection } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nimport '../cascading-menu-popover/cascading-menu-popover.element.js';\r\n\r\n/**\r\n* Provides a sticky toolbar for the {@link UmbInputTiptapElement}\r\n* @element umb-tiptap-toolbar\r\n* @cssprop --umb-tiptap-edge-border-color - Defines the edge border color\r\n* @cssprop --umb-tiptap-top - Defines the top value for the sticky toolbar\r\n*/\r\n@customElement('umb-tiptap-toolbar')\r\nexport class UmbTiptapToolbarElement extends UmbLitElement {\r\n\t#attached = false;\r\n\t#extensionsController?: UmbExtensionsElementAndApiInitializer;\r\n\r\n\t@state()\r\n\tprivate _lookup?: Map<string, unknown>;\r\n\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@property({ attribute: false })\r\n\teditor?: Editor;\r\n\r\n\t@property({ attribute: false })\r\n\tconfiguration?: UmbPropertyEditorConfigCollection;\r\n\r\n\t@property({ attribute: false })\r\n\ttoolbar: UmbTiptapToolbarValue = [[[]]];\r\n\r\n\toverride connectedCallback(): void {\r\n\t\tsuper.connectedCallback();\r\n\t\tthis.#attached = true;\r\n\t\tthis.#observeExtensions();\r\n\t}\r\n\r\n\toverride disconnectedCallback(): void {\r\n\t\tthis.#attached = false;\r\n\t\tthis.#extensionsController?.destroy();\r\n\t\tthis.#extensionsController = undefined;\r\n\t\tsuper.disconnectedCallback();\r\n\t}\r\n\r\n\t#observeExtensions(): void {\r\n\t\tif (!this.#attached) return;\r\n\t\tthis.#extensionsController?.destroy();\r\n\r\n\t\tthis.#extensionsController = new UmbExtensionsElementAndApiInitializer(\r\n\t\t\tthis,\r\n\t\t\tumbExtensionsRegistry,\r\n\t\t\t'tiptapToolbarExtension',\r\n\t\t\t[],\r\n\t\t\t(manifest) => this.toolbar.flat(2).includes(manifest.alias),\r\n\t\t\t(extensionControllers) => {\r\n\t\t\t\tthis._lookup = new Map(\r\n\t\t\t\t\textensionControllers.map((ext) => {\r\n\t\t\t\t\t\t(ext.component as HTMLElement)?.setAttribute('data-mark', `action:tiptap-toolbar:${ext.alias}`);\r\n\t\t\t\t\t\treturn [ext.alias, ext.component];\r\n\t\t\t\t\t}),\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tundefined,\r\n\t\t\tundefined,\r\n\t\t\t() => import('../toolbar/default-tiptap-toolbar-api.js'),\r\n\t\t);\r\n\r\n\t\tthis.#extensionsController.apiProperties = { configuration: this.configuration };\r\n\t\tthis.#extensionsController.elementProperties = { editor: this.editor, configuration: this.configuration };\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (!this.toolbar.flat(2).length) return nothing;\r\n\r\n\t\treturn map(\r\n\t\t\tthis.toolbar,\r\n\t\t\t(row) => html`\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t${map(\r\n\t\t\t\t\t\trow,\r\n\t\t\t\t\t\t(group) => html`<div class=\"group\">${map(group, (alias) => this._lookup?.get(alias) ?? nothing)}</div>`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t`,\r\n\t\t);\r\n\t}\r\n\r\n\tstatic override readonly styles = css`\r\n\t\t:host([readonly]) {\r\n\t\t\tpointer-events: none;\r\n\t\t\tbackground-color: var(--uui-color-surface-alt);\r\n\t\t}\r\n\r\n\t\t:host {\r\n\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\tborder-bottom-left-radius: 0;\r\n\t\t\tborder-bottom-right-radius: 0;\r\n\r\n\t\t\tborder-top-color: var(--umb-tiptap-edge-border-color, var(--uui-color-border));\r\n\t\t\tborder-left-color: var(--umb-tiptap-edge-border-color, var(--uui-color-border));\r\n\t\t\tborder-right-color: var(--umb-tiptap-edge-border-color, var(--uui-color-border));\r\n\r\n\t\t\tbackground-color: var(--uui-color-surface);\r\n\t\t\tcolor: var(--color-text);\r\n\t\t\tfont-size: var(--uui-type-default-size);\r\n\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\r\n\t\t\tposition: sticky;\r\n\t\t\ttop: var(--umb-tiptap-top,-25px);\r\n\t\t\tleft: 0;\r\n\t\t\tright: 0;\r\n\t\t\tpadding: var(--uui-size-3);\r\n\t\t\tz-index: 9999999;\r\n\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0 2px 2px -2px rgba(34, 47, 62, 0.1),\r\n\t\t\t\t0 8px 8px -4px rgba(34, 47, 62, 0.07);\r\n\t\t}\r\n\r\n\t\t.row {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\tflex-wrap: wrap;\r\n\r\n\t\t\t.group {\r\n\t\t\t\tdisplay: inline-flex;\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\talign-items: stretch;\r\n\r\n\t\t\t\t&:not(:last-child)::after {\r\n\t\t\t\t\tcontent: '';\r\n\t\t\t\t\tbackground-color: var(--uui-color-border);\r\n\t\t\t\t\twidth: 1px;\r\n\t\t\t\t\tplace-self: center;\r\n\t\t\t\t\theight: 22px;\r\n\t\t\t\t\tmargin: 0 var(--uui-size-3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`;\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-tiptap-toolbar': UmbTiptapToolbarElement;\r\n\t}\r\n}\r\n","import type { UmbTiptapStatusbarValue } from '../types.js';\r\nimport { css, customElement, html, map, nothing, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbExtensionsElementInitializer } from '@umbraco-cms/backoffice/extension-api';\r\nimport type { Editor } from '@umbraco-cms/backoffice/external/tiptap';\r\nimport type { UmbPropertyEditorConfigCollection } from '@umbraco-cms/backoffice/property-editor';\r\n\r\n@customElement('umb-tiptap-statusbar')\r\nexport class UmbTiptapStatusbarElement extends UmbLitElement {\r\n\t#attached = false;\r\n\t#extensionsController?: UmbExtensionsElementInitializer;\r\n\r\n\t@state()\r\n\tprivate _lookup?: Map<string, unknown>;\r\n\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@property({ attribute: false })\r\n\teditor?: Editor;\r\n\r\n\t@property({ attribute: false })\r\n\tconfiguration?: UmbPropertyEditorConfigCollection;\r\n\r\n\t@property({ attribute: false })\r\n\tpublic set statusbar(value: UmbTiptapStatusbarValue) {\r\n\t\tif (typeof value === 'string') {\r\n\t\t\tvalue = [[], [value]];\r\n\t\t} else if (Array.isArray(value) && value.length === 1) {\r\n\t\t\tvalue = [[], value[0]];\r\n\t\t}\r\n\r\n\t\tthis.#statusbar = value;\r\n\t}\r\n\tpublic get statusbar(): UmbTiptapStatusbarValue {\r\n\t\treturn this.#statusbar;\r\n\t}\r\n\t#statusbar: UmbTiptapStatusbarValue = [[], []];\r\n\r\n\toverride connectedCallback() {\r\n\t\tsuper.connectedCallback();\r\n\t\tthis.#attached = true;\r\n\t\tthis.#observeExtensions();\r\n\t}\r\n\r\n\toverride disconnectedCallback() {\r\n\t\tthis.#attached = false;\r\n\t\tthis.#extensionsController?.destroy();\r\n\t\tthis.#extensionsController = undefined;\r\n\t\tsuper.disconnectedCallback();\r\n\t}\r\n\r\n\t#observeExtensions() {\r\n\t\tif (!this.#attached) return;\r\n\t\tthis.#extensionsController?.destroy();\r\n\r\n\t\tthis.#extensionsController = new UmbExtensionsElementInitializer(\r\n\t\t\tthis,\r\n\t\t\tumbExtensionsRegistry,\r\n\t\t\t'tiptapStatusbarExtension',\r\n\t\t\t(manifest) => this.statusbar.flat().includes(manifest.alias),\r\n\t\t\t(extensionControllers) => {\r\n\t\t\t\tthis._lookup = new Map(\r\n\t\t\t\t\textensionControllers.map((ext) => {\r\n\t\t\t\t\t\t(ext.component as HTMLElement)?.setAttribute('data-mark', `action:tiptap-statusbar:${ext.alias}`);\r\n\t\t\t\t\t\treturn [ext.alias, ext.component];\r\n\t\t\t\t\t}),\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tthis.#extensionsController.properties = { editor: this.editor, configuration: this.configuration };\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (!this.statusbar.flat().length) return nothing;\r\n\t\treturn map(\r\n\t\t\tthis.statusbar,\r\n\t\t\t(area) => html`<div class=\"area\">${map(area, (alias) => this._lookup?.get(alias) ?? nothing)}</div>`,\r\n\t\t);\r\n\t}\r\n\r\n\tstatic override readonly styles = css`\r\n\t\t:host([readonly]) {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t:host {\r\n\t\t\t--uui-button-height: var(--uui-size-layout-2);\r\n\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: space-between;\r\n\r\n\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\tborder-top-left-radius: 0;\r\n\t\t\tborder-top-right-radius: 0;\r\n\t\t\tborder-top: 0;\r\n\r\n\t\t\tmin-height: var(--uui-size-layout-1);\r\n\t\t\tmax-height: var(--uui-size-layout-2);\r\n\r\n\t\t\tpadding: 0 var(--uui-size-3);\r\n\r\n\t\t\t> p {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\r\n\t\t\t.area {\r\n\t\t\t\tdisplay: inline-flex;\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\talign-items: stretch;\r\n\t\t\t}\r\n\t\t}\r\n\t`;\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-tiptap-statusbar': UmbTiptapStatusbarElement;\r\n\t}\r\n}\r\n","import type { UmbTiptapExtensionApi } from '../../extensions/types.js';\r\nimport type { UmbTiptapStatusbarValue, UmbTiptapToolbarValue } from '../types.js';\r\nimport {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tproperty,\r\n\trepeat,\r\n\tstate,\r\n\tunsafeCSS,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { loadManifestApi } from '@umbraco-cms/backoffice/extension-api';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { Editor } from '@umbraco-cms/backoffice/external/tiptap';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\nimport type { CSSResultGroup } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { Extensions } from '@umbraco-cms/backoffice/external/tiptap';\r\nimport type { UmbPropertyEditorConfigCollection } from '@umbraco-cms/backoffice/property-editor';\r\n\r\nimport './tiptap-toolbar.element.js';\r\nimport './tiptap-statusbar.element.js';\r\n\r\nconst TIPTAP_CORE_EXTENSION_ALIAS = 'Umb.Tiptap.RichTextEssentials';\r\n\r\n/**\r\n * The root path for the stylesheets on the server.\r\n * This is used to load the stylesheets from the server as a workaround until the server supports virtual paths.\r\n */\r\nconst STYLESHEET_ROOT_PATH = '/css';\r\n\r\n@customElement('umb-input-tiptap')\r\nexport class UmbInputTiptapElement extends UmbFormControlMixin<string, typeof UmbLitElement, string>(UmbLitElement) {\r\n\t#stylesheets = new Set(['/umbraco/backoffice/css/rte-content.css']);\r\n\r\n\t@property({ type: String })\r\n\toverride set value(value: string) {\r\n\t\tif (value === this.#value) return;\r\n\t\tthis.#value = value;\r\n\r\n\t\t// Try to set the value to the editor if it is ready.\r\n\t\tif (this._editor) {\r\n\t\t\tthis._editor.commands.setContent(value);\r\n\t\t}\r\n\t}\r\n\toverride get value() {\r\n\t\treturn this.#value;\r\n\t}\r\n\t#value = '';\r\n\r\n\t@property({ attribute: false })\r\n\tconfiguration?: UmbPropertyEditorConfigCollection;\r\n\r\n\t/**\r\n\t * Sets the input to required, meaning validation will fail if the value is empty.\r\n\t * @type {boolean}\r\n\t */\r\n\t@property({ type: Boolean })\r\n\trequired?: boolean;\r\n\r\n\t@property({ type: String })\r\n\trequiredMessage?: string;\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@state()\r\n\tprivate _editor?: Editor;\r\n\r\n\t@state()\r\n\tprivate readonly _extensions: Array<UmbTiptapExtensionApi> = [];\r\n\r\n\t@state()\r\n\tprivate _styles: Array<CSSResultGroup> = [];\r\n\r\n\t@state()\r\n\tprivate _toolbar: UmbTiptapToolbarValue = [[[]]];\r\n\r\n\t@state()\r\n\tprivate _statusbar: UmbTiptapStatusbarValue = [[], []];\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'valueMissing',\r\n\t\t\t() => this.requiredMessage ?? 'Value is required',\r\n\t\t\t() => !!this.required && this.isEmpty(),\r\n\t\t);\r\n\t}\r\n\r\n\tprotected override async firstUpdated() {\r\n\t\tawait Promise.all([await this.#loadExtensions(), await this.#loadEditor()]);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the editor is empty.\r\n\t * @returns {boolean} returns true if the editor contains no markup\r\n\t */\r\n\tpublic isEmpty(): boolean {\r\n\t\treturn this._editor?.isEmpty ?? false;\r\n\t}\r\n\r\n\tasync #loadExtensions() {\r\n\t\tconst enabledExtensions = this.configuration?.getValueByAlias<string[]>('extensions') ?? [];\r\n\r\n\t\t// Ensures that the \"Rich Text Essentials\" extension is always enabled. [LK]\r\n\t\tif (!enabledExtensions.includes(TIPTAP_CORE_EXTENSION_ALIAS)) {\r\n\t\t\tconst { api } = await import('../../extensions/core/rich-text-essentials.tiptap-api.js');\r\n\t\t\tthis._extensions.push(new api(this));\r\n\t\t}\r\n\r\n\t\tawait new Promise<void>((resolve) => {\r\n\t\t\tthis.observe(umbExtensionsRegistry.byTypeAndAliases('tiptapExtension', enabledExtensions), async (manifests) => {\r\n\t\t\t\tfor (const manifest of manifests) {\r\n\t\t\t\t\tif (manifest.api) {\r\n\t\t\t\t\t\tconst extension = await loadManifestApi(manifest.api);\r\n\t\t\t\t\t\tif (extension) {\r\n\t\t\t\t\t\t\tthis._extensions.push(new extension(this));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tasync #loadEditor() {\r\n\t\tconst element = this.shadowRoot?.querySelector('#editor');\r\n\t\tif (!element) return;\r\n\r\n\t\tconst dimensions = this.configuration?.getValueByAlias<{ width?: number; height?: number }>('dimensions');\r\n\t\tif (dimensions?.width) {\r\n\t\t\tthis.setAttribute('style', `max-width: ${dimensions.width}px;`);\r\n\t\t}\r\n\t\tif (dimensions?.height) {\r\n\t\t\telement.setAttribute('style', `height: ${dimensions.height}px;`);\r\n\t\t}\r\n\r\n\t\tconst stylesheets = this.configuration?.getValueByAlias<Array<string>>('stylesheets');\r\n\t\tif (stylesheets?.length) {\r\n\t\t\tstylesheets.forEach((stylesheet) => {\r\n\t\t\t\tconst linkHref =\r\n\t\t\t\t\tstylesheet.startsWith('http') || stylesheet.startsWith(STYLESHEET_ROOT_PATH)\r\n\t\t\t\t\t\t? stylesheet\r\n\t\t\t\t\t\t: `${STYLESHEET_ROOT_PATH}${stylesheet}`;\r\n\t\t\t\tthis.#stylesheets.add(linkHref);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._toolbar = this.configuration?.getValueByAlias<UmbTiptapToolbarValue>('toolbar') ?? [[[]]];\r\n\t\tthis._statusbar = this.configuration?.getValueByAlias<UmbTiptapStatusbarValue>('statusbar') ?? [];\r\n\r\n\t\tconst tiptapExtensions: Extensions = [];\r\n\r\n\t\tthis._extensions.forEach((ext) => {\r\n\t\t\tconst tiptapExt = ext.getTiptapExtensions({ configuration: this.configuration });\r\n\t\t\tif (tiptapExt?.length) {\r\n\t\t\t\ttiptapExtensions.push(...tiptapExt);\r\n\t\t\t}\r\n\r\n\t\t\tconst styles = ext.getStyles();\r\n\t\t\tif (styles) {\r\n\t\t\t\tthis._styles.push(styles);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._editor = new Editor({\r\n\t\t\telement: element,\r\n\t\t\teditable: !this.readonly,\r\n\t\t\textensions: tiptapExtensions,\r\n\t\t\tcontent: this.#value,\r\n\t\t\t//enableContentCheck: true,\r\n\t\t\tonBeforeCreate: ({ editor }) => {\r\n\t\t\t\tthis._extensions.forEach((ext) => ext.setEditor(editor));\r\n\t\t\t},\r\n\t\t\tonContentError: ({ error }) => {\r\n\t\t\t\tconsole.error('contentError', [error.message, error.cause]);\r\n\t\t\t},\r\n\t\t\tonUpdate: ({ editor }) => {\r\n\t\t\t\tthis.#value = editor.getHTML();\r\n\t\t\t\tthis._runValidators();\r\n\t\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst loading = !this._editor && !this._extensions?.length;\r\n\t\treturn html`\r\n\t\t\t${when(loading, () => html`<div id=\"loader\"><uui-loader></uui-loader></div>`)}\r\n\t\t\t${when(!loading, () => html`${this.#renderStyles()}${this.#renderToolbar()}`)}\r\n\t\t\t<div id=\"editor\" data-mark=\"input:tiptap-rte\"></div>\r\n\t\t\t${when(!loading, () => this.#renderStatusbar())}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderStyles() {\r\n\t\tif (!this._styles?.length) return;\r\n\t\treturn html`\r\n\t\t\t${repeat(\r\n\t\t\t\tthis.#stylesheets,\r\n\t\t\t\t(stylesheet) => stylesheet,\r\n\t\t\t\t(stylesheet) => html`<link rel=\"stylesheet\" href=\"${stylesheet}\" />`,\r\n\t\t\t)}\r\n\t\t\t<style>\r\n\t\t\t\t${this._styles.map((style) => unsafeCSS(style))}\r\n\t\t\t</style>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderToolbar() {\r\n\t\tif (!this._toolbar.flat(2).length) return;\r\n\t\treturn html`\r\n\t\t\t<umb-tiptap-toolbar\r\n\t\t\t\tdata-mark=\"tiptap-toolbar\"\r\n\t\t\t\t.toolbar=${this._toolbar}\r\n\t\t\t\t.editor=${this._editor}\r\n\t\t\t\t.configuration=${this.configuration}\r\n\t\t\t\t?readonly=${this.readonly}>\r\n\t\t\t</umb-tiptap-toolbar>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderStatusbar() {\r\n\t\tif (!this._statusbar.flat().length) return;\r\n\t\treturn html`\r\n\t\t\t<umb-tiptap-statusbar\r\n\t\t\t\tdata-mark=\"tiptap-statusbar\"\r\n\t\t\t\t.statusbar=${this._statusbar}\r\n\t\t\t\t.editor=${this._editor}\r\n\t\t\t\t.configuration=${this.configuration}\r\n\t\t\t\t?readonly=${this.readonly}>\r\n\t\t\t</umb-tiptap-statusbar>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tz-index: 0;\r\n\t\t\t}\r\n\r\n\t\t\t:host([readonly]) {\r\n\t\t\t\tpointer-events: none;\r\n\r\n\t\t\t\t#editor {\r\n\t\t\t\t\tbackground-color: var(--uui-color-surface-alt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#loader {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t}\r\n\r\n\t\t\t:host(:invalid:not([pristine])),\r\n\t\t\t/* polyfill support */\r\n\t\t\t:host(:not([pristine])[internals-invalid]) {\r\n\t\t\t\t--umb-tiptap-edge-border-color: var(--uui-color-invalid);\r\n\t\t\t\t#editor {\r\n\t\t\t\t\tborder-color: var(--uui-color-invalid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#editor {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\toverflow: auto;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tborder: 1px solid var(--umb-tiptap-edge-border-color, var(--uui-color-border));\r\n\t\t\t\tpadding: 1rem;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmax-width: 100%;\r\n\r\n\t\t\t\t> .tiptap {\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\toutline: none;\r\n\t\t\t\t\twhite-space: wrap;\r\n\t\t\t\t\tmin-width: 0;\r\n\r\n\t\t\t\t\tp:first-of-type {\r\n\t\t\t\t\t\tmargin-top: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.is-editor-empty:first-child::before {\r\n\t\t\t\t\t\tcolor: var(--uui-color-text);\r\n\t\t\t\t\t\topacity: 0.55;\r\n\t\t\t\t\t\tcontent: attr(data-placeholder);\r\n\t\t\t\t\t\tfloat: left;\r\n\t\t\t\t\t\theight: 0;\r\n\t\t\t\t\t\tpointer-events: none;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&:has(+ umb-tiptap-statusbar) {\r\n\t\t\t\t\tborder-bottom-left-radius: 0;\r\n\t\t\t\t\tborder-bottom-right-radius: 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tumb-tiptap-toolbar + #editor {\r\n\t\t\t\tborder-top: 0;\r\n\t\t\t\tborder-top-left-radius: 0;\r\n\t\t\t\tborder-top-right-radius: 0;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-tiptap': UmbInputTiptapElement;\r\n\t}\r\n}\r\n"],"names":["_attached","_extensionsController","_UmbTiptapToolbarElement_instances","observeExtensions_fn","UmbTiptapToolbarElement","UmbLitElement","__privateAdd","__privateSet","__privateMethod","__privateGet","map","row","html","group","alias","nothing","UmbExtensionsElementAndApiInitializer","umbExtensionsRegistry","manifest","extensionControllers","ext","css","__decorateClass","state","property","customElement","_statusbar","_UmbTiptapStatusbarElement_instances","UmbTiptapStatusbarElement","value","area","UmbExtensionsElementInitializer","_stylesheets","_value","_UmbInputTiptapElement_instances","loadExtensions_fn","loadEditor_fn","renderStyles_fn","renderToolbar_fn","renderStatusbar_fn","TIPTAP_CORE_EXTENSION_ALIAS","STYLESHEET_ROOT_PATH","UmbInputTiptapElement","UmbFormControlMixin","loading","when","enabledExtensions","api","resolve","manifests","extension","loadManifestApi","element","dimensions","stylesheets","stylesheet","linkHref","tiptapExtensions","tiptapExt","styles","Editor","editor","error","UmbChangeEvent","repeat","style","unsafeCSS"],"mappings":";;;;;;;;;;;;;;yXAAAA,GAAAC,GAAAC,GAAAC;AAiBa,IAAAC,IAAN,cAAsCC,EAAc;AAAA,EAApD,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAJ,CAAA,GACMI,EAAA,MAAAN,GAAA,EAAA,GACZM,EAAA,MAAAL,CAAA,GAMW,KAAA,WAAA,IASX,KAAA,UAAiC,CAAC,CAAC,CAAA,CAAE,CAAC;AAAA,EAAA;AAAA,EAE7B,oBAA0B;AAClC,UAAM,kBAAkB,GACxBM,EAAA,MAAKP,GAAY,EAAA,GACjBQ,GAAA,MAAKN,GAALC,CAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAGQ,uBAA6B;AACrCI,IAAAA,EAAA,MAAKP,GAAY,EAAA,GACjBS,EAAA,MAAKR,IAAuB,QAAQ,GACpCM,EAAA,MAAKN,GAAwB,MAAA,GAC7B,MAAM,qBAAqB;AAAA,EAAA;AAAA,EA8BnB,SAAS;AACjB,WAAK,KAAK,QAAQ,KAAK,CAAC,EAAE,SAEnBS;AAAA,MACN,KAAK;AAAA,MACL,CAACC,MAAQC;AAAA;AAAA,OAELF;AAAA,QACDC;AAAA,QACA,CAACE,MAAUD,uBAA0BF,EAAIG,GAAO,CAACC,MAAU,KAAK,SAAS,IAAIA,CAAK,KAAKC,CAAO,CAAC;AAAA,MAC/F,CAAA;AAAA;AAAA;AAAA,IAGJ,IAZyCA;AAAA,EAYzC;AA2DF;AAlICf,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AAFMC,IAAA,oBAAA,QAAA;AAgCNC,IAAkB,WAAS;AACtB,EAACM,QAAKT,CAAW,MACrBS,EAAA,MAAKR,IAAuB,QAAQ,GAEpCM,EAAA,MAAKN,GAAwB,IAAIe;AAAA,IAChC;AAAA,IACAC;AAAA,IACA;AAAA,IACA,CAAC;AAAA,IACD,CAACC,MAAa,KAAK,QAAQ,KAAK,CAAC,EAAE,SAASA,EAAS,KAAK;AAAA,IAC1D,CAACC,MAAyB;AACzB,WAAK,UAAU,IAAI;AAAA,QAClBA,EAAqB,IAAI,CAACC,OACxBA,EAAI,WAA2B,aAAa,aAAa,yBAAyBA,EAAI,KAAK,EAAE,GACvF,CAACA,EAAI,OAAOA,EAAI,SAAS,EAChC;AAAA,MACF;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM,OAAO,0CAA0C;AAAA,EAAA,CACxD,GAEAX,EAAA,MAAKR,CAAsB,EAAA,gBAAgB,EAAE,eAAe,KAAK,cAAc,GAC1EQ,EAAA,MAAAR,CAAA,EAAsB,oBAAoB,EAAE,QAAQ,KAAK,QAAQ,eAAe,KAAK,cAAc;AACzG;AAzDYG,EA2Ea,SAASiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtE1BC,EAAA;AAAA,EADPC,EAAM;AAAA,GAJKnB,EAKJ,WAAA,WAAA,CAAA;AAGRkB,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAP9BpB,EAQZ,WAAA,YAAA,CAAA;AAGAkB,EAAA;AAAA,EADCE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAVlBpB,EAWZ,WAAA,UAAA,CAAA;AAGAkB,EAAA;AAAA,EADCE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAblBpB,EAcZ,WAAA,iBAAA,CAAA;AAGAkB,EAAA;AAAA,EADCE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAhBlBpB,EAiBZ,WAAA,WAAA,CAAA;AAjBYA,IAANkB,EAAA;AAAA,EADNG,EAAc,oBAAoB;AAAA,GACtBrB,CAAA;;;;;;;yYCjBbJ,GAAAC,GAAAyB,GAAAC,GAAAxB;AASa,IAAAyB,IAAN,cAAwCvB,EAAc;AAAA,EAAtD,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAqB,CAAA,GACMrB,EAAA,MAAAN,GAAA,EAAA,GACZM,EAAA,MAAAL,CAAA,GAMW,KAAA,WAAA,IAqBXK,EAAA,MAAAoB,GAAsC,CAAC,CAAI,GAAA,CAAE,CAAA,CAAA;AAAA,EAAA;AAAA,EAZ7C,IAAW,UAAUG,GAAgC;AAChD,IAAA,OAAOA,KAAU,WACpBA,IAAQ,CAAC,CAAA,GAAI,CAACA,CAAK,CAAC,IACV,MAAM,QAAQA,CAAK,KAAKA,EAAM,WAAW,MACnDA,IAAQ,CAAC,CAAA,GAAIA,EAAM,CAAC,CAAC,IAGtBtB,EAAA,MAAKmB,GAAaG,CAAA;AAAA,EAAA;AAAA,EAEnB,IAAW,YAAqC;AAC/C,WAAOpB,EAAK,MAAAiB,CAAA;AAAA,EAAA;AAAA,EAIJ,oBAAoB;AAC5B,UAAM,kBAAkB,GACxBnB,EAAA,MAAKP,GAAY,EAAA,GACjBQ,GAAA,MAAKmB,GAALxB,CAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAGQ,uBAAuB;AAC/BI,IAAAA,EAAA,MAAKP,GAAY,EAAA,GACjBS,EAAA,MAAKR,IAAuB,QAAQ,GACpCM,EAAA,MAAKN,GAAwB,MAAA,GAC7B,MAAM,qBAAqB;AAAA,EAAA;AAAA,EAyBnB,SAAS;AACjB,WAAK,KAAK,UAAU,KAAK,EAAE,SACpBS;AAAA,MACN,KAAK;AAAA,MACL,CAACoB,MAASlB,sBAAyBF,EAAIoB,GAAM,CAAChB,MAAU,KAAK,SAAS,IAAIA,CAAK,KAAKC,CAAO,CAAC;AAAA,IAC7F,IAJ0CA;AAAA,EAI1C;AAsCF;AA5GCf,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AA2BAyB,IAAA,oBAAA,QAAA;AA7BMC,IAAA,oBAAA,QAAA;AA4CNxB,IAAkB,WAAG;AAChB,EAACM,QAAKT,CAAW,MACrBS,EAAA,MAAKR,IAAuB,QAAQ,GAEpCM,EAAA,MAAKN,GAAwB,IAAI8B;AAAA,IAChC;AAAA,IACAd;AAAA,IACA;AAAA,IACA,CAACC,MAAa,KAAK,UAAU,OAAO,SAASA,EAAS,KAAK;AAAA,IAC3D,CAACC,MAAyB;AACzB,WAAK,UAAU,IAAI;AAAA,QAClBA,EAAqB,IAAI,CAACC,OACxBA,EAAI,WAA2B,aAAa,aAAa,2BAA2BA,EAAI,KAAK,EAAE,GACzF,CAACA,EAAI,OAAOA,EAAI,SAAS,EAChC;AAAA,MACF;AAAA,IAAA;AAAA,EACD,CACD,GAEKX,EAAA,MAAAR,CAAA,EAAsB,aAAa,EAAE,QAAQ,KAAK,QAAQ,eAAe,KAAK,cAAc;AAClG;AAhEY2B,EA0Ea,SAASP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArE1BC,EAAA;AAAA,EADPC,EAAM;AAAA,GAJKK,EAKJ,WAAA,WAAA,CAAA;AAGRN,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAP9BI,EAQZ,WAAA,YAAA,CAAA;AAGAN,EAAA;AAAA,EADCE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAVlBI,EAWZ,WAAA,UAAA,CAAA;AAGAN,EAAA;AAAA,EADCE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAblBI,EAcZ,WAAA,iBAAA,CAAA;AAGWN,EAAA;AAAA,EADVE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAhBlBI,EAiBD,WAAA,aAAA,CAAA;AAjBCA,IAANN,EAAA;AAAA,EADNG,EAAc,sBAAsB;AAAA,GACxBG,CAAA;;;;;;;wYCTbI,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAC,IAAAC;AAyBA,MAAMC,KAA8B,iCAM9BC,IAAuB;AAGtB,IAAMC,IAAN,cAAoCC,GAA0DtC,CAAa,EAAE;AAAA,EAoDnH,cAAc;AACP,UAAA,GArDDC,EAAA,MAAA4B,CAAA,GACN5B,EAAA,MAAA0B,GAAmB,oBAAA,IAAI,CAAC,yCAAyC,CAAC,CAAA,GAezD1B,EAAA,MAAA2B,GAAA,EAAA,GAmBE,KAAA,WAAA,IAMX,KAAiB,cAA4C,CAAC,GAG9D,KAAQ,UAAiC,CAAC,GAG1C,KAAQ,WAAkC,CAAC,CAAC,CAAA,CAAE,CAAC,GAG/C,KAAQ,aAAsC,CAAC,CAAC,GAAG,EAAE,GAK/C,KAAA;AAAA,MACJ;AAAA,MACA,MAAM,KAAK,mBAAmB;AAAA,MAC9B,MAAM,CAAC,CAAC,KAAK,YAAY,KAAK,QAAQ;AAAA,IACvC;AAAA,EAAA;AAAA,EAvDD,IAAa,MAAMJ,GAAe;AAC7B,IAAAA,MAAUpB,QAAKwB,CAAQ,MAC3B1B,EAAA,MAAK0B,GAASJ,CAAA,GAGV,KAAK,WACH,KAAA,QAAQ,SAAS,WAAWA,CAAK;AAAA,EACvC;AAAA,EAED,IAAa,QAAQ;AACpB,WAAOpB,EAAK,MAAAwB,CAAA;AAAA,EAAA;AAAA,EAgDb,MAAyB,eAAe;AACjC,UAAA,QAAQ,IAAI,CAAC,MAAMzB,EAAA,MAAK0B,GAALC,CAAA,EAAA,KAAA,IAAA,GAAwB,MAAM3B,EAAA,MAAK0B,GAALE,CAAA,EAAA,KAAA,IAAA,CAAkB,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpE,UAAmB;AAClB,WAAA,KAAK,SAAS,WAAW;AAAA,EAAA;AAAA,EAuFxB,SAAS;AACjB,UAAMQ,IAAU,CAAC,KAAK,WAAW,CAAC,KAAK,aAAa;AAC7C,WAAAhC;AAAA,KACJiC,EAAKD,GAAS,MAAMhC,mDAAsD,CAAC;AAAA,KAC3EiC,EAAK,CAACD,GAAS,MAAMhC,IAAOJ,EAAA,MAAK0B,GAALG,EAAA,EAAA,KAAA,IAAA,CAAoB,GAAG7B,EAAA,MAAK0B,GAALI,EAAA,EAAA,KAAA,IAAA,CAAqB,EAAE,CAAC;AAAA;AAAA,KAE3EO,EAAK,CAACD,GAAS,MAAMpC,EAAK,MAAA0B,GAAAK,EAAA,EAAL,UAAuB,CAAC;AAAA;AAAA,EAAA;AAwHlD;AA3RCP,IAAA,oBAAA,QAAA;AAeAC,IAAA,oBAAA,QAAA;AAhBMC,IAAA,oBAAA,QAAA;AA0EAC,IAAe,iBAAG;AACvB,QAAMW,IAAoB,KAAK,eAAe,gBAA0B,YAAY,KAAK,CAAC;AAG1F,MAAI,CAACA,EAAkB,SAASN,EAA2B,GAAG;AAC7D,UAAM,EAAE,KAAAO,EAAA,IAAQ,MAAM,OAAO,+CAA0D;AACvF,SAAK,YAAY,KAAK,IAAIA,EAAI,IAAI,CAAC;AAAA,EAAA;AAG9B,QAAA,IAAI,QAAc,CAACC,MAAY;AACpC,SAAK,QAAQ/B,EAAsB,iBAAiB,mBAAmB6B,CAAiB,GAAG,OAAOG,MAAc;AAC/G,iBAAW/B,KAAY+B;AACtB,YAAI/B,EAAS,KAAK;AACjB,gBAAMgC,IAAY,MAAMC,GAAgBjC,EAAS,GAAG;AACpD,UAAIgC,KACH,KAAK,YAAY,KAAK,IAAIA,EAAU,IAAI,CAAC;AAAA,QAC1C;AAGM,MAAAF,EAAA;AAAA,IAAA,CACR;AAAA,EAAA,CACD;AACF;AAEMZ,IAAW,iBAAG;AACnB,QAAMgB,IAAU,KAAK,YAAY,cAAc,SAAS;AACxD,MAAI,CAACA,EAAS;AAEd,QAAMC,IAAa,KAAK,eAAe,gBAAqD,YAAY;AACxG,EAAIA,GAAY,SACf,KAAK,aAAa,SAAS,cAAcA,EAAW,KAAK,KAAK,GAE3DA,GAAY,UACfD,EAAQ,aAAa,SAAS,WAAWC,EAAW,MAAM,KAAK;AAGhE,QAAMC,IAAc,KAAK,eAAe,gBAA+B,aAAa;AACpF,EAAIA,GAAa,UACJA,EAAA,QAAQ,CAACC,MAAe;AACnC,UAAMC,IACLD,EAAW,WAAW,MAAM,KAAKA,EAAW,WAAWd,CAAoB,IACxEc,IACA,GAAGd,CAAoB,GAAGc,CAAU;AACnC,IAAA9C,EAAA,MAAAuB,CAAA,EAAa,IAAIwB,CAAQ;AAAA,EAAA,CAC9B,GAGG,KAAA,WAAW,KAAK,eAAe,gBAAuC,SAAS,KAAK,CAAC,CAAC,CAAA,CAAE,CAAC,GAC9F,KAAK,aAAa,KAAK,eAAe,gBAAyC,WAAW,KAAK,CAAC;AAEhG,QAAMC,IAA+B,CAAC;AAEjC,OAAA,YAAY,QAAQ,CAACrC,MAAQ;AACjC,UAAMsC,IAAYtC,EAAI,oBAAoB,EAAE,eAAe,KAAK,eAAe;AAC/E,IAAIsC,GAAW,UACGD,EAAA,KAAK,GAAGC,CAAS;AAG7B,UAAAC,IAASvC,EAAI,UAAU;AAC7B,IAAIuC,KACE,KAAA,QAAQ,KAAKA,CAAM;AAAA,EACzB,CACA,GAEI,KAAA,UAAU,IAAIC,GAAO;AAAA,IACzB,SAAAR;AAAA,IACA,UAAU,CAAC,KAAK;AAAA,IAChB,YAAYK;AAAA,IACZ,SAAShD,EAAK,MAAAwB,CAAA;AAAA;AAAA,IAEd,gBAAgB,CAAC,EAAE,QAAA4B,QAAa;AAC/B,WAAK,YAAY,QAAQ,CAACzC,MAAQA,EAAI,UAAUyC,CAAM,CAAC;AAAA,IACxD;AAAA,IACA,gBAAgB,CAAC,EAAE,OAAAC,QAAY;AAC9B,cAAQ,MAAM,gBAAgB,CAACA,EAAM,SAASA,EAAM,KAAK,CAAC;AAAA,IAC3D;AAAA,IACA,UAAU,CAAC,EAAE,QAAAD,QAAa;AACpB,MAAAtD,EAAA,MAAA0B,GAAS4B,EAAO,QAAQ,CAAA,GAC7B,KAAK,eAAe,GACf,KAAA,cAAc,IAAIE,IAAgB;AAAA,IAAA;AAAA,EACxC,CACA;AACF;AAYA1B,KAAa,WAAG;AACX,MAAC,KAAK,SAAS;AACZ,WAAAzB;AAAA,KACJoD;AAAA,MACDvD,EAAK,MAAAuB,CAAA;AAAA,MACL,CAACuB,MAAeA;AAAA,MAChB,CAACA,MAAe3C,iCAAoC2C,CAAU;AAAA,IAC9D,CAAA;AAAA;AAAA,MAEE,KAAK,QAAQ,IAAI,CAACU,MAAUC,GAAUD,CAAK,CAAC,CAAC;AAAA;AAAA;AAGlD;AAEA3B,KAAc,WAAG;AAChB,MAAK,KAAK,SAAS,KAAK,CAAC,EAAE;AACpB,WAAA1B;AAAA;AAAA;AAAA,eAGM,KAAK,QAAQ;AAAA,cACd,KAAK,OAAO;AAAA,qBACL,KAAK,aAAa;AAAA,gBACvB,KAAK,QAAQ;AAAA;AAAA;AAG5B;AAEA2B,KAAgB,WAAG;AAClB,MAAK,KAAK,WAAW,KAAA,EAAO;AACrB,WAAA3B;AAAA;AAAA;AAAA,iBAGQ,KAAK,UAAU;AAAA,cAClB,KAAK,OAAO;AAAA,qBACL,KAAK,aAAa;AAAA,gBACvB,KAAK,QAAQ;AAAA;AAAA;AAG5B;AA9MY8B,EAgNa,SAAS;AAAA,EACjCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0ED;AAvRaC,EAAA;AAAA,EADZE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAHdkB,EAIC,WAAA,SAAA,CAAA;AAebpB,EAAA;AAAA,EADCE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAlBlBkB,EAmBZ,WAAA,iBAAA,CAAA;AAOApB,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAzBfkB,EA0BZ,WAAA,YAAA,CAAA;AAGApB,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5BdkB,EA6BZ,WAAA,mBAAA,CAAA;AAMApB,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAlC9BkB,EAmCZ,WAAA,YAAA,CAAA;AAGQpB,EAAA;AAAA,EADPC,EAAM;AAAA,GArCKmB,EAsCJ,WAAA,WAAA,CAAA;AAGSpB,EAAA;AAAA,EADhBC,EAAM;AAAA,GAxCKmB,EAyCK,WAAA,eAAA,CAAA;AAGTpB,EAAA;AAAA,EADPC,EAAM;AAAA,GA3CKmB,EA4CJ,WAAA,WAAA,CAAA;AAGApB,EAAA;AAAA,EADPC,EAAM;AAAA,GA9CKmB,EA+CJ,WAAA,YAAA,CAAA;AAGApB,EAAA;AAAA,EADPC,EAAM;AAAA,GAjDKmB,EAkDJ,WAAA,cAAA,CAAA;AAlDIA,IAANpB,EAAA;AAAA,EADNG,EAAc,kBAAkB;AAAA,GACpBiB,CAAA;"}