{"version":3,"file":"tiptap-toolbar-button.element-DDYbq485.js","sources":["../../../src/packages/tiptap/components/toolbar/tiptap-toolbar-button.element.ts"],"sourcesContent":["import type { ManifestTiptapToolbarExtensionButtonKind } from '../../extensions/index.js';\r\nimport type { UmbTiptapToolbarElementApi } from '../../extensions/types.js';\r\nimport type { Editor } from '@umbraco-cms/backoffice/external/tiptap';\r\nimport { customElement, html, state, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-tiptap-toolbar-button')\r\nexport class UmbTiptapToolbarButtonElement extends UmbLitElement {\r\n\tpublic api?: UmbTiptapToolbarElementApi;\r\n\tpublic editor?: Editor;\r\n\tpublic manifest?: ManifestTiptapToolbarExtensionButtonKind;\r\n\r\n\t@state()\r\n\tprotected isActive = false;\r\n\r\n\toverride connectedCallback() {\r\n\t\tsuper.connectedCallback();\r\n\r\n\t\tif (this.editor) {\r\n\t\t\tthis.editor.on('selectionUpdate', this.#onEditorUpdate);\r\n\t\t\tthis.editor.on('update', this.#onEditorUpdate);\r\n\t\t}\r\n\t}\r\n\r\n\toverride disconnectedCallback() {\r\n\t\tsuper.disconnectedCallback();\r\n\r\n\t\tif (this.editor) {\r\n\t\t\tthis.editor.off('selectionUpdate', this.#onEditorUpdate);\r\n\t\t\tthis.editor.off('update', this.#onEditorUpdate);\r\n\t\t}\r\n\t}\r\n\r\n\treadonly #onEditorUpdate = () => {\r\n\t\tif (this.api && this.editor && this.manifest) {\r\n\t\t\tthis.isActive = this.api.isActive(this.editor);\r\n\t\t}\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst label = this.localize.string(this.manifest?.meta.label);\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tcompact\r\n\t\t\t\tlook=${this.isActive ? 'outline' : 'default'}\r\n\t\t\t\tlabel=${label}\r\n\t\t\t\ttitle=${label}\r\n\t\t\t\t?disabled=${this.api && this.editor && this.api.isDisabled(this.editor)}\r\n\t\t\t\t@click=${() => this.api?.execute(this.editor)}>\r\n\t\t\t\t${when(\r\n\t\t\t\t\tthis.manifest?.meta.icon,\r\n\t\t\t\t\t(icon) => html`<umb-icon name=${icon}></umb-icon>`,\r\n\t\t\t\t\t() => html`<span>${label}</span>`,\r\n\t\t\t\t)}\r\n\t\t\t</uui-button>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport { UmbTiptapToolbarButtonElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-tiptap-toolbar-button': UmbTiptapToolbarButtonElement;\r\n\t}\r\n}\r\n"],"names":["_onEditorUpdate","UmbTiptapToolbarButtonElement","UmbLitElement","__privateAdd","__privateGet","label","html","when","icon","__decorateClass","state","customElement"],"mappings":";;;;;;;;uQAAAA;AAOa,IAAAC,IAAN,cAA4CC,EAAc;AAAA,EAA1D,cAAA;AAAA,UAAA,GAAA,SAAA,GAMN,KAAU,WAAW,IAoBrBC,EAAA,MAASH,GAAkB,MAAM;AAChC,MAAI,KAAK,OAAO,KAAK,UAAU,KAAK,aACnC,KAAK,WAAW,KAAK,IAAI,SAAS,KAAK,MAAM;AAAA,IAC9C,CACD;AAAA,EAAA;AAAA,EAtBS,oBAAoB;AAC5B,UAAM,kBAAkB,GAEpB,KAAK,WACR,KAAK,OAAO,GAAG,mBAAmBI,EAAA,MAAKJ,CAAe,CAAA,GACtD,KAAK,OAAO,GAAG,UAAUI,EAAA,MAAKJ,CAAe,CAAA;AAAA,EAC9C;AAAA,EAGQ,uBAAuB;AAC/B,UAAM,qBAAqB,GAEvB,KAAK,WACR,KAAK,OAAO,IAAI,mBAAmBI,EAAA,MAAKJ,CAAe,CAAA,GACvD,KAAK,OAAO,IAAI,UAAUI,EAAA,MAAKJ,CAAe,CAAA;AAAA,EAC/C;AAAA,EASQ,SAAS;AACjB,UAAMK,IAAQ,KAAK,SAAS,OAAO,KAAK,UAAU,KAAK,KAAK;AACrD,WAAAC;AAAA;AAAA;AAAA,WAGE,KAAK,WAAW,YAAY,SAAS;AAAA,YACpCD,CAAK;AAAA,YACLA,CAAK;AAAA,gBACD,KAAK,OAAO,KAAK,UAAU,KAAK,IAAI,WAAW,KAAK,MAAM,CAAC;AAAA,aAC9D,MAAM,KAAK,KAAK,QAAQ,KAAK,MAAM,CAAC;AAAA,MAC3CE;AAAA,MACD,KAAK,UAAU,KAAK;AAAA,MACpB,CAACC,MAASF,mBAAsBE,CAAI;AAAA,MACpC,MAAMF,UAAaD,CAAK;AAAA,IACxB,CAAA;AAAA;AAAA;AAAA,EAAA;AAIL;AAxBUL,IAAA,oBAAA,QAAA;AApBCS,EAAA;AAAA,EADTC,EAAM;AAAA,GALKT,EAMF,WAAA,YAAA,CAAA;AANEA,IAANQ,EAAA;AAAA,EADNE,EAAc,2BAA2B;AAAA,GAC7BV,CAAA;"}