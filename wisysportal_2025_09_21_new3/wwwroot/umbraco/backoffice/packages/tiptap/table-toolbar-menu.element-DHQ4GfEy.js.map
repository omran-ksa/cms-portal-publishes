{"version":3,"file":"table-toolbar-menu.element-DHQ4GfEy.js","sources":["../../../src/packages/tiptap/extensions/table/components/table-insert.element.ts","../../../src/packages/tiptap/extensions/table/components/table-toolbar-menu.element.ts"],"sourcesContent":["import { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { TemplateResult } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { Editor } from '@umbraco-cms/backoffice/external/tiptap';\r\n\r\n@customElement('umb-tiptap-table-insert')\r\nexport class UmbTiptapTableInsertElement extends UmbLitElement {\r\n\teditor?: Editor;\r\n\r\n\t@state()\r\n\tprivate _selectedColumn = 0;\r\n\r\n\t@state()\r\n\tprivate _selectedRow = 0;\r\n\r\n\t#onClick(column: number, row: number) {\r\n\t\tthis._selectedColumn = column;\r\n\t\tthis._selectedRow = row;\r\n\r\n\t\tthis.editor?.chain().focus().insertTable({ rows: row, cols: column, withHeaderRow: false }).run();\r\n\t}\r\n\r\n\t#onMouseover(column: number, row: number) {\r\n\t\tthis._selectedColumn = column;\r\n\t\tthis._selectedRow = row;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst rows = 10;\r\n\t\tconst columns = 10;\r\n\r\n\t\tconst cells: Array<Array<TemplateResult>> = [];\r\n\r\n\t\tfor (let i = 1; i <= rows; i++) {\r\n\t\t\tconst row = [];\r\n\t\t\tfor (let j = 1; j <= columns; j++) {\r\n\t\t\t\trow.push(html`\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclass=${i <= this._selectedRow && j <= this._selectedColumn ? 'selected' : ''}\r\n\t\t\t\t\t\taria-label=\"${j} columns, ${i} rows\"\r\n\t\t\t\t\t\t@mouseover=${() => this.#onMouseover(j, i)}\r\n\t\t\t\t\t\t@click=${() => this.#onClick(j, i)}></button>\r\n\t\t\t\t`);\r\n\t\t\t}\r\n\t\t\tcells.push(row);\r\n\t\t}\r\n\r\n\t\treturn html`\r\n\t\t\t<div id=\"grid\">${cells}</div>\r\n\t\t\t<label>${this._selectedColumn} &times; ${this._selectedRow}</label>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tbackground-color: var(--uui-color-surface);\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\twidth: 170px;\r\n\t\t\t}\r\n\r\n\t\t\t#grid {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-wrap: wrap;\r\n\r\n\t\t\t\t> button {\r\n\t\t\t\t\tall: unset;\r\n\t\t\t\t\tbox-sizing: border-box;\r\n\r\n\t\t\t\t\tborder-color: var(--uui-color-border);\r\n\t\t\t\t\tborder-style: solid;\r\n\t\t\t\t\tborder-width: 0 1px 1px 0;\r\n\r\n\t\t\t\t\theight: 17px;\r\n\t\t\t\t\twidth: 17px;\r\n\r\n\t\t\t\t\t&:hover,\r\n\t\t\t\t\t&.selected {\r\n\t\t\t\t\t\tbackground-color: var(--uui-color-background);\r\n\t\t\t\t\t\tborder-color: var(--uui-color-selected);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbTiptapTableInsertElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-tiptap-table-insert': UmbTiptapTableInsertElement;\r\n\t}\r\n}\r\n","import { UmbTiptapToolbarMenuElement } from '../../../components/toolbar/tiptap-toolbar-menu.element.js';\r\nimport { customElement, html, ifDefined, when } from '@umbraco-cms/backoffice/external/lit';\r\n\r\nimport './table-insert.element.js';\r\n\r\n@customElement('umb-tiptap-table-toolbar-menu-element')\r\nexport class UmbTiptapTableToolbarMenuElement extends UmbTiptapToolbarMenuElement {\r\n\toverride render() {\r\n\t\tconst label = this.localize.string(this.manifest?.meta.label);\r\n\t\treturn html`\r\n\t\t\t${when(\r\n\t\t\t\tthis.isActive,\r\n\t\t\t\t() => html`\r\n\t\t\t\t\t<uui-button compact look=\"outline\" label=${ifDefined(label)} title=${label} popovertarget=\"popover-menu\">\r\n\t\t\t\t\t\t${when(\r\n\t\t\t\t\t\t\tthis.manifest?.meta.icon,\r\n\t\t\t\t\t\t\t(icon) => html`<umb-icon name=${icon}></umb-icon>`,\r\n\t\t\t\t\t\t\t() => html`<span>${label}</span>`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<uui-symbol-expand slot=\"extra\" open></uui-symbol-expand>\r\n\t\t\t\t\t</uui-button>\r\n\t\t\t\t`,\r\n\t\t\t\t() => html`\r\n\t\t\t\t\t<uui-button compact look=\"default\" label=${ifDefined(label)} title=${label} popovertarget=\"popover-insert\">\r\n\t\t\t\t\t\t${when(\r\n\t\t\t\t\t\t\tthis.manifest?.meta.icon,\r\n\t\t\t\t\t\t\t(icon) => html`<umb-icon name=${icon}></umb-icon>`,\r\n\t\t\t\t\t\t\t() => html`<span>${label}</span>`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<uui-symbol-expand slot=\"extra\" open></uui-symbol-expand>\r\n\t\t\t\t\t</uui-button>\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t\t${this.renderMenu()}\r\n\t\t\t<uui-popover-container id=\"popover-insert\" style=\"box-shadow: var(--uui-shadow-depth-3);\">\r\n\t\t\t\t<umb-tiptap-table-insert .editor=${this.editor}></umb-tiptap-table-insert>\r\n\t\t\t</uui-popover-container>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport { UmbTiptapTableToolbarMenuElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-tiptap-table-toolbar-menu-element': UmbTiptapTableToolbarMenuElement;\r\n\t}\r\n}\r\n"],"names":["_UmbTiptapTableInsertElement_instances","onClick_fn","onMouseover_fn","UmbTiptapTableInsertElement","UmbLitElement","__privateAdd","cells","i","row","j","html","__privateMethod","column","css","__decorateClass","state","customElement","UmbTiptapTableToolbarMenuElement","UmbTiptapToolbarMenuElement","label","when","ifDefined","icon"],"mappings":";;;;;;;;;8OAAAA,GAAAC,GAAAC;AAMa,IAAAC,IAAN,cAA0CC,EAAc;AAAA,EAAxD,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAL,CAAA,GAIN,KAAQ,kBAAkB,GAG1B,KAAQ,eAAe;AAAA,EAAA;AAAA,EAcd,SAAS;AAIjB,UAAMM,IAAsC,CAAC;AAE7C,aAASC,IAAI,GAAGA,KAAK,IAAMA,KAAK;AAC/B,YAAMC,IAAM,CAAC;AACb,eAASC,IAAI,GAAGA,KAAK,IAASA;AAC7B,QAAAD,EAAI,KAAKE;AAAA;AAAA;AAAA,cAGCH,KAAK,KAAK,gBAAgBE,KAAK,KAAK,kBAAkB,aAAa,EAAE;AAAA,oBAC/DA,CAAC,aAAaF,CAAC;AAAA,mBAChB,MAAMI,EAAA,MAAKX,GAALE,CAAA,EAAA,KAAA,MAAkBO,GAAGF,CAAE,CAAA;AAAA,eACjC,MAAMI,EAAA,MAAKX,GAALC,CAAA,EAAA,KAAA,MAAcQ,GAAGF,CAAE,CAAA;AAAA,KACnC;AAEF,MAAAD,EAAM,KAAKE,CAAG;AAAA,IAAA;AAGR,WAAAE;AAAA,oBACWJ,CAAK;AAAA,YACb,KAAK,eAAe,YAAY,KAAK,YAAY;AAAA;AAAA,EAAA;AAuC7D;AAnFON,IAAA,oBAAA,QAAA;AASNC,IAAQ,SAACW,GAAgBJ,GAAa;AACrC,OAAK,kBAAkBI,GACvB,KAAK,eAAeJ,GAEpB,KAAK,QAAQ,MAAA,EAAQ,QAAQ,YAAY,EAAE,MAAMA,GAAK,MAAMI,GAAQ,eAAe,GAAO,CAAA,EAAE,IAAI;AACjG;AAEAV,IAAY,SAACU,GAAgBJ,GAAa;AACzC,OAAK,kBAAkBI,GACvB,KAAK,eAAeJ;AACrB;AAnBYL,EAgDa,SAAS;AAAA,EACjCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCD;AA9EQC,EAAA;AAAA,EADPC,EAAM;AAAA,GAHKZ,EAIJ,WAAA,mBAAA,CAAA;AAGAW,EAAA;AAAA,EADPC,EAAM;AAAA,GANKZ,EAOJ,WAAA,gBAAA,CAAA;AAPIA,IAANW,EAAA;AAAA,EADNE,EAAc,yBAAyB;AAAA,GAC3Bb,CAAA;;;;;;ACAA,IAAAc,IAAN,cAA+CC,EAA4B;AAAA,EACxE,SAAS;AACjB,UAAMC,IAAQ,KAAK,SAAS,OAAO,KAAK,UAAU,KAAK,KAAK;AACrD,WAAAT;AAAA,KACJU;AAAA,MACD,KAAK;AAAA,MACL,MAAMV;AAAA,gDACsCW,EAAUF,CAAK,CAAC,UAAUA,CAAK;AAAA,QACvEC;AAAA,QACD,KAAK,UAAU,KAAK;AAAA,QACpB,CAACE,MAASZ,mBAAsBY,CAAI;AAAA,QACpC,MAAMZ,UAAaS,CAAK;AAAA,MACxB,CAAA;AAAA;AAAA;AAAA;AAAA,MAIH,MAAMT;AAAA,gDACsCW,EAAUF,CAAK,CAAC,UAAUA,CAAK;AAAA,QACvEC;AAAA,QACD,KAAK,UAAU,KAAK;AAAA,QACpB,CAACE,MAASZ,mBAAsBY,CAAI;AAAA,QACpC,MAAMZ,UAAaS,CAAK;AAAA,MACxB,CAAA;AAAA;AAAA;AAAA;AAAA,IAIH,CAAA;AAAA,KACC,KAAK,WAAY,CAAA;AAAA;AAAA,uCAEiB,KAAK,MAAM;AAAA;AAAA;AAAA,EAAA;AAIlD;AAjCaF,IAANH,EAAA;AAAA,EADNE,EAAc,uCAAuC;AAAA,GACzCC,CAAA;"}