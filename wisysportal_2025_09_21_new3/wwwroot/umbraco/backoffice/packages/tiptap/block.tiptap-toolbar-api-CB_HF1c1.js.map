{"version":3,"file":"block.tiptap-toolbar-api-CB_HF1c1.js","sources":["../../../src/packages/tiptap/extensions/block/block.tiptap-toolbar-api.ts"],"sourcesContent":["import { UmbTiptapToolbarElementApiBase } from '../base.js';\r\nimport { UMB_BLOCK_RTE_MANAGER_CONTEXT, UMB_BLOCK_RTE_ENTRIES_CONTEXT } from '@umbraco-cms/backoffice/block-rte';\r\nimport type { Editor } from '@umbraco-cms/backoffice/external/tiptap';\r\nimport type { UmbBlockTypeBaseModel } from '@umbraco-cms/backoffice/block-type';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport default class UmbTiptapBlockPickerToolbarExtension extends UmbTiptapToolbarElementApiBase {\r\n\t#blocks?: Array<UmbBlockTypeBaseModel>;\r\n\t#entriesContext?: typeof UMB_BLOCK_RTE_ENTRIES_CONTEXT.TYPE;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_RTE_MANAGER_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext?.blockTypes,\r\n\t\t\t\t(blockTypes) => {\r\n\t\t\t\t\tthis.#blocks = blockTypes;\r\n\t\t\t\t},\r\n\t\t\t\t'blockType',\r\n\t\t\t);\r\n\t\t});\r\n\t\tthis.consumeContext(UMB_BLOCK_RTE_ENTRIES_CONTEXT, (context) => {\r\n\t\t\tthis.#entriesContext = context;\r\n\t\t});\r\n\t}\r\n\r\n\toverride isActive(editor?: Editor) {\r\n\t\treturn editor?.isActive('umbRteBlock') === true || editor?.isActive('umbRteBlockInline') === true;\r\n\t}\r\n\r\n\toverride async execute() {\r\n\t\treturn this.#createBlock();\r\n\t}\r\n\r\n\t#createBlock() {\r\n\t\tif (!this.#entriesContext) {\r\n\t\t\tconsole.error('[Block Picker] No entries context available.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet createPath: string | undefined = undefined;\r\n\r\n\t\tif (this.#blocks?.length === 1) {\r\n\t\t\tconst elementKey = this.#blocks[0].contentElementTypeKey;\r\n\t\t\tcreatePath = this.#entriesContext.getPathForCreateBlock() + 'modal/umb-modal-workspace/create/' + elementKey;\r\n\t\t} else {\r\n\t\t\tcreatePath = this.#entriesContext.getPathForCreateBlock();\r\n\t\t}\r\n\r\n\t\tif (createPath) {\r\n\t\t\twindow.history.pushState({}, '', createPath);\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["UmbTiptapBlockPickerToolbarExtension","UmbTiptapToolbarElementApiBase","#blocks","#entriesContext","host","UMB_BLOCK_RTE_MANAGER_CONTEXT","context","blockTypes","UMB_BLOCK_RTE_ENTRIES_CONTEXT","editor","#createBlock","createPath","elementKey"],"mappings":";;AAMA,MAAqBA,UAA6CC,EAA+B;AAAA,EAChGC;AAAA,EACAC;AAAA,EAEA,YAAYC,GAAyB;AACpC,UAAMA,CAAI,GAEL,KAAA,eAAeC,GAA+B,CAACC,MAAY;AAC1D,WAAA;AAAA,QACJA,GAAS;AAAA,QACT,CAACC,MAAe;AACf,eAAKL,KAAUK;AAAA,QAChB;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA,GACI,KAAA,eAAeC,GAA+B,CAACF,MAAY;AAC/D,WAAKH,KAAkBG;AAAA,IAAA,CACvB;AAAA,EAAA;AAAA,EAGO,SAASG,GAAiB;AAC3B,WAAAA,GAAQ,SAAS,aAAa,MAAM,MAAQA,GAAQ,SAAS,mBAAmB,MAAM;AAAA,EAAA;AAAA,EAG9F,MAAe,UAAU;AACxB,WAAO,KAAKC,GAAa;AAAA,EAAA;AAAA,EAG1BA,KAAe;AACV,QAAA,CAAC,KAAKP,IAAiB;AAC1B,cAAQ,MAAM,8CAA8C;AAC5D;AAAA,IAAA;AAGD,QAAIQ;AAEA,QAAA,KAAKT,IAAS,WAAW,GAAG;AAC/B,YAAMU,IAAa,KAAKV,GAAQ,CAAC,EAAE;AACnC,MAAAS,IAAa,KAAKR,GAAgB,sBAAsB,IAAI,sCAAsCS;AAAA,IAAA;AAErF,MAAAD,IAAA,KAAKR,GAAgB,sBAAsB;AAGzD,IAAIQ,KACH,OAAO,QAAQ,UAAU,CAAA,GAAI,IAAIA,CAAU;AAAA,EAC5C;AAEF;"}