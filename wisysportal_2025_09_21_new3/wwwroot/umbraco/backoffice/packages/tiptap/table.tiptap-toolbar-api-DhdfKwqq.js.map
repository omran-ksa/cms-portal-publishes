{"version":3,"file":"table.tiptap-toolbar-api-DhdfKwqq.js","sources":["../../../src/packages/tiptap/extensions/table/table.tiptap-toolbar-api.ts"],"sourcesContent":["import { UmbTiptapToolbarElementApiBase } from '../base.js';\r\nimport type { MetaTiptapToolbarMenuItem } from '../types.js';\r\nimport { UMB_TIPTAP_TABLE_PROPERTIES_MODAL } from './components/table-properties-modal.token.js';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport type { Editor } from '@umbraco-cms/backoffice/external/tiptap';\r\n\r\nexport class UmbTiptapToolbarTableExtensionApi extends UmbTiptapToolbarElementApiBase {\r\n\t#commands: Record<string, (editor?: Editor) => void> = {\r\n\t\t// Cells\r\n\t\tmergeCells: (editor) => editor?.chain().focus().mergeCells().run(),\r\n\t\tsplitCell: (editor) => editor?.chain().focus().splitCell().run(),\r\n\t\tmergeOrSplit: (editor) => editor?.chain().focus().mergeOrSplit().run(),\r\n\t\ttoggleHeaderCell: (editor) => editor?.chain().focus().toggleHeaderCell().run(),\r\n\r\n\t\t// Rows\r\n\t\taddRowBefore: (editor) => editor?.chain().focus().addRowBefore().run(),\r\n\t\taddRowAfter: (editor) => editor?.chain().focus().addRowAfter().run(),\r\n\t\tdeleteRow: (editor) => editor?.chain().focus().deleteRow().run(),\r\n\t\ttoggleHeaderRow: (editor) => editor?.chain().focus().toggleHeaderRow().run(),\r\n\r\n\t\t// Columns\r\n\t\taddColumnBefore: (editor) => editor?.chain().focus().addColumnBefore().run(),\r\n\t\taddColumnAfter: (editor) => editor?.chain().focus().addColumnAfter().run(),\r\n\t\tdeleteColumn: (editor) => editor?.chain().focus().deleteColumn().run(),\r\n\t\ttoggleHeaderColumn: (editor) => editor?.chain().focus().toggleHeaderColumn().run(),\r\n\r\n\t\t// Table\r\n\t\tdeleteTable: (editor) => editor?.chain().focus().deleteTable().run(),\r\n\t\ttableProperties: (editor) => this.#tableProperties(editor),\r\n\t};\r\n\r\n\toverride isActive(editor?: Editor, item?: unknown) {\r\n\t\tif (!item) return super.isActive(editor);\r\n\t\treturn false;\r\n\t}\r\n\r\n\tasync #tableProperties(editor?: Editor) {\r\n\t\tif (!editor || !editor.isActive('table')) return;\r\n\r\n\t\tconst modalData = this.#getModalData(editor);\r\n\t\tconst modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tconst modal = modalManager?.open(this, UMB_TIPTAP_TABLE_PROPERTIES_MODAL, modalData);\r\n\r\n\t\tif (!modal) return;\r\n\r\n\t\tconst data = await modal.onSubmit().catch(() => undefined);\r\n\t\tif (!data) return;\r\n\r\n\t\tconst style = this.#getStyles(data);\r\n\t\tif (!style) return;\r\n\r\n\t\teditor?.chain().focus().updateAttributes('table', { style }).run();\r\n\t}\r\n\r\n\t#getModalData(editor?: Editor) {\r\n\t\tconst tableStyles = (editor?.getAttributes('table').style as string) ?? '';\r\n\t\tconst table = document.createElement('table');\r\n\t\ttable.style.cssText = tableStyles;\r\n\r\n\t\tconst data: Record<string, unknown> = {};\r\n\r\n\t\tdata.alignment = this.#getAlignment(table.style);\r\n\t\tif (table.style.backgroundColor) data.backgroundColor = table.style.backgroundColor;\r\n\t\tif (table.style.borderColor) data.borderColor = table.style.borderColor;\r\n\t\tif (table.style.borderStyle) data.borderStyle = table.style.borderStyle;\r\n\t\tif (table.style.borderWidth) data.borderWidth = table.style.borderWidth;\r\n\t\tif (table.style.height) data.height = table.style.height;\r\n\t\tif (table.style.width) data.width = table.style.width;\r\n\r\n\t\treturn { data };\r\n\t}\r\n\r\n\t#getAlignment(style: CSSStyleDeclaration) {\r\n\t\tif (style.marginLeft === 'auto' && style.marginRight === 'auto') {\r\n\t\t\treturn 'center';\r\n\t\t} else if (style.marginRight === 'auto') {\r\n\t\t\treturn 'left';\r\n\t\t} else if (style.marginLeft === 'auto') {\r\n\t\t\treturn 'right';\r\n\t\t}\r\n\t\treturn 'none';\r\n\t}\r\n\r\n\t#getStyles(data: typeof UMB_TIPTAP_TABLE_PROPERTIES_MODAL.VALUE) {\r\n\t\tconst styles: Record<string, unknown> = {};\r\n\r\n\t\t// TODO: Move this to a shared utility function. [LK]\r\n\t\tconst camelCaseToKebabCase = (str: string): string => {\r\n\t\t\treturn str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\r\n\t\t};\r\n\r\n\t\tfor (const item of data) {\r\n\t\t\tif (!item.value) continue;\r\n\r\n\t\t\tswitch (item.alias) {\r\n\t\t\t\tcase 'alignment': {\r\n\t\t\t\t\tconst alignment =\r\n\t\t\t\t\t\tArray.isArray(item.value) && item.value.length ? (item.value[0] as string) : ((item.value as string) ?? '');\r\n\t\t\t\t\tswitch (alignment) {\r\n\t\t\t\t\t\tcase 'left':\r\n\t\t\t\t\t\t\tstyles['margin-right'] = 'auto';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'center':\r\n\t\t\t\t\t\t\tstyles['margin-left'] = 'auto';\r\n\t\t\t\t\t\t\tstyles['margin-right'] = 'auto';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'right':\r\n\t\t\t\t\t\t\tstyles['margin-left'] = 'auto;';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tstyles['margin-left'] = 'none';\r\n\t\t\t\t\t\t\tstyles['margin-right'] = 'none';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase 'borderStyle': {\r\n\t\t\t\t\tconst borderStyle =\r\n\t\t\t\t\t\tArray.isArray(item.value) && item.value.length ? (item.value[0] as string) : ((item.value as string) ?? '');\r\n\t\t\t\t\tif (borderStyle) styles['border-style'] = borderStyle;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase 'backgroundColor':\r\n\t\t\t\tcase 'borderColor':\r\n\t\t\t\tcase 'borderWidth':\r\n\t\t\t\tcase 'height':\r\n\t\t\t\tcase 'width': {\r\n\t\t\t\t\tconst propertyName = camelCaseToKebabCase(item.alias);\r\n\t\t\t\t\tstyles[propertyName] = item.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Object.entries(styles)\r\n\t\t\t.map(([key, value]) => `${key}: ${value}`)\r\n\t\t\t.join(';');\r\n\t}\r\n\r\n\toverride execute(editor?: Editor, item?: MetaTiptapToolbarMenuItem) {\r\n\t\tif (!item?.data) return;\r\n\t\tconst key = item.data.toString();\r\n\t\tthis.#commands[key](editor);\r\n\t}\r\n}\r\n\r\nexport { UmbTiptapToolbarTableExtensionApi as api };\r\n"],"names":["UmbTiptapToolbarTableExtensionApi","UmbTiptapToolbarElementApiBase","#commands","editor","#tableProperties","item","modalData","#getModalData","modal","UMB_MODAL_MANAGER_CONTEXT","UMB_TIPTAP_TABLE_PROPERTIES_MODAL","data","style","#getStyles","tableStyles","table","#getAlignment","styles","camelCaseToKebabCase","str","$","ofs","borderStyle","propertyName","key","value"],"mappings":"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"}