{"version":3,"file":"package.repository-DyWS8t6-.js","sources":["../../../src/packages/packages/package/repository/sources/package.server.data.ts","../../../src/packages/packages/package/repository/package.repository.ts"],"sourcesContent":["import { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport { ManifestService, PackageService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type {\r\n\tCreatePackageRequestModel,\r\n\tUpdatePackageRequestModelWritable,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\n/**\r\n * Data source for packages from the server\r\n \r\n */\r\nexport class UmbPackageServerDataSource {\r\n\tconstructor(private readonly host: UmbControllerHost) {}\r\n\r\n\tasync deleteCreatedPackage(unique: string) {\r\n\t\treturn await tryExecute(this.host, PackageService.deletePackageCreatedById({ path: { id: unique } }));\r\n\t}\r\n\r\n\tgetCreatedPackage(unique: string) {\r\n\t\treturn tryExecute(this.host, PackageService.getPackageCreatedById({ path: { id: unique } }));\r\n\t}\r\n\r\n\tgetCreatedPackages({ skip, take }: { skip: number; take: number }) {\r\n\t\treturn tryExecute(this.host, PackageService.getPackageCreated({ query: { skip, take } }));\r\n\t}\r\n\r\n\tgetCreatePackageDownload(unique: string) {\r\n\t\treturn tryExecute(this.host, PackageService.getPackageCreatedByIdDownload({ path: { id: unique } }));\r\n\t}\r\n\r\n\t/**\r\n\t * Get the root items from the server\r\n\t * @memberof UmbPackageServerDataSource\r\n\t */\r\n\tgetRootItems() {\r\n\t\treturn tryExecute(this.host, ManifestService.getManifestManifest());\r\n\t}\r\n\r\n\t/**\r\n\t * Get the package configuration from the server\r\n\t * @memberof UmbPackageServerDataSource\r\n\t */\r\n\tgetPackageConfiguration() {\r\n\t\treturn tryExecute(this.host, PackageService.getPackageConfiguration());\r\n\t}\r\n\r\n\t/**\r\n\t * Get the package migrations from the server\r\n\t * @memberof UmbPackageServerDataSource\r\n\t */\r\n\tgetPackageMigrations() {\r\n\t\treturn tryExecute(this.host, PackageService.getPackageMigrationStatus({ query: { skip: 0, take: 9999 } }));\r\n\t}\r\n\r\n\tasync saveCreatedPackage(body: CreatePackageRequestModel) {\r\n\t\treturn await tryExecute(this.host, PackageService.postPackageCreated({ body }));\r\n\t}\r\n\r\n\tasync updateCreatedPackage(id: string, body: UpdatePackageRequestModelWritable) {\r\n\t\treturn await tryExecute(this.host, PackageService.putPackageCreatedById({ path: { id }, body }));\r\n\t}\r\n}\r\n","import type { UmbCreatedPackageDefinition, UmbCreatedPackages } from '../../types.js';\r\nimport { UMB_PACKAGE_STORE_TOKEN } from './package.store.context-token.js';\r\nimport { UmbPackageServerDataSource } from './sources/package.server.data.js';\r\nimport type { UmbPackageStore } from './package.store.js';\r\nimport { isManifestBaseType } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbApi, ManifestBase } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_SERVER_CONTEXT } from '@umbraco-cms/backoffice/server';\r\n\r\n/**\r\n * A repository for Packages which mimics a tree store.\r\n\r\n */\r\nexport class UmbPackageRepository extends UmbControllerBase implements UmbApi {\r\n\t#init!: Promise<void>;\r\n\t#packageStore?: UmbPackageStore;\r\n\t#packageSource: UmbPackageServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#packageSource = new UmbPackageServerDataSource(this);\r\n\t\tthis.#init = new Promise((resolve) => {\r\n\t\t\tthis.consumeContext(UMB_PACKAGE_STORE_TOKEN, (instance) => {\r\n\t\t\t\tthis.#packageStore = instance;\r\n\t\t\t\tif (instance) {\r\n\t\t\t\t\tthis.requestConfiguration(instance);\r\n\t\t\t\t\tthis.requestRootItems(instance);\r\n\t\t\t\t\tthis.requestPackageMigrations(instance);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tasync getCreatedPackage(unique: string | undefined): Promise<UmbCreatedPackageDefinition> {\r\n\t\tif (!unique) {\r\n\t\t\treturn this.#getEmptyCreatedPackage();\r\n\t\t}\r\n\r\n\t\tconst { data } = await this.#packageSource.getCreatedPackage(unique);\r\n\r\n\t\tif (!data) {\r\n\t\t\treturn this.#getEmptyCreatedPackage();\r\n\t\t}\r\n\r\n\t\tconst { id, ...model } = data;\r\n\t\treturn { unique: id, ...model };\r\n\t}\r\n\r\n\tasync getCreatedPackages({ skip, take }: { skip: number; take: number }): Promise<UmbCreatedPackages | undefined> {\r\n\t\tconst { data } = await this.#packageSource.getCreatedPackages({ skip, take });\r\n\t\tif (!data) return undefined;\r\n\t\treturn {\r\n\t\t\titems: data.items?.map((item) => ({ unique: item.id, name: item.name })),\r\n\t\t\ttotal: data.total,\r\n\t\t};\r\n\t}\r\n\r\n\tasync getCreatePackageDownload(unique: string): Promise<Blob | undefined> {\r\n\t\tconst { data } = await this.#packageSource.getCreatePackageDownload(unique);\r\n\t\treturn data;\r\n\t}\r\n\r\n\t#getEmptyCreatedPackage(): UmbCreatedPackageDefinition {\r\n\t\treturn {\r\n\t\t\tunique: '',\r\n\t\t\tname: '',\r\n\t\t\tpackagePath: '',\r\n\t\t\tcontentNodeId: undefined,\r\n\t\t\tcontentLoadChildNodes: false,\r\n\t\t\tmediaIds: [],\r\n\t\t\tmediaLoadChildNodes: false,\r\n\t\t\tdocumentTypes: [],\r\n\t\t\tmediaTypes: [],\r\n\t\t\tdataTypes: [],\r\n\t\t\ttemplates: [],\r\n\t\t\tpartialViews: [],\r\n\t\t\tstylesheets: [],\r\n\t\t\tscripts: [],\r\n\t\t\tlanguages: [],\r\n\t\t\tdictionaryItems: [],\r\n\t\t};\r\n\t}\r\n\r\n\tasync deleteCreatedPackage(unique: string) {\r\n\t\tconst { error } = await this.#packageSource.deleteCreatedPackage(unique);\r\n\t\treturn !error;\r\n\t}\r\n\r\n\tasync requestConfiguration(store: UmbPackageStore) {\r\n\t\tconst { data } = await this.#packageSource.getPackageConfiguration();\r\n\t\tif (data) {\r\n\t\t\tstore.setConfiguration(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Request the root items from the Data Source\r\n\t * @param store\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync requestRootItems(store: UmbPackageStore) {\r\n\t\tif (store.isPackagesLoaded) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { data: packages } = await this.#packageSource.getRootItems();\r\n\r\n\t\tif (packages) {\r\n\t\t\t// Append packages to the store but only if they have a name\r\n\t\t\tstore.appendItems(packages.filter((p) => p.name?.length));\r\n\t\t\tconst extensions: ManifestBase[] = [];\r\n\r\n\t\t\tconst serverContext = await this.getContext(UMB_SERVER_CONTEXT);\r\n\r\n\t\t\tif (!serverContext) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst serverUrl = serverContext.getServerUrl();\r\n\r\n\t\t\tpackages.forEach((p) => {\r\n\t\t\t\tp.extensions?.forEach((e) => {\r\n\t\t\t\t\t// Crudely validate that the extension at least follows a basic manifest structure\r\n\t\t\t\t\t// Idea: Use `Zod` to validate the manifest\r\n\t\t\t\t\tif (isManifestBaseType(e)) {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Crude check to see if extension is of type \"js\" since it is safe to assume we do not\r\n\t\t\t\t\t\t * need to load any other types of extensions in the backoffice (we need a js file to load)\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t// Add base url if the js path is relative\r\n\t\t\t\t\t\tif ('js' in e && typeof e.js === 'string' && !e.js.startsWith('http')) {\r\n\t\t\t\t\t\t\te.js = `${serverUrl}${e.js}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add base url if the element path is relative\r\n\t\t\t\t\t\tif ('element' in e && typeof e.element === 'string' && !e.element.startsWith('http')) {\r\n\t\t\t\t\t\t\te.element = `${serverUrl}${e.element}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add base url if the element path api relative\r\n\t\t\t\t\t\tif ('api' in e && typeof e.api === 'string' && !e.api.startsWith('http')) {\r\n\t\t\t\t\t\t\te.api = `${serverUrl}${e.api}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\textensions.push(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tstore.appendExtensions(extensions);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Request the package migrations from the Data Source\r\n\t * @param store\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync requestPackageMigrations(store: UmbPackageStore) {\r\n\t\tconst { data: migrations } = await this.#packageSource.getPackageMigrations();\r\n\r\n\t\tif (migrations) {\r\n\t\t\tstore.appendMigrations(migrations.items);\r\n\t\t}\r\n\t}\r\n\r\n\tasync saveCreatedPackage(pkg: UmbCreatedPackageDefinition) {\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\tconst { unique: _, ...model } = pkg;\r\n\t\tconst { data } = await this.#packageSource.saveCreatedPackage(model);\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync updateCreatedPackage(pkg: UmbCreatedPackageDefinition): Promise<boolean> {\r\n\t\tconst { unique, ...model } = pkg;\r\n\t\tconst { error } = await this.#packageSource.updateCreatedPackage(unique, model);\r\n\t\treturn !error;\r\n\t}\r\n\r\n\tasync configuration() {\r\n\t\tawait this.#init;\r\n\t\treturn this.#packageStore!.configuration;\r\n\t}\r\n\r\n\t/**\r\n\t * Observable of root items\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync rootItems() {\r\n\t\tawait this.#init;\r\n\t\treturn this.#packageStore!.rootItems;\r\n\t}\r\n\r\n\t/**\r\n\t * Observable of extensions\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync extensions() {\r\n\t\tawait this.#init;\r\n\t\treturn this.#packageStore!.extensions;\r\n\t}\r\n\r\n\t/**\r\n\t * Observable of migrations\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync migrations() {\r\n\t\tawait this.#init;\r\n\t\treturn this.#packageStore!.migrations;\r\n\t}\r\n}\r\n\r\nexport default UmbPackageRepository;\r\n"],"names":["UmbPackageServerDataSource","host","unique","tryExecute","PackageService","skip","take","ManifestService","body","id","UmbPackageRepository","UmbControllerBase","#init","#packageStore","#packageSource","resolve","UMB_PACKAGE_STORE_TOKEN","instance","#getEmptyCreatedPackage","data","model","item","error","store","packages","p","extensions","serverContext","UMB_SERVER_CONTEXT","serverUrl","e","isManifestBaseType","migrations","pkg","_"],"mappings":";;;;;;AAYO,MAAMA,EAA2B;AAAA,EACvC,YAA6BC,GAAyB;AAAzB,SAAA,OAAAA;AAAA,EAAA;AAAA,EAE7B,MAAM,qBAAqBC,GAAgB;AAC1C,WAAO,MAAMC,EAAW,KAAK,MAAMC,EAAe,yBAAyB,EAAE,MAAM,EAAE,IAAIF,EAAO,EAAG,CAAA,CAAC;AAAA,EAAA;AAAA,EAGrG,kBAAkBA,GAAgB;AACjC,WAAOC,EAAW,KAAK,MAAMC,EAAe,sBAAsB,EAAE,MAAM,EAAE,IAAIF,EAAA,EAAU,CAAA,CAAC;AAAA,EAAA;AAAA,EAG5F,mBAAmB,EAAE,MAAAG,GAAM,MAAAC,KAAwC;AAClE,WAAOH,EAAW,KAAK,MAAMC,EAAe,kBAAkB,EAAE,OAAO,EAAE,MAAAC,GAAM,MAAAC,EAAA,EAAQ,CAAA,CAAC;AAAA,EAAA;AAAA,EAGzF,yBAAyBJ,GAAgB;AACxC,WAAOC,EAAW,KAAK,MAAMC,EAAe,8BAA8B,EAAE,MAAM,EAAE,IAAIF,EAAA,EAAU,CAAA,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpG,eAAe;AACd,WAAOC,EAAW,KAAK,MAAMI,EAAgB,qBAAqB;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOnE,0BAA0B;AACzB,WAAOJ,EAAW,KAAK,MAAMC,EAAe,yBAAyB;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtE,uBAAuB;AACtB,WAAOD,EAAW,KAAK,MAAMC,EAAe,0BAA0B,EAAE,OAAO,EAAE,MAAM,GAAG,MAAM,KAAK,EAAG,CAAA,CAAC;AAAA,EAAA;AAAA,EAG1G,MAAM,mBAAmBI,GAAiC;AAClD,WAAA,MAAML,EAAW,KAAK,MAAMC,EAAe,mBAAmB,EAAE,MAAAI,EAAK,CAAC,CAAC;AAAA,EAAA;AAAA,EAG/E,MAAM,qBAAqBC,GAAYD,GAAyC;AAC/E,WAAO,MAAML,EAAW,KAAK,MAAMC,EAAe,sBAAsB,EAAE,MAAM,EAAE,IAAAK,KAAM,MAAAD,EAAM,CAAA,CAAC;AAAA,EAAA;AAEjG;AChDO,MAAME,UAA6BC,EAAoC;AAAA,EAC7EC;AAAA,EACAC;AAAA,EACAC;AAAA,EAEA,YAAYb,GAAyB;AACpC,UAAMA,CAAI,GACL,KAAAa,KAAiB,IAAId,EAA2B,IAAI,GACzD,KAAKY,KAAQ,IAAI,QAAQ,CAACG,MAAY;AAChC,WAAA,eAAeC,GAAyB,CAACC,MAAa;AAC1D,aAAKJ,KAAgBI,GACjBA,MACH,KAAK,qBAAqBA,CAAQ,GAClC,KAAK,iBAAiBA,CAAQ,GAC9B,KAAK,yBAAyBA,CAAQ,GAC9BF,EAAA;AAAA,MACT,CACA;AAAA,IAAA,CACD;AAAA,EAAA;AAAA,EAGF,MAAM,kBAAkBb,GAAkE;AACzF,QAAI,CAACA;AACJ,aAAO,KAAKgB,GAAwB;AAGrC,UAAM,EAAE,MAAAC,EAAK,IAAI,MAAM,KAAKL,GAAe,kBAAkBZ,CAAM;AAEnE,QAAI,CAACiB;AACJ,aAAO,KAAKD,GAAwB;AAGrC,UAAM,EAAE,IAAAT,GAAI,GAAGW,EAAA,IAAUD;AACzB,WAAO,EAAE,QAAQV,GAAI,GAAGW,EAAM;AAAA,EAAA;AAAA,EAG/B,MAAM,mBAAmB,EAAE,MAAAf,GAAM,MAAAC,KAAiF;AAC3G,UAAA,EAAE,MAAAa,EAAK,IAAI,MAAM,KAAKL,GAAe,mBAAmB,EAAE,MAAAT,GAAM,MAAAC,GAAM;AACxE,QAACa;AACE,aAAA;AAAA,QACN,OAAOA,EAAK,OAAO,IAAI,CAACE,OAAU,EAAE,QAAQA,EAAK,IAAI,MAAMA,EAAK,KAAO,EAAA;AAAA,QACvE,OAAOF,EAAK;AAAA,MACb;AAAA,EAAA;AAAA,EAGD,MAAM,yBAAyBjB,GAA2C;AACzE,UAAM,EAAE,MAAAiB,EAAK,IAAI,MAAM,KAAKL,GAAe,yBAAyBZ,CAAM;AACnE,WAAAiB;AAAA,EAAA;AAAA,EAGRD,KAAuD;AAC/C,WAAA;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,aAAa;AAAA,MACb,eAAe;AAAA,MACf,uBAAuB;AAAA,MACvB,UAAU,CAAC;AAAA,MACX,qBAAqB;AAAA,MACrB,eAAe,CAAC;AAAA,MAChB,YAAY,CAAC;AAAA,MACb,WAAW,CAAC;AAAA,MACZ,WAAW,CAAC;AAAA,MACZ,cAAc,CAAC;AAAA,MACf,aAAa,CAAC;AAAA,MACd,SAAS,CAAC;AAAA,MACV,WAAW,CAAC;AAAA,MACZ,iBAAiB,CAAA;AAAA,IAClB;AAAA,EAAA;AAAA,EAGD,MAAM,qBAAqBhB,GAAgB;AAC1C,UAAM,EAAE,OAAAoB,EAAM,IAAI,MAAM,KAAKR,GAAe,qBAAqBZ,CAAM;AACvE,WAAO,CAACoB;AAAA,EAAA;AAAA,EAGT,MAAM,qBAAqBC,GAAwB;AAClD,UAAM,EAAE,MAAAJ,EAAK,IAAI,MAAM,KAAKL,GAAe,wBAAwB;AACnE,IAAIK,KACHI,EAAM,iBAAiBJ,CAAI;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,iBAAiBI,GAAwB;AAC9C,QAAIA,EAAM;AACT;AAGD,UAAM,EAAE,MAAMC,EAAA,IAAa,MAAM,KAAKV,GAAe,aAAa;AAElE,QAAIU,GAAU;AAEP,MAAAD,EAAA,YAAYC,EAAS,OAAO,CAACC,MAAMA,EAAE,MAAM,MAAM,CAAC;AACxD,YAAMC,IAA6B,CAAC,GAE9BC,IAAgB,MAAM,KAAK,WAAWC,CAAkB;AAE9D,UAAI,CAACD;AACJ;AAGK,YAAAE,IAAYF,EAAc,aAAa;AAEpC,MAAAH,EAAA,QAAQ,CAACC,MAAM;AACrB,QAAAA,EAAA,YAAY,QAAQ,CAACK,MAAM;AAGxB,UAAAC,EAAmBD,CAAC,MAMnB,QAAQA,KAAK,OAAOA,EAAE,MAAO,YAAY,CAACA,EAAE,GAAG,WAAW,MAAM,MACnEA,EAAE,KAAK,GAAGD,CAAS,GAAGC,EAAE,EAAE,KAIvB,aAAaA,KAAK,OAAOA,EAAE,WAAY,YAAY,CAACA,EAAE,QAAQ,WAAW,MAAM,MAClFA,EAAE,UAAU,GAAGD,CAAS,GAAGC,EAAE,OAAO,KAIjC,SAASA,KAAK,OAAOA,EAAE,OAAQ,YAAY,CAACA,EAAE,IAAI,WAAW,MAAM,MACtEA,EAAE,MAAM,GAAGD,CAAS,GAAGC,EAAE,GAAG,KAG7BJ,EAAW,KAAKI,CAAC;AAAA,QAClB,CACA;AAAA,MAAA,CACD,GAEDP,EAAM,iBAAiBG,CAAU;AAAA,IAAA;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAM,yBAAyBH,GAAwB;AACtD,UAAM,EAAE,MAAMS,EAAA,IAAe,MAAM,KAAKlB,GAAe,qBAAqB;AAE5E,IAAIkB,KACGT,EAAA,iBAAiBS,EAAW,KAAK;AAAA,EACxC;AAAA,EAGD,MAAM,mBAAmBC,GAAkC;AAE1D,UAAM,EAAE,QAAQC,GAAG,GAAGd,EAAU,IAAAa,GAC1B,EAAE,MAAAd,EAAK,IAAI,MAAM,KAAKL,GAAe,mBAAmBM,CAAK;AAC5D,WAAAD;AAAA,EAAA;AAAA,EAGR,MAAM,qBAAqBc,GAAoD;AAC9E,UAAM,EAAE,QAAA/B,GAAQ,GAAGkB,EAAA,IAAUa,GACvB,EAAE,OAAAX,MAAU,MAAM,KAAKR,GAAe,qBAAqBZ,GAAQkB,CAAK;AAC9E,WAAO,CAACE;AAAA,EAAA;AAAA,EAGT,MAAM,gBAAgB;AACrB,iBAAM,KAAKV,IACJ,KAAKC,GAAe;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B,MAAM,YAAY;AACjB,iBAAM,KAAKD,IACJ,KAAKC,GAAe;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B,MAAM,aAAa;AAClB,iBAAM,KAAKD,IACJ,KAAKC,GAAe;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B,MAAM,aAAa;AAClB,iBAAM,KAAKD,IACJ,KAAKC,GAAe;AAAA,EAAA;AAE7B;"}