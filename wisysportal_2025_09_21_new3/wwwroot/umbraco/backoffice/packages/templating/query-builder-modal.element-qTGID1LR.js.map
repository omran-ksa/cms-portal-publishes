{"version":3,"file":"query-builder-modal.element-qTGID1LR.js","sources":["../../../src/packages/templating/templates/modals/query-builder/utils.ts","../../../src/packages/templating/templates/modals/query-builder/query-builder-filter.element.ts","../../../src/packages/templating/templates/modals/query-builder/query-builder-modal.element.ts"],"sourcesContent":["import type {\r\n\tTemplateQueryExecuteSortModel,\r\n\tTemplateQueryOperatorModel,\r\n\tTemplateQueryPropertyPresentationModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport {\r\n\tOperatorModel,\r\n\tTemplateQueryPropertyTypeModel,\r\n\tUserOrderModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\n\r\ntype TemplateOperatorModel = TemplateQueryOperatorModel & { localizeKey?: string };\r\ntype TemplatePropertyModel = TemplateQueryPropertyPresentationModel & { localizeKey?: string };\r\ntype TemplateSortModel = TemplateQueryExecuteSortModel & { localizeKey?: string };\r\n\r\n/**\r\n *\r\n * @param operators\r\n * @param currentPropertyType\r\n */\r\nexport function localizeOperators(\r\n\toperators: Array<TemplateQueryOperatorModel>,\r\n\tcurrentPropertyType: TemplateQueryPropertyTypeModel | null,\r\n): Array<TemplateOperatorModel> {\r\n\tswitch (currentPropertyType) {\r\n\t\tcase TemplateQueryPropertyTypeModel.STRING:\r\n\t\t\treturn isString(operators);\r\n\t\tcase TemplateQueryPropertyTypeModel.INTEGER:\r\n\t\t\treturn isInteger(operators);\r\n\t\tcase TemplateQueryPropertyTypeModel.DATE_TIME:\r\n\t\t\treturn isDateTime(operators);\r\n\t\tdefault:\r\n\t\t\treturn operators;\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n * @param propertyTypes\r\n */\r\nexport function localizePropertyType(propertyTypes?: Array<TemplateQueryPropertyPresentationModel>) {\r\n\tif (!propertyTypes) return;\r\n\treturn propertyTypes.map((propertyType): TemplatePropertyModel => {\r\n\t\tswitch (propertyType.alias) {\r\n\t\t\tcase UserOrderModel.NAME:\r\n\t\t\t\treturn { ...propertyType, localizeKey: 'template_name' };\r\n\t\t\tcase UserOrderModel.ID:\r\n\t\t\t\treturn { ...propertyType, localizeKey: 'template_id' };\r\n\t\t\tcase UserOrderModel.CREATE_DATE:\r\n\t\t\t\treturn { ...propertyType, localizeKey: 'template_createdDate' };\r\n\t\t\tcase UserOrderModel.UPDATE_DATE:\r\n\t\t\t\treturn { ...propertyType, localizeKey: 'template_lastUpdatedDate' };\r\n\t\t\tdefault:\r\n\t\t\t\treturn propertyType;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param sort\r\n */\r\nexport function localizeSort(sort?: TemplateQueryExecuteSortModel | null): TemplateSortModel | undefined {\r\n\tif (!sort?.direction) return undefined;\r\n\tswitch (sort.direction) {\r\n\t\tcase 'ascending':\r\n\t\t\treturn { ...sort, localizeKey: 'template_ascending' };\r\n\t\tcase 'descending':\r\n\t\t\treturn { ...sort, localizeKey: 'template_descending' };\r\n\t\tdefault:\r\n\t\t\treturn sort;\r\n\t}\r\n}\r\n\r\n// Following code is for localization of operators (checks on property type);\r\n\r\n/**\r\n *\r\n * @param operators\r\n */\r\nfunction isString(operators: Array<TemplateQueryOperatorModel>): Array<TemplateOperatorModel> {\r\n\treturn operators.map((operator): TemplateOperatorModel => {\r\n\t\tswitch (operator.operator) {\r\n\t\t\tcase OperatorModel.EQUALS:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_is' };\r\n\t\t\tcase OperatorModel.NOT_EQUALS:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_isNot' };\r\n\t\t\tcase OperatorModel.CONTAINS:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_contains' };\r\n\t\t\tcase OperatorModel.NOT_CONTAINS:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_doesNotContain' };\r\n\t\t\tdefault:\r\n\t\t\t\treturn operator;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param operators\r\n */\r\nfunction isInteger(operators: Array<TemplateQueryOperatorModel>): Array<TemplateOperatorModel> {\r\n\treturn operators.map((operator): TemplateOperatorModel => {\r\n\t\tswitch (operator.operator) {\r\n\t\t\tcase OperatorModel.EQUALS:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_equals' };\r\n\t\t\tcase OperatorModel.NOT_EQUALS:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_doesNotEqual' };\r\n\t\t\tcase OperatorModel.GREATER_THAN:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_greaterThan' };\r\n\t\t\tcase OperatorModel.GREATER_THAN_EQUAL_TO:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_greaterThanEqual' };\r\n\t\t\tcase OperatorModel.LESS_THAN:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_lessThan' };\r\n\t\t\tcase OperatorModel.LESS_THAN_EQUAL_TO:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_lessThanEqual' };\r\n\t\t\tdefault:\r\n\t\t\t\treturn operator;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param operators\r\n */\r\nfunction isDateTime(operators: Array<TemplateQueryOperatorModel>): Array<TemplateOperatorModel> {\r\n\treturn operators.map((operator): TemplateOperatorModel => {\r\n\t\tswitch (operator.operator) {\r\n\t\t\tcase OperatorModel.GREATER_THAN:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_before' };\r\n\t\t\tcase OperatorModel.GREATER_THAN_EQUAL_TO:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_beforeIncDate' };\r\n\t\t\tcase OperatorModel.LESS_THAN:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_after' };\r\n\t\t\tcase OperatorModel.LESS_THAN_EQUAL_TO:\r\n\t\t\t\treturn { ...operator, localizeKey: 'template_afterIncDate' };\r\n\t\t\tdefault:\r\n\t\t\t\treturn operator;\r\n\t\t}\r\n\t});\r\n}\r\n","import { localizeOperators, localizePropertyType } from './utils.js';\r\nimport type { UUIComboboxListElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport type { PropertyValueMap } from '@umbraco-cms/backoffice/external/lit';\r\nimport { css, html, customElement, property, state, ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type {\r\n\tOperatorModel,\r\n\tTemplateQueryExecuteFilterPresentationModel,\r\n\tTemplateQuerySettingsResponseModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { TemplateQueryPropertyTypeModel } from '@umbraco-cms/backoffice/external/backend-api';\r\n\r\n@customElement('umb-template-query-builder-filter')\r\nexport class UmbTemplateQueryBuilderFilterElement extends UmbLitElement {\r\n\t@property({ type: Object, attribute: false })\r\n\tfilter: TemplateQueryExecuteFilterPresentationModel = <TemplateQueryExecuteFilterPresentationModel>{};\r\n\r\n\t@property({ type: Boolean })\r\n\tunremovable = false;\r\n\r\n\t@property({ type: Object, attribute: false })\r\n\tsettings?: TemplateQuerySettingsResponseModel;\r\n\r\n\t@state()\r\n\tcurrentPropertyType: TemplateQueryPropertyTypeModel | null = null;\r\n\r\n\t#setPropertyAlias = (e: Event) => {\r\n\t\tconst target = e.target as UUIComboboxListElement;\r\n\t\tconst oldCurrentPropertyType = this.currentPropertyType;\r\n\t\tthis.filter = { ...this.filter, propertyAlias: target.value as string };\r\n\t\tthis.currentPropertyType =\r\n\t\t\tthis.settings?.properties?.find((p) => p.alias === this.filter.propertyAlias)?.type ?? null;\r\n\t\tif (oldCurrentPropertyType !== this.currentPropertyType) this.#resetOperator();\r\n\t};\r\n\r\n\t#setConstrainValue = (e: Event) => {\r\n\t\tconst target = e.target as UUIComboboxListElement;\r\n\t\tthis.filter = { ...this.filter, constraintValue: target.value as string };\r\n\t};\r\n\r\n\t#setOperator = (e: Event) => {\r\n\t\tconst target = e.target as UUIComboboxListElement;\r\n\t\tthis.filter = { ...this.filter, operator: target.value as OperatorModel };\r\n\t};\r\n\r\n\t#resetOperator() {\r\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t// @ts-ignore\r\n\t\tthis.filter = { ...this.filter, operator: undefined, constraintValue: undefined };\r\n\t}\r\n\r\n\t#resetFilter() {\r\n\t\tthis.filter = <TemplateQueryExecuteFilterPresentationModel>{};\r\n\t\tthis.dispatchEvent(new Event('remove-filter'));\r\n\t}\r\n\r\n\t#removeOrReset() {\r\n\t\tif (this.unremovable) this.#resetFilter();\r\n\t\telse this.dispatchEvent(new Event('remove-filter'));\r\n\t}\r\n\r\n\t#addFilter() {\r\n\t\tthis.dispatchEvent(new Event('add-filter'));\r\n\t}\r\n\r\n\tget isFilterValid(): boolean {\r\n\t\treturn Object.keys(this.filter).length === 3 && Object.values(this.filter).every((v) => !!v);\r\n\t}\r\n\r\n\tprotected override willUpdate(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\r\n\t\tif (_changedProperties.has('filter')) {\r\n\t\t\tif (this.isFilterValid) {\r\n\t\t\t\tthis.dispatchEvent(new Event('update-query'));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _renderOperatorsDropdown() {\r\n\t\tif (!this.settings?.operators) return;\r\n\t\tconst operators = localizeOperators(this.settings?.operators, this.currentPropertyType);\r\n\r\n\t\treturn html`<umb-dropdown look=\"outline\" id=\"operator-dropdown\" label=\"Choose operator\">\r\n\t\t\t<span slot=\"label\">${this.filter?.operator ?? ''}</span>\r\n\t\t\t<uui-combobox-list @change=${this.#setOperator} class=\"options-list\">\r\n\t\t\t\t${operators\r\n\t\t\t\t\t?.filter((operator) =>\r\n\t\t\t\t\t\tthis.currentPropertyType ? operator.applicableTypes?.includes(this.currentPropertyType) : true,\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map(\r\n\t\t\t\t\t\t(operator) =>\r\n\t\t\t\t\t\t\thtml`<uui-combobox-list-option .value=${(operator.operator as string) ?? ''}>\r\n\t\t\t\t\t\t\t\t<umb-localize .key=${operator.localizeKey!}> ${operator.operator} </umb-localize>\r\n\t\t\t\t\t\t\t</uui-combobox-list-option>`,\r\n\t\t\t\t\t)}\r\n\t\t\t</uui-combobox-list>\r\n\t\t</umb-dropdown>`;\r\n\t}\r\n\r\n\tprivate _renderConstraintValueInput() {\r\n\t\tswitch (this.currentPropertyType) {\r\n\t\t\tcase TemplateQueryPropertyTypeModel.INTEGER:\r\n\t\t\t\treturn html`<uui-input type=\"number\" @change=${this.#setConstrainValue} label=\"constrain value\"></uui-input>`;\r\n\t\t\tcase TemplateQueryPropertyTypeModel.STRING:\r\n\t\t\t\treturn html`<uui-input type=\"text\" @change=${this.#setConstrainValue} label=\"constrain value\"></uui-input>`;\r\n\t\t\tcase TemplateQueryPropertyTypeModel.DATE_TIME:\r\n\t\t\t\treturn html`<uui-input type=\"date\" @change=${this.#setConstrainValue} label=\"constrain value\"></uui-input>`;\r\n\t\t\tdefault:\r\n\t\t\t\treturn html`<uui-input type=\"text\" @change=${this.#setConstrainValue} label=\"constrain value\"></uui-input>`;\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst properties = localizePropertyType(this.settings?.properties);\r\n\t\treturn html`\r\n\t\t\t<span>${this.unremovable ? this.localize.term('template_where') : this.localize.term('template_and')}</span>\r\n\t\t\t<umb-dropdown look=\"outline\" id=\"property-alias-dropdown\" label=\"Property alias\">\r\n\t\t\t\t<span slot=\"label\">${this.filter?.propertyAlias ?? ''}</span>\r\n\t\t\t\t<uui-combobox-list @change=${this.#setPropertyAlias} class=\"options-list\">\r\n\t\t\t\t\t${properties?.map(\r\n\t\t\t\t\t\t(property) =>\r\n\t\t\t\t\t\t\thtml`<uui-combobox-list-option tabindex=\"0\" .value=${property.alias ?? ''}>\r\n\t\t\t\t\t\t\t\t<umb-localize key=${ifDefined(property.localizeKey)}> ${property.alias}</umb-localize>\r\n\t\t\t\t\t\t\t</uui-combobox-list-option>`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</uui-combobox-list></umb-dropdown\r\n\t\t\t>\r\n\t\t\t${this.filter?.propertyAlias ? this._renderOperatorsDropdown() : ''}\r\n\t\t\t${this.filter?.operator ? this._renderConstraintValueInput() : ''}\r\n\t\t\t<uui-button-group>\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\ttitle=${this.localize.term('general_add')}\r\n\t\t\t\t\tlabel=${this.localize.term('general_add')}\r\n\t\t\t\t\tcompact\r\n\t\t\t\t\t@click=${this.#addFilter}>\r\n\t\t\t\t\t<uui-icon name=\"icon-add\"></uui-icon>\r\n\t\t\t\t</uui-button>\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\ttitle=${this.localize.term('general_remove')}\r\n\t\t\t\t\tlabel=${this.localize.term('general_remove')}\r\n\t\t\t\t\tcompact\r\n\t\t\t\t\t@click=${this.#removeOrReset}>\r\n\t\t\t\t\t<uui-icon name=\"delete\"></uui-icon>\r\n\t\t\t\t</uui-button>\r\n\t\t\t</uui-button-group>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: 10px;\r\n\t\t\t\tborder-bottom: 1px solid #f3f3f5;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tpadding: 20px 0;\r\n\t\t\t}\r\n\r\n\t\t\tuui-combobox-list-option {\r\n\t\t\t\tpadding: 8px 20px;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbTemplateQueryBuilderFilterElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-template-query-builder-filter': UmbTemplateQueryBuilderFilterElement;\r\n\t}\r\n}\r\n","import type { UmbExecuteTemplateQueryRequestModel } from '../../repository/query/types.js';\r\nimport { UmbTemplateQueryRepository } from '../../repository/query/index.js';\r\nimport { localizePropertyType, localizeSort } from './utils.js';\r\nimport type { UmbTemplateQueryBuilderFilterElement } from './query-builder-filter.element.js';\r\nimport type {\r\n\tUmbTemplateQueryBuilderModalData,\r\n\tUmbTemplateQueryBuilderModalValue,\r\n} from './query-builder-modal.token.js';\r\nimport type { UUIComboboxListElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { css, html, customElement, state, query, queryAll, ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbModalBaseElement, umbOpenModal } from '@umbraco-cms/backoffice/modal';\r\nimport type {\r\n\tTemplateQueryResultResponseModel,\r\n\tTemplateQuerySettingsResponseModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbDocumentItemRepository, UMB_DOCUMENT_PICKER_MODAL } from '@umbraco-cms/backoffice/document';\r\nimport './query-builder-filter.element.js';\r\n\r\nenum SortOrder {\r\n\tAscending = 'ascending',\r\n\tDescending = 'descending',\r\n}\r\n\r\n@customElement('umb-template-query-builder-modal')\r\nexport default class UmbTemplateQueryBuilderModalElement extends UmbModalBaseElement<\r\n\tUmbTemplateQueryBuilderModalData,\r\n\tUmbTemplateQueryBuilderModalValue\r\n> {\r\n\t@query('#filter-container')\r\n\tprivate _filterContainer?: HTMLElement;\r\n\r\n\t@queryAll('umb-template-query-builder-filter')\r\n\tprivate _filterElements!: UmbTemplateQueryBuilderFilterElement[];\r\n\r\n\t@state()\r\n\tprivate _templateQuery?: TemplateQueryResultResponseModel;\r\n\r\n\t@state()\r\n\tprivate _queryRequest: UmbExecuteTemplateQueryRequestModel = <UmbExecuteTemplateQueryRequestModel>{};\r\n\r\n\t@state()\r\n\tprivate _queryBuilderSettings?: TemplateQuerySettingsResponseModel;\r\n\r\n\t@state()\r\n\tprivate _selectedRootContentName? = this.localize.term('template_websiteRoot');\r\n\r\n\t@state()\r\n\tprivate _defaultSortDirection: SortOrder = SortOrder.Ascending;\r\n\r\n\t#documentItemRepository: UmbDocumentItemRepository;\r\n\t#templateQueryRepository: UmbTemplateQueryRepository;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#templateQueryRepository = new UmbTemplateQueryRepository(this);\r\n\t\tthis.#documentItemRepository = new UmbDocumentItemRepository(this);\r\n\r\n\t\tthis.#init();\r\n\t}\r\n\r\n\t#init() {\r\n\t\tthis.#getTemplateQuerySettings();\r\n\t\tthis.#executeTemplateQuery();\r\n\t}\r\n\r\n\t#close() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n\t#submit() {\r\n\t\tthis.modalContext?.submit();\r\n\t}\r\n\r\n\t#updateQueryRequest(update: Partial<UmbExecuteTemplateQueryRequestModel>) {\r\n\t\tthis._queryRequest = { ...this._queryRequest, ...update };\r\n\t\tthis.#executeTemplateQuery();\r\n\t}\r\n\r\n\tasync #getTemplateQuerySettings() {\r\n\t\tconst { data } = await this.#templateQueryRepository.requestTemplateQuerySettings();\r\n\t\tif (data) this._queryBuilderSettings = data;\r\n\t}\r\n\r\n\t#executeTemplateQuery = async () => {\r\n\t\tconst { data } = await this.#templateQueryRepository.executeTemplateQuery(this._queryRequest);\r\n\t\tif (data) {\r\n\t\t\tthis._templateQuery = { ...data };\r\n\t\t\tthis.value = { value: this._templateQuery?.queryExpression ?? '' };\r\n\t\t}\r\n\t};\r\n\r\n\tasync #openDocumentPicker() {\r\n\t\tconst result = await umbOpenModal(this, UMB_DOCUMENT_PICKER_MODAL, { data: { hideTreeRoot: true } }).catch(\r\n\t\t\t() => undefined,\r\n\t\t);\r\n\r\n\t\tif (!result) return;\r\n\r\n\t\tconst selection = result.selection[0];\r\n\t\tthis.#updateQueryRequest({ rootDocument: selection ? { unique: selection } : null });\r\n\r\n\t\tif (result.selection.length > 0 && result.selection[0] === null) {\r\n\t\t\tthis._selectedRootContentName = 'all pages';\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (result.selection.length > 0) {\r\n\t\t\tthis.#getDocumentItem(result.selection as string[]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tasync #getDocumentItem(ids: string[]) {\r\n\t\tconst { data } = await this.#documentItemRepository.requestItems(ids);\r\n\t\tif (data) {\r\n\t\t\t// TODO: get correct variant name\r\n\t\t\tthis._selectedRootContentName = data[0].variants[0].name;\r\n\t\t}\r\n\t}\r\n\r\n\t#createFilterElement() {\r\n\t\tconst filterElement = document.createElement('umb-template-query-builder-filter');\r\n\t\tfilterElement.settings = this._queryBuilderSettings;\r\n\t\tfilterElement.classList.add('row');\r\n\t\tfilterElement.addEventListener('add-filter', this.#addFilterElement);\r\n\t\tfilterElement.addEventListener('remove-filter', this.#removeFilter);\r\n\t\tfilterElement.addEventListener('update-query', this.#updateFilters);\r\n\t\treturn filterElement;\r\n\t}\r\n\r\n\t#setContentType(event: Event) {\r\n\t\tconst target = event.target as UUIComboboxListElement;\r\n\t\tthis.#updateQueryRequest({ documentTypeAlias: target.value as string });\r\n\t}\r\n\r\n\t#setSortProperty(event: Event) {\r\n\t\tconst target = event.target as UUIComboboxListElement;\r\n\t\tthis.#setSort(\r\n\t\t\ttarget.value as string,\r\n\t\t\t(this._queryRequest.sort?.direction as SortOrder) ?? this._defaultSortDirection,\r\n\t\t);\r\n\t}\r\n\r\n\t#setSortDirection() {\r\n\t\tconst direction = this._queryRequest.sort?.direction\r\n\t\t\t? this._queryRequest.sort.direction === SortOrder.Ascending\r\n\t\t\t\t? SortOrder.Descending\r\n\t\t\t\t: SortOrder.Ascending\r\n\t\t\t: this._defaultSortDirection;\r\n\t\tthis.#setSort(this._queryRequest.sort?.propertyAlias ?? '', direction);\r\n\t}\r\n\r\n\t#setSort(propertyAlias: string, direction: SortOrder) {\r\n\t\tthis.#updateQueryRequest({\r\n\t\t\tsort: {\r\n\t\t\t\tpropertyAlias,\r\n\t\t\t\tdirection,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t#addFilterElement = () => {\r\n\t\tthis._filterContainer?.appendChild(this.#createFilterElement());\r\n\t};\r\n\r\n\t#updateFilters = () => {\r\n\t\t// Only use the filter from elements that have everything set\r\n\t\tconst ready = Array.from(this._filterElements)?.filter((element) => element.isFilterValid);\r\n\t\tthis.#updateQueryRequest({ filters: ready?.map((element) => element.filter) ?? [] });\r\n\t};\r\n\r\n\t#removeFilter = (event: Event) => {\r\n\t\tif (this._filterElements.length > 1) {\r\n\t\t\tconst target = event.target as UmbTemplateQueryBuilderFilterElement;\r\n\t\t\tthis._filterContainer?.removeChild(target);\r\n\t\t\tif (this._filterElements.length === 1) {\r\n\t\t\t\tthis._filterElements[0].unremovable = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.#updateFilters();\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst properties = localizePropertyType(this._queryBuilderSettings?.properties);\r\n\t\tconst sort = localizeSort(this._queryRequest.sort);\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${this.localize.term('template_queryBuilder')}>\r\n\t\t\t\t<div id=\"main\">\r\n\t\t\t\t\t<uui-box>\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<umb-localize key=\"template_iWant\">I want</umb-localize>\r\n\t\t\t\t\t\t\t<umb-dropdown look=\"outline\" id=\"content-type-dropdown\" label=\"Choose content type\">\r\n\t\t\t\t\t\t\t\t<span slot=\"label\">\r\n\t\t\t\t\t\t\t\t\t${this._queryRequest?.documentTypeAlias ?? this.localize.term('template_allContent')}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<uui-combobox-list @change=${this.#setContentType} class=\"options-list\">\r\n\t\t\t\t\t\t\t\t\t<uui-combobox-list-option value=\"\">all content</uui-combobox-list-option>\r\n\t\t\t\t\t\t\t\t\t${this._queryBuilderSettings?.documentTypeAliases?.map(\r\n\t\t\t\t\t\t\t\t\t\t(alias) =>\r\n\t\t\t\t\t\t\t\t\t\t\thtml`<uui-combobox-list-option .value=${alias}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<umb-localize key=\"template_contentOfType\" .args=${[alias]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent of type \"${alias}\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t</umb-localize>\r\n\t\t\t\t\t\t\t\t\t\t\t</uui-combobox-list-option>`,\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</uui-combobox-list></umb-dropdown\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<umb-localize key=\"template_from\">from</umb-localize>\r\n\t\t\t\t\t\t\t<uui-button look=\"outline\" @click=${this.#openDocumentPicker} label=\"Choose root document\">\r\n\t\t\t\t\t\t\t\t${this._selectedRootContentName}\r\n\t\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"filter-container\">\r\n\t\t\t\t\t\t\t<umb-template-query-builder-filter\r\n\t\t\t\t\t\t\t\tunremovable\r\n\t\t\t\t\t\t\t\tclass=\"row\"\r\n\t\t\t\t\t\t\t\t.settings=${this._queryBuilderSettings}\r\n\t\t\t\t\t\t\t\t@add-filter=${this.#addFilterElement}\r\n\t\t\t\t\t\t\t\t@update-query=${this.#updateFilters}\r\n\t\t\t\t\t\t\t\t@remove-filter=${this.#removeFilter}></umb-template-query-builder-filter>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<umb-localize key=\"template_orderBy\">order by</umb-localize>\r\n\t\t\t\t\t\t\t<umb-dropdown look=\"outline\" id=\"sort-dropdown\" label=\"Property alias\">\r\n\t\t\t\t\t\t\t\t<span slot=\"label\">${this._queryRequest.sort?.propertyAlias ?? ''}</span>\r\n\t\t\t\t\t\t\t\t<uui-combobox-list @change=${this.#setSortProperty} class=\"options-list\">\r\n\t\t\t\t\t\t\t\t\t${properties?.map(\r\n\t\t\t\t\t\t\t\t\t\t(property) =>\r\n\t\t\t\t\t\t\t\t\t\t\thtml`<uui-combobox-list-option .value=${property.alias ?? ''}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<umb-localize key=${ifDefined(property.localizeKey)}>${property.alias}</umb-localize>\r\n\t\t\t\t\t\t\t\t\t\t\t</uui-combobox-list-option>`,\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</uui-combobox-list>\r\n\t\t\t\t\t\t\t</umb-dropdown>\r\n\r\n\t\t\t\t\t\t\t${sort?.propertyAlias\r\n\t\t\t\t\t\t\t\t? html`<uui-button look=\"outline\" @click=${this.#setSortDirection}>\r\n\t\t\t\t\t\t\t\t\t\t<umb-localize key=${ifDefined(sort.localizeKey)}>\r\n\t\t\t\t\t\t\t\t\t\t\t${sort.direction ?? this._defaultSortDirection}\r\n\t\t\t\t\t\t\t\t\t\t</umb-localize>\r\n\t\t\t\t\t\t\t\t\t</uui-button>`\r\n\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"row query-results\">\r\n\t\t\t\t\t\t\t<span id=\"results-count\">\r\n\t\t\t\t\t\t\t\t<umb-localize\r\n\t\t\t\t\t\t\t\t\tkey=\"template_publishedItemsReturned\"\r\n\t\t\t\t\t\t\t\t\t.args=${[this._templateQuery?.resultCount ?? 0, this._templateQuery?.executionTime ?? 0]}\r\n\t\t\t\t\t\t\t\t\t>items returned, in</umb-localize\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t${this._templateQuery?.sampleResults.map(\r\n\t\t\t\t\t\t\t\t(sample) => html`<span><umb-icon name=${sample.icon}></umb-icon>${sample.name}</span>`,\r\n\t\t\t\t\t\t\t) ?? ''}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<umb-code-block style=\"max-height:500px;\" language=\"C#\" copy\r\n\t\t\t\t\t\t\t>${this._templateQuery?.queryExpression ?? ''}</umb-code-block\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</uui-box>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div slot=\"actions\">\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t@click=${this.#close}\r\n\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\tlabel=${this.localize.term('buttons_confirmActionCancel')}></uui-button>\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t@click=${this.#submit}\r\n\t\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\t\tcolor=\"positive\"\r\n\t\t\t\t\t\tlabel=${this.localize.term('buttons_submitChanges')}></uui-button>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tcolor: var(--uui-color-text);\r\n\t\t\t\t--umb-header-layout-height: 70px;\r\n\t\t\t}\r\n\r\n\t\t\t#main {\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\theight: calc(\r\n\t\t\t\t\t100dvh - var(--umb-header-layout-height) - var(--umb-footer-layout-height) - 2 * var(--uui-size-layout-1)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tuui-combobox-list-option {\r\n\t\t\t\tpadding: 8px 20px;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\r\n\t\t\t.row {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: 10px;\r\n\t\t\t\tborder-bottom: 1px solid #f3f3f5;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tpadding: 20px 0;\r\n\t\t\t}\r\n\r\n\t\t\t#filter-container {\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tjustify-content: flex-start;\r\n\t\t\t}\r\n\r\n\t\t\t#results-count {\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t}\r\n\t\t\t.query-results {\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: flex-start;\r\n\t\t\t\tgap: 0;\r\n\t\t\t}\r\n\t\t\t.query-results span {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tgap: var(--uui-size-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-template-query-builder-modal': UmbTemplateQueryBuilderModalElement;\r\n\t}\r\n}\r\n"],"names":["localizeOperators","operators","currentPropertyType","TemplateQueryPropertyTypeModel","isString","isInteger","isDateTime","localizePropertyType","propertyTypes","propertyType","UserOrderModel","localizeSort","sort","operator","OperatorModel","_setPropertyAlias","_setConstrainValue","_setOperator","_UmbTemplateQueryBuilderFilterElement_instances","resetOperator_fn","resetFilter_fn","removeOrReset_fn","addFilter_fn","UmbTemplateQueryBuilderFilterElement","UmbLitElement","__privateAdd","target","oldCurrentPropertyType","p","__privateMethod","v","_changedProperties","html","__privateGet","properties","property","ifDefined","css","__decorateClass","state","customElement","_documentItemRepository","_templateQueryRepository","_UmbTemplateQueryBuilderModalElement_instances","init_fn","close_fn","submit_fn","updateQueryRequest_fn","getTemplateQuerySettings_fn","_executeTemplateQuery","openDocumentPicker_fn","getDocumentItem_fn","createFilterElement_fn","setContentType_fn","setSortProperty_fn","setSortDirection_fn","setSort_fn","_addFilterElement","_updateFilters","_removeFilter","UmbTemplateQueryBuilderModalElement","UmbModalBaseElement","data","ready","element","event","__privateSet","UmbTemplateQueryRepository","UmbDocumentItemRepository","alias","sample","update","result","umbOpenModal","UMB_DOCUMENT_PICKER_MODAL","selection","ids","filterElement","direction","propertyAlias","query","queryAll"],"mappings":"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"}