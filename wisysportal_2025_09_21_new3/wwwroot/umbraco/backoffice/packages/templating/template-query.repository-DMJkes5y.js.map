{"version":3,"file":"template-query.repository-DMJkes5y.js","sources":["../../../src/packages/templating/templates/repository/query/template-query.server.data-source.ts","../../../src/packages/templating/templates/repository/query/template-query.repository.ts"],"sourcesContent":["import type { UmbExecuteTemplateQueryRequestModel } from './types.js';\r\nimport type { TemplateQueryExecuteModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { TemplateService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the Template Query Builder that fetches data from the server\r\n * @class UmbTemplateQueryServerDataSource\r\n */\r\nexport class UmbTemplateQueryServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t// TODO: When we map the server models to our own models, we need to have a localization property.\r\n\t// For example, the OperatorModel.NOT_EQUALS need to use the localization key \"template_doesNotEqual\"\r\n\r\n\t/**\r\n\t * Creates an instance of UmbTemplateQueryServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbTemplateQueryServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\t/**\r\n\t * Fetches the query builder settings from the server\r\n\t * @returns {*}\r\n\t * @memberof UmbTemplateQueryServerDataSource\r\n\t */\r\n\tasync getTemplateQuerySettings() {\r\n\t\treturn tryExecute(this.#host, TemplateService.getTemplateQuerySettings());\r\n\t}\r\n\t/**\r\n\t * Executes a query builder query on the server\r\n\t * @param {UmbExecuteTemplateQueryRequestModel} args\r\n\t * @returns {*}\r\n\t * @memberof UmbTemplateQueryServerDataSource\r\n\t */\r\n\tasync executeTemplateQuery(args: UmbExecuteTemplateQueryRequestModel) {\r\n\t\tconst body: TemplateQueryExecuteModel = {\r\n\t\t\trootDocument: args.rootDocument ? { id: args.rootDocument.unique } : null,\r\n\t\t\tdocumentTypeAlias: args.documentTypeAlias,\r\n\t\t\tfilters: args.filters,\r\n\t\t\tsort: args.sort,\r\n\t\t\ttake: args.take,\r\n\t\t};\r\n\r\n\t\treturn tryExecute(this.#host, TemplateService.postTemplateQueryExecute({ body }));\r\n\t}\r\n}\r\n","import { UmbTemplateQueryServerDataSource } from './template-query.server.data-source.js';\r\nimport type { UmbExecuteTemplateQueryRequestModel } from './types.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbTemplateQueryRepository extends UmbRepositoryBase {\r\n\t#querySource: UmbTemplateQueryServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#querySource = new UmbTemplateQueryServerDataSource(this);\r\n\t}\r\n\r\n\tasync requestTemplateQuerySettings() {\r\n\t\treturn this.#querySource.getTemplateQuerySettings();\r\n\t}\r\n\r\n\tasync executeTemplateQuery(args: UmbExecuteTemplateQueryRequestModel) {\r\n\t\treturn this.#querySource.executeTemplateQuery(args);\r\n\t}\r\n}\r\n\r\nexport default UmbTemplateQueryRepository;\r\n"],"names":["UmbTemplateQueryServerDataSource","#host","host","tryExecute","TemplateService","args","body","UmbTemplateQueryRepository","UmbRepositoryBase","#querySource"],"mappings":";;;AAUO,MAAMA,EAAiC;AAAA,EAC7CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOd,MAAM,2BAA2B;AAChC,WAAOC,EAAW,KAAKF,IAAOG,EAAgB,0BAA0B;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQzE,MAAM,qBAAqBC,GAA2C;AACrE,UAAMC,IAAkC;AAAA,MACvC,cAAcD,EAAK,eAAe,EAAE,IAAIA,EAAK,aAAa,WAAW;AAAA,MACrE,mBAAmBA,EAAK;AAAA,MACxB,SAASA,EAAK;AAAA,MACd,MAAMA,EAAK;AAAA,MACX,MAAMA,EAAK;AAAA,IACZ;AAEO,WAAAF,EAAW,KAAKF,IAAOG,EAAgB,yBAAyB,EAAE,MAAAE,EAAA,CAAM,CAAC;AAAA,EAAA;AAElF;AC5CO,MAAMC,UAAmCC,EAAkB;AAAA,EACjEC;AAAA,EAEA,YAAYP,GAAyB;AACpC,UAAMA,CAAI,GACL,KAAAO,KAAe,IAAIT,EAAiC,IAAI;AAAA,EAAA;AAAA,EAG9D,MAAM,+BAA+B;AAC7B,WAAA,KAAKS,GAAa,yBAAyB;AAAA,EAAA;AAAA,EAGnD,MAAM,qBAAqBJ,GAA2C;AAC9D,WAAA,KAAKI,GAAa,qBAAqBJ,CAAI;AAAA,EAAA;AAEpD;"}