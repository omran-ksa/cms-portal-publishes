{"version":3,"file":"stylesheet-input.element-D7JbGKlw.js","sources":["../../../src/packages/templating/stylesheets/global-components/stylesheet-input/stylesheet-input.context.ts","../../../src/packages/templating/stylesheets/global-components/stylesheet-input/stylesheet-input.element.ts"],"sourcesContent":["import { UMB_STYLESHEET_ITEM_REPOSITORY_ALIAS } from '../../repository/index.js';\r\nimport type { UmbStylesheetItemModel } from '../../types.js';\r\nimport { UMB_STYLESHEET_PICKER_MODAL } from './stylesheet-picker-modal.token.js';\r\nimport { UmbPickerInputContext } from '@umbraco-cms/backoffice/picker-input';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbStylesheetPickerInputContext extends UmbPickerInputContext<UmbStylesheetItemModel> {\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t// @ts-ignore\r\n\t\t// TODO: Item and tree item types collide\r\n\t\tsuper(host, UMB_STYLESHEET_ITEM_REPOSITORY_ALIAS, UMB_STYLESHEET_PICKER_MODAL);\r\n\t}\r\n}\r\n","import type { UmbStylesheetItemModel } from '../../types.js';\r\nimport { UmbStylesheetPickerInputContext } from './stylesheet-input.context.js';\r\nimport { css, html, customElement, property, state, repeat } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { splitStringToArray } from '@umbraco-cms/backoffice/utils';\r\n\r\n@customElement('umb-stylesheet-input')\r\nexport class UmbStylesheetInputElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\t/**\r\n\t * This is a minimum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: Number })\r\n\tpublic set min(value: number) {\r\n\t\tthis.#pickerContext.min = value;\r\n\t}\r\n\tpublic get min(): number {\r\n\t\treturn this.#pickerContext.min;\r\n\t}\r\n\r\n\t/**\r\n\t * Min validation message.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tminMessage = 'This field need more items';\r\n\r\n\t/**\r\n\t * This is a maximum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: Number })\r\n\tpublic set max(value: number) {\r\n\t\tthis.#pickerContext.max = value;\r\n\t}\r\n\tpublic get max(): number {\r\n\t\treturn this.#pickerContext.max;\r\n\t}\r\n\r\n\t/**\r\n\t * Max validation message.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tmaxMessage = 'This field exceeds the allowed amount of items';\r\n\r\n\t@property({ type: Array })\r\n\tpublic set selection(ids: Array<string> | undefined) {\r\n\t\tthis.#pickerContext.setSelection(ids ?? []);\r\n\t}\r\n\tpublic get selection(): Array<string> | undefined {\r\n\t\treturn this.#pickerContext.getSelection();\r\n\t}\r\n\r\n\t@property()\r\n\tpublic override set value(idsString: string) {\r\n\t\t// Its with full purpose we don't call super.value, as thats being handled by the observation of the context selection.\r\n\t\tthis.selection = splitStringToArray(idsString);\r\n\t}\r\n\tpublic override get value() {\r\n\t\treturn this.#pickerContext.getSelection().join(',');\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _items: Array<UmbStylesheetItemModel> = [];\r\n\r\n\t#pickerContext = new UmbStylesheetPickerInputContext(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeUnderflow',\r\n\t\t\t() => this.minMessage,\r\n\t\t\t() => !!this.min && this.#pickerContext.getSelection().length < this.min,\r\n\t\t);\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeOverflow',\r\n\t\t\t() => this.maxMessage,\r\n\t\t\t() => !!this.max && this.#pickerContext.getSelection().length > this.max,\r\n\t\t);\r\n\r\n\t\tthis.observe(this.#pickerContext.selection, (selection) => (this.value = selection.join(',')));\r\n\t\tthis.observe(this.#pickerContext.selectedItems, (selectedItems) => (this._items = selectedItems));\r\n\t}\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-ref-list>\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._items,\r\n\t\t\t\t\t(item) => item.unique,\r\n\t\t\t\t\t(item) => this.#renderItem(item),\r\n\t\t\t\t)}\r\n\t\t\t</uui-ref-list>\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"btn-add\"\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t@click=${() => this.#pickerContext.openPicker({ pickableFilter: (item) => !item.isFolder })}\r\n\t\t\t\tlabel=\"Add stylesheet\"></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItem(item: UmbStylesheetItemModel) {\r\n\t\tif (!item.unique) return;\r\n\t\treturn html`\r\n\t\t\t<uui-ref-node name=${item.name}>\r\n\t\t\t\t<uui-icon slot=\"icon\" name=\"icon-palette\"></uui-icon>\r\n\t\t\t\t<uui-action-bar slot=\"actions\">\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t@click=${() => this.#pickerContext.requestRemoveItem(item.unique!)}\r\n\t\t\t\t\t\tlabel=${this.localize.term('general_remove')}></uui-button>\r\n\t\t\t\t</uui-action-bar>\r\n\t\t\t</uui-ref-node>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#btn-add {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbStylesheetInputElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-stylesheet-input': UmbStylesheetInputElement;\r\n\t}\r\n}\r\n"],"names":["UmbStylesheetPickerInputContext","UmbPickerInputContext","host","UMB_STYLESHEET_ITEM_REPOSITORY_ALIAS","UMB_STYLESHEET_PICKER_MODAL","_pickerContext","_UmbStylesheetInputElement_instances","renderItem_fn","UmbStylesheetInputElement","UUIFormControlMixin","UmbLitElement","__privateAdd","__privateGet","selection","selectedItems","value","ids","idsString","splitStringToArray","html","repeat","item","__privateMethod","css","__decorateClass","property","state","customElement"],"mappings":"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"}