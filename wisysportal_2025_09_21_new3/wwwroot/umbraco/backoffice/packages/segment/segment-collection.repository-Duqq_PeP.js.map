{"version":3,"file":"segment-collection.repository-Duqq_PeP.js","sources":["../../../src/packages/segment/entity.ts","../../../src/packages/segment/collection/repository/segment-collection.server.data-source.ts","../../../src/packages/segment/collection/repository/segment-collection.repository.ts"],"sourcesContent":["export const UMB_SEGMENT_ENTITY_TYPE = 'segment';\r\nexport type UmbSegmentEntityType = typeof UMB_SEGMENT_ENTITY_TYPE;\r\n","import type { UmbSegmentCollectionFilterModel } from '../types.js';\r\nimport { UMB_SEGMENT_ENTITY_TYPE } from '../../entity.js';\r\nimport type { UmbSegmentCollectionItemModel } from './types.js';\r\nimport type { UmbCollectionDataSource } from '@umbraco-cms/backoffice/collection';\r\nimport { SegmentService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\n\r\n/**\r\n * A data source that fetches the language collection data from the server.\r\n * @class UmbLanguageCollectionServerDataSource\r\n * @implements {UmbCollectionDataSource}\r\n */\r\nexport class UmbSegmentCollectionServerDataSource\r\n\textends UmbControllerBase\r\n\timplements UmbCollectionDataSource<UmbSegmentCollectionItemModel>\r\n{\r\n\t/**\r\n\t * Gets the language collection filtered by the given filter.\r\n\t * @param {UmbSegmentCollectionFilterModel} filter\r\n\t * @returns {*}\r\n\t * @memberof UmbLanguageCollectionServerDataSource\r\n\t */\r\n\tasync getCollection(filter: UmbSegmentCollectionFilterModel) {\r\n\t\tconst { data, error } = await tryExecute(this, SegmentService.getSegment({ query: filter }));\r\n\r\n\t\tif (data) {\r\n\t\t\tconst items = data.items.map((item) => {\r\n\t\t\t\tconst model: UmbSegmentCollectionItemModel = {\r\n\t\t\t\t\talias: item.alias,\r\n\t\t\t\t\tentityType: UMB_SEGMENT_ENTITY_TYPE,\r\n\t\t\t\t\tname: item.name,\r\n\t\t\t\t\tunique: item.alias,\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn model;\r\n\t\t\t});\r\n\r\n\t\t\treturn { data: { items, total: data.total } };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n","import type { UmbSegmentCollectionFilterModel } from '../types.js';\r\nimport { UmbSegmentCollectionServerDataSource } from './segment-collection.server.data-source.js';\r\nimport type { UmbSegmentCollectionDataSource } from './types.js';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbSegmentCollectionRepository extends UmbRepositoryBase implements UmbCollectionRepository {\r\n\t#collectionSource: UmbSegmentCollectionDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#collectionSource = new UmbSegmentCollectionServerDataSource(host);\r\n\t}\r\n\r\n\tasync requestCollection(filter: UmbSegmentCollectionFilterModel) {\r\n\t\treturn this.#collectionSource.getCollection(filter);\r\n\t}\r\n}\r\n\r\nexport default UmbSegmentCollectionRepository;\r\n"],"names":["UMB_SEGMENT_ENTITY_TYPE","UmbSegmentCollectionServerDataSource","UmbControllerBase","filter","data","error","tryExecute","SegmentService","item","UmbSegmentCollectionRepository","UmbRepositoryBase","#collectionSource","host"],"mappings":";;;;AAAO,MAAMA,IAA0B;ACahC,MAAMC,UACJC,EAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOC,MAAM,cAAcC,GAAyC;AAC5D,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAM,IAAI,MAAMC,EAAW,MAAMC,EAAe,WAAW,EAAE,OAAOJ,EAAQ,CAAA,CAAC;AAE3F,WAAIC,IAYI,EAAE,MAAM,EAAE,OAXHA,EAAK,MAAM,IAAI,CAACI,OACgB;AAAA,MAC5C,OAAOA,EAAK;AAAA,MACZ,YAAYR;AAAA,MACZ,MAAMQ,EAAK;AAAA,MACX,QAAQA,EAAK;AAAA,IACd,EAGA,GAEuB,OAAOJ,EAAK,QAAQ,IAGtC,EAAE,OAAAC,EAAM;AAAA,EAAA;AAEjB;ACpCO,MAAMI,UAAuCC,EAAqD;AAAA,EACxGC;AAAA,EAEA,YAAYC,GAAyB;AACpC,UAAMA,CAAI,GACL,KAAAD,KAAoB,IAAIV,EAAqCW,CAAI;AAAA,EAAA;AAAA,EAGvE,MAAM,kBAAkBT,GAAyC;AACzD,WAAA,KAAKQ,GAAkB,cAAcR,CAAM;AAAA,EAAA;AAEpD;;;;;;"}