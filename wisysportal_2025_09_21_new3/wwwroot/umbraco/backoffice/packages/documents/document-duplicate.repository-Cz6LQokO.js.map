{"version":3,"file":"document-duplicate.repository-Cz6LQokO.js","sources":["../../../src/packages/documents/documents/entity-actions/duplicate/repository/document-duplicate.repository.ts"],"sourcesContent":["import { UmbDuplicateDocumentServerDataSource } from './document-duplicate.server.data-source.js';\r\nimport type { UmbDuplicateDocumentRequestArgs } from './types.js';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbDuplicateDocumentRepository extends UmbRepositoryBase {\r\n\t#duplicateSource = new UmbDuplicateDocumentServerDataSource(this);\r\n\r\n\tasync requestDuplicate(args: UmbDuplicateDocumentRequestArgs) {\r\n\t\tconst { error } = await this.#duplicateSource.duplicate(args);\r\n\r\n\t\tif (!error) {\r\n\t\t\tconst notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n\t\t\tif (!notificationContext) {\r\n\t\t\t\tthrow new Error('Notification context not found');\r\n\t\t\t}\r\n\t\t\tconst notification = { data: { message: `Duplicated` } };\r\n\t\t\tnotificationContext.peek('positive', notification);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n\r\nexport { UmbDuplicateDocumentRepository as api };\r\n"],"names":["UmbDuplicateDocumentRepository","UmbRepositoryBase","#duplicateSource","UmbDuplicateDocumentServerDataSource","args","error","notificationContext","UMB_NOTIFICATION_CONTEXT","notification"],"mappings":";;;AAKO,MAAMA,UAAuCC,EAAkB;AAAA,EACrEC,KAAmB,IAAIC,EAAqC,IAAI;AAAA,EAEhE,MAAM,iBAAiBC,GAAuC;AAC7D,UAAM,EAAE,OAAAC,EAAM,IAAI,MAAM,KAAKH,GAAiB,UAAUE,CAAI;AAE5D,QAAI,CAACC,GAAO;AACX,YAAMC,IAAsB,MAAM,KAAK,WAAWC,CAAwB;AAC1E,UAAI,CAACD;AACE,cAAA,IAAI,MAAM,gCAAgC;AAEjD,YAAME,IAAe,EAAE,MAAM,EAAE,SAAS,eAAe;AACnC,MAAAF,EAAA,KAAK,YAAYE,CAAY;AAAA,IAAA;AAGlD,WAAO,EAAE,OAAAH,EAAM;AAAA,EAAA;AAEjB;"}