{"version":3,"file":"document-blueprint-item.repository-DnCe4qgh.js","sources":["../../../src/packages/documents/document-blueprints/repository/item/document-blueprint-item.server.data-source.ts","../../../src/packages/documents/document-blueprints/repository/item/document-blueprint-item.repository.ts"],"sourcesContent":["import { UMB_DOCUMENT_BLUEPRINT_ENTITY_TYPE } from '../../entity.js';\r\nimport type { UmbDocumentBlueprintItemBaseModel, UmbDocumentBlueprintItemModel } from './types.js';\r\nimport { DocumentBlueprintService, DocumentTypeService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbItemServerDataSourceBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { DocumentBlueprintItemResponseModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport { UmbItemDataApiGetRequestController } from '@umbraco-cms/backoffice/entity-item';\r\n\r\n/**\r\n * A data source for Document Blueprint items that fetches data from the server\r\n * @class UmbDocumentBlueprintItemServerDataSource\r\n * @implements {DocumentTreeDataSource}\r\n */\r\nexport class UmbDocumentBlueprintItemServerDataSource extends UmbItemServerDataSourceBase<\r\n\tDocumentBlueprintItemResponseModel,\r\n\tUmbDocumentBlueprintItemModel\r\n> {\r\n\t/**\r\n\t * Creates an instance of UmbDocumentBlueprintItemServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbDocumentBlueprintItemServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, {\r\n\t\t\tmapper,\r\n\t\t});\r\n\t}\r\n\r\n\tasync getItemsByDocumentType(unique: string) {\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis,\r\n\t\t\tDocumentTypeService.getDocumentTypeByIdBlueprint({ path: { id: unique } }),\r\n\t\t);\r\n\r\n\t\tif (data) {\r\n\t\t\tconst items: Array<UmbDocumentBlueprintItemBaseModel> = data.items.map((item) => ({\r\n\t\t\t\tentityType: UMB_DOCUMENT_BLUEPRINT_ENTITY_TYPE,\r\n\t\t\t\tunique: item.id,\r\n\t\t\t\tname: item.name,\r\n\t\t\t}));\r\n\t\t\treturn { data: items };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n\r\n\toverride async getItems(uniques: Array<string>) {\r\n\t\tif (!uniques) throw new Error('Uniques are missing');\r\n\r\n\t\tconst itemRequestManager = new UmbItemDataApiGetRequestController(this, {\r\n\t\t\t// eslint-disable-next-line local-rules/no-direct-api-import\r\n\t\t\tapi: (args) => DocumentBlueprintService.getItemDocumentBlueprint({ query: { id: args.uniques } }),\r\n\t\t\tuniques,\r\n\t\t});\r\n\r\n\t\tconst { data, error } = await itemRequestManager.request();\r\n\r\n\t\treturn { data: this._getMappedItems(data), error };\r\n\t}\r\n}\r\n\r\nconst mapper = (item: DocumentBlueprintItemResponseModel): UmbDocumentBlueprintItemModel => {\r\n\treturn {\r\n\t\tentityType: UMB_DOCUMENT_BLUEPRINT_ENTITY_TYPE,\r\n\t\tunique: item.id,\r\n\t\tname: item.name,\r\n\t\tdocumentType: {\r\n\t\t\tunique: item.documentType.id,\r\n\t\t\ticon: item.documentType.icon,\r\n\t\t\tcollection: item.documentType.collection ? { unique: item.documentType.collection.id } : null,\r\n\t\t},\r\n\t};\r\n};\r\n","import { UmbDocumentBlueprintItemServerDataSource } from './document-blueprint-item.server.data-source.js';\r\nimport { UMB_DOCUMENT_BLUEPRINT_ITEM_STORE_CONTEXT } from './document-blueprint-item.store.context-token.js';\r\nimport type { UmbDocumentBlueprintItemModel } from './types.js';\r\nimport { UmbItemRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbDocumentBlueprintItemRepository extends UmbItemRepositoryBase<UmbDocumentBlueprintItemModel> {\r\n\t#dataSource = new UmbDocumentBlueprintItemServerDataSource(this);\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UmbDocumentBlueprintItemServerDataSource, UMB_DOCUMENT_BLUEPRINT_ITEM_STORE_CONTEXT);\r\n\t}\r\n\r\n\tasync requestItemsByDocumentType(unique: string) {\r\n\t\treturn this.#dataSource.getItemsByDocumentType(unique);\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentBlueprintItemRepository as api };\r\n"],"names":["UmbDocumentBlueprintItemServerDataSource","UmbItemServerDataSourceBase","host","mapper","unique","data","error","tryExecute","DocumentTypeService","item","UMB_DOCUMENT_BLUEPRINT_ENTITY_TYPE","uniques","itemRequestManager","UmbItemDataApiGetRequestController","args","DocumentBlueprintService","UmbDocumentBlueprintItemRepository","UmbItemRepositoryBase","#dataSource","UMB_DOCUMENT_BLUEPRINT_ITEM_STORE_CONTEXT"],"mappings":";;;;;AAcO,MAAMA,UAAiDC,EAG5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,YAAYC,GAAyB;AACpC,UAAMA,GAAM;AAAA,MACX,QAAAC;AAAA,IAAA,CACA;AAAA,EAAA;AAAA,EAGF,MAAM,uBAAuBC,GAAgB;AAC5C,QAAI,CAACA,EAAc,OAAA,IAAI,MAAM,mBAAmB;AAChD,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAM,IAAI,MAAMC;AAAA,MAC7B;AAAA,MACAC,EAAoB,6BAA6B,EAAE,MAAM,EAAE,IAAIJ,EAAA,EAAU,CAAA;AAAA,IAC1E;AAEA,WAAIC,IAMI,EAAE,MAL+CA,EAAK,MAAM,IAAI,CAACI,OAAU;AAAA,MACjF,YAAYC;AAAA,MACZ,QAAQD,EAAK;AAAA,MACb,MAAMA,EAAK;AAAA,IAAA,EACV,EACmB,IAGf,EAAE,OAAAH,EAAM;AAAA,EAAA;AAAA,EAGhB,MAAe,SAASK,GAAwB;AAC/C,QAAI,CAACA,EAAe,OAAA,IAAI,MAAM,qBAAqB;AAE7C,UAAAC,IAAqB,IAAIC,EAAmC,MAAM;AAAA;AAAA,MAEvE,KAAK,CAACC,MAASC,EAAyB,yBAAyB,EAAE,OAAO,EAAE,IAAID,EAAK,QAAQ,GAAG;AAAA,MAChG,SAAAH;AAAA,IAAA,CACA,GAEK,EAAE,MAAAN,GAAM,OAAAC,EAAU,IAAA,MAAMM,EAAmB,QAAQ;AAEzD,WAAO,EAAE,MAAM,KAAK,gBAAgBP,CAAI,GAAG,OAAAC,EAAM;AAAA,EAAA;AAEnD;AAEA,MAAMH,IAAS,CAACM,OACR;AAAA,EACN,YAAYC;AAAA,EACZ,QAAQD,EAAK;AAAA,EACb,MAAMA,EAAK;AAAA,EACX,cAAc;AAAA,IACb,QAAQA,EAAK,aAAa;AAAA,IAC1B,MAAMA,EAAK,aAAa;AAAA,IACxB,YAAYA,EAAK,aAAa,aAAa,EAAE,QAAQA,EAAK,aAAa,WAAW,OAAO;AAAA,EAAA;AAE3F;ACnEM,MAAMO,UAA2CC,EAAqD;AAAA,EAC5GC,KAAc,IAAIlB,EAAyC,IAAI;AAAA,EAE/D,YAAYE,GAAyB;AAC9B,UAAAA,GAAMF,GAA0CmB,CAAyC;AAAA,EAAA;AAAA,EAGhG,MAAM,2BAA2Bf,GAAgB;AACzC,WAAA,KAAKc,GAAY,uBAAuBd,CAAM;AAAA,EAAA;AAEvD;"}