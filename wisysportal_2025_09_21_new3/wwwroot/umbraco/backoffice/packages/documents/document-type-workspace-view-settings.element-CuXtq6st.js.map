{"version":3,"file":"document-type-workspace-view-settings.element-CuXtq6st.js","sources":["../../../src/packages/documents/document-types/configuration/configuration.server.data-source.ts","../../../src/packages/documents/document-types/configuration/configuration.repository.ts","../../../src/packages/documents/document-types/workspace/document-type/views/settings/document-type-workspace-view-settings.element.ts"],"sourcesContent":["import type { UmbDocumentTypeConfigurationModel } from './types.js';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { DocumentTypeService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbDataSourceResponse } from '@umbraco-cms/backoffice/repository';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\nexport class UmbDocumentTypeConfigurationServerDataSource extends UmbControllerBase {\r\n\t/**\r\n\t * Gets the document type configuration from the server.\r\n\t * @returns {Promise<UmbDataSourceResponse<UmbDocumentTypeConfigurationModel>>} - The document type configuration.\r\n\t * @memberof UmbDocumentTypeConfigurationServerDataSource\r\n\t */\r\n\tasync getConfiguration(): Promise<UmbDataSourceResponse<UmbDocumentTypeConfigurationModel>> {\r\n\t\tconst { data, error } = await tryExecute(this, DocumentTypeService.getDocumentTypeConfiguration());\r\n\r\n\t\tif (data) {\r\n\t\t\tconst mappedData: UmbDocumentTypeConfigurationModel = {\r\n\t\t\t\tdataTypesCanBeChanged: data.dataTypesCanBeChanged === 'True' ? true : false,\r\n\t\t\t\tdisableTemplates: data.disableTemplates,\r\n\t\t\t\tuseSegments: data.useSegments,\r\n\t\t\t\treservedFieldNames: data.reservedFieldNames,\r\n\t\t\t};\r\n\r\n\t\t\treturn { data: mappedData };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n","import { UmbDocumentTypeConfigurationServerDataSource } from './configuration.server.data-source.js';\r\nimport type { UmbDocumentTypeConfigurationModel } from './types.js';\r\nimport { UmbRepositoryBase, type UmbRepositoryResponse } from '@umbraco-cms/backoffice/repository';\r\n\r\n/**\r\n * @description - Repository for Document Type configuration.\r\n * @exports\r\n * @class UmbDocumentTypeConfigurationRepository\r\n * @augments UmbRepositoryBase\r\n */\r\nexport class UmbDocumentTypeConfigurationRepository extends UmbRepositoryBase {\r\n\t#serverDataSource = new UmbDocumentTypeConfigurationServerDataSource(this);\r\n\r\n\t/**\r\n\t * Requests the Document Type configuration\r\n\t * @returns {Promise<UmbRepositoryResponse<UmbDocumentTypeConfigurationModel>>} - The document type configuration.\r\n\t * @memberof UmbDocumentTypeConfigurationRepository\r\n\t */\r\n\trequestConfiguration(): Promise<UmbRepositoryResponse<UmbDocumentTypeConfigurationModel>> {\r\n\t\treturn this.#serverDataSource.getConfiguration();\r\n\t}\r\n}\r\n","import { UMB_DOCUMENT_TYPE_WORKSPACE_CONTEXT } from '../../document-type-workspace.context-token.js';\r\nimport { UmbDocumentTypeConfigurationRepository } from '../../../../configuration/configuration.repository.js';\r\nimport {\r\n\tcss,\r\n\thtml,\r\n\tcustomElement,\r\n\tstate,\r\n\twhen,\r\n\tnothing,\r\n\ttype PropertyValues,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { UUIBooleanInputEvent, UUIToggleElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbWorkspaceViewElement } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('umb-document-type-workspace-view-settings')\r\nexport class UmbDocumentTypeWorkspaceViewSettingsElement extends UmbLitElement implements UmbWorkspaceViewElement {\r\n\t#workspaceContext?: typeof UMB_DOCUMENT_TYPE_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\tprivate _variesByCulture?: boolean;\r\n\r\n\t@state()\r\n\tprivate _variesBySegment?: boolean;\r\n\r\n\t@state()\r\n\tprivate _isElement?: boolean;\r\n\r\n\t@state()\r\n\tprivate _keepAllVersionsNewerThanDays?: number | null;\r\n\r\n\t@state()\r\n\tprivate _keepLatestVersionPerDayForDays?: number | null;\r\n\r\n\t@state()\r\n\tprivate _preventCleanup?: boolean;\r\n\r\n\t@state()\r\n\tprivate _useSegments?: boolean;\r\n\r\n\t#configurationRepository = new UmbDocumentTypeConfigurationRepository(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t// TODO: Figure out if this is the best way to consume the context or if it can be strongly typed with an UmbContextToken\r\n\t\tthis.consumeContext(UMB_DOCUMENT_TYPE_WORKSPACE_CONTEXT, (documentTypeContext) => {\r\n\t\t\tthis.#workspaceContext = documentTypeContext;\r\n\t\t\tthis.#observeDocumentType();\r\n\t\t});\r\n\t}\r\n\r\n\tprotected override async firstUpdated(_changedProperties: PropertyValues): Promise<void> {\r\n\t\tsuper.firstUpdated(_changedProperties);\r\n\t\t// TODO: cache this request\r\n\t\tconst { data } = await this.#configurationRepository.requestConfiguration();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis._useSegments = data.useSegments;\r\n\t\t}\r\n\t}\r\n\r\n\t#observeDocumentType() {\r\n\t\tif (!this.#workspaceContext) return;\r\n\t\tthis.observe(\r\n\t\t\tthis.#workspaceContext.variesByCulture,\r\n\t\t\t(variesByCulture) => (this._variesByCulture = variesByCulture),\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#workspaceContext.variesBySegment,\r\n\t\t\t(variesBySegment) => (this._variesBySegment = variesBySegment),\r\n\t\t);\r\n\t\tthis.observe(this.#workspaceContext.isElement, (isElement) => (this._isElement = isElement));\r\n\r\n\t\tthis.observe(this.#workspaceContext.cleanup, (cleanup) => {\r\n\t\t\tthis._preventCleanup = cleanup?.preventCleanup;\r\n\t\t\tthis._keepAllVersionsNewerThanDays = cleanup?.keepAllVersionsNewerThanDays;\r\n\t\t\tthis._keepLatestVersionPerDayForDays = cleanup?.keepLatestVersionPerDayForDays;\r\n\t\t});\r\n\t}\r\n\r\n\t#setCleanup() {\r\n\t\tthis.#workspaceContext?.setCleanup({\r\n\t\t\tpreventCleanup: this._preventCleanup ?? false,\r\n\t\t\tkeepAllVersionsNewerThanDays: this._keepAllVersionsNewerThanDays,\r\n\t\t\tkeepLatestVersionPerDayForDays: this._keepLatestVersionPerDayForDays,\r\n\t\t});\r\n\t}\r\n\r\n\t#onChangePreventCleanup(event: UUIBooleanInputEvent) {\r\n\t\tthis._preventCleanup = event.target.checked;\r\n\t\tif (this._preventCleanup) {\r\n\t\t\tthis._keepAllVersionsNewerThanDays = null;\r\n\t\t\tthis._keepLatestVersionPerDayForDays = null;\r\n\t\t}\r\n\t\tthis.#setCleanup();\r\n\t}\r\n\r\n\t#onChangeKeepAllVersionsNewerThanDays(event: Event & { target: HTMLInputElement }) {\r\n\t\tthis._keepAllVersionsNewerThanDays = parseInt(event.target.value);\r\n\t\tthis.#setCleanup();\r\n\t}\r\n\r\n\t#onChangeKeepLatestVersionPerDayForDays(event: Event & { target: HTMLInputElement }) {\r\n\t\tthis._keepLatestVersionPerDayForDays = parseInt(event.target.value);\r\n\t\tthis.#setCleanup();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-box headline=\"Data variations\">\r\n\t\t\t\t<umb-property-layout\r\n\t\t\t\t\talias=\"VaryByCulture\"\r\n\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_cultureVariantHeading')}>\r\n\t\t\t\t\t<div slot=\"description\">\r\n\t\t\t\t\t\t<umb-localize key=\"contentTypeEditor_cultureVariantDescription\"\r\n\t\t\t\t\t\t\t>Allow editors to create content of different languages.</umb-localize\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div slot=\"editor\">\r\n\t\t\t\t\t\t<uui-toggle\r\n\t\t\t\t\t\t\t?checked=${this._variesByCulture}\r\n\t\t\t\t\t\t\t@change=${(e: CustomEvent) => {\r\n\t\t\t\t\t\t\t\tthis.#workspaceContext?.setVariesByCulture((e.target as UUIToggleElement).checked);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_cultureVariantLabel')}></uui-toggle>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</umb-property-layout>\r\n\r\n\t\t\t\t${this.#renderVaryBySegmentProperty()}\r\n\r\n\t\t\t\t<umb-property-layout alias=\"ElementType\" label=${this.localize.term('contentTypeEditor_elementHeading')}>\r\n\t\t\t\t\t<div slot=\"description\">\r\n\t\t\t\t\t\t<umb-localize key=\"contentTypeEditor_elementDescription\"\r\n\t\t\t\t\t\t\t>An Element Type is used for content instances in Property Editors, like the Block Editors.</umb-localize\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div slot=\"editor\">\r\n\t\t\t\t\t\t<uui-toggle\r\n\t\t\t\t\t\t\t?checked=${this._isElement}\r\n\t\t\t\t\t\t\t@change=${(e: CustomEvent) => {\r\n\t\t\t\t\t\t\t\tthis.#workspaceContext?.setIsElement((e.target as UUIToggleElement).checked);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_elementType')}></uui-toggle>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</umb-property-layout>\r\n\t\t\t</uui-box>\r\n\t\t\t<uui-box headline=${this.localize.term('contentTypeEditor_historyCleanupHeading')}>\r\n\t\t\t\t<umb-property-layout\r\n\t\t\t\t\talias=\"HistoryCleanup\"\r\n\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_historyCleanupHeading')}>\r\n\t\t\t\t\t<div slot=\"description\">\r\n\t\t\t\t\t\t<umb-localize key=\"contentTypeEditor_historyCleanupDescription\"\r\n\t\t\t\t\t\t\t>Allow overriding the global history cleanup settings.</umb-localize\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div slot=\"editor\">\r\n\t\t\t\t\t\t<uui-form-layout-item>\r\n\t\t\t\t\t\t\t<uui-toggle\r\n\t\t\t\t\t\t\t\tid=\"prevent-cleanup\"\r\n\t\t\t\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_historyCleanupPreventCleanup')}\r\n\t\t\t\t\t\t\t\t.checked=${this._preventCleanup ?? false}\r\n\t\t\t\t\t\t\t\t@change=${this.#onChangePreventCleanup}></uui-toggle>\r\n\t\t\t\t\t\t</uui-form-layout-item>\r\n\r\n\t\t\t\t\t\t${when(\r\n\t\t\t\t\t\t\t!this._preventCleanup,\r\n\t\t\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t\t\t<uui-form-layout-item>\r\n\t\t\t\t\t\t\t\t\t<uui-label slot=\"label\" for=\"versions-newer-than-days\">\r\n\t\t\t\t\t\t\t\t\t\t<umb-localize key=\"contentTypeEditor_historyCleanupKeepAllVersionsNewerThanDays\"\r\n\t\t\t\t\t\t\t\t\t\t\t>Keep all versions newer than days</umb-localize\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</uui-label>\r\n\r\n\t\t\t\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"versions-newer-than-days\"\r\n\t\t\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"7\"\r\n\t\t\t\t\t\t\t\t\t\t.value=${this._keepAllVersionsNewerThanDays}\r\n\t\t\t\t\t\t\t\t\t\t@change=${this.#onChangeKeepAllVersionsNewerThanDays}></uui-input>\r\n\t\t\t\t\t\t\t\t</uui-form-layout-item>\r\n\r\n\t\t\t\t\t\t\t\t<uui-form-layout-item>\r\n\t\t\t\t\t\t\t\t\t<uui-label slot=\"label\" for=\"latest-version-per-day-days\">\r\n\t\t\t\t\t\t\t\t\t\t<umb-localize key=\"contentTypeEditor_historyCleanupKeepLatestVersionPerDayForDays\"\r\n\t\t\t\t\t\t\t\t\t\t\t>Keep latest version per day for days</umb-localize\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</uui-label>\r\n\t\t\t\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"latest-version-per-day-days\"\r\n\t\t\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"90\"\r\n\t\t\t\t\t\t\t\t\t\t.value=${this._keepLatestVersionPerDayForDays}\r\n\t\t\t\t\t\t\t\t\t\t@change=${this.#onChangeKeepLatestVersionPerDayForDays}></uui-input>\r\n\t\t\t\t\t\t\t\t</uui-form-layout-item>\r\n\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</umb-property-layout>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderVaryBySegmentProperty() {\r\n\t\tif (!this._useSegments) return nothing;\r\n\t\tif (this._isElement) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<umb-property-layout\r\n\t\t\t\talias=\"VaryBySegments\"\r\n\t\t\t\tlabel=${this.localize.term('contentTypeEditor_segmentVariantHeading')}>\r\n\t\t\t\t<div slot=\"description\">\r\n\t\t\t\t\t<umb-localize key=\"contentTypeEditor_segmentVariantDescription\"\r\n\t\t\t\t\t\t>Allow editors to segment their content.</umb-localize\r\n\t\t\t\t\t>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div slot=\"editor\">\r\n\t\t\t\t\t<uui-toggle\r\n\t\t\t\t\t\t?checked=${this._variesBySegment}\r\n\t\t\t\t\t\t@change=${(e: CustomEvent) => {\r\n\t\t\t\t\t\t\tthis.#workspaceContext?.setVariesBySegment((e.target as UUIToggleElement).checked);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_segmentVariantLabel')}></uui-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-property-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin: var(--uui-size-layout-1);\r\n\t\t\t\tpadding-bottom: var(--uui-size-layout-1); // To enforce some distance to the bottom of the scroll-container.\r\n\t\t\t}\r\n\t\t\tuui-box {\r\n\t\t\t\tmargin-top: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\r\n\t\t\tuui-label,\r\n\t\t\tumb-property-editor-ui-number {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: is this necessary?\r\n\t\t\tuui-toggle {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDocumentTypeWorkspaceViewSettingsElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-document-type-workspace-view-settings': UmbDocumentTypeWorkspaceViewSettingsElement;\r\n\t}\r\n}\r\n"],"names":["UmbDocumentTypeConfigurationServerDataSource","UmbControllerBase","data","error","tryExecute","DocumentTypeService","UmbDocumentTypeConfigurationRepository","UmbRepositoryBase","#serverDataSource","_workspaceContext","_configurationRepository","_UmbDocumentTypeWorkspaceViewSettingsElement_instances","observeDocumentType_fn","setCleanup_fn","onChangePreventCleanup_fn","onChangeKeepAllVersionsNewerThanDays_fn","onChangeKeepLatestVersionPerDayForDays_fn","renderVaryBySegmentProperty_fn","UmbDocumentTypeWorkspaceViewSettingsElement","UmbLitElement","__privateAdd","UMB_DOCUMENT_TYPE_WORKSPACE_CONTEXT","documentTypeContext","__privateSet","__privateMethod","_changedProperties","__privateGet","html","when","variesByCulture","variesBySegment","isElement","cleanup","event","nothing","UmbTextStyles","css","__decorateClass","state","customElement","UmbDocumentTypeWorkspaceViewSettingsElement$1"],"mappings":"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"}