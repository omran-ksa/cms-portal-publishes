{"version":3,"file":"document-workspace.context-K0x6EfOX.js","sources":["../../../src/packages/documents/documents/property-dataset-context/document-property-dataset.context.ts","../../../src/packages/documents/documents/repository/validation/document-validation.server.data-source.ts","../../../src/packages/documents/documents/repository/validation/document-validation.repository.ts","../../../src/packages/documents/documents/workspace/document-workspace.context.ts"],"sourcesContent":["import type { UmbDocumentDetailModel, UmbDocumentVariantModel, UmbDocumentWorkspaceContext } from '../types.js';\r\nimport { UmbContentPropertyDatasetContext } from '@umbraco-cms/backoffice/content';\r\nimport type { UmbDocumentTypeDetailModel } from '@umbraco-cms/backoffice/document-type';\r\nimport type { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbDocumentPropertyDatasetContext extends UmbContentPropertyDatasetContext<\r\n\tUmbDocumentDetailModel,\r\n\tUmbDocumentTypeDetailModel,\r\n\tUmbDocumentVariantModel\r\n> {\r\n\tconstructor(host: UmbControllerHost, dataOwner: UmbDocumentWorkspaceContext, variantId?: UmbVariantId) {\r\n\t\tsuper(host, dataOwner, variantId);\r\n\t}\r\n}\r\n","import type { UmbDocumentDetailModel } from '../../types.js';\r\nimport {\r\n\ttype CreateDocumentRequestModel,\r\n\tDocumentService,\r\n\ttype ValidateUpdateDocumentRequestModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport type { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport type { UmbEntityUnique } from '@umbraco-cms/backoffice/entity';\r\nimport type { UmbDataSourceResponse } from '@umbraco-cms/backoffice/repository';\r\n\r\n/**\r\n * A server data source for Document Validation\r\n */\r\nexport class UmbDocumentValidationServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Validate a new Document on the server\r\n\t * @param {UmbDocumentDetailModel} model - Document Model\r\n\t * @param parentUnique - Parent Unique\r\n\t * @returns {*}\r\n\t */\r\n\tasync validateCreate(\r\n\t\tmodel: UmbDocumentDetailModel,\r\n\t\tparentUnique: UmbEntityUnique = null,\r\n\t): Promise<UmbDataSourceResponse<string>> {\r\n\t\tif (!model) throw new Error('Document is missing');\r\n\t\tif (!model.unique) throw new Error('Document unique is missing');\r\n\t\tif (parentUnique === undefined) throw new Error('Parent unique is missing');\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst body: CreateDocumentRequestModel = {\r\n\t\t\tid: model.unique,\r\n\t\t\tparent: parentUnique ? { id: parentUnique } : null,\r\n\t\t\tdocumentType: { id: model.documentType.unique },\r\n\t\t\ttemplate: model.template ? { id: model.template.unique } : null,\r\n\t\t\tvalues: model.values,\r\n\t\t\tvariants: model.variants,\r\n\t\t};\r\n\r\n\t\t// Maybe use: tryExecuteAndNotify\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentService.postDocumentValidate({\r\n\t\t\t\tbody,\r\n\t\t\t}),\r\n\t\t\t{\r\n\t\t\t\tdisableNotifications: true,\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tif (data && typeof data === 'string') {\r\n\t\t\treturn { data };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n\r\n\t/**\r\n\t * Validate a existing Document\r\n\t * @param {UmbDocumentDetailModel} model - Document Model\r\n\t * @param {Array<UmbVariantId>} variantIds - Variant Ids\r\n\t * @returns {*}\r\n\t */\r\n\tasync validateUpdate(\r\n\t\tmodel: UmbDocumentDetailModel,\r\n\t\tvariantIds: Array<UmbVariantId>,\r\n\t): Promise<UmbDataSourceResponse<string>> {\r\n\t\tif (!model.unique) throw new Error('Unique is missing');\r\n\r\n\t\tconst cultures = variantIds.map((id) => id.culture).filter((culture) => culture !== null) as Array<string>;\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst body: ValidateUpdateDocumentRequestModel = {\r\n\t\t\ttemplate: model.template ? { id: model.template.unique } : null,\r\n\t\t\tvalues: model.values,\r\n\t\t\tvariants: model.variants,\r\n\t\t\tcultures,\r\n\t\t};\r\n\r\n\t\t// Maybe use: tryExecuteAndNotify\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentService.putUmbracoManagementApiV11DocumentByIdValidate11({\r\n\t\t\t\tpath: { id: model.unique },\r\n\t\t\t\tbody,\r\n\t\t\t}),\r\n\t\t\t{\r\n\t\t\t\tdisableNotifications: true,\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tif (data && typeof data === 'string') {\r\n\t\t\treturn { data };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n","import type { UmbDocumentDetailModel } from '../../types.js';\r\nimport { UmbDocumentValidationServerDataSource } from './document-validation.server.data-source.js';\r\nimport type { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbContentValidationRepository } from '@umbraco-cms/backoffice/content';\r\n\r\ntype DetailModelType = UmbDocumentDetailModel;\r\n\r\nexport class UmbDocumentValidationRepository\r\n\textends UmbRepositoryBase\r\n\timplements UmbContentValidationRepository<DetailModelType>\r\n{\r\n\t#validationDataSource: UmbDocumentValidationServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#validationDataSource = new UmbDocumentValidationServerDataSource(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a promise with an observable of the detail for the given unique\r\n\t * @param {DetailModelType} model\r\n\t * @param {string | null} [parentUnique]\r\n\t * @returns {*}\r\n\t * @memberof UmbDetailRepositoryBase\r\n\t */\r\n\tasync validateCreate(model: DetailModelType, parentUnique: string | null) {\r\n\t\tif (!model) throw new Error('Data is missing');\r\n\r\n\t\treturn this.#validationDataSource.validateCreate(model, parentUnique);\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the given data\r\n\t * @param {DetailModelType} model\r\n\t * @param variantIds\r\n\t * @returns {*}\r\n\t * @memberof UmbDetailRepositoryBase\r\n\t */\r\n\tasync validateSave(model: DetailModelType, variantIds: Array<UmbVariantId>) {\r\n\t\tif (!model) throw new Error('Data is missing');\r\n\t\tif (!model.unique) throw new Error('Unique is missing');\r\n\r\n\t\treturn this.#validationDataSource.validateUpdate(model, variantIds);\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentValidationRepository as api };\r\n","import { UmbDocumentTypeDetailRepository } from '../../document-types/repository/detail/document-type-detail.repository.js';\r\nimport { UmbDocumentPropertyDatasetContext } from '../property-dataset-context/document-property-dataset.context.js';\r\nimport type { UmbDocumentDetailRepository } from '../repository/index.js';\r\nimport { UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS } from '../repository/index.js';\r\nimport type { UmbDocumentDetailModel, UmbDocumentVariantModel } from '../types.js';\r\nimport {\r\n\tUMB_CREATE_DOCUMENT_WORKSPACE_PATH_PATTERN,\r\n\tUMB_CREATE_FROM_BLUEPRINT_DOCUMENT_WORKSPACE_PATH_PATTERN,\r\n\tUMB_DOCUMENT_COLLECTION_ALIAS,\r\n\tUMB_DOCUMENT_ENTITY_TYPE,\r\n\tUMB_DOCUMENT_SAVE_MODAL,\r\n\tUMB_DOCUMENT_USER_PERMISSION_CONDITION_ALIAS,\r\n\tUMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN,\r\n\tUMB_USER_PERMISSION_DOCUMENT_CREATE,\r\n\tUMB_USER_PERMISSION_DOCUMENT_UPDATE,\r\n} from '../constants.js';\r\nimport { UmbDocumentPreviewRepository } from '../repository/preview/index.js';\r\nimport { UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT, UmbDocumentPublishingRepository } from '../publishing/index.js';\r\nimport { UmbDocumentValidationRepository } from '../repository/validation/index.js';\r\nimport { UMB_DOCUMENT_CONFIGURATION_CONTEXT } from '../index.js';\r\nimport { UMB_DOCUMENT_DETAIL_MODEL_VARIANT_SCAFFOLD, UMB_DOCUMENT_WORKSPACE_ALIAS } from './constants.js';\r\nimport type { UmbEntityModel } from '@umbraco-cms/backoffice/entity';\r\nimport { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport {\r\n\ttype UmbPublishableWorkspaceContext,\r\n\tUmbWorkspaceIsNewRedirectController,\r\n\tUmbWorkspaceIsNewRedirectControllerAlias,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbDocumentBlueprintDetailRepository } from '@umbraco-cms/backoffice/document-blueprint';\r\nimport {\r\n\tUmbContentDetailWorkspaceContextBase,\r\n\ttype UmbContentCollectionWorkspaceContext,\r\n\ttype UmbContentWorkspaceContext,\r\n} from '@umbraco-cms/backoffice/content';\r\nimport type { UmbDocumentTypeDetailModel } from '@umbraco-cms/backoffice/document-type';\r\nimport { UmbIsTrashedEntityContext } from '@umbraco-cms/backoffice/recycle-bin';\r\nimport { ensurePathEndsWithSlash, UmbDeprecation } from '@umbraco-cms/backoffice/utils';\r\nimport { createExtensionApiByAlias } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UMB_SERVER_CONTEXT } from '@umbraco-cms/backoffice/server';\r\nimport { observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbVariantPropertyGuardRule } from '@umbraco-cms/backoffice/property';\r\n\r\ntype ContentModel = UmbDocumentDetailModel;\r\ntype ContentTypeModel = UmbDocumentTypeDetailModel;\r\nexport class UmbDocumentWorkspaceContext\r\n\textends UmbContentDetailWorkspaceContextBase<\r\n\t\tContentModel,\r\n\t\tUmbDocumentDetailRepository,\r\n\t\tContentTypeModel,\r\n\t\tUmbDocumentVariantModel\r\n\t>\r\n\timplements\r\n\t\tUmbContentWorkspaceContext<ContentModel, ContentTypeModel, UmbDocumentVariantModel>,\r\n\t\tUmbPublishableWorkspaceContext,\r\n\t\tUmbContentCollectionWorkspaceContext<UmbDocumentTypeDetailModel>\r\n{\r\n\t/**\r\n\t * The publishing repository for the document workspace.\r\n\t * @deprecated Will be removed in v17. Use the methods on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t * @memberof UmbDocumentWorkspaceContext\r\n\t */\r\n\tpublic readonly publishingRepository = new UmbDocumentPublishingRepository(this);\r\n\r\n\treadonly isTrashed = this._data.createObservablePartOfCurrent((data) => data?.isTrashed);\r\n\treadonly contentTypeUnique = this._data.createObservablePartOfCurrent((data) => data?.documentType.unique);\r\n\treadonly contentTypeHasCollection = this._data.createObservablePartOfCurrent(\r\n\t\t(data) => !!data?.documentType.collection,\r\n\t);\r\n\treadonly contentTypeIcon = this._data.createObservablePartOfCurrent((data) => data?.documentType.icon || null);\r\n\r\n\treadonly templateId = this._data.createObservablePartOfCurrent((data) => data?.template?.unique || null);\r\n\r\n\t#isTrashedContext = new UmbIsTrashedEntityContext(this);\r\n\t#publishingContext?: typeof UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, {\r\n\t\t\tentityType: UMB_DOCUMENT_ENTITY_TYPE,\r\n\t\t\tworkspaceAlias: UMB_DOCUMENT_WORKSPACE_ALIAS,\r\n\t\t\tdetailRepositoryAlias: UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS,\r\n\t\t\tcontentTypeDetailRepository: UmbDocumentTypeDetailRepository,\r\n\t\t\tcontentValidationRepository: UmbDocumentValidationRepository,\r\n\t\t\tskipValidationOnSubmit: false,\r\n\t\t\tignoreValidationResultOnSubmit: true,\r\n\t\t\tcontentVariantScaffold: UMB_DOCUMENT_DETAIL_MODEL_VARIANT_SCAFFOLD,\r\n\t\t\tcontentTypePropertyName: 'documentType',\r\n\t\t\tsaveModalToken: UMB_DOCUMENT_SAVE_MODAL,\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_DOCUMENT_CONFIGURATION_CONTEXT, async (context) => {\r\n\t\t\tconst config = await context?.getDocumentConfiguration();\r\n\t\t\tconst allowSegmentCreation = config?.allowNonExistingSegmentsCreation ?? false;\r\n\t\t\tconst allowEditInvariantFromNonDefault = config?.allowEditInvariantFromNonDefault ?? true;\r\n\r\n\t\t\tthis._variantOptionsFilter = (variantOption) => {\r\n\t\t\t\tconst isNotCreatedSegmentVariant = variantOption.segment && !variantOption.variant;\r\n\r\n\t\t\t\t// Do not allow creating a segment variant\r\n\t\t\t\tif (!allowSegmentCreation && isNotCreatedSegmentVariant) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\r\n\t\t\tif (allowEditInvariantFromNonDefault === false) {\r\n\t\t\t\tthis.#preventEditInvariantFromNonDefault();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.contentTypeUnique,\r\n\t\t\t(unique) => {\r\n\t\t\t\tif (unique) {\r\n\t\t\t\t\tthis.structure.loadType(unique);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\t// TODO: Remove this in v17 as we have moved the publishing methods to the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT.\r\n\t\tthis.consumeContext(UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis.#publishingContext = context;\r\n\t\t});\r\n\r\n\t\tthis.observe(this.isNew, (isNew) => {\r\n\t\t\tif (isNew === undefined) return;\r\n\t\t\tif (isNew) {\r\n\t\t\t\tthis.#enforceUserPermission(\r\n\t\t\t\t\tUMB_USER_PERMISSION_DOCUMENT_CREATE,\r\n\t\t\t\t\t'You do not have permission to create documents.',\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.#enforceUserPermission(\r\n\t\t\t\t\tUMB_USER_PERMISSION_DOCUMENT_UPDATE,\r\n\t\t\t\t\t'You do not have permission to update documents.',\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.routes.setRoutes([\r\n\t\t\t{\r\n\t\t\t\tpath: UMB_CREATE_FROM_BLUEPRINT_DOCUMENT_WORKSPACE_PATH_PATTERN.toString(),\r\n\t\t\t\tcomponent: () => import('./document-workspace-editor.element.js'),\r\n\t\t\t\tsetup: async (_component, info) => {\r\n\t\t\t\t\tconst parentEntityType = info.match.params.parentEntityType;\r\n\t\t\t\t\tconst parentUnique: string | null =\r\n\t\t\t\t\t\tinfo.match.params.parentUnique === 'null' ? null : info.match.params.parentUnique;\r\n\t\t\t\t\tconst documentTypeUnique = info.match.params.documentTypeUnique;\r\n\t\t\t\t\tconst blueprintUnique = info.match.params.blueprintUnique;\r\n\r\n\t\t\t\t\tawait this.create(\r\n\t\t\t\t\t\t{ entityType: parentEntityType, unique: parentUnique },\r\n\t\t\t\t\t\tdocumentTypeUnique,\r\n\t\t\t\t\t\tblueprintUnique,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tnew UmbWorkspaceIsNewRedirectController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis.getHostElement().shadowRoot!.querySelector('umb-router-slot')!,\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: UMB_CREATE_DOCUMENT_WORKSPACE_PATH_PATTERN.toString(),\r\n\t\t\t\tcomponent: () => import('./document-workspace-editor.element.js'),\r\n\t\t\t\tsetup: async (_component, info) => {\r\n\t\t\t\t\tconst parentEntityType = info.match.params.parentEntityType;\r\n\t\t\t\t\tconst parentUnique = info.match.params.parentUnique === 'null' ? null : info.match.params.parentUnique;\r\n\t\t\t\t\tconst documentTypeUnique = info.match.params.documentTypeUnique;\r\n\t\t\t\t\tawait this.create({ entityType: parentEntityType, unique: parentUnique }, documentTypeUnique);\r\n\t\t\t\t\tnew UmbWorkspaceIsNewRedirectController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis.getHostElement().shadowRoot!.querySelector('umb-router-slot')!,\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.toString(),\r\n\t\t\t\tcomponent: () => import('./document-workspace-editor.element.js'),\r\n\t\t\t\tsetup: async (_component, info) => {\r\n\t\t\t\t\tthis.removeUmbControllerByAlias(UmbWorkspaceIsNewRedirectControllerAlias);\r\n\t\t\t\t\tconst unique = info.match.params.unique;\r\n\t\t\t\t\tawait this.load(unique);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\t}\r\n\r\n\t#enforceUserPermission(verb: string, message: string) {\r\n\t\t// We set the initial permission state to false because the condition is false by default and only execute the callback if it changes.\r\n\t\tthis.#handleUserPermissionChange(verb, false, message);\r\n\r\n\t\tcreateExtensionApiByAlias(this, UMB_DOCUMENT_USER_PERMISSION_CONDITION_ALIAS, [\r\n\t\t\t{\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tallOf: [verb],\r\n\t\t\t\t},\r\n\t\t\t\tonChange: (permitted: boolean) => {\r\n\t\t\t\t\tthis.#handleUserPermissionChange(verb, permitted, message);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\t}\r\n\r\n\toverride resetState(): void {\r\n\t\tsuper.resetState();\r\n\t\tthis.#isTrashedContext.setIsTrashed(false);\r\n\t}\r\n\r\n\toverride async load(unique: string) {\r\n\t\tconst response = await super.load(unique);\r\n\r\n\t\tif (response?.data) {\r\n\t\t\tthis.#isTrashedContext.setIsTrashed(response.data.isTrashed);\r\n\t\t}\r\n\r\n\t\treturn response;\r\n\t}\r\n\r\n\tasync create(parent: UmbEntityModel, documentTypeUnique: string, blueprintUnique?: string) {\r\n\t\tif (blueprintUnique) {\r\n\t\t\tconst blueprintRepository = new UmbDocumentBlueprintDetailRepository(this);\r\n\t\t\tconst { data } = await blueprintRepository.scaffoldByUnique(blueprintUnique);\r\n\r\n\t\t\tif (!data) throw new Error('Blueprint data is missing');\r\n\r\n\t\t\treturn this.createScaffold({\r\n\t\t\t\tparent,\r\n\t\t\t\tpreset: {\r\n\t\t\t\t\tdocumentType: data.documentType,\r\n\t\t\t\t\tvalues: data.values,\r\n\t\t\t\t\tvariants: data.variants as Array<UmbDocumentVariantModel>,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.createScaffold({\r\n\t\t\tparent,\r\n\t\t\tpreset: {\r\n\t\t\t\tdocumentType: {\r\n\t\t\t\t\tunique: documentTypeUnique,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tgetCollectionAlias() {\r\n\t\treturn UMB_DOCUMENT_COLLECTION_ALIAS;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the unique identifier of the content type.\r\n\t * @deprecated Use `getContentTypeUnique` instead.\r\n\t * @returns { string | undefined} The unique identifier of the content type.\r\n\t * @memberof UmbDocumentWorkspaceContext\r\n\t */\r\n\tgetContentTypeId(): string | undefined {\r\n\t\treturn this.getContentTypeUnique();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the unique identifier of the content type.\r\n\t * @returns { string | undefined} The unique identifier of the content type.\r\n\t * @memberof UmbDocumentWorkspaceContext\r\n\t */\r\n\tgetContentTypeUnique(): string | undefined {\r\n\t\treturn this.getData()?.documentType.unique;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the template\r\n\t * @param {string} templateUnique The unique identifier of the template.\r\n\t * @memberof UmbDocumentWorkspaceContext\r\n\t */\r\n\tsetTemplate(templateUnique: string) {\r\n\t\tthis._data.updateCurrent({ template: { unique: templateUnique } });\r\n\t}\r\n\r\n\tprotected override async _handleSave() {\r\n\t\tconst elementStyle = (this.getHostElement() as HTMLElement).style;\r\n\t\telementStyle.setProperty('--uui-color-invalid', 'var(--uui-color-warning)');\r\n\t\telementStyle.setProperty('--uui-color-invalid-emphasis', 'var(--uui-color-warning-emphasis)');\r\n\t\telementStyle.setProperty('--uui-color-invalid-standalone', 'var(--uui-color-warning-standalone)');\r\n\t\telementStyle.setProperty('--uui-color-invalid-contrast', 'var(--uui-color-warning-contrast)');\r\n\t\tawait super._handleSave();\r\n\t}\r\n\r\n\tpublic async saveAndPreview(): Promise<void> {\r\n\t\treturn await this.#handleSaveAndPreview();\r\n\t}\r\n\r\n\tasync #handleSaveAndPreview() {\r\n\t\tconst unique = this.getUnique();\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\r\n\t\tlet firstVariantId = UmbVariantId.CreateInvariant();\r\n\r\n\t\t// Save document (the active variant) before previewing.\r\n\t\tconst { selected } = await this._determineVariantOptions();\r\n\t\tif (selected.length > 0) {\r\n\t\t\tfirstVariantId = UmbVariantId.FromString(selected[0]);\r\n\t\t\tconst variantIds = [firstVariantId];\r\n\t\t\tconst saveData = await this._data.constructData(variantIds);\r\n\t\t\tawait this.runMandatoryValidationForSaveData(saveData);\r\n\t\t\tawait this.performCreateOrUpdate(variantIds, saveData);\r\n\t\t}\r\n\r\n\t\t// Tell the server that we're entering preview mode.\r\n\t\tawait new UmbDocumentPreviewRepository(this).enter();\r\n\r\n\t\tconst serverContext = await this.getContext(UMB_SERVER_CONTEXT);\r\n\t\tif (!serverContext) {\r\n\t\t\tthrow new Error('Server context is missing');\r\n\t\t}\r\n\r\n\t\tconst backofficePath = serverContext.getBackofficePath();\r\n\t\tconst previewUrl = new URL(ensurePathEndsWithSlash(backofficePath) + 'preview', window.location.origin);\r\n\t\tpreviewUrl.searchParams.set('id', unique);\r\n\r\n\t\tif (firstVariantId.culture) {\r\n\t\t\tpreviewUrl.searchParams.set('culture', firstVariantId.culture);\r\n\t\t}\r\n\r\n\t\tif (firstVariantId.segment) {\r\n\t\t\tpreviewUrl.searchParams.set('segment', firstVariantId.segment);\r\n\t\t}\r\n\r\n\t\tconst previewWindow = window.open(previewUrl.toString(), `umbpreview-${unique}`);\r\n\t\tpreviewWindow?.focus();\r\n\t}\r\n\r\n\tpublic async publish() {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The Publish method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the Publish method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tawait this.#publishingContext.publish();\r\n\t}\r\n\r\n\t/**\r\n\t * Save the document and publish it.\r\n\t * @deprecated Will be removed in v17. Use the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t */\r\n\tpublic async saveAndPublish(): Promise<void> {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The SaveAndPublish method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the SaveAndPublish method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tawait this.#publishingContext.saveAndPublish();\r\n\t}\r\n\r\n\t/**\r\n\t * Schedule the document to be published at a later date.\r\n\t * @deprecated Will be removed in v17. Use the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t */\r\n\tpublic async schedule() {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The Schedule method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the Schedule method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tawait this.#publishingContext.schedule();\r\n\t}\r\n\r\n\t/**\r\n\t * Unpublish the document.\r\n\t * @deprecated Will be removed in v17. Use the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t */\r\n\tpublic async unpublish() {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The Unpublish method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the Unpublish method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tawait this.#publishingContext.unpublish();\r\n\t}\r\n\r\n\t/**\r\n\t * Publish the document and all its descendants.\r\n\t * @deprecated Will be removed in v17. Use the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t */\r\n\tpublic async publishWithDescendants() {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The PublishWithDescendants method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the PublishWithDescendants method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tawait this.#publishingContext.publishWithDescendants();\r\n\t}\r\n\r\n\tpublic createPropertyDatasetContext(\r\n\t\thost: UmbControllerHost,\r\n\t\tvariantId: UmbVariantId,\r\n\t): UmbDocumentPropertyDatasetContext {\r\n\t\treturn new UmbDocumentPropertyDatasetContext(host, this, variantId);\r\n\t}\r\n\r\n\tasync #handleUserPermissionChange(identifier: string, permitted: boolean, message: string) {\r\n\t\tif (permitted) {\r\n\t\t\tthis.readOnlyGuard?.removeRule(identifier);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.readOnlyGuard?.addRule({\r\n\t\t\tunique: identifier,\r\n\t\t\tmessage,\r\n\t\t\t/* This guard is a bit backwards. The rule is permitted to be read-only. \r\n\t\t\tIf the user does not have permission, we set it to true = permitted to be read-only. */\r\n\t\t\tpermitted: true,\r\n\t\t});\r\n\t}\r\n\r\n\t#preventEditInvariantFromNonDefault() {\r\n\t\tthis.observe(\r\n\t\t\tobserveMultiple([this.structure.contentTypeProperties, this.variantOptions]),\r\n\t\t\t([properties, variantOptions]) => {\r\n\t\t\t\tif (properties.length === 0) return;\r\n\t\t\t\tif (variantOptions.length === 0) return;\r\n\r\n\t\t\t\tvariantOptions.forEach((variantOption) => {\r\n\t\t\t\t\t// Do not add a rule for the default language. It is always permitted to edit.\r\n\t\t\t\t\tif (variantOption.language.isDefault) return;\r\n\r\n\t\t\t\t\tconst datasetVariantId = UmbVariantId.CreateFromPartial(variantOption);\r\n\t\t\t\t\tconst invariantVariantId = UmbVariantId.CreateInvariant();\r\n\t\t\t\t\tconst unique = `UMB_PREVENT_EDIT_INVARIANT_FROM_NON_DEFAULT_DATASET=${datasetVariantId.toString()}_PROPERTY_${invariantVariantId.toString()}`;\r\n\r\n\t\t\t\t\tconst rule: UmbVariantPropertyGuardRule = {\r\n\t\t\t\t\t\tunique,\r\n\t\t\t\t\t\tmessage: 'Shared properties can only be edited in the default language',\r\n\t\t\t\t\t\tvariantId: invariantVariantId,\r\n\t\t\t\t\t\tdatasetVariantId,\r\n\t\t\t\t\t\tpermitted: false,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.propertyWriteGuard.addRule(rule);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UmbDocumentWorkspaceContext;\r\n"],"names":["UmbDocumentPropertyDatasetContext","UmbContentPropertyDatasetContext","host","dataOwner","variantId","UmbDocumentValidationServerDataSource","#host","model","parentUnique","body","data","error","tryExecute","DocumentService","variantIds","cultures","id","culture","UmbDocumentValidationRepository","UmbRepositoryBase","#validationDataSource","UmbDocumentWorkspaceContext","UmbContentDetailWorkspaceContextBase","UMB_DOCUMENT_ENTITY_TYPE","UMB_DOCUMENT_WORKSPACE_ALIAS","UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS","UmbDocumentTypeDetailRepository","UMB_DOCUMENT_DETAIL_MODEL_VARIANT_SCAFFOLD","UMB_DOCUMENT_SAVE_MODAL","UmbDocumentPublishingRepository","#isTrashedContext","UmbIsTrashedEntityContext","UMB_DOCUMENT_CONFIGURATION_CONTEXT","context","config","allowSegmentCreation","allowEditInvariantFromNonDefault","variantOption","isNotCreatedSegmentVariant","#preventEditInvariantFromNonDefault","unique","UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT","#publishingContext","isNew","#enforceUserPermission","UMB_USER_PERMISSION_DOCUMENT_CREATE","UMB_USER_PERMISSION_DOCUMENT_UPDATE","UMB_CREATE_FROM_BLUEPRINT_DOCUMENT_WORKSPACE_PATH_PATTERN","_component","info","parentEntityType","documentTypeUnique","blueprintUnique","UmbWorkspaceIsNewRedirectController","UMB_CREATE_DOCUMENT_WORKSPACE_PATH_PATTERN","UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN","UmbWorkspaceIsNewRedirectControllerAlias","verb","message","#handleUserPermissionChange","createExtensionApiByAlias","UMB_DOCUMENT_USER_PERMISSION_CONDITION_ALIAS","permitted","response","parent","blueprintRepository","UmbDocumentBlueprintDetailRepository","UMB_DOCUMENT_COLLECTION_ALIAS","templateUnique","elementStyle","#handleSaveAndPreview","firstVariantId","UmbVariantId","selected","saveData","UmbDocumentPreviewRepository","serverContext","UMB_SERVER_CONTEXT","backofficePath","previewUrl","ensurePathEndsWithSlash","UmbDeprecation","identifier","observeMultiple","properties","variantOptions","datasetVariantId","invariantVariantId","rule"],"mappings":"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"}