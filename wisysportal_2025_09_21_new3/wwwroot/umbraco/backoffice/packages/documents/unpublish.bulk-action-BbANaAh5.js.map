{"version":3,"file":"unpublish.bulk-action-BbANaAh5.js","sources":["../../../src/packages/documents/documents/publishing/unpublish/entity-bulk-action/unpublish.bulk-action.ts"],"sourcesContent":["import { UmbUnpublishDocumentEntityAction } from '../entity-action/index.js';\r\nimport type { UmbDocumentVariantOptionModel } from '../../../types.js';\r\nimport { UMB_DOCUMENT_ENTITY_TYPE, UMB_DOCUMENT_UNPUBLISH_MODAL } from '../../../constants.js';\r\nimport { UmbDocumentPublishingRepository } from '../../repository/index.js';\r\nimport { umbConfirmModal, umbOpenModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbEntityBulkActionBase } from '@umbraco-cms/backoffice/entity-bulk-action';\r\nimport { UMB_APP_LANGUAGE_CONTEXT, UmbLanguageCollectionRepository } from '@umbraco-cms/backoffice/language';\r\nimport { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport { UmbLocalizationController } from '@umbraco-cms/backoffice/localization-api';\r\nimport { UMB_ENTITY_CONTEXT } from '@umbraco-cms/backoffice/entity';\r\nimport { UMB_ACTION_EVENT_CONTEXT } from '@umbraco-cms/backoffice/action';\r\nimport { UmbRequestReloadChildrenOfEntityEvent } from '@umbraco-cms/backoffice/entity-action';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\n\r\nexport class UmbDocumentUnpublishEntityBulkAction extends UmbEntityBulkActionBase<object> {\r\n\tasync execute() {\r\n\t\tconst entityContext = await this.getContext(UMB_ENTITY_CONTEXT);\r\n\t\tif (!entityContext) {\r\n\t\t\tthrow new Error('Entity context not found');\r\n\t\t}\r\n\t\tconst entityType = entityContext.getEntityType();\r\n\t\tconst unique = entityContext.getUnique();\r\n\r\n\t\tconst notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n\t\tconst localize = new UmbLocalizationController(this);\r\n\r\n\t\tif (!entityType) throw new Error('Entity type not found');\r\n\t\tif (unique === undefined) throw new Error('Entity unique not found');\r\n\r\n\t\t// If there is only one selection, we can refer to the regular unpublish entity action:\r\n\t\tif (this.selection.length === 1) {\r\n\t\t\tconst action = new UmbUnpublishDocumentEntityAction(this._host, {\r\n\t\t\t\tunique: this.selection[0],\r\n\t\t\t\tentityType: UMB_DOCUMENT_ENTITY_TYPE,\r\n\t\t\t\tmeta: {} as never,\r\n\t\t\t});\r\n\t\t\tawait action.execute();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst languageRepository = new UmbLanguageCollectionRepository(this._host);\r\n\t\tconst { data: languageData } = await languageRepository.requestCollection({});\r\n\r\n\t\tconst options: UmbDocumentVariantOptionModel[] = (languageData?.items ?? []).map((language) => ({\r\n\t\t\tlanguage,\r\n\t\t\tvariant: {\r\n\t\t\t\tname: language.name,\r\n\t\t\t\tculture: language.unique,\r\n\t\t\t\tstate: null,\r\n\t\t\t\tcreateDate: null,\r\n\t\t\t\tpublishDate: null,\r\n\t\t\t\tupdateDate: null,\r\n\t\t\t\tsegment: null,\r\n\t\t\t\tscheduledPublishDate: null,\r\n\t\t\t\tscheduledUnpublishDate: null,\r\n\t\t\t},\r\n\t\t\tunique: new UmbVariantId(language.unique, null).toString(),\r\n\t\t\tculture: language.unique,\r\n\t\t\tsegment: null,\r\n\t\t}));\r\n\r\n\t\tconst eventContext = await this.getContext(UMB_ACTION_EVENT_CONTEXT);\r\n\t\tif (!eventContext) {\r\n\t\t\tthrow new Error('Event context not found');\r\n\t\t}\r\n\t\tconst event = new UmbRequestReloadChildrenOfEntityEvent({\r\n\t\t\tentityType,\r\n\t\t\tunique,\r\n\t\t});\r\n\r\n\t\t// If there is only one language available, we can skip the modal and unpublish directly:\r\n\t\tif (options.length === 1) {\r\n\t\t\tconst localizationController = new UmbLocalizationController(this._host);\r\n\t\t\tconst confirm = await umbConfirmModal(this, {\r\n\t\t\t\theadline: localizationController.term('actions_unpublish'),\r\n\t\t\t\tcontent: localizationController.term('prompt_confirmListViewUnpublish'),\r\n\t\t\t\tcolor: 'warning',\r\n\t\t\t\tconfirmLabel: localizationController.term('actions_unpublish'),\r\n\t\t\t}).catch(() => false);\r\n\r\n\t\t\tif (confirm !== false) {\r\n\t\t\t\tconst variantId = new UmbVariantId(options[0].language.unique, null);\r\n\t\t\t\tconst publishingRepository = new UmbDocumentPublishingRepository(this._host);\r\n\t\t\t\tlet documentCnt = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < this.selection.length; i++) {\r\n\t\t\t\t\tconst id = this.selection[i];\r\n\t\t\t\t\tconst { error } = await publishingRepository.unpublish(id, [variantId]);\r\n\r\n\t\t\t\t\tif (!error) {\r\n\t\t\t\t\t\tdocumentCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnotificationContext?.peek('positive', {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\theadline: localize.term('speechBubbles_contentUnpublished'),\r\n\t\t\t\t\t\tmessage: localize.term('speechBubbles_editMultiContentUnpublishedText', documentCnt),\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\teventContext.dispatchEvent(event);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Figure out the default selections\r\n\t\t// TODO: Missing features to pre-select the variant that fits with the variant-id of the tree/collection? (Again only relevant if the action is executed from a Tree or Collection) [NL]\r\n\t\tconst selection: Array<string> = [];\r\n\t\tconst context = await this.getContext(UMB_APP_LANGUAGE_CONTEXT);\r\n\t\tif (!context) throw new Error('App language context not found');\r\n\t\tconst appCulture = context.getAppCulture();\r\n\t\t// If the app language is one of the options, select it by default:\r\n\t\tif (appCulture && options.some((o) => o.unique === appCulture)) {\r\n\t\t\tselection.push(new UmbVariantId(appCulture, null).toString());\r\n\t\t}\r\n\r\n\t\tconst result = await umbOpenModal(this, UMB_DOCUMENT_UNPUBLISH_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\toptions,\r\n\t\t\t},\r\n\t\t\tvalue: { selection },\r\n\t\t}).catch(() => undefined);\r\n\r\n\t\tif (!result?.selection.length) return;\r\n\r\n\t\tconst variantIds = result?.selection.map((x) => UmbVariantId.FromString(x)) ?? [];\r\n\r\n\t\tconst repository = new UmbDocumentPublishingRepository(this._host);\r\n\r\n\t\tif (variantIds.length) {\r\n\t\t\tlet documentCnt = 0;\r\n\t\t\tfor (const unique of this.selection) {\r\n\t\t\t\tconst { error } = await repository.unpublish(unique, variantIds);\r\n\r\n\t\t\t\tif (!error) {\r\n\t\t\t\t\tdocumentCnt++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnotificationContext?.peek('positive', {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\theadline: localize.term('speechBubbles_contentUnpublished'),\r\n\t\t\t\t\tmessage: localize.term(\r\n\t\t\t\t\t\t'speechBubbles_editMultiVariantUnpublishedText',\r\n\t\t\t\t\t\tdocumentCnt,\r\n\t\t\t\t\t\tlocalize.list(variantIds.map((v) => v.culture ?? '')),\r\n\t\t\t\t\t),\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\teventContext.dispatchEvent(event);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentUnpublishEntityBulkAction as api };\r\n"],"names":["UmbDocumentUnpublishEntityBulkAction","UmbEntityBulkActionBase","entityContext","UMB_ENTITY_CONTEXT","entityType","unique","notificationContext","UMB_NOTIFICATION_CONTEXT","localize","UmbLocalizationController","UmbUnpublishDocumentEntityAction","UMB_DOCUMENT_ENTITY_TYPE","languageRepository","UmbLanguageCollectionRepository","languageData","options","language","UmbVariantId","eventContext","UMB_ACTION_EVENT_CONTEXT","event","UmbRequestReloadChildrenOfEntityEvent","localizationController","umbConfirmModal","variantId","publishingRepository","UmbDocumentPublishingRepository","documentCnt","i","id","error","selection","context","UMB_APP_LANGUAGE_CONTEXT","appCulture","o","result","umbOpenModal","UMB_DOCUMENT_UNPUBLISH_MODAL","variantIds","x","repository","v"],"mappings":"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"}