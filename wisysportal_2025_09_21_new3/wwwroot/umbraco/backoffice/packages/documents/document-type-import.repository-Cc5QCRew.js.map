{"version":3,"file":"document-type-import.repository-Cc5QCRew.js","sources":["../../../src/packages/documents/document-types/entity-actions/import/repository/document-type-import.server.data-source.ts","../../../src/packages/documents/document-types/entity-actions/import/repository/document-type-import.repository.ts"],"sourcesContent":["import { DocumentTypeService, type ImportDocumentTypeRequestModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * Document Type Import Server Data Source\r\n * @Import\r\n * @class UmbDocumentTypeImportServerDataSource\r\n */\r\nexport class UmbDocumentTypeImportServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbDocumentTypeImportServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbDocumentTypeImportServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Import an item for the given id to the destination unique\r\n\t * @param {temporaryUnique} temporaryUnique\r\n\t * @returns {*}\r\n\t * @memberof UmbDocumentTypeImportServerDataSource\r\n\t */\r\n\tasync import(temporaryUnique: string) {\r\n\t\tif (!temporaryUnique) throw new Error('Unique is missing');\r\n\r\n\t\tconst body: ImportDocumentTypeRequestModel = {\r\n\t\t\tfile: { id: temporaryUnique },\r\n\t\t};\r\n\r\n\t\treturn tryExecute(this.#host, DocumentTypeService.postDocumentTypeImport({ body }));\r\n\t}\r\n}\r\n","import { UmbDocumentTypeImportServerDataSource } from './document-type-import.server.data-source.js';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbDocumentTypeImportRepository extends UmbRepositoryBase {\r\n\t#importSource = new UmbDocumentTypeImportServerDataSource(this);\r\n\r\n\tasync requestImport(temporaryUnique: string) {\r\n\t\tconst { data, error } = await this.#importSource.import(temporaryUnique);\r\n\r\n\t\tif (!error) {\r\n\t\t\tconst notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n\t\t\tif (!notificationContext) {\r\n\t\t\t\tthrow new Error('Notification context not found');\r\n\t\t\t}\r\n\t\t\tconst notification = { data: { message: `Imported` } };\r\n\t\t\tnotificationContext.peek('positive', notification);\r\n\t\t}\r\n\r\n\t\treturn { data, error };\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentTypeImportRepository as api };\r\n"],"names":["UmbDocumentTypeImportServerDataSource","#host","host","temporaryUnique","body","tryExecute","DocumentTypeService","UmbDocumentTypeImportRepository","UmbRepositoryBase","#importSource","data","error","notificationContext","UMB_NOTIFICATION_CONTEXT","notification"],"mappings":";;;;AASO,MAAMA,EAAsC;AAAA,EAClDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASd,MAAM,OAAOC,GAAyB;AACrC,QAAI,CAACA,EAAuB,OAAA,IAAI,MAAM,mBAAmB;AAEzD,UAAMC,IAAuC;AAAA,MAC5C,MAAM,EAAE,IAAID,EAAgB;AAAA,IAC7B;AAEO,WAAAE,EAAW,KAAKJ,IAAOK,EAAoB,uBAAuB,EAAE,MAAAF,EAAA,CAAM,CAAC;AAAA,EAAA;AAEpF;AChCO,MAAMG,UAAwCC,EAAkB;AAAA,EACtEC,KAAgB,IAAIT,EAAsC,IAAI;AAAA,EAE9D,MAAM,cAAcG,GAAyB;AACtC,UAAA,EAAE,MAAAO,GAAM,OAAAC,EAAM,IAAI,MAAM,KAAKF,GAAc,OAAON,CAAe;AAEvE,QAAI,CAACQ,GAAO;AACX,YAAMC,IAAsB,MAAM,KAAK,WAAWC,CAAwB;AAC1E,UAAI,CAACD;AACE,cAAA,IAAI,MAAM,gCAAgC;AAEjD,YAAME,IAAe,EAAE,MAAM,EAAE,SAAS,aAAa;AACjC,MAAAF,EAAA,KAAK,YAAYE,CAAY;AAAA,IAAA;AAG3C,WAAA,EAAE,MAAAJ,GAAM,OAAAC,EAAM;AAAA,EAAA;AAEvB;"}