{"version":3,"file":"document-user-permission.condition-BkDOsmEj.js","sources":["../../../src/packages/documents/documents/user-permissions/document/utils.ts","../../../src/packages/documents/documents/user-permissions/document/conditions/document-user-permission.condition.ts"],"sourcesContent":["import type { DocumentPermissionPresentationModel } from '@umbraco-cms/backoffice/external/backend-api';\r\n\r\n/**\r\n *\r\n * @param permission\r\n */\r\nexport function isDocumentUserPermission(permission: unknown): permission is DocumentPermissionPresentationModel {\r\n\treturn (permission as DocumentPermissionPresentationModel).$type === 'DocumentPermissionPresentationModel';\r\n}\r\n","import { isDocumentUserPermission } from '../utils.js';\r\nimport type { UmbDocumentUserPermissionConditionConfig } from './types.js';\r\nimport { UMB_CURRENT_USER_CONTEXT } from '@umbraco-cms/backoffice/current-user';\r\nimport { UMB_ANCESTORS_ENTITY_CONTEXT, UMB_ENTITY_CONTEXT, type UmbEntityUnique } from '@umbraco-cms/backoffice/entity';\r\nimport { observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbConditionControllerArguments, UmbExtensionCondition } from '@umbraco-cms/backoffice/extension-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { DocumentPermissionPresentationModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbConditionBase } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport class UmbDocumentUserPermissionCondition\r\n\textends UmbConditionBase<UmbDocumentUserPermissionConditionConfig>\r\n\timplements UmbExtensionCondition\r\n{\r\n\t#entityType: string | undefined;\r\n\t#unique: string | null | undefined;\r\n\t#documentPermissions: Array<DocumentPermissionPresentationModel> = [];\r\n\t#fallbackPermissions: string[] = [];\r\n\t#ancestors: Array<UmbEntityUnique> = [];\r\n\r\n\tconstructor(\r\n\t\thost: UmbControllerHost,\r\n\t\targs: UmbConditionControllerArguments<UmbDocumentUserPermissionConditionConfig>,\r\n\t) {\r\n\t\tsuper(host, args);\r\n\r\n\t\tthis.consumeContext(UMB_CURRENT_USER_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext?.currentUser,\r\n\t\t\t\t(currentUser) => {\r\n\t\t\t\t\tthis.#documentPermissions = currentUser?.permissions?.filter(isDocumentUserPermission) || [];\r\n\t\t\t\t\tthis.#fallbackPermissions = currentUser?.fallbackPermissions || [];\r\n\t\t\t\t\tthis.#checkPermissions();\r\n\t\t\t\t},\r\n\t\t\t\t'umbUserPermissionConditionObserver',\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_ENTITY_CONTEXT, (context) => {\r\n\t\t\tif (!context) {\r\n\t\t\t\tthis.removeUmbControllerByAlias('umbUserPermissionEntityContextObserver');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.observe(\r\n\t\t\t\tobserveMultiple([context.entityType, context.unique]),\r\n\t\t\t\t([entityType, unique]) => {\r\n\t\t\t\t\tthis.#entityType = entityType;\r\n\t\t\t\t\tthis.#unique = unique;\r\n\t\t\t\t\tthis.#checkPermissions();\r\n\t\t\t\t},\r\n\t\t\t\t'umbUserPermissionEntityContextObserver',\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_ANCESTORS_ENTITY_CONTEXT, (instance) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tinstance?.ancestors,\r\n\t\t\t\t(ancestors) => {\r\n\t\t\t\t\tthis.#ancestors = ancestors?.map((item) => item.unique) ?? [];\r\n\t\t\t\t\tthis.#checkPermissions();\r\n\t\t\t\t},\r\n\t\t\t\t'observeAncestors',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#checkPermissions() {\r\n\t\tif (!this.#entityType) return;\r\n\t\tif (this.#unique === undefined) return;\r\n\r\n\t\tconst hasDocumentPermissions = this.#documentPermissions.length > 0;\r\n\r\n\t\t// if there is no permissions for any documents we use the fallback permissions\r\n\t\tif (!hasDocumentPermissions) {\r\n\t\t\tthis.#check(this.#fallbackPermissions);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are document permissions, we need to check the full path to see if any permissions are defined for the current document\r\n\t\t// If we find multiple permissions in the same path, we will apply the closest one\r\n\t\tif (hasDocumentPermissions) {\r\n\t\t\t// Path including the current document and all ancestors\r\n\t\t\tconst path = [...this.#ancestors, this.#unique].filter((unique) => unique !== null);\r\n\t\t\t// Reverse the path to find the closest document permission quickly\r\n\t\t\tconst reversedPath = [...path].reverse();\r\n\t\t\tconst documentPermissionsMap = new Map(this.#documentPermissions.map((p) => [p.document.id, p]));\r\n\r\n\t\t\t// Find the closest document permission in the path\r\n\t\t\tconst closestDocumentPermission = reversedPath.find((id) => documentPermissionsMap.has(id));\r\n\r\n\t\t\t// Retrieve the corresponding permission data\r\n\t\t\tconst match = closestDocumentPermission ? documentPermissionsMap.get(closestDocumentPermission) : undefined;\r\n\r\n\t\t\t// no permissions for the current document - use the fallback permissions\r\n\t\t\tif (!match) {\r\n\t\t\t\tthis.#check(this.#fallbackPermissions);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// we found permissions - check them\r\n\t\t\tthis.#check(match.verbs);\r\n\t\t}\r\n\t}\r\n\r\n\t#check(verbs: Array<string>) {\r\n\t\t/* we default to true se we don't require both allOf and oneOf to be defined\r\n\t\t but they can be combined for more complex scenarios */\r\n\t\tlet allOfPermitted = true;\r\n\t\tlet oneOfPermitted = true;\r\n\r\n\t\t// check if all of the verbs are present\r\n\t\tif (this.config.allOf?.length) {\r\n\t\t\tallOfPermitted = this.config.allOf.every((verb) => verbs.includes(verb));\r\n\t\t}\r\n\r\n\t\t// check if at least one of the verbs is present\r\n\t\tif (this.config.oneOf?.length) {\r\n\t\t\toneOfPermitted = this.config.oneOf.some((verb) => verbs.includes(verb));\r\n\t\t}\r\n\r\n\t\t// if neither allOf or oneOf is defined we default to false\r\n\t\tif (!allOfPermitted && !oneOfPermitted) {\r\n\t\t\tallOfPermitted = false;\r\n\t\t\toneOfPermitted = false;\r\n\t\t}\r\n\r\n\t\tthis.permitted = allOfPermitted && oneOfPermitted;\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentUserPermissionCondition as api };\r\n"],"names":["isDocumentUserPermission","permission","UmbDocumentUserPermissionCondition","UmbConditionBase","#entityType","#unique","#documentPermissions","#fallbackPermissions","#ancestors","host","args","UMB_CURRENT_USER_CONTEXT","context","currentUser","#checkPermissions","UMB_ENTITY_CONTEXT","observeMultiple","entityType","unique","UMB_ANCESTORS_ENTITY_CONTEXT","instance","ancestors","item","hasDocumentPermissions","#check","reversedPath","documentPermissionsMap","p","closestDocumentPermission","id","match","verbs","allOfPermitted","oneOfPermitted","verb"],"mappings":";;;;AAMO,SAASA,EAAyBC,GAAwE;AAChH,SAAQA,EAAmD,UAAU;AACtE;ACEO,MAAMC,UACJC,EAET;AAAA,EACCC;AAAA,EACAC;AAAA,EACAC,KAAmE,CAAC;AAAA,EACpEC,KAAiC,CAAC;AAAA,EAClCC,KAAqC,CAAC;AAAA,EAEtC,YACCC,GACAC,GACC;AACD,UAAMD,GAAMC,CAAI,GAEX,KAAA,eAAeC,GAA0B,CAACC,MAAY;AACrD,WAAA;AAAA,QACJA,GAAS;AAAA,QACT,CAACC,MAAgB;AAChB,eAAKP,KAAuBO,GAAa,aAAa,OAAOb,CAAwB,KAAK,CAAC,GACtF,KAAAO,KAAuBM,GAAa,uBAAuB,CAAC,GACjE,KAAKC,GAAkB;AAAA,QACxB;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA,GAEI,KAAA,eAAeC,GAAoB,CAACH,MAAY;AACpD,UAAI,CAACA,GAAS;AACb,aAAK,2BAA2B,wCAAwC;AACxE;AAAA,MAAA;AAGI,WAAA;AAAA,QACJI,EAAgB,CAACJ,EAAQ,YAAYA,EAAQ,MAAM,CAAC;AAAA,QACpD,CAAC,CAACK,GAAYC,CAAM,MAAM;AACzB,eAAKd,KAAca,GACnB,KAAKZ,KAAUa,GACf,KAAKJ,GAAkB;AAAA,QACxB;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA,GAEI,KAAA,eAAeK,GAA8B,CAACC,MAAa;AAC1D,WAAA;AAAA,QACJA,GAAU;AAAA,QACV,CAACC,MAAc;AACT,eAAAb,KAAaa,GAAW,IAAI,CAACC,MAASA,EAAK,MAAM,KAAK,CAAC,GAC5D,KAAKR,GAAkB;AAAA,QACxB;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA;AAAA,EAAA;AAAA,EAGFA,KAAoB;AAEf,QADA,CAAC,KAAKV,MACN,KAAKC,OAAY,OAAW;AAE1B,UAAAkB,IAAyB,KAAKjB,GAAqB,SAAS;AAGlE,QAAI,CAACiB,GAAwB;AACvB,WAAAC,GAAO,KAAKjB,EAAoB;AACrC;AAAA,IAAA;AAKD,QAAIgB,GAAwB;AAI3B,YAAME,IAAe,CAAC,GAFT,CAAC,GAAG,KAAKjB,IAAY,KAAKH,EAAO,EAAE,OAAO,CAACa,MAAWA,MAAW,IAAI,CAErD,EAAE,QAAQ,GACjCQ,IAAyB,IAAI,IAAI,KAAKpB,GAAqB,IAAI,CAACqB,MAAM,CAACA,EAAE,SAAS,IAAIA,CAAC,CAAC,CAAC,GAGzFC,IAA4BH,EAAa,KAAK,CAACI,MAAOH,EAAuB,IAAIG,CAAE,CAAC,GAGpFC,IAAQF,IAA4BF,EAAuB,IAAIE,CAAyB,IAAI;AAGlG,UAAI,CAACE,GAAO;AACN,aAAAN,GAAO,KAAKjB,EAAoB;AACrC;AAAA,MAAA;AAII,WAAAiB,GAAOM,EAAM,KAAK;AAAA,IAAA;AAAA,EACxB;AAAA,EAGDN,GAAOO,GAAsB;AAG5B,QAAIC,IAAiB,IACjBC,IAAiB;AAGjB,IAAA,KAAK,OAAO,OAAO,WACLD,IAAA,KAAK,OAAO,MAAM,MAAM,CAACE,MAASH,EAAM,SAASG,CAAI,CAAC,IAIpE,KAAK,OAAO,OAAO,WACLD,IAAA,KAAK,OAAO,MAAM,KAAK,CAACC,MAASH,EAAM,SAASG,CAAI,CAAC,IAInE,CAACF,KAAkB,CAACC,MACND,IAAA,IACAC,IAAA,KAGlB,KAAK,YAAYD,KAAkBC;AAAA,EAAA;AAErC;"}