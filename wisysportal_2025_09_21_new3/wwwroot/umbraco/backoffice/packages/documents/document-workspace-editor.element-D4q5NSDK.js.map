{"version":3,"file":"document-workspace-editor.element-D4q5NSDK.js","sources":["../../../src/packages/documents/documents/workspace/document-workspace-split-view-variant-selector.element.ts","../../../src/packages/documents/documents/workspace/document-workspace-split-view.element.ts","../../../src/packages/documents/documents/workspace/document-workspace-editor.element.ts"],"sourcesContent":["import type { UmbDocumentVariantOptionModel } from '../types.js';\r\nimport { sortVariants } from '../utils.js';\r\nimport { UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT } from '../publishing/index.js';\r\nimport { customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { DocumentVariantStateModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbWorkspaceSplitViewVariantSelectorElement } from '@umbraco-cms/backoffice/workspace';\r\n\r\nconst elementName = 'umb-document-workspace-split-view-variant-selector';\r\n@customElement(elementName)\r\nexport class UmbDocumentWorkspaceSplitViewVariantSelectorElement extends UmbWorkspaceSplitViewVariantSelectorElement<UmbDocumentVariantOptionModel> {\r\n\tprotected override _variantSorter = sortVariants;\r\n\r\n\t@state()\r\n\tprivate _variantsWithPendingChanges: Array<any> = [];\r\n\r\n\t#documentPublishingWorkspaceContext?: typeof UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t#publishStateLocalizationMap = {\r\n\t\t[DocumentVariantStateModel.DRAFT]: 'content_unpublished',\r\n\t\t[DocumentVariantStateModel.PUBLISHED]: 'content_published',\r\n\t\t// TODO: The pending changes state can be removed once the management Api removes this state\r\n\t\t// We only keep it here to make typescript happy\r\n\t\t// We should also make our own state model for this\r\n\t\t[DocumentVariantStateModel.PUBLISHED_PENDING_CHANGES]: 'content_published',\r\n\t\t[DocumentVariantStateModel.NOT_CREATED]: 'content_notCreated',\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.consumeContext(UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tthis.#documentPublishingWorkspaceContext = instance;\r\n\t\t\tthis.#observePendingChanges();\r\n\t\t});\r\n\t}\r\n\r\n\t#observePendingChanges() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#documentPublishingWorkspaceContext?.publishedPendingChanges.variantsWithChanges,\r\n\t\t\t(variants) => {\r\n\t\t\t\tthis._variantsWithPendingChanges = variants || [];\r\n\t\t\t},\r\n\t\t\t'_observePendingChanges',\r\n\t\t);\r\n\t}\r\n\r\n\t#hasPendingChanges(variant: UmbDocumentVariantOptionModel) {\r\n\t\treturn this._variantsWithPendingChanges.some((x) => x.variantId.compare(variant));\r\n\t}\r\n\r\n\t#getVariantState(variantOption: UmbDocumentVariantOptionModel) {\r\n\t\tlet term = this.#publishStateLocalizationMap[variantOption.variant?.state || DocumentVariantStateModel.NOT_CREATED];\r\n\r\n\t\tif (\r\n\t\t\t(variantOption.variant?.state === DocumentVariantStateModel.PUBLISHED ||\r\n\t\t\t\tvariantOption.variant?.state === DocumentVariantStateModel.PUBLISHED_PENDING_CHANGES) &&\r\n\t\t\tthis.#hasPendingChanges(variantOption)\r\n\t\t) {\r\n\t\t\tterm = 'content_publishedPendingChanges';\r\n\t\t}\r\n\r\n\t\treturn this.localize.term(term);\r\n\t}\r\n\r\n\toverride _renderVariantDetails(variantOption: UmbDocumentVariantOptionModel) {\r\n\t\treturn html` ${this.#getVariantState(variantOption)}`;\r\n\t}\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: UmbDocumentWorkspaceSplitViewVariantSelectorElement;\r\n\t}\r\n}\r\n","import { UMB_DOCUMENT_WORKSPACE_CONTEXT } from './document-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, nothing, customElement, state, repeat, ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { ActiveVariant } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nimport './document-workspace-split-view-variant-selector.element.js';\r\n\r\n@customElement('umb-document-workspace-split-view')\r\nexport class UmbDocumentWorkspaceSplitViewElement extends UmbLitElement {\r\n\t// TODO: Refactor: use the split view context token:\r\n\tprivate _workspaceContext?: typeof UMB_DOCUMENT_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\t_variants?: Array<ActiveVariant>;\r\n\r\n\t@state()\r\n\t_icon?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t// TODO: Refactor: use a split view workspace context token: [NL]\r\n\t\tthis.consumeContext(UMB_DOCUMENT_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis._workspaceContext = context;\r\n\t\t\tthis.#observeActiveVariantInfo();\r\n\t\t\tthis.#observeIcon();\r\n\t\t});\r\n\t}\r\n\r\n\t#observeActiveVariantInfo() {\r\n\t\tthis.observe(\r\n\t\t\tthis._workspaceContext?.splitView.activeVariantsInfo,\r\n\t\t\t(variants) => {\r\n\t\t\t\tthis._variants = variants;\r\n\t\t\t},\r\n\t\t\t'_observeActiveVariantsInfo',\r\n\t\t);\r\n\t}\r\n\r\n\t#observeIcon() {\r\n\t\tthis.observe(this._workspaceContext?.contentTypeIcon, (icon) => {\r\n\t\t\tthis._icon = icon ?? undefined;\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._variants\r\n\t\t\t? html`<div id=\"splitViews\">\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tthis._variants,\r\n\t\t\t\t\t\t\t(view) =>\r\n\t\t\t\t\t\t\t\tview.index + '_' + (view.culture ?? '') + '_' + (view.segment ?? '') + '_' + this._variants!.length,\r\n\t\t\t\t\t\t\t(view) => html`\r\n\t\t\t\t\t\t\t\t<umb-workspace-split-view\r\n\t\t\t\t\t\t\t\t\t.splitViewIndex=${view.index}\r\n\t\t\t\t\t\t\t\t\t.displayNavigation=${view.index === this._variants!.length - 1}>\r\n\t\t\t\t\t\t\t\t\t<umb-icon slot=\"icon\" name=${ifDefined(this._icon)}></umb-icon>\r\n\t\t\t\t\t\t\t\t\t<umb-document-workspace-split-view-variant-selector\r\n\t\t\t\t\t\t\t\t\t\tslot=\"variant-selector\"></umb-document-workspace-split-view-variant-selector>\r\n\t\t\t\t\t\t\t\t</umb-workspace-split-view>\r\n\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<umb-workspace-footer alias=\"Umb.Workspace.Document\"></umb-workspace-footer>`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\r\n\t\t\t#splitViews {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: calc(100% - var(--umb-footer-layout-height));\r\n\t\t\t}\r\n\r\n\t\t\t#breadcrumbs {\r\n\t\t\t\tmargin: 0 var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDocumentWorkspaceSplitViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-document-workspace-split-view': UmbDocumentWorkspaceSplitViewElement;\r\n\t}\r\n}\r\n","import type { UmbDocumentVariantOptionModel } from '../types.js';\r\nimport { UmbDocumentWorkspaceSplitViewElement } from './document-workspace-split-view.element.js';\r\nimport { UMB_DOCUMENT_WORKSPACE_CONTEXT } from './document-workspace.context-token.js';\r\nimport { customElement, state, css, html } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { UmbRoute, UmbRouterSlotInitEvent } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_APP_LANGUAGE_CONTEXT } from '@umbraco-cms/backoffice/language';\r\n\r\n// TODO: This seem fully identical with Media Workspace Editor, so we can refactor this to a generic component. [NL]\r\n@customElement('umb-document-workspace-editor')\r\nexport class UmbDocumentWorkspaceEditorElement extends UmbLitElement {\r\n\t//\r\n\t// TODO: Refactor: when having a split view/variants context token, we can rename the split view/variants component to a generic and make this component generic as well. [NL]\r\n\tprivate splitViewElement = new UmbDocumentWorkspaceSplitViewElement();\r\n\r\n\t#appLanguage?: typeof UMB_APP_LANGUAGE_CONTEXT.TYPE;\r\n\t#workspaceContext?: typeof UMB_DOCUMENT_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t#workspaceRoute?: string;\r\n\t#appCulture?: string;\r\n\t#variants?: Array<UmbDocumentVariantOptionModel>;\r\n\t#isForbidden = false;\r\n\r\n\t@state()\r\n\t_routes?: Array<UmbRoute>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_APP_LANGUAGE_CONTEXT, (instance) => {\r\n\t\t\tthis.#appLanguage = instance;\r\n\t\t\tthis.observe(this.#appLanguage?.appLanguageCulture, (appCulture) => {\r\n\t\t\t\tthis.#appCulture = appCulture;\r\n\t\t\t\tthis.#generateRoutes();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_DOCUMENT_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tthis.#workspaceContext = instance;\r\n\t\t\tthis.observe(\r\n\t\t\t\tthis.#workspaceContext?.variantOptions,\r\n\t\t\t\t(variants) => {\r\n\t\t\t\t\tthis.#variants = variants;\r\n\t\t\t\t\tthis.#generateRoutes();\r\n\t\t\t\t},\r\n\t\t\t\t'_observeVariants',\r\n\t\t\t);\r\n\r\n\t\t\tthis.observe(\r\n\t\t\t\tthis.#workspaceContext?.forbidden.isOn,\r\n\t\t\t\t(isForbidden) => {\r\n\t\t\t\t\tthis.#isForbidden = isForbidden ?? false;\r\n\t\t\t\t\tthis.#generateRoutes();\r\n\t\t\t\t},\r\n\t\t\t\t'_observeForbidden',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#handleVariantFolderPart(index: number, folderPart: string) {\r\n\t\tconst variantSplit = folderPart.split('_');\r\n\t\tconst culture = variantSplit[0];\r\n\t\tconst segment = variantSplit[1];\r\n\t\tthis.#workspaceContext?.splitView.setActiveVariant(index, culture, segment);\r\n\t}\r\n\r\n\t#generateRoutes() {\r\n\t\tif (!this.#variants || !this.#appCulture) {\r\n\t\t\tthis._routes = [];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Generate split view routes for all available routes\r\n\t\tconst routes: Array<UmbRoute> = [];\r\n\r\n\t\t// Split view routes:\r\n\t\tthis.#variants.forEach((variantA) => {\r\n\t\t\tthis.#variants!.forEach((variantB) => {\r\n\t\t\t\troutes.push({\r\n\t\t\t\t\t// TODO: When implementing Segments, be aware if using the unique still is URL Safe, cause its most likely not... [NL]\r\n\t\t\t\t\tpath: variantA.unique + '_&_' + variantB.unique,\r\n\t\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t\t// Set split view/active info..\r\n\t\t\t\t\t\tconst variantSplit = info.match.fragments.consumed.split('_&_');\r\n\t\t\t\t\t\tvariantSplit.forEach((part, index) => {\r\n\t\t\t\t\t\t\tthis.#handleVariantFolderPart(index, part);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Single view:\r\n\t\tthis.#variants.forEach((variant) => {\r\n\t\t\troutes.push({\r\n\t\t\t\t// TODO: When implementing Segments, be aware if using the unique still is URL Safe, cause its most likely not... [NL]\r\n\t\t\t\tpath: variant.unique,\r\n\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t// cause we might come from a split-view, we need to reset index 1.\r\n\t\t\t\t\tthis.#workspaceContext?.splitView.removeActiveVariant(1);\r\n\t\t\t\t\tthis.#handleVariantFolderPart(0, info.match.fragments.consumed);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (routes.length !== 0) {\r\n\t\t\t// Using first single view as the default route for now (hence the math below):\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: '',\r\n\t\t\t\tpathMatch: 'full',\r\n\t\t\t\tresolve: async () => {\r\n\t\t\t\t\tif (!this.#workspaceContext) {\r\n\t\t\t\t\t\tthrow new Error('Workspace context is not available when resolving the default route.');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst route = routes.find((route) => route.path === this.#appCulture);\r\n\r\n\t\t\t\t\tif (!route) {\r\n\t\t\t\t\t\tconst firstVariantPath = routes.find((route) => route.path === this.#variants?.[0]?.unique)?.path;\r\n\r\n\t\t\t\t\t\tif (firstVariantPath) {\r\n\t\t\t\t\t\t\thistory.replaceState({}, '', `${this.#workspaceRoute}/${firstVariantPath}`);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// TODO: Notice: here is a specific index used for fallback, this could be made more solid [NL]\r\n\t\t\t\t\t\tconst path = `${this.#workspaceRoute}/${routes[routes.length - 3].path}`;\r\n\r\n\t\t\t\t\t\thistory.replaceState({}, '', path);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thistory.replaceState({}, '', `${this.#workspaceRoute}/${route?.path}`);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\troutes.push({\r\n\t\t\tpath: '**',\r\n\t\t\tcomponent: async () => {\r\n\t\t\t\tconst router = await import('@umbraco-cms/backoffice/router');\r\n\t\t\t\treturn this.#isForbidden ? router.UmbRouteForbiddenElement : router.UmbRouteNotFoundElement;\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis._routes = routes;\r\n\t}\r\n\r\n\tprivate _gotWorkspaceRoute = (e: UmbRouterSlotInitEvent) => {\r\n\t\tthis.#workspaceRoute = e.target.absoluteRouterPath;\r\n\t\tthis.#workspaceContext?.splitView.setWorkspaceRoute(this.#workspaceRoute);\r\n\t};\r\n\r\n\toverride render() {\r\n\t\treturn this._routes\r\n\t\t\t? html`<umb-router-slot .routes=${this._routes} @init=${this._gotWorkspaceRoute}></umb-router-slot>`\r\n\t\t\t: '';\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDocumentWorkspaceEditorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-document-workspace-editor': UmbDocumentWorkspaceEditorElement;\r\n\t}\r\n}\r\n"],"names":["_documentPublishingWorkspaceContext","_publishStateLocalizationMap","_UmbDocumentWorkspaceSplitViewVariantSelectorElement_instances","observePendingChanges_fn","hasPendingChanges_fn","getVariantState_fn","elementName","UmbDocumentWorkspaceSplitViewVariantSelectorElement","UmbWorkspaceSplitViewVariantSelectorElement","__privateAdd","sortVariants","DocumentVariantStateModel","UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT","instance","__privateSet","__privateMethod","variantOption","html","__privateGet","variants","variant","x","term","__decorateClass","state","customElement","_UmbDocumentWorkspaceSplitViewElement_instances","observeActiveVariantInfo_fn","observeIcon_fn","UmbDocumentWorkspaceSplitViewElement","UmbLitElement","UMB_DOCUMENT_WORKSPACE_CONTEXT","context","repeat","view","ifDefined","nothing","icon","UmbTextStyles","css","_appLanguage","_workspaceContext","_workspaceRoute","_appCulture","_variants","_isForbidden","_UmbDocumentWorkspaceEditorElement_instances","handleVariantFolderPart_fn","generateRoutes_fn","UmbDocumentWorkspaceEditorElement","e","UMB_APP_LANGUAGE_CONTEXT","appCulture","isForbidden","index","folderPart","variantSplit","culture","segment","routes","variantA","variantB","_component","info","part","route","firstVariantPath","path","router","UmbDocumentWorkspaceEditorElement$1"],"mappings":"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"}