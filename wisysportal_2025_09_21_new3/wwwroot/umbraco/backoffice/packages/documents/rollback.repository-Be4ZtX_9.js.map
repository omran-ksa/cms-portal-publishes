{"version":3,"file":"rollback.repository-Be4ZtX_9.js","sources":["../../../src/packages/documents/documents/rollback/repository/rollback.server.data-source.ts","../../../src/packages/documents/documents/rollback/repository/rollback.repository.ts"],"sourcesContent":["import type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { DocumentVersionService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the Rollback that fetches data from the server\r\n * @class UmbRollbackServerDataSource\r\n * @implements {RepositoryDetailDataSource}\r\n */\r\nexport class UmbRollbackServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbRollbackServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of versions for a document\r\n\t * @param id\r\n\t * @param culture\r\n\t * @returns {*}\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tgetVersionsByDocumentId(id: string, culture?: string) {\r\n\t\treturn tryExecute(this.#host, DocumentVersionService.getDocumentVersion({ query: { documentId: id, culture } }));\r\n\t}\r\n\r\n\t/**\r\n\t * Get a specific version by id\r\n\t * @param versionId\r\n\t * @returns {*}\r\n\t * @memberof UmbRollbackServerDataSource\r\n\t */\r\n\tgetVersionById(versionId: string) {\r\n\t\treturn tryExecute(this.#host, DocumentVersionService.getDocumentVersionById({ path: { id: versionId } }));\r\n\t}\r\n\r\n\tsetPreventCleanup(versionId: string, preventCleanup: boolean) {\r\n\t\treturn tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentVersionService.putDocumentVersionByIdPreventCleanup({\r\n\t\t\t\tpath: { id: versionId },\r\n\t\t\t\tquery: { preventCleanup },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\trollback(versionId: string, culture?: string) {\r\n\t\treturn tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentVersionService.postDocumentVersionByIdRollback({ path: { id: versionId }, query: { culture } }),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbRollbackServerDataSource } from './rollback.server.data-source.js';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbApi } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nexport class UmbRollbackRepository extends UmbControllerBase implements UmbApi {\r\n\t#dataSource: UmbRollbackServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#dataSource = new UmbRollbackServerDataSource(this);\r\n\t}\r\n\r\n\tasync requestVersionsByDocumentId(id: string, culture?: string) {\r\n\t\treturn await this.#dataSource.getVersionsByDocumentId(id, culture);\r\n\t}\r\n\r\n\tasync requestVersionById(id: string) {\r\n\t\treturn await this.#dataSource.getVersionById(id);\r\n\t}\r\n\r\n\tasync setPreventCleanup(versionId: string, preventCleanup: boolean) {\r\n\t\treturn await this.#dataSource.setPreventCleanup(versionId, preventCleanup);\r\n\t}\r\n\r\n\tasync rollback(versionId: string, culture?: string) {\r\n\t\treturn await this.#dataSource.rollback(versionId, culture);\r\n\t}\r\n}\r\n\r\nexport default UmbRollbackRepository;\r\n"],"names":["UmbRollbackServerDataSource","#host","host","id","culture","tryExecute","DocumentVersionService","versionId","preventCleanup","UmbRollbackRepository","UmbControllerBase","#dataSource"],"mappings":";;;AASO,MAAMA,EAA4B;AAAA,EACxCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUd,wBAAwBC,GAAYC,GAAkB;AACrD,WAAOC,EAAW,KAAKJ,IAAOK,EAAuB,mBAAmB,EAAE,OAAO,EAAE,YAAYH,GAAI,SAAAC,EAAQ,EAAG,CAAA,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAShH,eAAeG,GAAmB;AACjC,WAAOF,EAAW,KAAKJ,IAAOK,EAAuB,uBAAuB,EAAE,MAAM,EAAE,IAAIC,EAAA,EAAa,CAAA,CAAC;AAAA,EAAA;AAAA,EAGzG,kBAAkBA,GAAmBC,GAAyB;AACtD,WAAAH;AAAA,MACN,KAAKJ;AAAA,MACLK,EAAuB,qCAAqC;AAAA,QAC3D,MAAM,EAAE,IAAIC,EAAU;AAAA,QACtB,OAAO,EAAE,gBAAAC,EAAe;AAAA,MACxB,CAAA;AAAA,IACF;AAAA,EAAA;AAAA,EAGD,SAASD,GAAmBH,GAAkB;AACtC,WAAAC;AAAA,MACN,KAAKJ;AAAA,MACLK,EAAuB,gCAAgC,EAAE,MAAM,EAAE,IAAIC,KAAa,OAAO,EAAE,SAAAH,IAAW,CAAA;AAAA,IACvG;AAAA,EAAA;AAEF;ACrDO,MAAMK,UAA8BC,EAAoC;AAAA,EAC9EC;AAAA,EAEA,YAAYT,GAAyB;AACpC,UAAMA,CAAI,GAEL,KAAAS,KAAc,IAAIX,EAA4B,IAAI;AAAA,EAAA;AAAA,EAGxD,MAAM,4BAA4BG,GAAYC,GAAkB;AAC/D,WAAO,MAAM,KAAKO,GAAY,wBAAwBR,GAAIC,CAAO;AAAA,EAAA;AAAA,EAGlE,MAAM,mBAAmBD,GAAY;AACpC,WAAO,MAAM,KAAKQ,GAAY,eAAeR,CAAE;AAAA,EAAA;AAAA,EAGhD,MAAM,kBAAkBI,GAAmBC,GAAyB;AACnE,WAAO,MAAM,KAAKG,GAAY,kBAAkBJ,GAAWC,CAAc;AAAA,EAAA;AAAA,EAG1E,MAAM,SAASD,GAAmBH,GAAkB;AACnD,WAAO,MAAM,KAAKO,GAAY,SAASJ,GAAWH,CAAO;AAAA,EAAA;AAE3D;"}