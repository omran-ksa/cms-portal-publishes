{"version":3,"file":"create-blueprint.action-R_HvXpB9.js","sources":["../../../src/packages/documents/documents/entity-actions/create-blueprint/repository/document-create-blueprint.server.data-source.ts","../../../src/packages/documents/documents/entity-actions/create-blueprint/repository/document-create-blueprint.repository.ts","../../../src/packages/documents/documents/entity-actions/create-blueprint/create-blueprint.action.ts"],"sourcesContent":["import { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport { DocumentBlueprintService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { CreateDocumentBlueprintFromDocumentRequestModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\n/**\r\n * A data source for the Document Create Blueprint that fetches data from the server\r\n * @class UmbDocumentCreateBlueprintServerDataSource\r\n * @implements {RepositoryDetailDataSource}\r\n */\r\nexport class UmbDocumentCreateBlueprintServerDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbDocumentCreateBlueprintServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbDocumentCreateBlueprintServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Fetches the Culture and Hostnames for the given Document unique\r\n\t * @param {string} unique\r\n\t * @param body\r\n\t * @memberof UmbDocumentCreateBlueprintServerDataSource\r\n\t */\r\n\tasync create(body: CreateDocumentBlueprintFromDocumentRequestModel) {\r\n\t\treturn tryExecute(this.#host, DocumentBlueprintService.postDocumentBlueprintFromDocument({ body }));\r\n\t}\r\n}\r\n","import { UmbDocumentCreateBlueprintServerDataSource } from './document-create-blueprint.server.data-source.js';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\nimport type { CreateDocumentBlueprintFromDocumentRequestModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbApi } from '@umbraco-cms/backoffice/extension-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbDocumentCreateBlueprintRepository extends UmbControllerBase implements UmbApi {\r\n\t#dataSource = new UmbDocumentCreateBlueprintServerDataSource(this);\r\n\r\n\t#notificationContext?: typeof UMB_NOTIFICATION_CONTEXT.TYPE;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.consumeContext(UMB_NOTIFICATION_CONTEXT, (instance) => {\r\n\t\t\tthis.#notificationContext = instance;\r\n\t\t});\r\n\t}\r\n\r\n\tasync create(body: CreateDocumentBlueprintFromDocumentRequestModel) {\r\n\t\tconst { data, error } = await this.#dataSource.create(body);\r\n\t\tif (!error) {\r\n\t\t\tconst notification = { data: { message: `Document Blueprint created` } };\r\n\t\t\tthis.#notificationContext!.peek('positive', notification);\r\n\r\n\t\t\treturn { data };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentCreateBlueprintRepository as api };\r\n","import { UmbDocumentCreateBlueprintRepository } from './repository/document-create-blueprint.repository.js';\r\nimport { UMB_CREATE_BLUEPRINT_MODAL } from './constants.js';\r\nimport { UmbEntityActionBase } from '@umbraco-cms/backoffice/entity-action';\r\nimport { umbOpenModal } from '@umbraco-cms/backoffice/modal';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbEntityActionArgs } from '@umbraco-cms/backoffice/entity-action';\r\n\r\nexport class UmbCreateDocumentBlueprintEntityAction extends UmbEntityActionBase<never> {\r\n\t#repository = new UmbDocumentCreateBlueprintRepository(this);\r\n\r\n\tconstructor(host: UmbControllerHost, args: UmbEntityActionArgs<never>) {\r\n\t\tsuper(host, args);\r\n\t}\r\n\r\n\toverride async execute() {\r\n\t\tif (!this.args.unique) throw new Error('Unique is required');\r\n\r\n\t\tconst value = await umbOpenModal(this, UMB_CREATE_BLUEPRINT_MODAL, {\r\n\t\t\tdata: { unique: this.args.unique },\r\n\t\t});\r\n\r\n\t\tconst { name, parent } = value;\r\n\t\tif (!name) return;\r\n\r\n\t\tawait this.#repository.create({ name, parent, document: { id: this.args.unique } });\r\n\t}\r\n}\r\nexport default UmbCreateDocumentBlueprintEntityAction;\r\n"],"names":["UmbDocumentCreateBlueprintServerDataSource","#host","host","body","tryExecute","DocumentBlueprintService","UmbDocumentCreateBlueprintRepository","UmbControllerBase","#dataSource","#notificationContext","UMB_NOTIFICATION_CONTEXT","instance","data","error","notification","UmbCreateDocumentBlueprintEntityAction","UmbEntityActionBase","#repository","args","value","umbOpenModal","UMB_CREATE_BLUEPRINT_MODAL","name","parent"],"mappings":";;;;;;;AAUO,MAAMA,EAA2C;AAAA,EACvDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASd,MAAM,OAAOC,GAAuD;AAC5D,WAAAC,EAAW,KAAKH,IAAOI,EAAyB,kCAAkC,EAAE,MAAAF,EAAA,CAAM,CAAC;AAAA,EAAA;AAEpG;ACxBO,MAAMG,UAA6CC,EAAoC;AAAA,EAC7FC,KAAc,IAAIR,EAA2C,IAAI;AAAA,EAEjES;AAAA,EAEA,YAAYP,GAAyB;AACpC,UAAMA,CAAI,GAEL,KAAA,eAAeQ,GAA0B,CAACC,MAAa;AAC3D,WAAKF,KAAuBE;AAAA,IAAA,CAC5B;AAAA,EAAA;AAAA,EAGF,MAAM,OAAOR,GAAuD;AAC7D,UAAA,EAAE,MAAAS,GAAM,OAAAC,EAAM,IAAI,MAAM,KAAKL,GAAY,OAAOL,CAAI;AAC1D,QAAI,CAACU,GAAO;AACX,YAAMC,IAAe,EAAE,MAAM,EAAE,SAAS,+BAA+B;AAClE,kBAAAL,GAAsB,KAAK,YAAYK,CAAY,GAEjD,EAAE,MAAAF,EAAK;AAAA,IAAA;AAGf,WAAO,EAAE,OAAAC,EAAM;AAAA,EAAA;AAEjB;ACxBO,MAAME,UAA+CC,EAA2B;AAAA,EACtFC,KAAc,IAAIX,EAAqC,IAAI;AAAA,EAE3D,YAAYJ,GAAyBgB,GAAkC;AACtE,UAAMhB,GAAMgB,CAAI;AAAA,EAAA;AAAA,EAGjB,MAAe,UAAU;AACxB,QAAI,CAAC,KAAK,KAAK,OAAc,OAAA,IAAI,MAAM,oBAAoB;AAE3D,UAAMC,IAAQ,MAAMC,EAAa,MAAMC,GAA4B;AAAA,MAClE,MAAM,EAAE,QAAQ,KAAK,KAAK,OAAO;AAAA,IAAA,CACjC,GAEK,EAAE,MAAAC,GAAM,QAAAC,EAAA,IAAWJ;AACzB,IAAKG,KAEL,MAAM,KAAKL,GAAY,OAAO,EAAE,MAAAK,GAAM,QAAAC,GAAQ,UAAU,EAAE,IAAI,KAAK,KAAK,UAAU;AAAA,EAAA;AAEpF;"}