{"version":3,"file":"unpublish.action-DAQRs3NQ.js","sources":["../../../src/packages/documents/documents/publishing/unpublish/entity-action/unpublish.action.ts"],"sourcesContent":["import type { UmbDocumentVariantOptionModel } from '../../../types.js';\r\nimport { UMB_DOCUMENT_UNPUBLISH_MODAL } from '../constants.js';\r\nimport { UmbDocumentDetailRepository } from '../../../repository/index.js';\r\nimport { UmbDocumentPublishingRepository } from '../../repository/index.js';\r\nimport { UMB_APP_LANGUAGE_CONTEXT, UmbLanguageCollectionRepository } from '@umbraco-cms/backoffice/language';\r\nimport {\r\n\ttype UmbEntityActionArgs,\r\n\tUmbEntityActionBase,\r\n\tUmbRequestReloadStructureForEntityEvent,\r\n} from '@umbraco-cms/backoffice/entity-action';\r\nimport { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { umbOpenModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UMB_ACTION_EVENT_CONTEXT } from '@umbraco-cms/backoffice/action';\r\nimport { UMB_CURRENT_USER_CONTEXT } from '@umbraco-cms/backoffice/current-user';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\nimport { UmbLocalizationController } from '@umbraco-cms/backoffice/localization-api';\r\n\r\nexport class UmbUnpublishDocumentEntityAction extends UmbEntityActionBase<never> {\r\n\tconstructor(host: UmbControllerHost, args: UmbEntityActionArgs<never>) {\r\n\t\tsuper(host, args);\r\n\t}\r\n\r\n\toverride async execute() {\r\n\t\tif (!this.args.unique) throw new Error('The document unique identifier is missing');\r\n\r\n\t\tconst notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n\t\tconst localize = new UmbLocalizationController(this);\r\n\r\n\t\tconst languageRepository = new UmbLanguageCollectionRepository(this._host);\r\n\t\tconst { data: languageData } = await languageRepository.requestCollection({});\r\n\r\n\t\tconst documentRepository = new UmbDocumentDetailRepository(this._host);\r\n\t\tconst { data: documentData } = await documentRepository.requestByUnique(this.args.unique);\r\n\r\n\t\tif (!documentData) throw new Error('The document was not found');\r\n\r\n\t\tconst appLanguageContext = await this.getContext(UMB_APP_LANGUAGE_CONTEXT);\r\n\t\tif (!appLanguageContext) throw new Error('The app language context is missing');\r\n\t\tconst appCulture = appLanguageContext.getAppCulture();\r\n\r\n\t\tconst currentUserContext = await this.getContext(UMB_CURRENT_USER_CONTEXT);\r\n\t\tif (!currentUserContext) throw new Error('The current user context is missing');\r\n\t\tconst currentUserAllowedLanguages = currentUserContext.getLanguages();\r\n\t\tconst currentUserHasAccessToAllLanguages = currentUserContext.getHasAccessToAllLanguages();\r\n\r\n\t\tif (currentUserAllowedLanguages === undefined) throw new Error('The current user languages are missing');\r\n\t\tif (currentUserHasAccessToAllLanguages === undefined)\r\n\t\t\tthrow new Error('The current user access to all languages is missing');\r\n\r\n\t\tconst cultureVariantOptions = documentData.variants.filter((variant) => variant.segment === null);\r\n\r\n\t\tconst options: Array<UmbDocumentVariantOptionModel> = cultureVariantOptions.map<UmbDocumentVariantOptionModel>(\r\n\t\t\t(variant) => ({\r\n\t\t\t\tculture: variant.culture,\r\n\t\t\t\tsegment: variant.segment,\r\n\t\t\t\tlanguage: languageData?.items.find((language) => language.unique === variant.culture) ?? {\r\n\t\t\t\t\tname: appCulture!,\r\n\t\t\t\t\tentityType: 'language',\r\n\t\t\t\t\tfallbackIsoCode: null,\r\n\t\t\t\t\tisDefault: true,\r\n\t\t\t\t\tisMandatory: false,\r\n\t\t\t\t\tunique: appCulture!,\r\n\t\t\t\t},\r\n\t\t\t\tvariant,\r\n\t\t\t\tunique: new UmbVariantId(variant.culture, variant.segment).toString(),\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\t// Figure out the default selections\r\n\t\t// TODO: Missing features to pre-select the variant that fits with the variant-id of the tree/collection? (Again only relevant if the action is executed from a Tree or Collection) [NL]\r\n\t\tconst selection: Array<string> = [];\r\n\t\t// If the app language is one of the options, select it by default:\r\n\t\tif (appCulture && options.some((o) => o.unique === appCulture)) {\r\n\t\t\tselection.push(new UmbVariantId(appCulture, null).toString());\r\n\t\t} else {\r\n\t\t\t// If not, select the first option by default:\r\n\t\t\tselection.push(options[0].unique);\r\n\t\t}\r\n\r\n\t\tconst result = await umbOpenModal(this, UMB_DOCUMENT_UNPUBLISH_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\tdocumentUnique: this.args.unique,\r\n\t\t\t\toptions,\r\n\t\t\t\tpickableFilter: (option) => {\r\n\t\t\t\t\tif (!option.culture) return false;\r\n\t\t\t\t\tif (currentUserHasAccessToAllLanguages) return true;\r\n\t\t\t\t\treturn currentUserAllowedLanguages.includes(option.culture);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tvalue: { selection },\r\n\t\t}).catch(() => undefined);\r\n\r\n\t\tif (!result?.selection.length) return;\r\n\r\n\t\tconst variantIds = result?.selection.map((x) => UmbVariantId.FromString(x)) ?? [];\r\n\r\n\t\tif (!variantIds.length) return;\r\n\r\n\t\tconst publishingRepository = new UmbDocumentPublishingRepository(this._host);\r\n\t\tconst { error } = await publishingRepository.unpublish(this.args.unique, variantIds);\r\n\r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\tif (!error) {\r\n\t\t\tnotificationContext?.peek('positive', {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tmessage: localize.term('speechBubbles_editContentUnpublishedHeader'),\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tconst actionEventContext = await this.getContext(UMB_ACTION_EVENT_CONTEXT);\r\n\t\t\tconst event = new UmbRequestReloadStructureForEntityEvent({\r\n\t\t\t\tunique: this.args.unique,\r\n\t\t\t\tentityType: this.args.entityType,\r\n\t\t\t});\r\n\r\n\t\t\tactionEventContext?.dispatchEvent(event);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default UmbUnpublishDocumentEntityAction;\r\n"],"names":["UmbUnpublishDocumentEntityAction","UmbEntityActionBase","host","args","notificationContext","UMB_NOTIFICATION_CONTEXT","localize","UmbLocalizationController","languageRepository","UmbLanguageCollectionRepository","languageData","documentRepository","UmbDocumentDetailRepository","documentData","appLanguageContext","UMB_APP_LANGUAGE_CONTEXT","appCulture","currentUserContext","UMB_CURRENT_USER_CONTEXT","currentUserAllowedLanguages","currentUserHasAccessToAllLanguages","options","variant","language","UmbVariantId","selection","o","result","umbOpenModal","UMB_DOCUMENT_UNPUBLISH_MODAL","option","variantIds","x","publishingRepository","UmbDocumentPublishingRepository","error","actionEventContext","UMB_ACTION_EVENT_CONTEXT","event","UmbRequestReloadStructureForEntityEvent"],"mappings":"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"}