{"version":3,"file":"input-document-property-value-user-permission.element-BzWYwM0f.js","sources":["../../../src/packages/documents/documents/user-permissions/document-property-value/input-document-property-value-user-permission/input-document-property-value-user-permission.element.ts"],"sourcesContent":["import type { UmbDocumentPropertyValueUserPermissionModel as UmbDocumentPropertyValueUserPermissionModel } from '../types.js';\r\nimport { UMB_DOCUMENT_PROPERTY_VALUE_USER_PERMISSION_FLOW_MODAL } from '../document-property-value-permission-flow-modal/index.js';\r\nimport { UMB_DOCUMENT_PROPERTY_VALUE_USER_PERMISSION_TYPE } from '../user-permission.js';\r\nimport { UMB_DOCUMENT_PROPERTY_VALUE_ENTITY_TYPE } from '../../../entity.js';\r\nimport {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tifDefined,\r\n\tnothing,\r\n\tproperty,\r\n\trepeat,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport {\r\n\tUMB_ENTITY_USER_PERMISSION_MODAL,\r\n\ttype ManifestEntityUserPermission,\r\n} from '@umbraco-cms/backoffice/user-permission';\r\nimport {\r\n\tUmbDocumentTypeDetailRepository,\r\n\ttype UmbDocumentTypeDetailModel,\r\n} from '@umbraco-cms/backoffice/document-type';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\n\r\n@customElement('umb-input-document-property-value-user-permission')\r\nexport class UmbInputDocumentPropertyValueUserPermissionElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\t_permissions: Array<UmbDocumentPropertyValueUserPermissionModel> = [];\r\n\tpublic get permissions(): Array<UmbDocumentPropertyValueUserPermissionModel> {\r\n\t\treturn this._permissions;\r\n\t}\r\n\tpublic set permissions(value: Array<UmbDocumentPropertyValueUserPermissionModel>) {\r\n\t\tthis._permissions = value;\r\n\t\tconst uniques = value.map((item) => item.documentType.unique);\r\n\t\tthis.#observePickedDocumentTypes(uniques);\r\n\t}\r\n\r\n\t@property({ type: Array, attribute: false })\r\n\tfallbackPermissions: Array<string> = [];\r\n\r\n\t@state()\r\n\tprivate _documentTypes?: Array<UmbDocumentTypeDetailModel>;\r\n\r\n\t#documentTypeDetailRepository = new UmbDocumentTypeDetailRepository(this);\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tasync #observePickedDocumentTypes(uniques: Array<string>) {\r\n\t\tconst promises = uniques.map((unique) => this.#documentTypeDetailRepository.requestByUnique(unique));\r\n\t\tconst responses = await Promise.allSettled(promises);\r\n\r\n\t\t// TODO: handle errors\r\n\t\tthis._documentTypes = responses\r\n\t\t\t.filter((response) => response.status === 'fulfilled')\r\n\t\t\t.map((response) => response.value.data)\r\n\t\t\t.filter((item) => item) as Array<UmbDocumentTypeDetailModel>;\r\n\t}\r\n\r\n\tasync #addPermission() {\r\n\t\tconst modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tif (!modalManager) {\r\n\t\t\tthrow new Error('Could not open modal, no modal manager found');\r\n\t\t}\r\n\r\n\t\tconst modal = modalManager.open(this, UMB_DOCUMENT_PROPERTY_VALUE_USER_PERMISSION_FLOW_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\tpreset: {\r\n\t\t\t\t\tverbs: this.#getFallbackPermissionVerbsForEntityType(UMB_DOCUMENT_PROPERTY_VALUE_ENTITY_TYPE),\r\n\t\t\t\t},\r\n\t\t\t\tpickablePropertyTypeFilter: (propertyType) =>\r\n\t\t\t\t\t!this._permissions.some((permission) => permission.propertyType.unique === propertyType.unique),\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst value = await modal?.onSubmit();\r\n\t\t\tif (!value) throw new Error('No result from modal');\r\n\r\n\t\t\tconst permissionItem: UmbDocumentPropertyValueUserPermissionModel = {\r\n\t\t\t\t$type: 'DocumentPropertyValuePermissionPresentationModel',\r\n\t\t\t\tuserPermissionType: UMB_DOCUMENT_PROPERTY_VALUE_USER_PERMISSION_TYPE,\r\n\t\t\t\tdocumentType: value.documentType,\r\n\t\t\t\tpropertyType: value.propertyType,\r\n\t\t\t\tverbs: value.verbs,\r\n\t\t\t};\r\n\r\n\t\t\tthis.permissions = [...this._permissions, permissionItem];\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync #editPermission(currentPermission: UmbDocumentPropertyValueUserPermissionModel) {\r\n\t\tif (!currentPermission) {\r\n\t\t\tthrow new Error('Could not open permissions modal, no item was provided');\r\n\t\t}\r\n\r\n\t\tconst documentType = this._documentTypes?.find((item) => item.unique === currentPermission.documentType.unique);\r\n\r\n\t\tif (!documentType) {\r\n\t\t\tthrow new Error('Could not open permissions modal, no document type was found');\r\n\t\t}\r\n\r\n\t\t// TODO: show document type and property type name\r\n\t\tconst headline = `Permissions`;\r\n\r\n\t\tconst modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tif (!modalManager) {\r\n\t\t\tthrow new Error('Could not open permissions modal, modal manager is not available');\r\n\t\t}\r\n\r\n\t\tconst modal = modalManager.open(this, UMB_ENTITY_USER_PERMISSION_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\tentityType: UMB_DOCUMENT_PROPERTY_VALUE_ENTITY_TYPE,\r\n\t\t\t\theadline,\r\n\t\t\t\tpreset: {\r\n\t\t\t\t\tallowedVerbs: currentPermission.verbs,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst value = await modal.onSubmit();\r\n\r\n\t\t\t// don't do anything if the verbs have not been updated\r\n\t\t\tif (JSON.stringify(value.allowedVerbs) === JSON.stringify(currentPermission.verbs)) return;\r\n\r\n\t\t\t// update permission with new verbs\r\n\t\t\tthis.permissions = this._permissions.map((permission) => {\r\n\t\t\t\tif (permission.propertyType.unique === currentPermission.propertyType.unique) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...permission,\r\n\t\t\t\t\t\tverbs: value.allowedVerbs,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn permission;\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\t#removePermission(permission: UmbDocumentPropertyValueUserPermissionModel) {\r\n\t\tthis.permissions = this._permissions.filter((v) => JSON.stringify(v) !== JSON.stringify(permission));\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t#getVerbNamesForPermission(permission: UmbDocumentPropertyValueUserPermissionModel) {\r\n\t\tif (!permission) {\r\n\t\t\tthrow new Error('Could not find permission for property type');\r\n\t\t}\r\n\r\n\t\tif (permission.verbs.length === 0) {\r\n\t\t\treturn this.localize.term('user_permissionNoVerbs');\r\n\t\t}\r\n\r\n\t\treturn umbExtensionsRegistry\r\n\t\t\t.getByTypeAndFilter('entityUserPermission', (manifest) =>\r\n\t\t\t\tmanifest.meta.verbs.every((verb) => permission.verbs.includes(verb)),\r\n\t\t\t)\r\n\t\t\t.map((m) => {\r\n\t\t\t\tconst manifest = m as ManifestEntityUserPermission;\r\n\t\t\t\treturn manifest.meta.label ? this.localize.string(manifest.meta.label) : manifest.name;\r\n\t\t\t})\r\n\t\t\t.join(', ');\r\n\t}\r\n\r\n\t#getFallbackPermissionVerbsForEntityType(entityType: string) {\r\n\t\t// get all permissions that are allowed for the entity type and have at least one of the fallback permissions\r\n\t\t// this is used to determine the default permissions for a document\r\n\t\tconst verbs = umbExtensionsRegistry\r\n\t\t\t.getByTypeAndFilter(\r\n\t\t\t\t'entityUserPermission',\r\n\t\t\t\t(manifest) =>\r\n\t\t\t\t\tmanifest.forEntityTypes.includes(entityType) &&\r\n\t\t\t\t\tthis.fallbackPermissions.map((verb) => manifest.meta.verbs.includes(verb)).includes(true),\r\n\t\t\t)\r\n\t\t\t.flatMap((permission) => permission.meta.verbs);\r\n\r\n\t\t// ensure that the verbs are unique\r\n\t\treturn [...new Set([...verbs])];\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`${this.#renderItems()} ${this.#renderAddButton()}`;\r\n\t}\r\n\r\n\t#renderItems() {\r\n\t\tif (!this.permissions) return;\r\n\t\treturn html`\r\n\t\t\t<uui-ref-list>\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis.permissions,\r\n\t\t\t\t\t(item) => item.propertyType.unique,\r\n\t\t\t\t\t(item) => this.#renderRef(item),\r\n\t\t\t\t)}\r\n\t\t\t</uui-ref-list>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderAddButton() {\r\n\t\treturn html`<uui-button\r\n\t\t\tid=\"btn-add\"\r\n\t\t\tlook=\"placeholder\"\r\n\t\t\t@click=${this.#addPermission}\r\n\t\t\tlabel=${this.localize.term('general_add')}></uui-button>`;\r\n\t}\r\n\r\n\t#renderRef(permission: UmbDocumentPropertyValueUserPermissionModel) {\r\n\t\tif (!permission.propertyType.unique) {\r\n\t\t\tthrow new Error('Property type unique is required');\r\n\t\t}\r\n\r\n\t\tconst documentType = this._documentTypes?.find((item) => item.unique === permission.documentType.unique);\r\n\t\tconst propertyType = documentType?.properties.find((item) => item.unique === permission.propertyType.unique);\r\n\t\tconst permissionName = `${documentType?.name}: ${propertyType?.name} (${propertyType?.alias})`;\r\n\t\tconst verbNames = this.#getVerbNamesForPermission(permission);\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-ref-node .name=${permissionName} .detail=${verbNames || ''} readonly>\r\n\t\t\t\t${documentType?.icon ? html`<uui-icon slot=\"icon\" name=${ifDefined(documentType?.icon)}></uui-icon>` : nothing}\r\n\t\t\t\t<uui-action-bar slot=\"actions\"\r\n\t\t\t\t\t>${this.#renderEditButton(permission)} ${this.#renderRemoveButton(permission)}</uui-action-bar\r\n\t\t\t\t>\r\n\t\t\t</uui-ref-node>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderEditButton(permission: UmbDocumentPropertyValueUserPermissionModel) {\r\n\t\treturn html`<uui-button\r\n\t\t\t@click=${() => this.#editPermission(permission)}\r\n\t\t\tlabel=${this.localize.term('general_edit')}></uui-button>`;\r\n\t}\r\n\r\n\t#renderRemoveButton(permission: UmbDocumentPropertyValueUserPermissionModel) {\r\n\t\treturn html`<uui-button\r\n\t\t\t@click=${() => this.#removePermission(permission)}\r\n\t\t\tlabel=${this.localize.term('general_remove')}></uui-button>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#btn-add {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport { UmbInputDocumentPropertyValueUserPermissionElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-document-property-value-user-permission': UmbInputDocumentPropertyValueUserPermissionElement;\r\n\t}\r\n}\r\n"],"names":["_documentTypeDetailRepository","_UmbInputDocumentPropertyValueUserPermissionElement_instances","observePickedDocumentTypes_fn","addPermission_fn","editPermission_fn","removePermission_fn","getVerbNamesForPermission_fn","getFallbackPermissionVerbsForEntityType_fn","renderItems_fn","renderAddButton_fn","renderRef_fn","renderEditButton_fn","renderRemoveButton_fn","UmbInputDocumentPropertyValueUserPermissionElement","UUIFormControlMixin","UmbLitElement","__privateAdd","UmbDocumentTypeDetailRepository","value","uniques","item","__privateMethod","html","promises","unique","__privateGet","responses","response","modalManager","UMB_MODAL_MANAGER_CONTEXT","modal","UMB_DOCUMENT_PROPERTY_VALUE_USER_PERMISSION_FLOW_MODAL","UMB_DOCUMENT_PROPERTY_VALUE_ENTITY_TYPE","propertyType","permission","permissionItem","UMB_DOCUMENT_PROPERTY_VALUE_USER_PERMISSION_TYPE","UmbChangeEvent","error","currentPermission","headline","UMB_ENTITY_USER_PERMISSION_MODAL","v","umbExtensionsRegistry","manifest","verb","m","entityType","verbs","repeat","documentType","permissionName","verbNames","ifDefined","nothing","css","__decorateClass","property","state","customElement"],"mappings":"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"}