{"version":3,"file":"document.search-provider-Dhven1X5.js","sources":["../../../src/packages/documents/documents/search/document-search.server.data-source.ts","../../../src/packages/documents/documents/search/document-search.repository.ts","../../../src/packages/documents/documents/search/document.search-provider.ts"],"sourcesContent":["import { UMB_DOCUMENT_ENTITY_TYPE } from '../entity.js';\r\nimport type { UmbDocumentSearchItemModel, UmbDocumentSearchRequestArgs } from './types.js';\r\nimport type { UmbSearchDataSource } from '@umbraco-cms/backoffice/search';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { DocumentService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\n/**\r\n * A data source for the Rollback that fetches data from the server\r\n * @class UmbDocumentSearchServerDataSource\r\n * @implements {RepositoryDetailDataSource}\r\n */\r\nexport class UmbDocumentSearchServerDataSource\r\n\timplements UmbSearchDataSource<UmbDocumentSearchItemModel, UmbDocumentSearchRequestArgs>\r\n{\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbDocumentSearchServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbDocumentSearchServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of versions for a document\r\n\t * @param {UmbDocumentSearchRequestArgs} args - The arguments for the search\r\n\t * @returns {*}\r\n\t * @memberof UmbDocumentSearchServerDataSource\r\n\t */\r\n\tasync search(args: UmbDocumentSearchRequestArgs) {\r\n\t\tconst { data, error } = await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tDocumentService.getItemDocumentSearch({\r\n\t\t\t\tquery: {\r\n\t\t\t\t\tallowedDocumentTypes: args.allowedContentTypes?.map((contentType) => contentType.unique),\r\n\t\t\t\t\tculture: args.culture || undefined,\r\n\t\t\t\t\tparentId: args.searchFrom?.unique ?? undefined,\r\n\t\t\t\t\tquery: args.query,\r\n\t\t\t\t\ttrashed: args.includeTrashed,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\tif (data) {\r\n\t\t\tconst mappedItems: Array<UmbDocumentSearchItemModel> = data.items.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdocumentType: {\r\n\t\t\t\t\t\tcollection: item.documentType.collection ? { unique: item.documentType.collection.id } : null,\r\n\t\t\t\t\t\ticon: item.documentType.icon,\r\n\t\t\t\t\t\tunique: item.documentType.id,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tentityType: UMB_DOCUMENT_ENTITY_TYPE,\r\n\t\t\t\t\thasChildren: item.hasChildren,\r\n\t\t\t\t\thref: '/section/content/workspace/document/edit/' + item.id,\r\n\t\t\t\t\tisProtected: item.isProtected,\r\n\t\t\t\t\tisTrashed: item.isTrashed,\r\n\t\t\t\t\tname: item.variants[0]?.name, // TODO: this is not correct. We need to get it from the variants. This is a temp solution.\r\n\t\t\t\t\tparent: item.parent ? { unique: item.parent.id } : null,\r\n\t\t\t\t\tunique: item.id,\r\n\t\t\t\t\tvariants: item.variants.map((variant) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tculture: variant.culture || null,\r\n\t\t\t\t\t\t\tname: variant.name,\r\n\t\t\t\t\t\t\tstate: variant.state,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\treturn { data: { items: mappedItems, total: data.total } };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n","import { UmbDocumentSearchServerDataSource } from './document-search.server.data-source.js';\r\nimport type { UmbDocumentSearchItemModel, UmbDocumentSearchRequestArgs } from './types.js';\r\nimport type { UmbSearchRepository } from '@umbraco-cms/backoffice/search';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbApi } from '@umbraco-cms/backoffice/extension-api';\r\nimport type { UmbPagedModel, UmbRepositoryResponse } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbDocumentSearchRepository\r\n\textends UmbControllerBase\r\n\timplements UmbSearchRepository<UmbDocumentSearchItemModel>, UmbApi\r\n{\r\n\t#dataSource: UmbDocumentSearchServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#dataSource = new UmbDocumentSearchServerDataSource(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Search for documents\r\n\t * @param {UmbDocumentSearchRequestArgs} args - The arguments for the search\r\n\t * @returns {Promise<UmbRepositoryResponse<UmbPagedModel<UmbDocumentSearchItemModel>>>} - The search results\r\n\t * @memberof UmbDocumentSearchRepository\r\n\t */\r\n\tsearch(\r\n\t\targs: UmbDocumentSearchRequestArgs,\r\n\t): Promise<UmbRepositoryResponse<UmbPagedModel<UmbDocumentSearchItemModel>>> {\r\n\t\treturn this.#dataSource.search(args);\r\n\t}\r\n}\r\n","import { UmbDocumentSearchRepository } from './document-search.repository.js';\r\nimport type { UmbDocumentSearchItemModel, UmbDocumentSearchRequestArgs } from './types.js';\r\nimport type { UmbSearchProvider } from '@umbraco-cms/backoffice/search';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbPagedModel, UmbRepositoryResponse } from '@umbraco-cms/backoffice/repository';\r\n\r\n/**\r\n * The document search provider\r\n * @class UmbDocumentSearchProvider\r\n * @augments {UmbControllerBase}\r\n * @implements {UmbSearchProvider<UmbDocumentSearchItemModel, UmbDocumentSearchRequestArgs>}\r\n */\r\nexport class UmbDocumentSearchProvider\r\n\textends UmbControllerBase\r\n\timplements UmbSearchProvider<UmbDocumentSearchItemModel, UmbDocumentSearchRequestArgs>\r\n{\r\n\t#repository = new UmbDocumentSearchRepository(this);\r\n\r\n\t/**\r\n\t * Search for documents\r\n\t * @param {UmbDocumentSearchRequestArgs} args - The arguments for the search\r\n\t * @returns {Promise<UmbRepositoryResponse<UmbPagedModel<UmbDocumentSearchItemModel>>>} - The search results\r\n\t * @memberof UmbDocumentSearchProvider\r\n\t */\r\n\tsearch(\r\n\t\targs: UmbDocumentSearchRequestArgs,\r\n\t): Promise<UmbRepositoryResponse<UmbPagedModel<UmbDocumentSearchItemModel>>> {\r\n\t\treturn this.#repository.search(args);\r\n\t}\r\n\r\n\toverride destroy(): void {\r\n\t\tthis.#repository.destroy();\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentSearchProvider as api };\r\n"],"names":["UmbDocumentSearchServerDataSource","#host","host","args","data","error","tryExecute","DocumentService","contentType","item","UMB_DOCUMENT_ENTITY_TYPE","variant","UmbDocumentSearchRepository","UmbControllerBase","#dataSource","UmbDocumentSearchProvider","#repository"],"mappings":";;;;AAYO,MAAMA,EAEb;AAAA,EACCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASd,MAAM,OAAOC,GAAoC;AAChD,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAM,IAAI,MAAMC;AAAA,MAC7B,KAAKL;AAAA,MACLM,EAAgB,sBAAsB;AAAA,QACrC,OAAO;AAAA,UACN,sBAAsBJ,EAAK,qBAAqB,IAAI,CAACK,MAAgBA,EAAY,MAAM;AAAA,UACvF,SAASL,EAAK,WAAW;AAAA,UACzB,UAAUA,EAAK,YAAY,UAAU;AAAA,UACrC,OAAOA,EAAK;AAAA,UACZ,SAASA,EAAK;AAAA,QAAA;AAAA,MAEf,CAAA;AAAA,IACF;AAEA,WAAIC,IA0BI,EAAE,MAAM,EAAE,OAzBsCA,EAAK,MAAM,IAAI,CAACK,OAC/D;AAAA,MACN,cAAc;AAAA,QACb,YAAYA,EAAK,aAAa,aAAa,EAAE,QAAQA,EAAK,aAAa,WAAW,GAAA,IAAO;AAAA,QACzF,MAAMA,EAAK,aAAa;AAAA,QACxB,QAAQA,EAAK,aAAa;AAAA,MAC3B;AAAA,MACA,YAAYC;AAAA,MACZ,aAAaD,EAAK;AAAA,MAClB,MAAM,8CAA8CA,EAAK;AAAA,MACzD,aAAaA,EAAK;AAAA,MAClB,WAAWA,EAAK;AAAA,MAChB,MAAMA,EAAK,SAAS,CAAC,GAAG;AAAA;AAAA,MACxB,QAAQA,EAAK,SAAS,EAAE,QAAQA,EAAK,OAAO,OAAO;AAAA,MACnD,QAAQA,EAAK;AAAA,MACb,UAAUA,EAAK,SAAS,IAAI,CAACE,OACrB;AAAA,QACN,SAASA,EAAQ,WAAW;AAAA,QAC5B,MAAMA,EAAQ;AAAA,QACd,OAAOA,EAAQ;AAAA,MAChB,EACA;AAAA,IACF,EACA,GAEoC,OAAOP,EAAK,QAAQ,IAGnD,EAAE,OAAAC,EAAM;AAAA,EAAA;AAEjB;ACrEO,MAAMO,UACJC,EAET;AAAA,EACCC;AAAA,EAEA,YAAYZ,GAAyB;AACpC,UAAMA,CAAI,GACL,KAAAY,KAAc,IAAId,EAAkC,IAAI;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS9D,OACCG,GAC4E;AACrE,WAAA,KAAKW,GAAY,OAAOX,CAAI;AAAA,EAAA;AAErC;AClBO,MAAMY,UACJF,EAET;AAAA,EACCG,KAAc,IAAIJ,EAA4B,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlD,OACCT,GAC4E;AACrE,WAAA,KAAKa,GAAY,OAAOb,CAAI;AAAA,EAAA;AAAA,EAG3B,UAAgB;AACxB,SAAKa,GAAY,QAAQ;AAAA,EAAA;AAE3B;"}