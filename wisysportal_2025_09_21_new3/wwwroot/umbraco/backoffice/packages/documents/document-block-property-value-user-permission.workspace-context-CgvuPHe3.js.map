{"version":3,"file":"document-block-property-value-user-permission.workspace-context-CgvuPHe3.js","sources":["../../../src/packages/documents/documents/user-permissions/document-property-value/workspace-context/document-block-property-value-user-permission.workspace-context.ts"],"sourcesContent":["import { UMB_DOCUMENT_ENTITY_TYPE } from '../../../entity.js';\r\nimport { UmbPropertyValueUserPermissionWorkspaceContextBase } from './property-value-user-permission-workspace-context-base.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UMB_BLOCK_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/block';\r\nimport { UMB_CONTENT_WORKSPACE_CONTEXT } from '@umbraco-cms/backoffice/content';\r\n\r\nexport class UmbDocumentBlockPropertyValueUserPermissionWorkspaceContext extends UmbPropertyValueUserPermissionWorkspaceContextBase {\r\n\t#blockWorkspaceContext?: typeof UMB_BLOCK_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_WORKSPACE_CONTEXT, async (context) => {\r\n\t\t\tthis.#blockWorkspaceContext = context;\r\n\r\n\t\t\t// We only want to apply the permission logic if the block is in a document\r\n\t\t\t// TODO: revisit this when getContext supports passContextAliasMatches\r\n\t\t\tconst contentWorkspaceContext = await this.consumeContext(UMB_CONTENT_WORKSPACE_CONTEXT, () => {})\r\n\t\t\t\t.passContextAliasMatches()\r\n\t\t\t\t.asPromise()\r\n\t\t\t\t.catch(() => undefined);\r\n\r\n\t\t\tif (contentWorkspaceContext?.getEntityType() === UMB_DOCUMENT_ENTITY_TYPE) {\r\n\t\t\t\tthis.#observeDocumentBlockProperties();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync #observeDocumentBlockProperties() {\r\n\t\tif (!this.#blockWorkspaceContext) return;\r\n\r\n\t\tconst ownerContent = this.#blockWorkspaceContext.content;\r\n\r\n\t\tthis.observe(ownerContent.structure.contentTypeProperties, (properties) => {\r\n\t\t\t// TODO: If zero properties I guess we should then clear the state? [NL]\r\n\t\t\tif (properties.length === 0) return;\r\n\r\n\t\t\townerContent.propertyViewGuard.fallbackToNotPermitted();\r\n\t\t\townerContent.propertyWriteGuard.fallbackToNotPermitted();\r\n\t\t\tthis._setPermissions(properties, ownerContent.propertyViewGuard, ownerContent.propertyWriteGuard);\r\n\t\t});\r\n\r\n\t\tconst ownerSettings = this.#blockWorkspaceContext.settings;\r\n\r\n\t\tthis.observe(ownerSettings.structure.contentTypeProperties, (properties) => {\r\n\t\t\t// TODO: If zero properties I guess we should then clear the state? [NL]\r\n\t\t\tif (properties.length === 0) return;\r\n\r\n\t\t\townerSettings.propertyViewGuard.fallbackToNotPermitted();\r\n\t\t\townerSettings.propertyWriteGuard.fallbackToNotPermitted();\r\n\t\t\tthis._setPermissions(properties, ownerSettings.propertyViewGuard, ownerSettings.propertyWriteGuard);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentBlockPropertyValueUserPermissionWorkspaceContext as api };\r\n"],"names":["UmbDocumentBlockPropertyValueUserPermissionWorkspaceContext","UmbPropertyValueUserPermissionWorkspaceContextBase","#blockWorkspaceContext","host","UMB_BLOCK_WORKSPACE_CONTEXT","context","UMB_CONTENT_WORKSPACE_CONTEXT","UMB_DOCUMENT_ENTITY_TYPE","#observeDocumentBlockProperties","ownerContent","properties","ownerSettings"],"mappings":";;;;AAMO,MAAMA,UAAoEC,EAAmD;AAAA,EACnIC;AAAA,EAEA,YAAYC,GAAyB;AACpC,UAAMA,CAAI,GAEL,KAAA,eAAeC,GAA6B,OAAOC,MAAY;AACnE,WAAKH,KAAyBG,IAIE,MAAM,KAAK,eAAeC,GAA+B,MAAM;AAAA,MAAA,CAAE,EAC/F,wBAAwB,EACxB,UACA,EAAA,MAAM,MAAM;AAAA,OAAS,IAEM,cAAc,MAAMC,KAChD,KAAKC,GAAgC;AAAA,IACtC,CACA;AAAA,EAAA;AAAA,EAGF,MAAMA,KAAkC;AACnC,QAAA,CAAC,KAAKN,GAAwB;AAE5B,UAAAO,IAAe,KAAKP,GAAuB;AAEjD,SAAK,QAAQO,EAAa,UAAU,uBAAuB,CAACC,MAAe;AAEtE,MAAAA,EAAW,WAAW,MAE1BD,EAAa,kBAAkB,uBAAuB,GACtDA,EAAa,mBAAmB,uBAAuB,GACvD,KAAK,gBAAgBC,GAAYD,EAAa,mBAAmBA,EAAa,kBAAkB;AAAA,IAAA,CAChG;AAEK,UAAAE,IAAgB,KAAKT,GAAuB;AAElD,SAAK,QAAQS,EAAc,UAAU,uBAAuB,CAACD,MAAe;AAEvE,MAAAA,EAAW,WAAW,MAE1BC,EAAc,kBAAkB,uBAAuB,GACvDA,EAAc,mBAAmB,uBAAuB,GACxD,KAAK,gBAAgBD,GAAYC,EAAc,mBAAmBA,EAAc,kBAAkB;AAAA,IAAA,CAClG;AAAA,EAAA;AAEH;"}