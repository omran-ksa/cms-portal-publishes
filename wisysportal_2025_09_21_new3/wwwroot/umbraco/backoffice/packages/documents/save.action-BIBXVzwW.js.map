{"version":3,"file":"save.action-BIBXVzwW.js","sources":["../../../src/packages/documents/documents/workspace/actions/save.action.ts"],"sourcesContent":["import { UMB_DOCUMENT_WORKSPACE_CONTEXT } from '../document-workspace.context-token.js';\r\nimport type UmbDocumentWorkspaceContext from '../document-workspace.context.js';\r\nimport type { UmbDocumentVariantModel } from '../../types.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport {\r\n\tUmbSaveWorkspaceAction,\r\n\ttype MetaWorkspaceAction,\r\n\ttype UmbSaveWorkspaceActionArgs,\r\n\ttype UmbWorkspaceActionDefaultKind,\r\n} from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport class UmbDocumentSaveWorkspaceAction\r\n\textends UmbSaveWorkspaceAction<MetaWorkspaceAction, UmbDocumentWorkspaceContext>\r\n\timplements UmbWorkspaceActionDefaultKind<MetaWorkspaceAction>\r\n{\r\n\t#variants: Array<UmbDocumentVariantModel> | undefined;\r\n\r\n\tconstructor(\r\n\t\thost: UmbControllerHost,\r\n\t\targs: UmbSaveWorkspaceActionArgs<MetaWorkspaceAction, UmbDocumentWorkspaceContext>,\r\n\t) {\r\n\t\tsuper(host, { workspaceContextToken: UMB_DOCUMENT_WORKSPACE_CONTEXT, ...args });\r\n\t}\r\n\r\n\tasync hasAdditionalOptions() {\r\n\t\tawait this._retrieveWorkspaceContext;\r\n\t\tconst variantOptions = await this.observe(this._workspaceContext!.variantOptions)\r\n\t\t\t.asPromise()\r\n\t\t\t.catch(() => undefined);\r\n\t\tconst cultureVariantOptions = variantOptions?.filter((option) => option.culture);\r\n\t\treturn cultureVariantOptions ? cultureVariantOptions?.length > 1 : false;\r\n\t}\r\n\r\n\toverride _gotWorkspaceContext() {\r\n\t\tsuper._gotWorkspaceContext();\r\n\t\tthis.#observeVariants();\r\n\t\tthis.#observeReadOnlyGuardRules();\r\n\t}\r\n\r\n\t#observeVariants() {\r\n\t\tthis.observe(\r\n\t\t\tthis._workspaceContext?.variants,\r\n\t\t\t(variants) => {\r\n\t\t\t\tthis.#variants = variants;\r\n\t\t\t\tthis.#checkReadOnlyGuardRules();\r\n\t\t\t},\r\n\t\t\t'saveWorkspaceActionVariantsObserver',\r\n\t\t);\r\n\t}\r\n\r\n\t#observeReadOnlyGuardRules() {\r\n\t\tthis.observe(\r\n\t\t\tthis._workspaceContext?.readOnlyGuard.rules,\r\n\t\t\t() => this.#checkReadOnlyGuardRules(),\r\n\t\t\t'umbObserveReadOnlyGuardRules',\r\n\t\t);\r\n\t}\r\n\r\n\t#checkReadOnlyGuardRules() {\r\n\t\tconst allVariantsAreReadOnly =\r\n\t\t\tthis.#variants?.filter((variant) =>\r\n\t\t\t\tthis._workspaceContext!.readOnlyGuard.getIsPermittedForVariant(UmbVariantId.Create(variant)),\r\n\t\t\t).length === this.#variants?.length;\r\n\t\tif (allVariantsAreReadOnly) {\r\n\t\t\tthis.disable();\r\n\t\t} else {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentSaveWorkspaceAction as api };\r\n"],"names":["UmbDocumentSaveWorkspaceAction","UmbSaveWorkspaceAction","#variants","host","args","UMB_DOCUMENT_WORKSPACE_CONTEXT","cultureVariantOptions","option","#observeVariants","#observeReadOnlyGuardRules","variants","#checkReadOnlyGuardRules","variant","UmbVariantId"],"mappings":";;;AAYO,MAAMA,UACJC,EAET;AAAA,EACCC;AAAA,EAEA,YACCC,GACAC,GACC;AACD,UAAMD,GAAM,EAAE,uBAAuBE,GAAgC,GAAGD,GAAM;AAAA,EAAA;AAAA,EAG/E,MAAM,uBAAuB;AAC5B,UAAM,KAAK;AAIX,UAAME,KAHiB,MAAM,KAAK,QAAQ,KAAK,kBAAmB,cAAc,EAC9E,UAAU,EACV,MAAM,MAAM;AAAA,KAAS,IACuB,OAAO,CAACC,MAAWA,EAAO,OAAO;AACxE,WAAAD,IAAwBA,GAAuB,SAAS,IAAI;AAAA,EAAA;AAAA,EAG3D,uBAAuB;AAC/B,UAAM,qBAAqB,GAC3B,KAAKE,GAAiB,GACtB,KAAKC,GAA2B;AAAA,EAAA;AAAA,EAGjCD,KAAmB;AACb,SAAA;AAAA,MACJ,KAAK,mBAAmB;AAAA,MACxB,CAACE,MAAa;AACb,aAAKR,KAAYQ,GACjB,KAAKC,GAAyB;AAAA,MAC/B;AAAA,MACA;AAAA,IACD;AAAA,EAAA;AAAA,EAGDF,KAA6B;AACvB,SAAA;AAAA,MACJ,KAAK,mBAAmB,cAAc;AAAA,MACtC,MAAM,KAAKE,GAAyB;AAAA,MACpC;AAAA,IACD;AAAA,EAAA;AAAA,EAGDA,KAA2B;AAK1B,IAHC,KAAKT,IAAW;AAAA,MAAO,CAACU,MACvB,KAAK,kBAAmB,cAAc,yBAAyBC,EAAa,OAAOD,CAAO,CAAC;AAAA,IAAA,EAC1F,WAAW,KAAKV,IAAW,SAE7B,KAAK,QAAQ,IAEb,KAAK,OAAO;AAAA,EACb;AAEF;"}