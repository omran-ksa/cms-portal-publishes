{"version":3,"file":"index.js","sources":["../../../../src/packages/documents/document-types/repository/structure/constants.ts","../../../../src/packages/documents/document-types/modals/document-type-picker-modal.token.ts","../../../../src/packages/documents/document-types/components/input-document-type/input-document-type.context.ts","../../../../src/packages/documents/document-types/components/input-document-type/input-document-type.element.ts","../../../../src/packages/documents/document-types/repository/structure/document-type-structure.server.data-source.ts","../../../../src/packages/documents/document-types/repository/structure/document-type-structure.repository.ts"],"sourcesContent":["export const UMB_DOCUMENT_TYPE_STRUCTURE_REPOSITORY_ALIAS = 'Umb.Repository.DocumentType.Structure';\r\n","import { UMB_DOCUMENT_TYPE_ENTITY_TYPE, UMB_DOCUMENT_TYPE_ROOT_ENTITY_TYPE } from '../entity.js';\r\nimport { UMB_CREATE_DOCUMENT_TYPE_WORKSPACE_PATH_PATTERN } from '../paths.js';\r\nimport { UMB_DOCUMENT_TYPE_SEARCH_PROVIDER_ALIAS } from '../search/index.js';\r\nimport type { UmbDocumentTypeTreeItemModel } from '../tree/index.js';\r\nimport { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\nimport {\r\n\ttype UmbTreePickerModalValue,\r\n\ttype UmbTreePickerModalData,\r\n\tUMB_TREE_PICKER_MODAL_ALIAS,\r\n} from '@umbraco-cms/backoffice/tree';\r\n\r\nexport type UmbDocumentTypePickerModalData = UmbTreePickerModalData<\r\n\tUmbDocumentTypeTreeItemModel,\r\n\ttypeof UMB_CREATE_DOCUMENT_TYPE_WORKSPACE_PATH_PATTERN.PARAMS\r\n>;\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\r\nexport interface UmbDocumentTypePickerModalValue extends UmbTreePickerModalValue {}\r\n\r\nexport const UMB_DOCUMENT_TYPE_PICKER_MODAL = new UmbModalToken<\r\n\tUmbDocumentTypePickerModalData,\r\n\tUmbDocumentTypePickerModalValue\r\n>(UMB_TREE_PICKER_MODAL_ALIAS, {\r\n\tmodal: {\r\n\t\ttype: 'sidebar',\r\n\t\tsize: 'small',\r\n\t},\r\n\tdata: {\r\n\t\ttreeAlias: 'Umb.Tree.DocumentType',\r\n\t\tcreateAction: {\r\n\t\t\tlabel: '#content_createEmpty',\r\n\t\t\tmodalData: {\r\n\t\t\t\tentityType: UMB_DOCUMENT_TYPE_ENTITY_TYPE,\r\n\t\t\t\tpreset: {},\r\n\t\t\t},\r\n\t\t\textendWithPathPattern: UMB_CREATE_DOCUMENT_TYPE_WORKSPACE_PATH_PATTERN,\r\n\t\t\textendWithPathParams: {\r\n\t\t\t\tparentEntityType: UMB_DOCUMENT_TYPE_ROOT_ENTITY_TYPE,\r\n\t\t\t\tparentUnique: null,\r\n\t\t\t\tpresetAlias: null,\r\n\t\t\t},\r\n\t\t},\r\n\t\tsearch: {\r\n\t\t\tproviderAlias: UMB_DOCUMENT_TYPE_SEARCH_PROVIDER_ALIAS,\r\n\t\t},\r\n\t},\r\n});\r\n","import { UMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS, UMB_DOCUMENT_TYPE_SEARCH_PROVIDER_ALIAS } from '../../constants.js';\r\nimport { UMB_DOCUMENT_TYPE_PICKER_MODAL } from '../../modals/index.js';\r\nimport type { UmbDocumentTypePickerModalData, UmbDocumentTypePickerModalValue } from '../../modals/index.js';\r\nimport type { UmbDocumentTypeItemModel } from '../../types.js';\r\nimport type { UmbDocumentTypeTreeItemModel } from '../../tree/types.js';\r\nimport { UmbPickerInputContext } from '@umbraco-cms/backoffice/picker-input';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\ninterface UmbDocumentTypePickerInputContextOpenArgs {\r\n\telementTypesOnly?: boolean;\r\n\tdocumentTypesOnly?: boolean;\r\n}\r\n\r\nexport class UmbDocumentTypePickerInputContext extends UmbPickerInputContext<\r\n\tUmbDocumentTypeItemModel,\r\n\tUmbDocumentTypeTreeItemModel,\r\n\tUmbDocumentTypePickerModalData,\r\n\tUmbDocumentTypePickerModalValue\r\n> {\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS, UMB_DOCUMENT_TYPE_PICKER_MODAL);\r\n\t}\r\n\r\n\toverride async openPicker(\r\n\t\tpickerData?: Partial<UmbDocumentTypePickerModalData>,\r\n\t\targs?: UmbDocumentTypePickerInputContextOpenArgs,\r\n\t): Promise<void> {\r\n\t\tif (args?.documentTypesOnly && args?.elementTypesOnly) {\r\n\t\t\tthrow new Error('You cannot set both documentTypesOnly and elementTypesOnly to true.');\r\n\t\t}\r\n\t\tconst isElementType = args?.elementTypesOnly ?? (args?.documentTypesOnly === true ? false : undefined);\r\n\r\n\t\tconst combinedPickerData = {\r\n\t\t\t...pickerData,\r\n\t\t};\r\n\r\n\t\tif (!pickerData?.search) {\r\n\t\t\tcombinedPickerData.search = {\r\n\t\t\t\tproviderAlias: UMB_DOCUMENT_TYPE_SEARCH_PROVIDER_ALIAS,\r\n\t\t\t\t...pickerData?.search,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcombinedPickerData.search!.queryParams = {\r\n\t\t\tisElementType,\r\n\t\t\t...pickerData?.search?.queryParams,\r\n\t\t};\r\n\r\n\t\tawait super.openPicker(combinedPickerData);\r\n\t}\r\n}\r\n","import type { UmbDocumentTypeItemModel, UmbDocumentTypeTreeItemModel } from '../../types.js';\r\nimport { UMB_DOCUMENT_TYPE_WORKSPACE_MODAL } from '../../constants.js';\r\nimport { UMB_EDIT_DOCUMENT_TYPE_WORKSPACE_PATH_PATTERN } from '../../paths.js';\r\nimport { UmbDocumentTypePickerInputContext } from './input-document-type.context.js';\r\nimport { css, html, customElement, property, state, repeat, nothing, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { splitStringToArray } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\n@customElement('umb-input-document-type')\r\nexport class UmbInputDocumentTypeElement extends UmbFormControlMixin<string | undefined, typeof UmbLitElement>(\r\n\tUmbLitElement,\r\n\tundefined,\r\n) {\r\n\t#sorter = new UmbSorterController<string>(this, {\r\n\t\tgetUniqueOfElement: (element) => {\r\n\t\t\treturn element.id;\r\n\t\t},\r\n\t\tgetUniqueOfModel: (modelEntry) => {\r\n\t\t\treturn modelEntry;\r\n\t\t},\r\n\t\tidentifier: 'Umb.SorterIdentifier.InputDocumentType',\r\n\t\titemSelector: 'uui-ref-node-document-type',\r\n\t\tcontainerSelector: 'uui-ref-list',\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tthis.selection = model;\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t},\r\n\t});\r\n\r\n\t/**\r\n\t * Limits to only select Element Types\r\n\t * @type {boolean}\r\n\t * @default false\r\n\t */\r\n\t@property({ attribute: false })\r\n\telementTypesOnly: boolean = false;\r\n\r\n\t/**\r\n\t * Limits to only select Document Types\r\n\t * @type {boolean}\r\n\t * @default false\r\n\t */\r\n\t@property({ attribute: false })\r\n\tdocumentTypesOnly: boolean = false;\r\n\r\n\t/**\r\n\t * This is a minimum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @default\r\n\t */\r\n\t@property({ type: Number })\r\n\tpublic set min(value: number) {\r\n\t\tthis.#pickerContext.min = value;\r\n\t}\r\n\tpublic get min(): number {\r\n\t\treturn this.#pickerContext.min;\r\n\t}\r\n\r\n\t/**\r\n\t * Min validation message.\r\n\t * @type {boolean}\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tminMessage = 'This field need more items';\r\n\r\n\t/**\r\n\t * This is a maximum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @default\r\n\t */\r\n\t@property({ type: Number })\r\n\tpublic set max(value: number) {\r\n\t\tthis.#pickerContext.max = value;\r\n\t}\r\n\tpublic get max(): number {\r\n\t\treturn this.#pickerContext.max;\r\n\t}\r\n\r\n\t/**\r\n\t * Max validation message.\r\n\t * @type {boolean}\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tmaxMessage = 'This field exceeds the allowed amount of items';\r\n\r\n\t@property({ type: Array })\r\n\tpublic set selection(uniques: Array<string>) {\r\n\t\tthis.#pickerContext.setSelection(uniques);\r\n\t\tthis.#sorter.setModel(uniques);\r\n\t}\r\n\tpublic get selection(): Array<string> {\r\n\t\treturn this.#pickerContext.getSelection();\r\n\t}\r\n\r\n\t@property({ type: String })\r\n\tpublic override set value(uniques: string | undefined) {\r\n\t\tthis.selection = splitStringToArray(uniques);\r\n\t}\r\n\tpublic override get value(): string | undefined {\r\n\t\treturn this.selection.length > 0 ? this.selection.join(',') : undefined;\r\n\t}\r\n\r\n\t@property({ type: Boolean, attribute: 'readonly' })\r\n\treadonly?: boolean;\r\n\r\n\t@state()\r\n\tprivate _items?: Array<UmbDocumentTypeItemModel>;\r\n\r\n\t@state()\r\n\tprivate _editPath = '';\r\n\r\n\t#pickerContext = new UmbDocumentTypePickerInputContext(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tnew UmbModalRouteRegistrationController(this, UMB_DOCUMENT_TYPE_WORKSPACE_MODAL)\r\n\t\t\t.addAdditionalPath('document-type')\r\n\t\t\t.onSetup(() => {\r\n\t\t\t\treturn {};\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tthis._editPath = routeBuilder({});\r\n\t\t\t});\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeUnderflow',\r\n\t\t\t() => this.minMessage,\r\n\t\t\t() => !!this.min && this.#pickerContext.getSelection().length < this.min,\r\n\t\t);\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeOverflow',\r\n\t\t\t() => this.maxMessage,\r\n\t\t\t() => !!this.max && this.#pickerContext.getSelection().length > this.max,\r\n\t\t);\r\n\r\n\t\tthis.observe(this.#pickerContext.selection, (selection) => (this.value = selection.join(',')), '_observeSelection');\r\n\t\tthis.observe(this.#pickerContext.selectedItems, (selectedItems) => (this._items = selectedItems), '_observerItems');\r\n\t}\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#getPickableFilter() {\r\n\t\tif (this.documentTypesOnly) {\r\n\t\t\t/* TODO: We do not have the same model in the tree and during the search, so theoretically, we cannot use the same filter. \r\n\t\t\tThe search item model does not include \"isFolder,\" so it checks for falsy intentionally. \r\n\t\t\tWe need to investigate getting this typed correctly. [MR] */\r\n\t\t\treturn (x: UmbDocumentTypeTreeItemModel) => !x.isFolder && x.isElement === false;\r\n\t\t}\r\n\t\tif (this.elementTypesOnly) {\r\n\t\t\treturn (x: UmbDocumentTypeTreeItemModel) => x.isElement;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#openPicker() {\r\n\t\tif (this.documentTypesOnly && this.elementTypesOnly) {\r\n\t\t\tthrow new Error('You cannot set both documentTypesOnly and elementTypesOnly to true.');\r\n\t\t}\r\n\r\n\t\tconst args: Parameters<UmbDocumentTypePickerInputContext['openPicker']>[1] = {};\r\n\r\n\t\tif (this.documentTypesOnly) {\r\n\t\t\targs.documentTypesOnly = true;\r\n\t\t} else if (this.elementTypesOnly) {\r\n\t\t\targs.elementTypesOnly = true;\r\n\t\t}\r\n\r\n\t\tthis.#pickerContext.openPicker(\r\n\t\t\t{\r\n\t\t\t\thideTreeRoot: true,\r\n\t\t\t\tpickableFilter: this.#getPickableFilter(),\r\n\t\t\t},\r\n\t\t\targs,\r\n\t\t);\r\n\t}\r\n\r\n\t#removeItem(item: UmbDocumentTypeItemModel) {\r\n\t\tthis.#pickerContext.requestRemoveItem(item.unique);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`${this.#renderItems()} ${this.#renderAddButton()}`;\r\n\t}\r\n\r\n\t#renderAddButton() {\r\n\t\tif (this.readonly || (this.max > 0 && this.selection.length >= this.max)) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"btn-add\"\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t@click=${this.#openPicker}\r\n\t\t\t\tlabel=\"${this.localize.term('general_choose')}\"></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItems() {\r\n\t\tif (!this._items) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-ref-list>\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._items,\r\n\t\t\t\t\t(item) => item.unique,\r\n\t\t\t\t\t(item) => this.#renderItem(item),\r\n\t\t\t\t)}\r\n\t\t\t</uui-ref-list>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItem(item: UmbDocumentTypeItemModel) {\r\n\t\tif (!item.unique) return;\r\n\t\tconst href = this._editPath + UMB_EDIT_DOCUMENT_TYPE_WORKSPACE_PATH_PATTERN.generateLocal({ unique: item.unique });\r\n\t\treturn html`\r\n\t\t\t<uui-ref-node-document-type id=${item.unique} name=${this.localize.string(item.name)} href=${href}>\r\n\t\t\t\t${this.#renderIcon(item)}\r\n\t\t\t\t<uui-action-bar slot=\"actions\">\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\t!this.readonly,\r\n\t\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\tlabel=${this.localize.term('general_remove')}\r\n\t\t\t\t\t\t\t\t@click=${() => this.#removeItem(item)}></uui-button>\r\n\t\t\t\t\t\t`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</uui-action-bar>\r\n\t\t\t</uui-ref-node-document-type>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderIcon(item: UmbDocumentTypeItemModel) {\r\n\t\tif (!item.icon) return;\r\n\t\treturn html`<umb-icon slot=\"icon\" name=${item.icon}></umb-icon>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#btn-add {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputDocumentTypeElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-document-type': UmbInputDocumentTypeElement;\r\n\t}\r\n}\r\n","import { UMB_DOCUMENT_TYPE_ENTITY_TYPE } from '../../entity.js';\r\nimport type { UmbAllowedDocumentTypeModel } from './types.js';\r\nimport type { AllowedDocumentTypeModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { DocumentTypeService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbContentTypeStructureServerDataSourceBase } from '@umbraco-cms/backoffice/content-type';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\n/**\r\n *\r\n \r\n * @class UmbDocumentTypeStructureServerDataSource\r\n * @augments {UmbContentTypeStructureServerDataSourceBase}\r\n */\r\nexport class UmbDocumentTypeStructureServerDataSource extends UmbContentTypeStructureServerDataSourceBase<\r\n\tAllowedDocumentTypeModel,\r\n\tUmbAllowedDocumentTypeModel\r\n> {\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, { getAllowedChildrenOf, mapper });\r\n\t}\r\n}\r\n\r\nconst getAllowedChildrenOf = (unique: string | null, parentContentUnique: string | null) => {\r\n\tif (unique) {\r\n\t\t// eslint-disable-next-line local-rules/no-direct-api-import\r\n\t\treturn DocumentTypeService.getDocumentTypeByIdAllowedChildren({\r\n\t\t\tpath: { id: unique },\r\n\t\t\tquery: { parentContentKey: parentContentUnique ?? undefined },\r\n\t\t});\r\n\t} else {\r\n\t\t// eslint-disable-next-line local-rules/no-direct-api-import\r\n\t\treturn DocumentTypeService.getDocumentTypeAllowedAtRoot({});\r\n\t}\r\n};\r\n\r\nconst mapper = (item: AllowedDocumentTypeModel): UmbAllowedDocumentTypeModel => {\r\n\treturn {\r\n\t\tunique: item.id,\r\n\t\tentityType: UMB_DOCUMENT_TYPE_ENTITY_TYPE,\r\n\t\tname: item.name,\r\n\t\tdescription: item.description || null,\r\n\t\ticon: item.icon || null,\r\n\t};\r\n};\r\n","import { UmbDocumentTypeStructureServerDataSource } from './document-type-structure.server.data-source.js';\r\nimport type { UmbAllowedDocumentTypeModel } from './types.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbContentTypeStructureRepositoryBase } from '@umbraco-cms/backoffice/content-type';\r\n\r\nexport class UmbDocumentTypeStructureRepository extends UmbContentTypeStructureRepositoryBase<UmbAllowedDocumentTypeModel> {\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UmbDocumentTypeStructureServerDataSource);\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentTypeStructureRepository as api };\r\n"],"names":["UMB_DOCUMENT_TYPE_STRUCTURE_REPOSITORY_ALIAS","UMB_DOCUMENT_TYPE_PICKER_MODAL","UmbModalToken","UMB_TREE_PICKER_MODAL_ALIAS","UMB_DOCUMENT_TYPE_ENTITY_TYPE","UMB_CREATE_DOCUMENT_TYPE_WORKSPACE_PATH_PATTERN","UMB_DOCUMENT_TYPE_ROOT_ENTITY_TYPE","UMB_DOCUMENT_TYPE_SEARCH_PROVIDER_ALIAS","UmbDocumentTypePickerInputContext","UmbPickerInputContext","host","UMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS","pickerData","args","isElementType","combinedPickerData","_sorter","_pickerContext","_UmbInputDocumentTypeElement_instances","getPickableFilter_fn","openPicker_fn","removeItem_fn","renderAddButton_fn","renderItems_fn","renderItem_fn","renderIcon_fn","UmbInputDocumentTypeElement","UmbFormControlMixin","UmbLitElement","__privateAdd","UmbSorterController","element","modelEntry","model","UmbChangeEvent","UmbModalRouteRegistrationController","UMB_DOCUMENT_TYPE_WORKSPACE_MODAL","routeBuilder","__privateGet","selection","selectedItems","value","uniques","splitStringToArray","html","__privateMethod","x","item","nothing","repeat","href","UMB_EDIT_DOCUMENT_TYPE_WORKSPACE_PATH_PATTERN","when","css","__decorateClass","property","state","customElement","UmbDocumentTypeStructureServerDataSource","UmbContentTypeStructureServerDataSourceBase","getAllowedChildrenOf","mapper","unique","parentContentUnique","DocumentTypeService","UmbDocumentTypeStructureRepository","UmbContentTypeStructureRepositoryBase"],"mappings":"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"}