{"version":3,"file":"document-notifications-modal.element-Dx2oatz_.js","sources":["../../../src/packages/documents/documents/entity-actions/notifications/modal/document-notifications-modal.element.ts"],"sourcesContent":["import { UmbDocumentItemRepository } from '../../../item/index.js';\r\nimport { UmbDocumentNotificationsRepository } from '../repository/document-notifications.repository.js';\r\nimport type { UmbDocumentNotificationsModalData } from './document-notifications-modal.token.js';\r\nimport type { UmbEntityUnique } from '@umbraco-cms/backoffice/entity';\r\nimport type { GetDocumentByIdNotificationsResponse } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { css, customElement, html, repeat, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\n\r\ntype UmbDocumentNotificationSettings = GetDocumentByIdNotificationsResponse;\r\n\r\n@customElement('umb-document-notifications-modal')\r\nexport class UmbDocumentNotificationsModalElement extends UmbModalBaseElement<\r\n\tUmbDocumentNotificationsModalData,\r\n\tnever\r\n> {\r\n\t#unique?: UmbEntityUnique;\r\n\t#documentNotificationsRepository = new UmbDocumentNotificationsRepository(this);\r\n\r\n\t@state()\r\n\tprivate _settings: UmbDocumentNotificationSettings = [];\r\n\r\n\t@state()\r\n\tprivate _documentName = '';\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis.#unique = this.data?.unique;\r\n\t\tthis.#readNotificationSettings();\r\n\t\tthis.#getDocumentName();\r\n\t}\r\n\r\n\tasync #getDocumentName() {\r\n\t\tif (!this.#unique) return;\r\n\t\t// Should this be done here or in the action file?\r\n\t\tconst { data } = await new UmbDocumentItemRepository(this).requestItems([this.#unique]);\r\n\t\tif (!data) return;\r\n\t\tconst item = data[0];\r\n\t\t//TODO How do we ensure we get the correct variant?\r\n\t\tthis._documentName = item.variants[0]?.name;\r\n\t}\r\n\r\n\tasync #readNotificationSettings() {\r\n\t\tif (!this.#unique) return;\r\n\t\tconst { data } = await this.#documentNotificationsRepository.readNotifications(this.#unique);\r\n\r\n\t\tif (!data) return;\r\n\t\tthis._settings = data;\r\n\t}\r\n\r\n\tasync #updateNotificationSettings() {\r\n\t\tif (!this.#unique) return;\r\n\r\n\t\tconst subscribedActionIds = this._settings.filter((x) => x.subscribed).map((x) => x.actionId);\r\n\t\tconst { error } = await this.#documentNotificationsRepository.updateNotifications(\r\n\t\t\tthis.#unique,\r\n\t\t\tthis._documentName,\r\n\t\t\t{\r\n\t\t\t\tsubscribedActionIds,\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tif (error) return;\r\n\t\tthis._submitModal();\r\n\t}\r\n\r\n\tasync #updateSubscription(actionId: string) {\r\n\t\tthis._settings = this._settings.map((setting) => {\r\n\t\t\tif (setting.actionId === actionId) {\r\n\t\t\t\tconst subscribed = !setting.subscribed;\r\n\t\t\t\treturn { ...setting, subscribed };\r\n\t\t\t}\r\n\t\t\treturn setting;\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${this.localize.term('notifications_notifications')}>\r\n\t\t\t\t<uui-box .headline=${this.localize.term('notifications_editNotifications', this._documentName)}>\r\n\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\tthis._settings,\r\n\t\t\t\t\t\t(setting) => setting.actionId,\r\n\t\t\t\t\t\t(setting) => {\r\n\t\t\t\t\t\t\tconst localizationKey = `actions_${setting.alias}`;\r\n\t\t\t\t\t\t\tlet localization = this.localize.term(localizationKey);\r\n\t\t\t\t\t\t\tif (localization === localizationKey) {\r\n\t\t\t\t\t\t\t\t// Fallback to alias if no localization is found\r\n\t\t\t\t\t\t\t\tlocalization = setting.alias;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn html`<uui-toggle\r\n\t\t\t\t\t\t\t\tid=${setting.actionId}\r\n\t\t\t\t\t\t\t\t@change=${() => this.#updateSubscription(setting.actionId)}\r\n\t\t\t\t\t\t\t\t.label=${localization}\r\n\t\t\t\t\t\t\t\t?checked=${setting.subscribed}></uui-toggle>`;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t)}\r\n\t\t\t\t</uui-box>\r\n\t\t\t\t<umb-footer-layout slot=\"footer\">\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tslot=\"actions\"\r\n\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\tlabel=${this.localize.term('general_cancel')}\r\n\t\t\t\t\t\t@click=${this._rejectModal}></uui-button>\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tslot=\"actions\"\r\n\t\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\t\tcolor=\"positive\"\r\n\t\t\t\t\t\tlabel=${this.localize.term('buttons_save')}\r\n\t\t\t\t\t\t@click=${this.#updateNotificationSettings}></uui-button>\r\n\t\t\t\t</umb-footer-layout>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\tuui-toggle {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDocumentNotificationsModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-document-notifications-modal': UmbDocumentNotificationsModalElement;\r\n\t}\r\n}\r\n"],"names":["_unique","_documentNotificationsRepository","_UmbDocumentNotificationsModalElement_instances","getDocumentName_fn","readNotificationSettings_fn","updateNotificationSettings_fn","updateSubscription_fn","UmbDocumentNotificationsModalElement","UmbModalBaseElement","__privateAdd","UmbDocumentNotificationsRepository","__privateSet","__privateMethod","html","repeat","setting","localizationKey","localization","__privateGet","data","UmbDocumentItemRepository","item","subscribedActionIds","x","error","actionId","subscribed","UmbTextStyles","css","__decorateClass","state","customElement","UmbDocumentNotificationsModalElement$1"],"mappings":"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"}