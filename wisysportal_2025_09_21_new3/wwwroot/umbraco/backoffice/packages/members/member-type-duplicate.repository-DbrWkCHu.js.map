{"version":3,"file":"member-type-duplicate.repository-DbrWkCHu.js","sources":["../../../src/packages/members/member-type/entity-actions/duplicate/repository/member-type-duplicate.server.data-source.ts","../../../src/packages/members/member-type/entity-actions/duplicate/repository/member-type-duplicate.repository.ts"],"sourcesContent":["import { MemberTypeService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport type { UmbDuplicateDataSource, UmbDuplicateRequestArgs } from '@umbraco-cms/backoffice/entity-action';\r\n\r\n/**\r\n * Duplicate Document Server Data Source\r\n * @class UmbDuplicateMemberTypeServerDataSource\r\n */\r\nexport class UmbDuplicateMemberTypeServerDataSource implements UmbDuplicateDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\t/**\r\n\t * Creates an instance of UmbDuplicateMemberTypeServerDataSource.\r\n\t * @param {UmbControllerHost} host - The controller host for this controller to be appended to\r\n\t * @memberof UmbDuplicateMemberTypeServerDataSource\r\n\t */\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Duplicate an item for the given unique\r\n\t * @param {UmbDuplicateRequestArgs} args\r\n\t * @returns {*}\r\n\t * @memberof UmbDuplicateDataTypeServerDataSource\r\n\t */\r\n\tasync duplicate(args: UmbDuplicateRequestArgs) {\r\n\t\tif (!args.unique) throw new Error('Unique is missing');\r\n\r\n\t\treturn tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tMemberTypeService.postMemberTypeByIdCopy({\r\n\t\t\t\tpath: { id: args.unique },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbDuplicateMemberTypeServerDataSource } from './member-type-duplicate.server.data-source.js';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\nimport type { UmbDuplicateRepository, UmbDuplicateRequestArgs } from '@umbraco-cms/backoffice/entity-action';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\n\r\nexport class UmbDuplicateMemberTypeRepository extends UmbRepositoryBase implements UmbDuplicateRepository {\r\n\t#duplicateSource = new UmbDuplicateMemberTypeServerDataSource(this);\r\n\r\n\tasync requestDuplicate(args: UmbDuplicateRequestArgs) {\r\n\t\tconst { error } = await this.#duplicateSource.duplicate(args);\r\n\r\n\t\tif (!error) {\r\n\t\t\tconst notificationContext = await this.getContext(UMB_NOTIFICATION_CONTEXT);\r\n\t\t\tif (!notificationContext) {\r\n\t\t\t\tthrow new Error('Notification context not found');\r\n\t\t\t}\r\n\t\t\tconst notification = { data: { message: `Duplicated` } };\r\n\t\t\tnotificationContext.peek('positive', notification);\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n\r\nexport { UmbDuplicateMemberTypeRepository as api };\r\n"],"names":["UmbDuplicateMemberTypeServerDataSource","#host","host","args","tryExecute","MemberTypeService","UmbDuplicateMemberTypeRepository","UmbRepositoryBase","#duplicateSource","error","notificationContext","UMB_NOTIFICATION_CONTEXT","notification"],"mappings":";;;;AASO,MAAMA,EAAyE;AAAA,EACrFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASd,MAAM,UAAUC,GAA+B;AAC9C,QAAI,CAACA,EAAK,OAAc,OAAA,IAAI,MAAM,mBAAmB;AAE9C,WAAAC;AAAA,MACN,KAAKH;AAAA,MACLI,EAAkB,uBAAuB;AAAA,QACxC,MAAM,EAAE,IAAIF,EAAK,OAAO;AAAA,MACxB,CAAA;AAAA,IACF;AAAA,EAAA;AAEF;AChCO,MAAMG,UAAyCC,EAAoD;AAAA,EACzGC,KAAmB,IAAIR,EAAuC,IAAI;AAAA,EAElE,MAAM,iBAAiBG,GAA+B;AACrD,UAAM,EAAE,OAAAM,EAAM,IAAI,MAAM,KAAKD,GAAiB,UAAUL,CAAI;AAE5D,QAAI,CAACM,GAAO;AACX,YAAMC,IAAsB,MAAM,KAAK,WAAWC,CAAwB;AAC1E,UAAI,CAACD;AACE,cAAA,IAAI,MAAM,gCAAgC;AAEjD,YAAME,IAAe,EAAE,MAAM,EAAE,SAAS,eAAe;AACnC,MAAAF,EAAA,KAAK,YAAYE,CAAY;AAAA,IAAA;AAGlD,WAAO,EAAE,OAAAH,EAAM;AAAA,EAAA;AAEjB;"}