{"version":3,"file":"member-create-options-modal.element-DpJR212j.js","sources":["../../../src/packages/members/member/entity-actions/create/member-create-options-modal.element.ts"],"sourcesContent":["import { UMB_CREATE_MEMBER_WORKSPACE_PATH_PATTERN } from '../../paths.js';\r\nimport type {\r\n\tUmbMemberCreateOptionsModalData,\r\n\tUmbMemberCreateOptionsModalValue,\r\n} from './member-create-options-modal.token.js';\r\nimport { html, customElement, state, repeat, css } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\n\r\nimport { UmbMemberTypeTreeRepository } from '@umbraco-cms/backoffice/member-type';\r\n\r\nconst elementName = 'umb-member-create-options-modal';\r\n@customElement(elementName)\r\nexport class UmbMemberCreateOptionsModalElement extends UmbModalBaseElement<\r\n\tUmbMemberCreateOptionsModalData,\r\n\tUmbMemberCreateOptionsModalValue\r\n> {\r\n\t@state()\r\n\tprivate _options: Array<{ label: string; unique: string; icon: string }> = [];\r\n\r\n\t#memberTypeTreeRepository = new UmbMemberTypeTreeRepository(this);\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis.#getOptions();\r\n\t}\r\n\r\n\tasync #getOptions() {\r\n\t\t//TODO: Should we use the tree repository or make a collection repository?\r\n\t\t//TODO: And how would we get all the member types?\r\n\t\t//TODO: This only works because member types can't have folders.\r\n\t\tconst { data } = await this.#memberTypeTreeRepository.requestTreeRootItems({});\r\n\t\tif (!data) return;\r\n\r\n\t\tthis._options = data.items.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: item.name,\r\n\t\t\t\tunique: item.unique,\r\n\t\t\t\ticon: item.icon || '',\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\t// close the modal when navigating\r\n\t#onOpen(event: Event, unique: string) {\r\n\t\tevent?.stopPropagation();\r\n\t\t// TODO: the href does not emit an event, so we need to use the click event\r\n\t\tconst path = UMB_CREATE_MEMBER_WORKSPACE_PATH_PATTERN.generateAbsolute({\r\n\t\t\tmemberTypeUnique: unique,\r\n\t\t});\r\n\t\thistory.pushState(null, '', path);\r\n\t\tthis._submitModal();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${this.localize.term('actions_create')}>\r\n\t\t\t\t${this.#renderOptions()}\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tslot=\"actions\"\r\n\t\t\t\t\tid=\"cancel\"\r\n\t\t\t\t\tlabel=${this.localize.term('general_cancel')}\r\n\t\t\t\t\t@click=\"${this._rejectModal}\"></uui-button>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderOptions() {\r\n\t\treturn html`\r\n\t\t\t<uui-box>\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._options,\r\n\t\t\t\t\t(option) => option.unique,\r\n\t\t\t\t\t(option) => html`\r\n\t\t\t\t\t\t<uui-ref-node\r\n\t\t\t\t\t\t\t.name=${this.localize.string(option.label)}\r\n\t\t\t\t\t\t\t@open=${(event: Event) => this.#onOpen(event, option.unique)}>\r\n\t\t\t\t\t\t\t<umb-icon slot=\"icon\" name=${option.icon || 'icon-circle-dotted'}></umb-icon>\r\n\t\t\t\t\t\t</uui-ref-node>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#blank {\r\n\t\t\t\tborder-bottom: 1px solid var(--uui-color-border);\r\n\t\t\t}\r\n\r\n\t\t\t#edit-permissions {\r\n\t\t\t\tmargin-top: var(--uui-size-6);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport { UmbMemberCreateOptionsModalElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: UmbMemberCreateOptionsModalElement;\r\n\t}\r\n}\r\n"],"names":["_memberTypeTreeRepository","_UmbMemberCreateOptionsModalElement_instances","getOptions_fn","onOpen_fn","renderOptions_fn","elementName","UmbMemberCreateOptionsModalElement","UmbModalBaseElement","__privateAdd","UmbMemberTypeTreeRepository","__privateMethod","html","data","__privateGet","item","event","unique","path","UMB_CREATE_MEMBER_WORKSPACE_PATH_PATTERN","repeat","option","UmbTextStyles","css","__decorateClass","state","customElement"],"mappings":";;;;;;;;;;;+TAAAA,GAAAC,GAAAC,GAAAC,GAAAC;AAWA,MAAMC,IAAc;AAEP,IAAAC,IAAN,cAAiDC,EAGtD;AAAA,EAHK,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAP,CAAA,GAKN,KAAQ,WAAmE,CAAC,GAEhDO,EAAA,MAAAR,GAAA,IAAIS,EAA4B,IAAI,CAAA;AAAA,EAAA;AAAA,EAEvD,eAAe;AACvB,IAAAC,EAAA,MAAKT,GAALC,CAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EA8BQ,SAAS;AACV,WAAAS;AAAA,+BACsB,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA,MAC7DD,EAAA,MAAKT,MAAL,KAAqB,IAAA,CAAA;AAAA;AAAA;AAAA;AAAA,aAId,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA,eAClC,KAAK,YAAY;AAAA;AAAA;AAAA,EAAA;AAmChC;AA5ECD,IAAA,oBAAA,QAAA;AAPMC,IAAA,oBAAA,QAAA;AAaAC,IAAW,iBAAG;AAIb,QAAA,EAAE,MAAAU,EAAS,IAAA,MAAMC,QAAKb,CAA0B,EAAA,qBAAqB,EAAE;AAC7E,EAAKY,MAEL,KAAK,WAAWA,EAAK,MAAM,IAAI,CAACE,OACxB;AAAA,IACN,OAAOA,EAAK;AAAA,IACZ,QAAQA,EAAK;AAAA,IACb,MAAMA,EAAK,QAAQ;AAAA,EACpB,EACA;AACF;AAGAX,IAAO,SAACY,GAAcC,GAAgB;AACrC,EAAAD,GAAO,gBAAgB;AAEjB,QAAAE,IAAOC,EAAyC,iBAAiB;AAAA,IACtE,kBAAkBF;AAAA,EAAA,CAClB;AACO,UAAA,UAAU,MAAM,IAAIC,CAAI,GAChC,KAAK,aAAa;AACnB;AAeAb,IAAc,WAAG;AACT,SAAAO;AAAA;AAAA,MAEHQ;AAAA,IACD,KAAK;AAAA,IACL,CAACC,MAAWA,EAAO;AAAA,IACnB,CAACA,MAAWT;AAAA;AAAA,eAEF,KAAK,SAAS,OAAOS,EAAO,KAAK,CAAC;AAAA,eAClC,CAACL,MAAiBL,EAAA,MAAKT,MAAL,KAAa,MAAAc,GAAOK,EAAO,MAAO,CAAA;AAAA,oCAC/BA,EAAO,QAAQ,oBAAoB;AAAA;AAAA;AAAA,EAGlE,CAAA;AAAA;AAAA;AAGJ;AArEYd,EAuEI,SAAS;AAAA,EACxBe;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASD;AA7EQC,EAAA;AAAA,EADPC,EAAM;AAAA,GAJKlB,EAKJ,WAAA,YAAA,CAAA;AALIA,IAANiB,EAAA;AAAA,EADNE,EAAcpB,CAAW;AAAA,GACbC,CAAA;"}