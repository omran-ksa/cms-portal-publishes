{"version":3,"file":"health-check-overview.element-Diy2jkPk.js","sources":["../../../src/packages/health-check/views/health-check-group-box-overview.element.ts","../../../src/packages/health-check/views/health-check-overview.element.ts"],"sourcesContent":["import type { UmbHealthCheckContext } from '../health-check.context.js';\r\nimport type { UmbHealthCheckDashboardContext } from '../health-check-dashboard.context.js';\r\nimport { UMB_HEALTHCHECK_DASHBOARD_CONTEXT } from '../health-check-dashboard.context.js';\r\nimport type { ManifestHealthCheck } from '../health-check.extension.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, nothing, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { ensureSlash, path } from '@umbraco-cms/backoffice/router';\r\nimport type { HealthCheckGroupWithResultResponseModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { StatusResultTypeModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-health-check-group-box-overview')\r\nexport class UmbHealthCheckGroupBoxOverviewElement extends UmbLitElement {\r\n\t@property({ type: Object })\r\n\tmanifest?: ManifestHealthCheck;\r\n\r\n\tprivate _healthCheckContext?: UmbHealthCheckDashboardContext;\r\n\r\n\tprivate _api?: UmbHealthCheckContext;\r\n\r\n\t@state()\r\n\tprivate _tagResults?: any = [];\r\n\r\n\t@state()\r\n\tprivate _keyResults?: HealthCheckGroupWithResultResponseModel;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_HEALTHCHECK_DASHBOARD_CONTEXT, (instance) => {\r\n\t\t\tthis._healthCheckContext = instance;\r\n\t\t\tif (!this._healthCheckContext || !this.manifest?.meta.label) return;\r\n\t\t\tthis._api = this._healthCheckContext?.apis.get(this.manifest?.meta.label);\r\n\r\n\t\t\tif (this._api) {\r\n\t\t\t\tthis.observe(\r\n\t\t\t\t\tthis._api.results,\r\n\t\t\t\t\t(results) => {\r\n\t\t\t\t\t\tthis._keyResults = results;\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'_observeApiResults',\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`<a href=\"${ensureSlash(path()) + this.manifest?.meta.label}\">\r\n\t\t\t<uui-box class=\"group-box\"> ${this.manifest?.meta.label} ${this._renderStatus()} </uui-box>\r\n\t\t</a>`;\r\n\t}\r\n\r\n\t_renderStatus() {\r\n\t\tconst res: StatusResultTypeModel[] = [];\r\n\t\tthis._keyResults?.checks?.forEach((item) => {\r\n\t\t\titem?.results?.forEach((result) => {\r\n\t\t\t\tres.push(result.resultType ?? StatusResultTypeModel.ERROR);\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis._tagResults = res;\r\n\t\treturn html`<div>${this._renderCheckResults(this.filterResults(this._tagResults))}</div>`;\r\n\t}\r\n\r\n\t_renderCheckResults(resultObject: any) {\r\n\t\treturn html`${resultObject.success > 0\r\n\t\t\t? html`<uui-tag look=\"secondary\" color=\"positive\">\r\n\t\t\t\t\t<uui-icon name=\"check\"></uui-icon>\r\n\t\t\t\t\t${resultObject.success}\r\n\t\t\t\t</uui-tag> `\r\n\t\t\t: nothing}\r\n\t\t${resultObject.warning > 0\r\n\t\t\t? html`<uui-tag look=\"secondary\" color=\"warning\">\r\n\t\t\t\t\t<uui-icon name=\"alert\"></uui-icon>\r\n\t\t\t\t\t${resultObject.warning}\r\n\t\t\t\t</uui-tag>`\r\n\t\t\t: nothing}\r\n\t\t${resultObject.error > 0\r\n\t\t\t? html`<uui-tag look=\"secondary\" color=\"danger\">\r\n\t\t\t\t\t<uui-icon name=\"remove\"></uui-icon>\r\n\t\t\t\t\t${resultObject.error}\r\n\t\t\t\t</uui-tag>`\r\n\t\t\t: nothing}\r\n\t\t${resultObject.info > 0\r\n\t\t\t? html`<uui-tag look=\"secondary\">\r\n\t\t\t\t\t<uui-icon name=\"info\"></uui-icon>\r\n\t\t\t\t\t${resultObject.info}\r\n\t\t\t\t</uui-tag>`\r\n\t\t\t: nothing} `;\r\n\t}\r\n\r\n\tfilterResults(results: any): any {\r\n\t\tconst tags = {\r\n\t\t\tsuccess: 0,\r\n\t\t\twarning: 0,\r\n\t\t\terror: 0,\r\n\t\t\tinfo: 0,\r\n\t\t};\r\n\r\n\t\tresults.forEach((result: any) => {\r\n\t\t\tswitch (result) {\r\n\t\t\t\tcase StatusResultTypeModel.SUCCESS:\r\n\t\t\t\t\ttags.success += 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase StatusResultTypeModel.WARNING:\r\n\t\t\t\t\ttags.warning += 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase StatusResultTypeModel.ERROR:\r\n\t\t\t\t\ttags.error += 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase StatusResultTypeModel.INFO:\r\n\t\t\t\t\ttags.info += 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn tags;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t.group-box {\r\n\t\t\t\tposition: relative;\r\n\t\t\t}\r\n\r\n\t\t\t.group-box:hover::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tbottom: 0;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tright: 0;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\ttransition: opacity 100ms ease-out 0s;\r\n\t\t\t\topacity: 0.33;\r\n\t\t\t\toutline-color: var(--uui-color-selected);\r\n\t\t\t\toutline-width: 4px;\r\n\t\t\t\toutline-style: solid;\r\n\t\t\t}\r\n\r\n\t\t\ta {\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t\tcolor: var(--uui-color-text);\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-3);\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\r\n\t\t\tuui-icon {\r\n\t\t\t\tpadding-right: var(--uui-size-space-2);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbHealthCheckGroupBoxOverviewElement;\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-health-check--group-box-overview': UmbHealthCheckGroupBoxOverviewElement;\r\n\t}\r\n}\r\n","import type { UmbHealthCheckDashboardContext } from '../health-check-dashboard.context.js';\r\nimport { UMB_HEALTHCHECK_DASHBOARD_CONTEXT } from '../health-check-dashboard.context.js';\r\nimport type { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { css, html, customElement, state } from '@umbraco-cms/backoffice/external/lit';\r\n\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nimport './health-check-group-box-overview.element.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\n\r\n@customElement('umb-dashboard-health-check-overview')\r\nexport class UmbDashboardHealthCheckOverviewElement extends UmbLitElement {\r\n\t@state()\r\n\tprivate _buttonState: UUIButtonState;\r\n\r\n\tprivate _healthCheckDashboardContext?: UmbHealthCheckDashboardContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.consumeContext(UMB_HEALTHCHECK_DASHBOARD_CONTEXT, (instance) => {\r\n\t\t\tthis._healthCheckDashboardContext = instance;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _onHealthCheckHandler() {\r\n\t\tthis._buttonState = 'waiting';\r\n\t\tawait this._healthCheckDashboardContext?.checkAll();\r\n\t\tthis._buttonState = 'success';\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-box>\r\n\t\t\t\t<div id=\"header\" slot=\"header\">\r\n\t\t\t\t\t<h2>Health Check</h2>\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tlabel=\"Perform all checks\"\r\n\t\t\t\t\t\tcolor=\"positive\"\r\n\t\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\t\t.state=\"${this._buttonState}\"\r\n\t\t\t\t\t\t@click=\"${this._onHealthCheckHandler}\">\r\n\t\t\t\t\t\tPerform all checks\r\n\t\t\t\t\t</uui-button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"grid\">\r\n\r\n\t\t\t\t\t${\r\n\t\t\t\t\t\t// As well as the visual presentation, this amend to the rendering based on button state is necessary\r\n\t\t\t\t\t\t// in order to trigger an update after the checks are complete (this.requestUpdate() doesn't suffice).\r\n\t\t\t\t\t\tthis._buttonState !== 'waiting'\r\n\t\t\t\t\t\t\t? html`<umb-extension-slot\r\n\t\t\t\t\t\t\t\t\ttype=\"healthCheck\"\r\n\t\t\t\t\t\t\t\t\tdefault-element=\"umb-health-check-group-box-overview\"></umb-extension-slot>`\r\n\t\t\t\t\t\t\t: html`<uui-loader></uui-loader>`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</umb-extension-slot>\r\n\t\t\t\t</div>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tpadding: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\r\n\t\t\tuui-box + uui-box {\r\n\t\t\t\tmargin-top: var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\t#header {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\r\n\t\t\t#header h2 {\r\n\t\t\t\tfont-size: var(--uui-type-h5-size);\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\r\n\t\t\t.grid {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgap: var(--uui-size-space-4);\r\n\t\t\t\tgrid-template-columns: repeat(auto-fit, minmax(250px, auto));\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDashboardHealthCheckOverviewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-dashboard-health-check-overview': UmbDashboardHealthCheckOverviewElement;\r\n\t}\r\n}\r\n"],"names":["UmbHealthCheckGroupBoxOverviewElement","UmbLitElement","UMB_HEALTHCHECK_DASHBOARD_CONTEXT","instance","results","html","ensureSlash","path","res","item","result","StatusResultTypeModel","resultObject","nothing","tags","UmbTextStyles","css","__decorateClass","property","state","customElement","UmbDashboardHealthCheckOverviewElement","UmbDashboardHealthCheckOverviewElement$1"],"mappings":"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"}