{"version":3,"file":"uSync.js","sources":["../../../usync-assets/src/workspace/components/events.ts","../../../usync-assets/src/components/usync-action-box.ts","../../../usync-assets/src/components/usync-progress-box.ts","../../../usync-assets/src/components/usync-results-view.ts","../../../usync-assets/src/components/usync-change-view.ts","../../../usync-assets/src/api/types.gen.ts","../../../usync-assets/node_modules/@hey-api/client-fetch/dist/index.js","../../../usync-assets/src/api/client.gen.ts","../../../usync-assets/src/api/sdk.gen.ts","../../../usync-assets/src/dialogs/details-modal-element.ts","../../../usync-assets/src/dialogs/details-modal-token.ts","../../../usync-assets/src/dialogs/error-modal-element.ts","../../../usync-assets/src/dialogs/error-modal-token.ts","../../../usync-assets/src/components/events.ts","../../../usync-assets/src/components/usync-results-group-view.ts","../../../usync-assets/src/signalr/signalr.context.ts","../../../usync-assets/src/signalr/signalr.context.token.ts","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/Errors.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/ILogger.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/Loggers.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/Utils.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/Subject.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HubConnection.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/ITransport.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/AbortController.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","../../../usync-assets/src/repository/SyncAction.respositoy.ts","../../../usync-assets/src/repository/sources/SyncAction.source.ts","../../../usync-assets/src/repository/sources/SyncMigration.source.ts","../../../usync-assets/src/repository/sources/SyncSettings.source.ts","../../../usync-assets/src/workspace/dialogs/import-modal.token.ts","../../../usync-assets/src/workspace/dialogs/import-modal.element.ts","../../../usync-assets/src/workspace/workspace.context.ts","../../../usync-assets/src/workspace/views/default/default.element.ts","../../../usync-assets/src/workspace/workspace.element.ts","../../../usync-assets/src/constants.ts","../../../usync-assets/src/conditions/legacy-files.condition.ts","../../../usync-assets/src/tree/constants.ts","../../../usync-assets/src/conditions/new-section.condition.ts","../../../usync-assets/src/tree/usync.menu-element.ts","../../../usync-assets/src/conditions/constants.ts","../../../usync-assets/src/tree/manifest.ts","../../../usync-assets/src/workspace/dialogs/manifest.ts","../../../usync-assets/src/workspace/components/usync-action-button.ts","../../../usync-assets/src/workspace/components/usync-file-picker.element.ts","../../../usync-assets/src/workspace/components/usync-file-upload.element.ts","../../../usync-assets/src/workspace/manifest.ts","../../../usync-assets/src/lang/manifest.ts","../../../usync-assets/src/dialogs/manifest.ts","../../../usync-assets/src/conditions/manifest.ts","../../../usync-assets/src/icons/manifest.ts","../../../usync-assets/src/manifests.ts","../../../usync-assets/src/index.ts"],"sourcesContent":["import { SyncActionButton, SyncActionGroup, UploadImportResult } from '../../api';\r\n\r\nexport const USYNC_FILE_PICKER_CHANGE_EVENT = 'change';\r\nexport const USYNC_FILE_PICKER_UPLOADED_EVENT = 'uploaded';\r\n\r\n/**\r\n * 'change' event fires when the file input changes, either by selecting a new file or removing the current one.\r\n */\r\nexport class uSyncFilePickerChangeEvent extends Event {\r\n\tpublic constructor(file: File | null | undefined) {\r\n\t\tsuper(USYNC_FILE_PICKER_CHANGE_EVENT, {\r\n\t\t\tbubbles: true,\r\n\t\t\tcomposed: true,\r\n\t\t\tcancelable: false,\r\n\t\t});\r\n\r\n\t\tthis.file = file;\r\n\t}\r\n\r\n\tfile: File | null | undefined;\r\n}\r\n\r\n/**\r\n * 'uploaded' event fires when a file has been successfully uploaded and extracted.\r\n */\r\nexport class uSyncFilePickerUploadedEvent extends Event {\r\n\tpublic constructor(result: UploadImportResult) {\r\n\t\tsuper(USYNC_FILE_PICKER_UPLOADED_EVENT, {\r\n\t\t\tbubbles: true,\r\n\t\t\tcomposed: true,\r\n\t\t\tcancelable: false,\r\n\t\t});\r\n\r\n\t\tthis.result = result;\r\n\t}\r\n\r\n\tresult: UploadImportResult;\r\n}\r\n\r\nexport const USYNC_ACTION_BUTTON_CLICK_EVENT = 'usync-action-click';\r\n\r\nexport class uSyncActionButtonClickEvent extends Event {\r\n\tpublic constructor(button: SyncActionButton) {\r\n\t\tsuper(USYNC_ACTION_BUTTON_CLICK_EVENT, {\r\n\t\t\tbubbles: true,\r\n\t\t\tcomposed: true,\r\n\t\t\tcancelable: false,\r\n\t\t});\r\n\r\n\t\tthis.button = button;\r\n\t}\r\n\r\n\tbutton: SyncActionButton;\r\n}\r\n\r\nexport const USYNC_ACTION_PERFORM_EVENT = 'perform-action';\r\n\r\nexport class uSyncActionPerformEvent extends Event {\r\n\tpublic constructor(\r\n\t\tgroup: SyncActionGroup,\r\n\t\tkey: string,\r\n\t\tforce?: boolean,\r\n\t\tclean?: boolean,\r\n\t\tfile?: boolean,\r\n\t) {\r\n\t\tsuper(USYNC_ACTION_PERFORM_EVENT, {\r\n\t\t\tbubbles: true,\r\n\t\t\tcomposed: true,\r\n\t\t\tcancelable: false,\r\n\t\t});\r\n\r\n\t\tthis.group = group;\r\n\t\tthis.key = key;\r\n\t\tthis.force = force;\r\n\t\tthis.clean = clean;\r\n\t\tthis.file = file;\r\n\t}\r\n\r\n\tgroup: SyncActionGroup;\r\n\tkey: string;\r\n\tforce?: boolean;\r\n\tclean?: boolean;\r\n\tfile?: boolean;\r\n}\r\n","import {\r\n\tLitElement,\r\n\tcustomElement,\r\n\thtml,\r\n\tcss,\r\n\tproperty,\r\n\tifDefined,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { SyncActionGroup } from '@jumoo/uSync';\r\nimport { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport {\r\n\tuSyncActionButtonClickEvent,\r\n\tuSyncActionPerformEvent,\r\n} from '../workspace/components/events';\r\n\r\n/**\r\n * displays the action buttons for a given group\r\n */\r\n@customElement('usync-action-box')\r\nexport class uSyncActionBox extends LitElement {\r\n\t/**\r\n\t * Collection of buttons to display.\r\n\t */\r\n\t@property({ type: Object })\r\n\tgroup!: SyncActionGroup;\r\n\r\n\t/**\r\n\t * state to display on buttons\r\n\t */\r\n\t@property({ type: String })\r\n\tstate?: UUIButtonState;\r\n\r\n\t@property({ type: Boolean })\r\n\tdisabled: boolean = false;\r\n\r\n\t#onAction(e: uSyncActionButtonClickEvent, group: SyncActionGroup) {\r\n\t\tif (!e?.button) return;\r\n\r\n\t\tthis.dispatchEvent(\r\n\t\t\tnew uSyncActionPerformEvent(\r\n\t\t\t\tgroup,\r\n\t\t\t\te.button.key,\r\n\t\t\t\te.button.force,\r\n\t\t\t\te.button.clean,\r\n\t\t\t\te.button.file,\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst dropdownButtons = this.group.buttons.map((b) => {\r\n\t\t\treturn html`\r\n\t\t\t\t<usync-action-button\r\n\t\t\t\t\t.button=${b}\r\n\t\t\t\t\t.disabled=${this.disabled}\r\n\t\t\t\t\tstate=${ifDefined(this.state)}\r\n\t\t\t\t\t@usync-action-click=${(e: uSyncActionButtonClickEvent) =>\r\n\t\t\t\t\t\tthis.#onAction(e, this.group)}></usync-action-button>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-box class=\"action-box ${this.disabled ? 'disabled' : ''}\">\r\n\t\t\t\t<div class=\"box-content\">\r\n\t\t\t\t\t<h2 class=\"box-heading\">${this.group?.groupName}</h2>\r\n\t\t\t\t\t<umb-icon name=${this.group?.icon}></umb-icon>\r\n\t\t\t\t\t<div class=\"box-buttons\">${dropdownButtons}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tflex-grow: 1;\r\n\t\t}\r\n\r\n\t\t.action-box {\r\n\t\t\ttransition: opacity 0.2s ease-in-out;\r\n\t\t}\r\n\r\n\t\t.box-content {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: center;\r\n\t\t}\r\n\r\n\t\t.box-heading {\r\n\t\t\tfont-size: var(--uui-size-8);\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\r\n\t\tumb-icon {\r\n\t\t\tmargin: var(--uui-size-8) 0 var(--uui-size-10);\r\n\t\t\tfont-size: var(--uui-type-h2-size);\r\n\t\t\tcolor: var(--uui-color-text-alt);\r\n\t\t}\r\n\r\n\t\tuui-button {\r\n\t\t\tmargin: 0 var(--uui-size-space-2);\r\n\t\t\tfont-size: var(--uui-size-6);\r\n\t\t}\r\n\r\n\t\t.box-buttons {\r\n\t\t\tmargin: var(--uui-size-space-2) 0;\r\n\t\t}\r\n\r\n\t\t.disabled {\r\n\t\t\topacity: 0.4;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncActionBox;\r\n","import {\r\n\tcustomElement,\r\n\tLitElement,\r\n\tcss,\r\n\thtml,\r\n\tproperty,\r\n\tnothing,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport {\r\n\tUSYNC_SIGNALR_CONTEXT_TOKEN,\r\n\tSyncUpdateMessage,\r\n\tHandlerStatus,\r\n\tSyncHandlerSummary,\r\n} from '@jumoo/uSync';\r\nimport { UUIInterfaceColor } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n/**\r\n * Provides the progress box while things happen.\r\n */\r\n@customElement('usync-progress-box')\r\nexport class uSyncProcessBox extends UmbElementMixin(LitElement) {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(USYNC_SIGNALR_CONTEXT_TOKEN, (_signalR) => {\r\n\t\t\tif (!_signalR) return;\r\n\r\n\t\t\tthis.observe(_signalR.update, (_update) => {\r\n\t\t\t\tthis.updateMsg = _update;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_signalR.add, (_add) => {\r\n\t\t\t\tthis.addMsg = _add;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t@state()\r\n\tupdateMsg?: SyncUpdateMessage;\r\n\r\n\t@state()\r\n\taddMsg: object = {};\r\n\r\n\t@property({ type: String })\r\n\ttitle: string = '';\r\n\r\n\t@property({ type: Array })\r\n\tactions?: Array<SyncHandlerSummary>;\r\n\r\n\t@property({ type: Boolean })\r\n\tcomplete: boolean = false;\r\n\r\n\trender() {\r\n\t\tif (!this.actions) return nothing;\r\n\r\n\t\tvar actionHtml = this.actions?.map((action) => {\r\n\t\t\treturn html`\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"action \r\n                    ${action.status == HandlerStatus.COMPLETE ? 'complete' : ''} \r\n                    ${action.status == HandlerStatus.PROCESSING ? 'working' : ''}\">\r\n\t\t\t\t\t<div class=\"icon-holder\">\r\n\t\t\t\t\t\t<uui-icon .name=${action.icon ?? 'icon-box'}></uui-icon>\r\n\t\t\t\t\t\t${this.renderBadge(action)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4>${action.name ?? 'unknown'}</h4>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-box>\r\n\t\t\t\t<h2>${this.title}</h2>\r\n\t\t\t\t<div class=\"action-list\">${actionHtml}</div>\r\n\t\t\t\t<div class=\"update-box\">${this.updateMsg?.message}</div>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderBadge(action: SyncHandlerSummary) {\r\n\t\tif (action.status == HandlerStatus.PENDING) return;\r\n\t\tif (action.status == HandlerStatus.PROCESSING) {\r\n\t\t\treturn html`<uui-badge color=\"positive\" look=\"default\">\r\n\t\t\t\t<uui-icon name=\"icon-sync\"></uui-icon\r\n\t\t\t></uui-badge>`;\r\n\t\t}\r\n\r\n\t\tconst color: UUIInterfaceColor = action.inError ? 'warning' : 'positive';\r\n\t\tconst label = action.inError\r\n\t\t\t? 'Some errors occured duing import'\r\n\t\t\t: 'Changes imported successfully';\r\n\r\n\t\tif (!this.complete || action.changes == 0)\r\n\t\t\treturn html`<uui-badge .color=${color} look=\"default\" title=${label}\r\n\t\t\t\t><uui-icon name=\"icon-check\"></uui-icon\r\n\t\t\t></uui-badge>`;\r\n\t\treturn html`<uui-badge .color=${color} title=${label}>${action.changes}</uui-badge>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\r\n\t\th2 {\r\n\t\t\ttext-align: center;\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\r\n\t\t.action-list {\r\n\t\t\tmargin-top: var(--uui-size-space-4);\r\n\t\t\tpadding: var(--uui-size-space-4) 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\r\n\t\t.action {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: center;\r\n\t\t\tmin-width: var(--uui-size-layout-5);\r\n\t\t\tcolor: var(--uui-color-text-alt);\r\n\t\t\topacity: 0.67;\r\n\t\t\tmargin: var(--uui-size-space-4) 0 var(--uui-size-space-6);\r\n\t\t}\r\n\r\n\t\t.action h4 {\r\n\t\t\tmargin: var(--uui-size-space-4) 0;\r\n\t\t}\r\n\r\n\t\t.icon-holder {\r\n\t\t\tposition: relative;\r\n\t\t\tpadding: 0 var(--uui-size-7);\r\n\t\t}\r\n\r\n\t\t.action uui-icon {\r\n\t\t\tfont-size: var(--uui-size-12);\r\n\t\t}\r\n\r\n\t\t.action uui-badge uui-icon {\r\n\t\t\tfont-size: var(--uui-type-h4-size);\r\n\t\t}\r\n\r\n\t\t.complete {\r\n\t\t\tcolor: var(--uui-color-default-emphasis);\r\n\t\t}\r\n\r\n\t\t.working {\r\n\t\t\tcolor: var(--uui-color-positive);\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\r\n\t\t.update-box {\r\n\t\t\tfont-weight: bold;\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncProcessBox;\r\n","import {\r\n\tLitElement,\r\n\thtml,\r\n\tcustomElement,\r\n\tproperty,\r\n\tcss,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { ChangeType, USyncActionView } from '@jumoo/uSync';\r\nimport { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport {\r\n\tUMB_MODAL_MANAGER_CONTEXT,\r\n\tUmbModalManagerContext,\r\n} from '@umbraco-cms/backoffice/modal';\r\nimport { USYNC_DETAILS_MODAL } from '@jumoo/uSync';\r\nimport { uSyncShowDetailEvent } from './events';\r\n\r\n@customElement('usync-results')\r\nexport class uSyncResultsView extends UmbElementMixin(LitElement) {\r\n\t#modalContext?: UmbModalManagerContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (_instance) => {\r\n\t\t\tthis.#modalContext = _instance;\r\n\t\t});\r\n\t}\r\n\r\n\t@property({ type: Array })\r\n\tresults: Array<USyncActionView> | undefined = [];\r\n\r\n\t@state()\r\n\tshowAll: boolean = false;\r\n\r\n\t@state()\r\n\tchangeCount = 0;\r\n\r\n\t#toggleShowAll() {\r\n\t\tthis.showAll = !this.showAll;\r\n\t}\r\n\r\n\tasync #showDetail(e: uSyncShowDetailEvent) {\r\n\t\tconsole.debug('Showing detail for action:', e.action);\r\n\t\tif (e.action.change == ChangeType.EXPORT) return;\r\n\r\n\t\tconst detailsModal = this.#modalContext?.open(this, USYNC_DETAILS_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\titem: e.action,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst data = await detailsModal?.onSubmit().catch(() => {\r\n\t\t\treturn;\r\n\t\t});\r\n\t\tif (!data) return;\r\n\t}\r\n\r\n\tgroupBy<T>(arr: T[], fn: (item: T) => any) {\r\n\t\treturn arr.reduce<Record<string, T[]>>((prev, curr) => {\r\n\t\t\tconst groupKey = fn(curr);\r\n\t\t\tconst group = prev[groupKey] || [];\r\n\t\t\tgroup.push(curr);\r\n\t\t\treturn { ...prev, [groupKey]: group };\r\n\t\t}, {});\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.changeCount =\r\n\t\t\tthis.results?.filter((r) => r.change !== ChangeType.NO_CHANGE).length ?? 0;\r\n\r\n\t\tconst groups = this.groupBy(this.results || [], (result) => result.itemType);\r\n\t\tconst groupsHtml = [];\r\n\r\n\t\tfor (const key in groups) {\r\n\t\t\tconst groupChanges =\r\n\t\t\t\tgroups[key].filter((r) => r.change !== ChangeType.NO_CHANGE).length ?? 0;\r\n\t\t\tif (groupChanges === 0 && !this.showAll) continue;\r\n\r\n\t\t\tconst groupHtml = html`<usync-result-group\r\n\t\t\t\t.groupName=${key}\r\n\t\t\t\t.results=${groups[key]}\r\n\t\t\t\t.showAll=${this.showAll}\r\n\t\t\t\t@show-detail=${this.#showDetail}></usync-result-group> `;\r\n\r\n\t\t\tgroupsHtml.push(groupHtml);\r\n\t\t}\r\n\r\n\t\treturn this.changeCount == 0 && !this.showAll\r\n\t\t\t? html`\r\n\t\t\t\t\t${this.renderResultBar(this.results?.length || 0, this.changeCount)}\r\n\t\t\t\t\t<div class=\"empty\">\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_noChange\"></umb-localize>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`\r\n\t\t\t: html`<div id=\"result-box\">\r\n\t\t\t\t\t${this.renderResultBar(this.results?.length || 0, this.changeCount)}\r\n\t\t\t\t\t${groupsHtml}\r\n\t\t\t\t</div>`;\r\n\t}\r\n\r\n\trenderResultBar(count: number, changes: number) {\r\n\t\tconst localKey = changes === 0 ? 'uSync_noChangeCount' : 'uSync_changeCount';\r\n\r\n\t\treturn html`<div class=\"result-header\">\r\n\t\t\t<uui-toggle\r\n\t\t\t\t.label=${this.localize.term('uSync_showAll')}\r\n\t\t\t\t?checked=${this.showAll}\r\n\t\t\t\t@change=${this.#toggleShowAll}></uui-toggle>\r\n\t\t\t<umb-localize .key=${localKey} .args=${[count, changes]}\r\n\t\t\t\t>${changes}/${count} items</umb-localize\r\n\t\t\t>\r\n\t\t</div>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin: var(--uui-size-space-4) 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tgap: var(--uui-size-space-4);\r\n\t\t}\r\n\r\n\t\t#result-box {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tgap: var(--uui-size-space-4);\r\n\t\t}\r\n\r\n\t\tuui-table {\r\n\t\t\tposition: relative;\r\n\t\t\tz-index: 100;\r\n\t\t}\r\n\r\n\t\t.result-header {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tpadding: var(--uui-size-space-4);\r\n\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\tpadding: var(--uui-size-space-4);\r\n\t\t}\r\n\r\n\t\t.result-header h3 {\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\r\n\t\t.empty {\r\n\t\t\tpadding: var(--uui-size-20);\r\n\t\t\tfont-size: var(--uui-type-h5-size);\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-weight: 900;\r\n\t\t}\r\n\r\n\t\t.error {\r\n\t\t\tbackground-color: #fce4ec;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncResultsView;\r\n","import { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport {\r\n\tLitElement,\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tproperty,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { ChangeType, USyncActionView } from '@jumoo/uSync';\r\nimport { diffWords } from '@umbraco-cms/backoffice/utils';\r\n\r\n/**\r\n * shows the change details for an item.\r\n */\r\n@customElement('usync-change-view')\r\nexport class uSyncChangeView extends UmbElementMixin(LitElement) {\r\n\t@property({ type: Object })\r\n\titem?: USyncActionView;\r\n\r\n\trender() {\r\n\t\tif (this.item?.change == ChangeType.CREATE) {\r\n\t\t\treturn this.render_create();\r\n\t\t}\r\n\r\n\t\tif (this.item?.details.length ?? 0 > 0) {\r\n\t\t\treturn this.renderChangeTable();\r\n\t\t} else {\r\n\t\t\treturn this.renderNoChanges();\r\n\t\t}\r\n\t}\r\n\r\n\trenderChangeTable() {\r\n\t\treturn html`\r\n\t\t\t<uui-table>\r\n\t\t\t\t<uui-table-head>\r\n\t\t\t\t\t<uui-table-head-cell>\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_changeAction\">Action</umb-localize>\r\n\t\t\t\t\t</uui-table-head-cell>\r\n\t\t\t\t\t<uui-table-head-cell>\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_changeItem\">Item</umb-localize>\r\n\t\t\t\t\t</uui-table-head-cell>\r\n\t\t\t\t\t<uui-table-head-cell>\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_changeDiffrence\">Difference</umb-localize>\r\n\t\t\t\t\t</uui-table-head-cell>\r\n\t\t\t\t</uui-table-head>\r\n\t\t\t\t${this.render_details()}\r\n\t\t\t</uui-table>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderNoChanges() {\r\n\t\treturn html`\r\n\t\t\t<div class=\"change-box\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\t<umb-localize key=\"uSync_noChanges${this.item?.change}\"\r\n\t\t\t\t\t\t>No changes</umb-localize\r\n\t\t\t\t\t>\r\n\t\t\t\t</h3>\r\n\t\t\t\t${when(\r\n\t\t\t\t\tthis.item?.change == ChangeType.IMPORT,\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t\thtml`<div>\r\n\t\t\t\t\t\t\t${(this.item?.message ?? '').length > 0\r\n\t\t\t\t\t\t\t\t? this.item?.message\r\n\t\t\t\t\t\t\t\t: 'Item was imported but no properties were changed '}\r\n\t\t\t\t\t\t</div>`,\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\trender_create() {\r\n\t\treturn html`\r\n\t\t\t<h1>\r\n\t\t\t\t<umb-localize key=\"uSync_changeCreate\">This item is being created</umb-localize>\r\n\t\t\t</h1>\r\n\t\t`;\r\n\t}\r\n\r\n\t#getJsonOrString(value: string | null | undefined) {\r\n\t\ttry {\r\n\t\t\treturn JSON.stringify(JSON.parse(value ?? ''), null, 1);\r\n\t\t} catch {\r\n\t\t\treturn value ?? '';\r\n\t\t}\r\n\t}\r\n\r\n\trender_details() {\r\n\t\tvar changesHtml = this.item?.details.map((detail) => {\r\n\t\t\tconst oldValue = this.#getJsonOrString(detail.oldValue);\r\n\t\t\tconst newValue = this.#getJsonOrString(detail.newValue);\r\n\t\t\tconst changes = diffWords(oldValue, newValue);\r\n\r\n\t\t\tconst changeHtml = changes.map((change: any) => {\r\n\t\t\t\tif (change.added) {\r\n\t\t\t\t\treturn html`<ins>${change.value}</ins>`;\r\n\t\t\t\t} else if (change.removed) {\r\n\t\t\t\t\treturn html`<del>${change.value}</del>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn html`<span>${change.value}</span>`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn html`\r\n\t\t\t\t<uui-table-row>\r\n\t\t\t\t\t<uui-table-cell>${detail.name}</uui-table-cell>\r\n\t\t\t\t\t<uui-table-cell>${detail.change}</uui-table-cell>\r\n\t\t\t\t\t<uui-table-cell class=\"detail-data\">\r\n\t\t\t\t\t\t<pre>${changeHtml}</pre>\r\n\t\t\t\t\t</uui-table-cell>\r\n\t\t\t\t</uui-table-row>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn changesHtml;\r\n\t}\r\n\r\n\trender_changes() {}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin: var(--uui-size-space-4) 0;\r\n\t\t}\r\n\r\n\t\t.change-box {\r\n\t\t\tpadding: var(\r\n\t\t\t\t--uui-box-header-padding,\r\n\t\t\t\tvar(--uui-size-space-4, 12px) var(--uui-size-space-5, 18px)\r\n\t\t\t);\r\n\t\t}\r\n\t\t.change-box h3 {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\r\n\t\tuui-table-cell {\r\n\t\t\tvertical-align: top;\r\n\t\t}\r\n\r\n\t\tuui-table-cell pre {\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\r\n\t\tpre ins {\r\n\t\t\tcolor: var(--uui-color-positive);\r\n\t\t}\r\n\r\n\t\tpre del {\r\n\t\t\tcolor: var(--uui-color-danger);\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncChangeView;\r\n","// This file is auto-generated by @hey-api/openapi-ts\r\n\r\nexport enum ChangeDetailType {\r\n    NO_CHANGE = 'NoChange',\r\n    CREATE = 'Create',\r\n    UPDATE = 'Update',\r\n    DELETE = 'Delete',\r\n    ERROR = 'Error',\r\n    WARNING = 'Warning'\r\n}\r\n\r\nexport enum ChangeType {\r\n    NO_CHANGE = 'NoChange',\r\n    CREATE = 'Create',\r\n    IMPORT = 'Import',\r\n    EXPORT = 'Export',\r\n    UPDATE = 'Update',\r\n    DELETE = 'Delete',\r\n    WILL_CHANGE = 'WillChange',\r\n    INFORMATION = 'Information',\r\n    ROLLEDBACK = 'Rolledback',\r\n    FAIL = 'Fail',\r\n    IMPORT_FAIL = 'ImportFail',\r\n    MISMATCH = 'Mismatch',\r\n    PARENT_MISSING = 'ParentMissing',\r\n    HIDDEN = 'Hidden',\r\n    CLEAN = 'Clean',\r\n    REMOVED = 'Removed'\r\n}\r\n\r\nexport enum EventMessageTypeModel {\r\n    DEFAULT = 'Default',\r\n    INFO = 'Info',\r\n    ERROR = 'Error',\r\n    SUCCESS = 'Success',\r\n    WARNING = 'Warning'\r\n}\r\n\r\nexport type HandlerSettings = {\r\n    enabled: boolean;\r\n    actions: Array<string>;\r\n    useFlatStructure: boolean;\r\n    guidNames: boolean;\r\n    failOnMissingParent: boolean;\r\n    group: string;\r\n    createClean: boolean;\r\n    fullFileOnDifference: boolean;\r\n    settings: {\r\n        [key: string]: unknown;\r\n    };\r\n};\r\n\r\nexport enum HandlerStatus {\r\n    PENDING = 'Pending',\r\n    PROCESSING = 'Processing',\r\n    COMPLETE = 'Complete',\r\n    ERROR = 'Error'\r\n}\r\n\r\nexport type NotificationHeaderModel = {\r\n    message: string;\r\n    category: string;\r\n    type: EventMessageTypeModel;\r\n};\r\n\r\nexport type PerformActionRequest = {\r\n    requestId: string;\r\n    action: string;\r\n    stepNumber: number;\r\n    options?: USyncOptions | null;\r\n    username?: string | null;\r\n};\r\n\r\nexport type PerformActionResponse = {\r\n    requestId: string;\r\n    status?: Array<SyncHandlerSummary> | null;\r\n    actions?: Array<USyncActionView> | null;\r\n    complete: boolean;\r\n};\r\n\r\nexport type SyncActionButton = {\r\n    key: string;\r\n    label: string;\r\n    look: string;\r\n    color: string;\r\n    force: boolean;\r\n    clean: boolean;\r\n    file: boolean;\r\n    children: Array<SyncActionButton>;\r\n};\r\n\r\nexport type SyncActionGroup = {\r\n    key: string;\r\n    icon: string;\r\n    groupName: string;\r\n    buttons: Array<SyncActionButton>;\r\n};\r\n\r\nexport type SyncHandlerSummary = {\r\n    icon: string;\r\n    name: string;\r\n    status: HandlerStatus;\r\n    changes: number;\r\n    inError: boolean;\r\n};\r\n\r\nexport type SyncLegacyCheckResponse = {\r\n    hasLegacy: boolean;\r\n    legacyFolder?: string | null;\r\n    legacyTypes: Array<string>;\r\n    latestFolder: string;\r\n    latestVersion: string;\r\n};\r\n\r\nexport type SyncSelectableSet = {\r\n    name: string;\r\n    settings: USyncHandlerSetSettings;\r\n};\r\n\r\nexport type UploadImportResult = {\r\n    success: boolean;\r\n    errors: Array<string>;\r\n};\r\n\r\nexport type USyncActionView = {\r\n    key: string;\r\n    name: string;\r\n    handler: string;\r\n    itemType: string;\r\n    change: ChangeType;\r\n    success: boolean;\r\n    details: Array<USyncChange>;\r\n    message?: string | null;\r\n};\r\n\r\nexport type USyncAddonInfo = {\r\n    version: string;\r\n};\r\n\r\nexport type USyncAddonSplash = {\r\n    [key: string]: never;\r\n};\r\n\r\nexport type USyncChange = {\r\n    success: boolean;\r\n    name: string;\r\n    path: string;\r\n    oldValue: string;\r\n    newValue: string;\r\n    change: ChangeDetailType;\r\n};\r\n\r\nexport type USyncHandlerSetSettings = {\r\n    enabled: boolean;\r\n    handlerGroups: Array<string>;\r\n    disabledHandlers: Array<string>;\r\n    handlerDefaults: HandlerSettings;\r\n    handlers: {\r\n        [key: string]: HandlerSettings;\r\n    };\r\n    isSelectable: boolean;\r\n};\r\n\r\nexport type USyncOptions = {\r\n    clientId: string;\r\n    force: boolean;\r\n    clean: boolean;\r\n    files: boolean;\r\n    group: string;\r\n    set: string;\r\n};\r\n\r\nexport type USyncSettings = {\r\n    rootFolder: string;\r\n    folders: Array<string>;\r\n    legacyFolder: string;\r\n    isRootSite: boolean;\r\n    lockRoot: boolean;\r\n    stopFile: string;\r\n    onceFile: string;\r\n    lockRootTypes: Array<string>;\r\n    defaultSet: string;\r\n    importAtStartup: string;\r\n    exportAtStartup: string;\r\n    exportOnSave: string;\r\n    uiEnabledGroups: string;\r\n    reportDebug: boolean;\r\n    addOnPing: boolean;\r\n    rebuildCacheOnCompletion: boolean;\r\n    failOnMissingParent: boolean;\r\n    failOnDuplicates: boolean;\r\n    cacheFolderKeys: boolean;\r\n    showVersionCheckWarning: boolean;\r\n    customMappings: {\r\n        [key: string]: string;\r\n    };\r\n    enableHistory: boolean;\r\n    defaultExtension: string;\r\n    importOnFirstBoot: boolean;\r\n    firstBootGroup: string;\r\n    disableDashboard: boolean;\r\n    summaryDashboard: boolean;\r\n    summaryLimit: number;\r\n    hideAddOns: string;\r\n    disableNotificationSuppression: boolean;\r\n    backgroundNotifications: boolean;\r\n};\r\n\r\nexport type GetActionsData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/Actions';\r\n};\r\n\r\nexport type GetActionsResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: Array<SyncActionGroup>;\r\n};\r\n\r\nexport type GetActionsResponse = GetActionsResponses[keyof GetActionsResponses];\r\n\r\nexport type GetActionsBySetData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: {\r\n        setName?: string;\r\n    };\r\n    url: '/umbraco/usync/api/v1/ActionsBySet';\r\n};\r\n\r\nexport type GetActionsBySetResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: Array<SyncActionGroup>;\r\n};\r\n\r\nexport type GetActionsBySetResponse = GetActionsBySetResponses[keyof GetActionsBySetResponses];\r\n\r\nexport type DownloadData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: {\r\n        requestId?: string;\r\n    };\r\n    url: '/umbraco/usync/api/v1/Download';\r\n};\r\n\r\nexport type DownloadResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: Blob | File;\r\n};\r\n\r\nexport type DownloadResponse = DownloadResponses[keyof DownloadResponses];\r\n\r\nexport type PerformActionData = {\r\n    body?: PerformActionRequest;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/Perform';\r\n};\r\n\r\nexport type PerformActionResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: PerformActionResponse;\r\n};\r\n\r\nexport type PerformActionResponse2 = PerformActionResponses[keyof PerformActionResponses];\r\n\r\nexport type ProcessUploadData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: {\r\n        tempKey?: string;\r\n    };\r\n    url: '/umbraco/usync/api/v1/ProcessUpload';\r\n};\r\n\r\nexport type ProcessUploadResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: UploadImportResult;\r\n};\r\n\r\nexport type ProcessUploadResponse = ProcessUploadResponses[keyof ProcessUploadResponses];\r\n\r\nexport type CheckLegacyData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/CheckLegacy';\r\n};\r\n\r\nexport type CheckLegacyResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: SyncLegacyCheckResponse;\r\n};\r\n\r\nexport type CheckLegacyResponse = CheckLegacyResponses[keyof CheckLegacyResponses];\r\n\r\nexport type CopyLegacyData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/CopyLegacy';\r\n};\r\n\r\nexport type CopyLegacyResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: boolean;\r\n};\r\n\r\nexport type CopyLegacyResponse = CopyLegacyResponses[keyof CopyLegacyResponses];\r\n\r\nexport type IgnoreLegacyData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/IgnoreLegacy';\r\n};\r\n\r\nexport type IgnoreLegacyResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: boolean;\r\n};\r\n\r\nexport type IgnoreLegacyResponse = IgnoreLegacyResponses[keyof IgnoreLegacyResponses];\r\n\r\nexport type GetAddOnsData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/AddOns';\r\n};\r\n\r\nexport type GetAddOnsResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: USyncAddonInfo;\r\n};\r\n\r\nexport type GetAddOnsResponse = GetAddOnsResponses[keyof GetAddOnsResponses];\r\n\r\nexport type GetAddonSplashData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/AddOnSplash';\r\n};\r\n\r\nexport type GetAddonSplashResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: USyncAddonSplash;\r\n};\r\n\r\nexport type GetAddonSplashResponse = GetAddonSplashResponses[keyof GetAddonSplashResponses];\r\n\r\nexport type GetHandlerSetSettingsData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: {\r\n        id?: string;\r\n    };\r\n    url: '/umbraco/usync/api/v1/HandlerSettings';\r\n};\r\n\r\nexport type GetHandlerSetSettingsResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: USyncHandlerSetSettings;\r\n};\r\n\r\nexport type GetHandlerSetSettingsResponse = GetHandlerSetSettingsResponses[keyof GetHandlerSetSettingsResponses];\r\n\r\nexport type GetSetsData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/Sets';\r\n};\r\n\r\nexport type GetSetsResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: Array<SyncSelectableSet>;\r\n};\r\n\r\nexport type GetSetsResponse = GetSetsResponses[keyof GetSetsResponses];\r\n\r\nexport type GetSettingsData = {\r\n    body?: never;\r\n    path?: never;\r\n    query?: never;\r\n    url: '/umbraco/usync/api/v1/Settings';\r\n};\r\n\r\nexport type GetSettingsResponses = {\r\n    /**\r\n     * OK\r\n     */\r\n    200: USyncSettings;\r\n};\r\n\r\nexport type GetSettingsResponse = GetSettingsResponses[keyof GetSettingsResponses];\r\n\r\nexport type ClientOptions = {\r\n    baseUrl: 'http://localhost:33331' | (string & {});\r\n};","var A=async(t,r)=>{let e=typeof r==\"function\"?await r(t):r;if(e)return t.scheme===\"bearer\"?`Bearer ${e}`:t.scheme===\"basic\"?`Basic ${btoa(e)}`:e},z=(t,r,e)=>{typeof e==\"string\"||e instanceof Blob?t.append(r,e):t.append(r,JSON.stringify(e));},j=(t,r,e)=>{typeof e==\"string\"?t.append(r,e):t.append(r,JSON.stringify(e));},v={bodySerializer:t=>{let r=new FormData;return Object.entries(t).forEach(([e,a])=>{a!=null&&(Array.isArray(a)?a.forEach(i=>z(r,e,i)):z(r,e,a));}),r}},R={bodySerializer:t=>JSON.stringify(t,(r,e)=>typeof e==\"bigint\"?e.toString():e)},$={bodySerializer:t=>{let r=new URLSearchParams;return Object.entries(t).forEach(([e,a])=>{a!=null&&(Array.isArray(a)?a.forEach(i=>j(r,e,i)):j(r,e,a));}),r.toString()}},U=t=>{switch(t){case \"label\":return \".\";case \"matrix\":return \";\";case \"simple\":return \",\";default:return \"&\"}},_=t=>{switch(t){case \"form\":return \",\";case \"pipeDelimited\":return \"|\";case \"spaceDelimited\":return \"%20\";default:return \",\"}},D=t=>{switch(t){case \"label\":return \".\";case \"matrix\":return \";\";case \"simple\":return \",\";default:return \"&\"}},O=({allowReserved:t,explode:r,name:e,style:a,value:i})=>{if(!r){let s=(t?i:i.map(l=>encodeURIComponent(l))).join(_(a));switch(a){case \"label\":return `.${s}`;case \"matrix\":return `;${e}=${s}`;case \"simple\":return s;default:return `${e}=${s}`}}let o=U(a),n=i.map(s=>a===\"label\"||a===\"simple\"?t?s:encodeURIComponent(s):y({allowReserved:t,name:e,value:s})).join(o);return a===\"label\"||a===\"matrix\"?o+n:n},y=({allowReserved:t,name:r,value:e})=>{if(e==null)return \"\";if(typeof e==\"object\")throw new Error(\"Deeply-nested arrays/objects aren\\u2019t supported. Provide your own `querySerializer()` to handle these.\");return `${r}=${t?e:encodeURIComponent(e)}`},q=({allowReserved:t,explode:r,name:e,style:a,value:i})=>{if(i instanceof Date)return `${e}=${i.toISOString()}`;if(a!==\"deepObject\"&&!r){let s=[];Object.entries(i).forEach(([f,u])=>{s=[...s,f,t?u:encodeURIComponent(u)];});let l=s.join(\",\");switch(a){case \"form\":return `${e}=${l}`;case \"label\":return `.${l}`;case \"matrix\":return `;${e}=${l}`;default:return l}}let o=D(a),n=Object.entries(i).map(([s,l])=>y({allowReserved:t,name:a===\"deepObject\"?`${e}[${s}]`:s,value:l})).join(o);return a===\"label\"||a===\"matrix\"?o+n:n};var H=/\\{[^{}]+\\}/g,B=({path:t,url:r})=>{let e=r,a=r.match(H);if(a)for(let i of a){let o=false,n=i.substring(1,i.length-1),s=\"simple\";n.endsWith(\"*\")&&(o=true,n=n.substring(0,n.length-1)),n.startsWith(\".\")?(n=n.substring(1),s=\"label\"):n.startsWith(\";\")&&(n=n.substring(1),s=\"matrix\");let l=t[n];if(l==null)continue;if(Array.isArray(l)){e=e.replace(i,O({explode:o,name:n,style:s,value:l}));continue}if(typeof l==\"object\"){e=e.replace(i,q({explode:o,name:n,style:s,value:l}));continue}if(s===\"matrix\"){e=e.replace(i,`;${y({name:n,value:l})}`);continue}let f=encodeURIComponent(s===\"label\"?`.${l}`:l);e=e.replace(i,f);}return e},E=({allowReserved:t,array:r,object:e}={})=>i=>{let o=[];if(i&&typeof i==\"object\")for(let n in i){let s=i[n];if(s!=null){if(Array.isArray(s)){o=[...o,O({allowReserved:t,explode:true,name:n,style:\"form\",value:s,...r})];continue}if(typeof s==\"object\"){o=[...o,q({allowReserved:t,explode:true,name:n,style:\"deepObject\",value:s,...e})];continue}o=[...o,y({allowReserved:t,name:n,value:s})];}}return o.join(\"&\")},P=t=>{if(!t)return \"stream\";let r=t.split(\";\")[0]?.trim();if(r){if(r.startsWith(\"application/json\")||r.endsWith(\"+json\"))return \"json\";if(r===\"multipart/form-data\")return \"formData\";if([\"application/\",\"audio/\",\"image/\",\"video/\"].some(e=>r.startsWith(e)))return \"blob\";if(r.startsWith(\"text/\"))return \"text\"}},I=async({security:t,...r})=>{for(let e of t){let a=await A(e,r.auth);if(!a)continue;let i=e.name??\"Authorization\";switch(e.in){case \"query\":r.query||(r.query={}),r.query[i]=a;break;case \"cookie\":r.headers.append(\"Cookie\",`${i}=${a}`);break;case \"header\":default:r.headers.set(i,a);break}return}},S=t=>W({baseUrl:t.baseUrl,path:t.path,query:t.query,querySerializer:typeof t.querySerializer==\"function\"?t.querySerializer:E(t.querySerializer),url:t.url}),W=({baseUrl:t,path:r,query:e,querySerializer:a,url:i})=>{let o=i.startsWith(\"/\")?i:`/${i}`,n=(t??\"\")+o;r&&(n=B({path:r,url:n}));let s=e?a(e):\"\";return s.startsWith(\"?\")&&(s=s.substring(1)),s&&(n+=`?${s}`),n},C=(t,r)=>{let e={...t,...r};return e.baseUrl?.endsWith(\"/\")&&(e.baseUrl=e.baseUrl.substring(0,e.baseUrl.length-1)),e.headers=x(t.headers,r.headers),e},x=(...t)=>{let r=new Headers;for(let e of t){if(!e||typeof e!=\"object\")continue;let a=e instanceof Headers?e.entries():Object.entries(e);for(let[i,o]of a)if(o===null)r.delete(i);else if(Array.isArray(o))for(let n of o)r.append(i,n);else o!==undefined&&r.set(i,typeof o==\"object\"?JSON.stringify(o):o);}return r},h=class{_fns;constructor(){this._fns=[];}clear(){this._fns=[];}exists(r){return this._fns.indexOf(r)!==-1}eject(r){let e=this._fns.indexOf(r);e!==-1&&(this._fns=[...this._fns.slice(0,e),...this._fns.slice(e+1)]);}use(r){this._fns=[...this._fns,r];}},T=()=>({error:new h,request:new h,response:new h}),N=E({allowReserved:false,array:{explode:true,style:\"form\"},object:{explode:true,style:\"deepObject\"}}),Q={\"Content-Type\":\"application/json\"},w=(t={})=>({...R,headers:Q,parseAs:\"auto\",querySerializer:N,...t});var J=(t={})=>{let r=C(w(),t),e=()=>({...r}),a=n=>(r=C(r,n),e()),i=T(),o=async n=>{let s={...r,...n,fetch:n.fetch??r.fetch??globalThis.fetch,headers:x(r.headers,n.headers)};s.security&&await I({...s,security:s.security}),s.body&&s.bodySerializer&&(s.body=s.bodySerializer(s.body)),(s.body===undefined||s.body===\"\")&&s.headers.delete(\"Content-Type\");let l=S(s),f={redirect:\"follow\",...s},u=new Request(l,f);for(let p of i.request._fns)u=await p(u,s);let k=s.fetch,c=await k(u);for(let p of i.response._fns)c=await p(c,u,s);let m={request:u,response:c};if(c.ok){if(c.status===204||c.headers.get(\"Content-Length\")===\"0\")return {data:{},...m};let p=(s.parseAs===\"auto\"?P(c.headers.get(\"Content-Type\")):s.parseAs)??\"json\";if(p===\"stream\")return {data:c.body,...m};let b=await c[p]();return p===\"json\"&&(s.responseValidator&&await s.responseValidator(b),s.responseTransformer&&(b=await s.responseTransformer(b))),{data:b,...m}}let g=await c.text();try{g=JSON.parse(g);}catch{}let d=g;for(let p of i.error._fns)d=await p(g,c,u,s);if(d=d||{},s.throwOnError)throw d;return {error:d,...m}};return {buildUrl:S,connect:n=>o({...n,method:\"CONNECT\"}),delete:n=>o({...n,method:\"DELETE\"}),get:n=>o({...n,method:\"GET\"}),getConfig:e,head:n=>o({...n,method:\"HEAD\"}),interceptors:i,options:n=>o({...n,method:\"OPTIONS\"}),patch:n=>o({...n,method:\"PATCH\"}),post:n=>o({...n,method:\"POST\"}),put:n=>o({...n,method:\"PUT\"}),request:o,setConfig:a,trace:n=>o({...n,method:\"TRACE\"})}};export{J as createClient,w as createConfig,v as formDataBodySerializer,R as jsonBodySerializer,$ as urlSearchParamsBodySerializer};//# sourceMappingURL=index.js.map\n//# sourceMappingURL=index.js.map","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { ClientOptions } from './types.gen';\nimport { type Config, type ClientOptions as DefaultClientOptions, createClient, createConfig } from '@hey-api/client-fetch';\n\n/**\n * The `createClientConfig()` function will be called on client initialization\n * and the returned object will become the client's initial configuration.\n *\n * You may want to initialize your client this way instead of calling\n * `setConfig()`. This is useful for example if you're using Next.js\n * to ensure your client always has the correct values.\n */\nexport type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> = (override?: Config<DefaultClientOptions & T>) => Config<Required<DefaultClientOptions> & T>;\n\nexport const client = createClient(createConfig<ClientOptions>({\n    baseUrl: 'http://localhost:33331',\n    throwOnError: true\n}));","// This file is auto-generated by @hey-api/openapi-ts\r\n\r\nimport type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';\r\nimport type { GetActionsData, GetActionsResponse, GetActionsBySetData, GetActionsBySetResponse, DownloadData, DownloadResponse, PerformActionData, PerformActionResponse2, ProcessUploadData, ProcessUploadResponse, CheckLegacyData, CheckLegacyResponse, CopyLegacyData, CopyLegacyResponse, IgnoreLegacyData, IgnoreLegacyResponse, GetAddOnsData, GetAddOnsResponse, GetAddonSplashData, GetAddonSplashResponse, GetHandlerSetSettingsData, GetHandlerSetSettingsResponse, GetSetsData, GetSetsResponse, GetSettingsData, GetSettingsResponse } from './types.gen';\r\nimport { client as _heyApiClient } from './client.gen';\r\n\r\nexport type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {\r\n    /**\r\n     * You can provide a client instance returned by `createClient()` instead of\r\n     * individual options. This might be also useful if you want to implement a\r\n     * custom client.\r\n     */\r\n    client?: Client;\r\n    /**\r\n     * You can pass arbitrary values through the `meta` object. This can be\r\n     * used to access values that aren't defined as part of the SDK function.\r\n     */\r\n    meta?: Record<string, unknown>;\r\n};\r\n\r\nexport class ActionsService {\r\n    /**\r\n     * @deprecated\r\n     */\r\n    public static getActions<ThrowOnError extends boolean = true>(options?: Options<GetActionsData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).get<GetActionsResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/Actions',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static getActionsBySet<ThrowOnError extends boolean = true>(options?: Options<GetActionsBySetData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).get<GetActionsBySetResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/ActionsBySet',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static download<ThrowOnError extends boolean = true>(options?: Options<DownloadData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).post<DownloadResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/Download',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static performAction<ThrowOnError extends boolean = true>(options?: Options<PerformActionData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).post<PerformActionResponse2, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/Perform',\r\n            ...options,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                ...options?.headers\r\n            }\r\n        });\r\n    }\r\n    \r\n    public static processUpload<ThrowOnError extends boolean = true>(options?: Options<ProcessUploadData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).post<ProcessUploadResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/ProcessUpload',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport class MigrationsService {\r\n    public static checkLegacy<ThrowOnError extends boolean = true>(options?: Options<CheckLegacyData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).get<CheckLegacyResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/CheckLegacy',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static copyLegacy<ThrowOnError extends boolean = true>(options?: Options<CopyLegacyData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).post<CopyLegacyResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/CopyLegacy',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static ignoreLegacy<ThrowOnError extends boolean = true>(options?: Options<IgnoreLegacyData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).post<IgnoreLegacyResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/IgnoreLegacy',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport class SettingsService {\r\n    public static getAddOns<ThrowOnError extends boolean = true>(options?: Options<GetAddOnsData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).get<GetAddOnsResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/AddOns',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static getAddonSplash<ThrowOnError extends boolean = true>(options?: Options<GetAddonSplashData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).get<GetAddonSplashResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/AddOnSplash',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static getHandlerSetSettings<ThrowOnError extends boolean = true>(options?: Options<GetHandlerSetSettingsData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).get<GetHandlerSetSettingsResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/HandlerSettings',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static getSets<ThrowOnError extends boolean = true>(options?: Options<GetSetsData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).get<GetSetsResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/Sets',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n    public static getSettings<ThrowOnError extends boolean = true>(options?: Options<GetSettingsData, ThrowOnError>) {\r\n        return (options?.client ?? _heyApiClient).get<GetSettingsResponse, unknown, ThrowOnError>({\r\n            url: '/umbraco/usync/api/v1/Settings',\r\n            ...options\r\n        });\r\n    }\r\n    \r\n}","import { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { css, customElement, html } from '@umbraco-cms/backoffice/external/lit';\r\nimport { uSyncDetailsModalData, uSyncDetailsModalValue } from '@jumoo/uSync';\r\n\r\n@customElement('usync-details-modal')\r\nexport class uSyncDetailsModalElement extends UmbModalBaseElement<\r\n\tuSyncDetailsModalData,\r\n\tuSyncDetailsModalValue\r\n> {\r\n\t#onClose() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=\"Changes : ${this.data?.item.name ?? ''}\">\r\n\t\t\t\t<uui-box style=\"--uui-box-default-padding: 0;\">\r\n\t\t\t\t\t<div slot=\"header\" id=\"header\">\r\n\t\t\t\t\t\t<h3><umb-localize key=\"uSync_detailHeadline\"></umb-localize></h3>\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_detailHeader\"></umb-localize>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</uui-box>\r\n\t\t\t\t<uui-box style=\"--uui-box-default-padding: 0;\">\r\n\t\t\t\t\t<usync-change-view .item=${this.data?.item}></usync-change-view>\r\n\t\t\t\t</uui-box>\r\n\t\t\t\t<div slot=\"actions\">\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tid=\"cancel\"\r\n\t\t\t\t\t\t.label=${this.localize.term('general_close')}\r\n\t\t\t\t\t\t@click=\"${this.#onClose}\"></uui-button>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t#header h3 {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncDetailsModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-details-modal': uSyncDetailsModalElement;\r\n\t}\r\n}\r\n","import { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\nimport { USyncActionView } from '@jumoo/uSync';\r\n\r\nexport interface uSyncDetailsModalData {\r\n\titem: USyncActionView;\r\n}\r\n\r\nexport interface uSyncDetailsModalValue {\r\n\tresult: boolean;\r\n}\r\n\r\nexport const USYNC_DETAILS_MODAL = new UmbModalToken<\r\n\tuSyncDetailsModalData,\r\n\tuSyncDetailsModalValue\r\n>('usync.details.modal', {\r\n\tmodal: {\r\n\t\ttype: 'sidebar',\r\n\t\tsize: 'large',\r\n\t},\r\n});\r\n","import { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { uSyncErrorModalData, uSyncErrorModalValue } from './error-modal-token';\r\nimport { css, customElement, html } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n@customElement('usync-error-modal')\r\nexport default class uSyncErrorModalElement extends UmbModalBaseElement<\r\n\tuSyncErrorModalData,\r\n\tuSyncErrorModalValue\r\n> {\r\n\t#onClose() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst headline = `Error: ${this.data?.action.name ?? ''} [${this.data?.action.itemType}]`;\r\n\r\n\t\treturn html`<umb-body-layout .headline=${headline}>\r\n\t\t\t<strong>\r\n\t\t\t\t<umb-localize key=\"uSync_errorHeader\"></umb-localize>\r\n\t\t\t</strong>\r\n\t\t\t<div class=\"error\">${this.data?.action.message}</div>\r\n\t\t\t<div slot=\"actions\">\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tid=\"cancel\"\r\n\t\t\t\t\t.label=${this.localize.term('general_close')}\r\n\t\t\t\t\t@click=\"${this.#onClose}\"></uui-button>\r\n\t\t\t</div>\r\n\t\t</umb-body-layout>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\tumb-body-layout {\r\n\t\t\tmax-width: 450px;\r\n\t\t}\r\n\r\n\t\t.error {\r\n\t\t\tpadding: 10px;\r\n\t\t\tfont-family: monospace;\r\n\t\t\tcolor: red;\r\n\t\t}\r\n\t`;\r\n}\r\n","import { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\nimport { USyncActionView } from '../api';\r\n\r\nexport interface uSyncErrorModalData {\r\n\taction: USyncActionView;\r\n}\r\n\r\nexport interface uSyncErrorModalValue {\r\n\tresult: boolean;\r\n}\r\n\r\nexport const USYNC_ERROR_MODAL = new UmbModalToken<\r\n\tuSyncErrorModalData,\r\n\tuSyncErrorModalValue\r\n>('usync.error.modal', {\r\n\tmodal: {\r\n\t\ttype: 'dialog',\r\n\t},\r\n});\r\n","import { USyncActionView } from '../api';\r\n\r\nexport const USYNC_SHOW_DETAIL_EVENT = 'show-detail';\r\n\r\nexport class uSyncShowDetailEvent extends Event {\r\n\tpublic constructor(action: USyncActionView) {\r\n\t\tsuper(USYNC_SHOW_DETAIL_EVENT, {\r\n\t\t\tbubbles: true,\r\n\t\t\tcomposed: true,\r\n\t\t\tcancelable: false,\r\n\t\t});\r\n\r\n\t\tthis.action = action;\r\n\t}\r\n\r\n\taction: USyncActionView;\r\n}\r\n\r\ndeclare global {\r\n\tinterface GlobalEventHandlersEventMap {\r\n\t\t[USYNC_SHOW_DETAIL_EVENT]: uSyncShowDetailEvent;\r\n\t}\r\n}\r\n","import {\r\n\tclassMap,\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tproperty,\r\n\tstate,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { ChangeType, USyncActionView } from '../api';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { USYNC_ERROR_MODAL } from '../dialogs';\r\nimport { uSyncShowDetailEvent } from './events';\r\n\r\n@customElement('usync-result-group')\r\nexport class uSyncResultGroupView extends UmbLitElement {\r\n\t@state()\r\n\texpanded: boolean = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tshowAll: boolean = false;\r\n\r\n\t@property({ type: Array })\r\n\tresults: Array<USyncActionView> = [];\r\n\r\n\t@property({ type: String })\r\n\tgroupName: string = '';\r\n\r\n\tasync #showDetail(action: USyncActionView) {\r\n\t\tif (action.change == ChangeType.NO_CHANGE || action.change == ChangeType.EXPORT)\r\n\t\t\treturn;\r\n\r\n\t\tthis.dispatchEvent(new uSyncShowDetailEvent(action));\r\n\t}\r\n\r\n\tgetChangeCount() {\r\n\t\treturn this.results?.filter((r) => r.change !== ChangeType.NO_CHANGE).length;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst changeCount = this.getChangeCount() ?? 0;\r\n\r\n\t\tif (changeCount === 0 && !this.showAll) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-box\r\n\t\t\t\tclass=${classMap({\r\n\t\t\t\t\thas_changes: changeCount > 0,\r\n\t\t\t\t})}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"summary ${when(this.expanded, () => 'expanded')}\"\r\n\t\t\t\t\t@click=${() => (this.expanded = !this.expanded)}>\r\n\t\t\t\t\t<h4>${this.localize.term('uSync_' + this.groupName)}</h4>\r\n\t\t\t\t\t<div class=\"summary-right\">\r\n\t\t\t\t\t\t<h4 class=\"count\">${changeCount}/${this.results?.length}</h4>\r\n\t\t\t\t\t\t<uui-icon\r\n\t\t\t\t\t\t\tname=\"icon-play\"\r\n\t\t\t\t\t\t\tclass=${classMap({ expanded: this.expanded })}></uui-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<uui-table>\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\tthis.expanded == true,\r\n\t\t\t\t\t\t() => html`${this.renderGroupedRows(this.results)}`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</uui-table>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderGroupedRows(results?: USyncActionView[]) {\r\n\t\tconst rowsHtml = results?.map((result) => {\r\n\t\t\tif (!this.showAll && result.change == ChangeType.NO_CHANGE) return nothing;\r\n\r\n\t\t\tconst icon =\r\n\t\t\t\tresult.change == ChangeType.NO_CHANGE\r\n\t\t\t\t\t? 'icon-trafic'\r\n\t\t\t\t\t: result.success\r\n\t\t\t\t\t\t? 'icon-check color-green'\r\n\t\t\t\t\t\t: 'icon-wrong color-red';\r\n\r\n\t\t\tconst isChange =\r\n\t\t\t\tresult.change != ChangeType.NO_CHANGE && result.change != ChangeType.EXPORT;\r\n\r\n\t\t\tconst changeCount = result.details.length;\r\n\r\n\t\t\treturn html`\r\n\t\t\t\t<uui-table-row\r\n\t\t\t\t\tclass=${classMap({ changerow: isChange, no_change: changeCount == 0 })}>\r\n\t\t\t\t\t<uui-table-cell class=\"icon-cell\" .noPadding=${true}>\r\n\t\t\t\t\t\t<umb-icon .name=${icon}></umb-icon>\r\n\t\t\t\t\t</uui-table-cell>\r\n\t\t\t\t\t<uui-table-cell\r\n\t\t\t\t\t\t@click=${() => this.#showDetail(result)}\r\n\t\t\t\t\t\t.clipText=${true}\r\n\t\t\t\t\t\tstyle=\"--uui-table-cell-padding: var(--uui-size-space-2);\">\r\n\t\t\t\t\t\t<div class=\"item-name\">\r\n\t\t\t\t\t\t\t<div>${result.name}</div>\r\n\t\t\t\t\t\t\t<div>${this.renderMessage(result)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"item-detail\">\r\n\t\t\t\t\t\t\t<div>${result.itemType}</div>\r\n\t\t\t\t\t\t\t<div>${result.change}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</uui-table-cell>\r\n\t\t\t\t</uui-table-row>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn html`${rowsHtml}`;\r\n\t}\r\n\r\n\trenderMessage(result: USyncActionView) {\r\n\t\treturn (result.change != ChangeType.FAIL &&\r\n\t\t\tresult.change != ChangeType.IMPORT_FAIL) ||\r\n\t\t\t!result.message\r\n\t\t\t? html`<em>${result.message}</em>`\r\n\t\t\t: html` <uui-button\r\n\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\tlabel=\"View error\"\r\n\t\t\t\t\tcompact\r\n\t\t\t\t\t@click=${(e: Event) => this.#viewError(e, result)}></uui-button>`;\r\n\t}\r\n\r\n\tasync #viewError(e: Event, result: USyncActionView) {\r\n\t\te.stopPropagation();\r\n\t\tconst modalContext = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tconst modal = modalContext?.open(this, USYNC_ERROR_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\taction: result,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst data = await modal?.onSubmit().catch(() => {\r\n\t\t\treturn;\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\tuui-box {\r\n\t\t\tcursor: pointer;\r\n\t\t\t--uui-box-default-padding: 0;\r\n\t\t}\r\n\r\n\t\t.expanded {\r\n\t\t\tborder-bottom: 1px solid var(--uui-color-border);\r\n\t\t}\r\n\r\n\t\t.summary {\r\n\t\t\tdisplay: flex;\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0 20px;\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\r\n\t\t.summary-right {\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\tcolor: var(--uui-color-border-emphasis);\r\n\t\t}\r\n\r\n\t\t.summary-right uui-icon {\r\n\t\t\ttransform: rotate(90deg);\r\n\t\t\ttransition: transform 0.5s cubic-bezier(0.42, 0, 0.37, 1.62);\r\n\t\t}\r\n\r\n\t\t.summary-right uui-icon.expanded {\r\n\t\t\ttransform: rotate(-90deg);\r\n\t\t\tborder-bottom: none;\r\n\t\t}\r\n\r\n\t\t.has_changes .count {\r\n\t\t\tcolor: var(--uui-text);\r\n\t\t}\r\n\r\n\t\t.changerow {\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\r\n\t\t.icon-cell {\r\n\t\t\tpadding-left: 20px;\r\n\t\t\twidth: var(--uui-size-8);\r\n\t\t}\r\n\r\n\t\t.item-name {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tpadding-right: 20px;\r\n\t\t}\r\n\r\n\t\t.item-detail {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tfont-size: smaller;\r\n\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t\tpadding-right: 20px;\r\n\t\t}\r\n\r\n\t\tuui-table-row:first-child uui-table-cell {\r\n\t\t\tborder-top-color: transparent;\r\n\t\t}\r\n\r\n\t\tuui-table-row:hover {\r\n\t\t\tbackground-color: var(--uui-color-surface-emphasis);\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncResultGroupView;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-result-group': uSyncResultGroupView;\r\n\t}\r\n}\r\n","import { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbObjectState } from '@umbraco-cms/backoffice/observable-api';\r\nimport { USYNC_SIGNALR_CONTEXT_TOKEN, SyncUpdateMessage } from '@jumoo/uSync';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport * as signalR from '@jumoo/uSync/external/signalr';\r\n\r\nexport class uSyncSignalRContext extends UmbControllerBase {\r\n\t#connection?: signalR.HubConnection;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.provideContext(USYNC_SIGNALR_CONTEXT_TOKEN, this);\r\n\r\n\t\tthis.consumeContext(UMB_AUTH_CONTEXT, async (auth) => {\r\n\t\t\tif (!auth) return;\r\n\r\n\t\t\tconst authConfig = auth?.getOpenApiConfiguration();\r\n\t\t\tif (!authConfig) return;\r\n\t\t\tthis.#setupConnection('/umbraco/SyncHub', await auth.getLatestToken());\r\n\t\t});\r\n\t}\r\n\r\n\thostConnected(): void {\r\n\t\tsuper.hostConnected();\r\n\t}\r\n\r\n\thostDisconnected(): void {\r\n\t\tsuper.hostDisconnected();\r\n\t\tthis.#connection?.stop().then(() => {\r\n\t\t\tconsole.debug('connection stopped');\r\n\t\t});\r\n\t}\r\n\r\n\tgetClientId(): string | null {\r\n\t\treturn this.#connection?.connectionId ?? null;\r\n\t}\r\n\r\n\t#update = new UmbObjectState<SyncUpdateMessage | undefined>(undefined);\r\n\tpublic readonly update = this.#update.asObservable();\r\n\r\n\t#add = new UmbObjectState({});\r\n\tpublic readonly add = this.#add.asObservable();\r\n\r\n\t#setupConnection(url: string, token: string) {\r\n\t\tthis.#connection = new signalR.HubConnectionBuilder()\r\n\t\t\t.withUrl(url, { accessTokenFactory: () => token })\r\n\t\t\t.configureLogging(signalR.LogLevel.Warning)\r\n\t\t\t.build();\r\n\r\n\t\tthis.#connection.on('add', (data) => {\r\n\t\t\tthis.#add.setValue(data);\r\n\t\t});\r\n\r\n\t\tthis.#connection.on('update', (data) => {\r\n\t\t\tthis.#update.setValue(data);\r\n\t\t});\r\n\r\n\t\tthis.#connection.start().then(() => {\r\n\t\t\t// console.debug('connection started');\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default uSyncSignalRContext;\r\n","import { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\nimport { uSyncSignalRContext } from '@jumoo/uSync';\r\n\r\nexport const USYNC_SIGNALR_CONTEXT_TOKEN = new UmbContextToken<uSyncSignalRContext>(\r\n\t'uSyncSignalRContext',\r\n);\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"8.0.7\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n//# sourceMappingURL=Utils.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        // Node added a fetch implementation to the global scope starting in v18.\r\n        // We need to add a cookie jar in node to be able to share cookies with WebSocket\r\n        if (typeof fetch === \"undefined\" || Platform.isNode) {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            if (typeof fetch === \"undefined\") {\r\n                this._fetchType = requireFunc(\"node-fetch\");\r\n            }\r\n            else {\r\n                // Use fetch from Node if available\r\n                this._fetchType = fetch;\r\n            }\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XhrHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n    MessageType[MessageType[\"Ack\"] = 8] = \"Ack\";\r\n    MessageType[MessageType[\"Sequence\"] = 9] = \"Sequence\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class MessageBuffer {\r\n    constructor(protocol, connection, bufferSize) {\r\n        this._bufferSize = 100000;\r\n        this._messages = [];\r\n        this._totalMessageCount = 0;\r\n        this._waitForSequenceMessage = false;\r\n        // Message IDs start at 1 and always increment by 1\r\n        this._nextReceivingSequenceId = 1;\r\n        this._latestReceivedSequenceId = 0;\r\n        this._bufferedByteCount = 0;\r\n        this._reconnectInProgress = false;\r\n        this._protocol = protocol;\r\n        this._connection = connection;\r\n        this._bufferSize = bufferSize;\r\n    }\r\n    async _send(message) {\r\n        const serializedMessage = this._protocol.writeMessage(message);\r\n        let backpressurePromise = Promise.resolve();\r\n        // Only count invocation messages. Acks, pings, etc. don't need to be resent on reconnect\r\n        if (this._isInvocationMessage(message)) {\r\n            this._totalMessageCount++;\r\n            let backpressurePromiseResolver = () => { };\r\n            let backpressurePromiseRejector = () => { };\r\n            if (isArrayBuffer(serializedMessage)) {\r\n                this._bufferedByteCount += serializedMessage.byteLength;\r\n            }\r\n            else {\r\n                this._bufferedByteCount += serializedMessage.length;\r\n            }\r\n            if (this._bufferedByteCount >= this._bufferSize) {\r\n                backpressurePromise = new Promise((resolve, reject) => {\r\n                    backpressurePromiseResolver = resolve;\r\n                    backpressurePromiseRejector = reject;\r\n                });\r\n            }\r\n            this._messages.push(new BufferedItem(serializedMessage, this._totalMessageCount, backpressurePromiseResolver, backpressurePromiseRejector));\r\n        }\r\n        try {\r\n            // If this is set it means we are reconnecting or resending\r\n            // We don't want to send on a disconnected connection\r\n            // And we don't want to send if resend is running since that would mean sending\r\n            // this message twice\r\n            if (!this._reconnectInProgress) {\r\n                await this._connection.send(serializedMessage);\r\n            }\r\n        }\r\n        catch {\r\n            this._disconnected();\r\n        }\r\n        await backpressurePromise;\r\n    }\r\n    _ack(ackMessage) {\r\n        let newestAckedMessage = -1;\r\n        // Find index of newest message being acked\r\n        for (let index = 0; index < this._messages.length; index++) {\r\n            const element = this._messages[index];\r\n            if (element._id <= ackMessage.sequenceId) {\r\n                newestAckedMessage = index;\r\n                if (isArrayBuffer(element._message)) {\r\n                    this._bufferedByteCount -= element._message.byteLength;\r\n                }\r\n                else {\r\n                    this._bufferedByteCount -= element._message.length;\r\n                }\r\n                // resolve items that have already been sent and acked\r\n                element._resolver();\r\n            }\r\n            else if (this._bufferedByteCount < this._bufferSize) {\r\n                // resolve items that now fall under the buffer limit but haven't been acked\r\n                element._resolver();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (newestAckedMessage !== -1) {\r\n            // We're removing everything including the message pointed to, so add 1\r\n            this._messages = this._messages.slice(newestAckedMessage + 1);\r\n        }\r\n    }\r\n    _shouldProcessMessage(message) {\r\n        if (this._waitForSequenceMessage) {\r\n            if (message.type !== MessageType.Sequence) {\r\n                return false;\r\n            }\r\n            else {\r\n                this._waitForSequenceMessage = false;\r\n                return true;\r\n            }\r\n        }\r\n        // No special processing for acks, pings, etc.\r\n        if (!this._isInvocationMessage(message)) {\r\n            return true;\r\n        }\r\n        const currentId = this._nextReceivingSequenceId;\r\n        this._nextReceivingSequenceId++;\r\n        if (currentId <= this._latestReceivedSequenceId) {\r\n            if (currentId === this._latestReceivedSequenceId) {\r\n                // Should only hit this if we just reconnected and the server is sending\r\n                // Messages it has buffered, which would mean it hasn't seen an Ack for these messages\r\n                this._ackTimer();\r\n            }\r\n            // Ignore, this is a duplicate message\r\n            return false;\r\n        }\r\n        this._latestReceivedSequenceId = currentId;\r\n        // Only start the timer for sending an Ack message when we have a message to ack. This also conveniently solves\r\n        // timer throttling by not having a recursive timer, and by starting the timer via a network call (recv)\r\n        this._ackTimer();\r\n        return true;\r\n    }\r\n    _resetSequence(message) {\r\n        if (message.sequenceId > this._nextReceivingSequenceId) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._connection.stop(new Error(\"Sequence ID greater than amount of messages we've received.\"));\r\n            return;\r\n        }\r\n        this._nextReceivingSequenceId = message.sequenceId;\r\n    }\r\n    _disconnected() {\r\n        this._reconnectInProgress = true;\r\n        this._waitForSequenceMessage = true;\r\n    }\r\n    async _resend() {\r\n        const sequenceId = this._messages.length !== 0\r\n            ? this._messages[0]._id\r\n            : this._totalMessageCount + 1;\r\n        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Sequence, sequenceId }));\r\n        // Get a local variable to the _messages, just in case messages are acked while resending\r\n        // Which would slice the _messages array (which creates a new copy)\r\n        const messages = this._messages;\r\n        for (const element of messages) {\r\n            await this._connection.send(element._message);\r\n        }\r\n        this._reconnectInProgress = false;\r\n    }\r\n    _dispose(error) {\r\n        error !== null && error !== void 0 ? error : (error = new Error(\"Unable to reconnect to server.\"));\r\n        // Unblock backpressure if any\r\n        for (const element of this._messages) {\r\n            element._rejector(error);\r\n        }\r\n    }\r\n    _isInvocationMessage(message) {\r\n        // There is no way to check if something implements an interface.\r\n        // So we individually check the messages in a switch statement.\r\n        // To make sure we don't miss any message types we rely on the compiler\r\n        // seeing the function returns a value and it will do the\r\n        // exhaustive check for us on the switch statement, since we don't use 'case default'\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n            case MessageType.StreamItem:\r\n            case MessageType.Completion:\r\n            case MessageType.StreamInvocation:\r\n            case MessageType.CancelInvocation:\r\n                return true;\r\n            case MessageType.Close:\r\n            case MessageType.Sequence:\r\n            case MessageType.Ping:\r\n            case MessageType.Ack:\r\n                return false;\r\n        }\r\n    }\r\n    _ackTimer() {\r\n        if (this._ackTimerHandle === undefined) {\r\n            this._ackTimerHandle = setTimeout(async () => {\r\n                try {\r\n                    if (!this._reconnectInProgress) {\r\n                        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Ack, sequenceId: this._latestReceivedSequenceId }));\r\n                    }\r\n                    // Ignore errors, that means the connection is closed and we don't care about the Ack message anymore.\r\n                }\r\n                catch { }\r\n                clearTimeout(this._ackTimerHandle);\r\n                this._ackTimerHandle = undefined;\r\n                // 1 second delay so we don't spam Ack messages if there are many messages being received at once.\r\n            }, 1000);\r\n        }\r\n    }\r\n}\r\nclass BufferedItem {\r\n    constructor(message, id, resolver, rejector) {\r\n        this._message = message;\r\n        this._id = id;\r\n        this._resolver = resolver;\r\n        this._rejector = rejector;\r\n    }\r\n}\r\n//# sourceMappingURL=MessageBuffer.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nimport { MessageBuffer } from \"./MessageBuffer\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\nconst DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE = 100000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize);\r\n    }\r\n    constructor(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds !== null && serverTimeoutInMilliseconds !== void 0 ? serverTimeoutInMilliseconds : DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds !== null && keepAliveIntervalInMilliseconds !== void 0 ? keepAliveIntervalInMilliseconds : DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._statefulReconnectBufferSize = statefulReconnectBufferSize !== null && statefulReconnectBufferSize !== void 0 ? statefulReconnectBufferSize : DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            let version = this._protocol.version;\r\n            if (!this.connection.features.reconnect) {\r\n                // Stateful Reconnect starts with HubProtocol version 2, newer clients connecting to older servers will fail to connect due to\r\n                // the handshake only supporting version 1, so we will try to send version 1 during the handshake to keep old servers working.\r\n                version = 1;\r\n            }\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            const useStatefulReconnect = this.connection.features.reconnect || false;\r\n            if (useStatefulReconnect) {\r\n                this._messageBuffer = new MessageBuffer(this._protocol, this.connection, this._statefulReconnectBufferSize);\r\n                this.connection.features.disconnected = this._messageBuffer._disconnected.bind(this._messageBuffer);\r\n                this.connection.features.resend = () => {\r\n                    if (this._messageBuffer) {\r\n                        return this._messageBuffer._resend();\r\n                    }\r\n                };\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this.connection.features.reconnect = false;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        const state = this._connectionState;\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        if (state === HubConnectionState.Connected) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._sendCloseMessage();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    async _sendCloseMessage() {\r\n        try {\r\n            await this._sendWithProtocol(this._createCloseMessage());\r\n        }\r\n        catch {\r\n            // Ignore, this is a best effort attempt to let the server know the client closed gracefully.\r\n        }\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        if (this._messageBuffer) {\r\n            return this._messageBuffer._send(message);\r\n        }\r\n        else {\r\n            return this._sendMessage(this._protocol.writeMessage(message));\r\n        }\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                if (this._messageBuffer && !this._messageBuffer._shouldProcessMessage(message)) {\r\n                    // Don't process the message, we are either waiting for a SequenceMessage or received a duplicate message\r\n                    continue;\r\n                }\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this._invokeClientMethod(message)\r\n                            .catch((e) => {\r\n                            this._logger.log(LogLevel.Error, `Invoke client method threw error: ${getErrorString(e)}`);\r\n                        });\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ack:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._ack(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Sequence:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._resetSequence(message);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (this._messageBuffer) {\r\n                this._messageBuffer._dispose(error !== null && error !== void 0 ? error : new Error(\"Connection closed.\"));\r\n                this._messageBuffer = undefined;\r\n            }\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n    _createCloseMessage() {\r\n        return { type: MessageType.Close };\r\n    }\r\n}\r\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            let error;\r\n            try {\r\n                await this._httpClient.delete(this._url, deleteOptions);\r\n            }\r\n            catch (err) {\r\n                error = err;\r\n            }\r\n            if (error) {\r\n                if (error instanceof HttpError) {\r\n                    if (error.statusCode === 404) {\r\n                        this._logger.log(LogLevel.Trace, \"(LongPolling transport) A 404 response was returned from sending a DELETE request.\");\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Error sending a DELETE request: ${error}`);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* ConnectionState.Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* ConnectionState.Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */ || this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* ConnectionState.Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            if (negotiateResponse.useStatefulReconnect && this._options._useStatefulReconnect !== true) {\r\n                return Promise.reject(new FailedToNegotiateWithServerError(\"Client didn't negotiate Stateful Reconnect but the server did.\"));\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, (negotiate === null || negotiate === void 0 ? void 0 : negotiate.useStatefulReconnect) === true);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* ConnectionState.Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        if (this.features.reconnect) {\r\n            this.transport.onclose = async (e) => {\r\n                let callStop = false;\r\n                if (this.features.reconnect) {\r\n                    try {\r\n                        this.features.disconnected();\r\n                        await this.transport.connect(url, transferFormat);\r\n                        await this.features.resend();\r\n                    }\r\n                    catch {\r\n                        callStop = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._stopConnection(e);\r\n                    return;\r\n                }\r\n                if (callStop) {\r\n                    this._stopConnection(e);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            this.transport.onclose = (e) => this._stopConnection(e);\r\n        }\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, useStatefulReconnect) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            this.features.reconnect = transport === HttpTransportType.WebSockets ? useStatefulReconnect : undefined;\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const negotiateUrl = new URL(url);\r\n        if (negotiateUrl.pathname.endsWith('/')) {\r\n            negotiateUrl.pathname += \"negotiate\";\r\n        }\r\n        else {\r\n            negotiateUrl.pathname += \"/negotiate\";\r\n        }\r\n        const searchParams = new URLSearchParams(negotiateUrl.searchParams);\r\n        if (!searchParams.has(\"negotiateVersion\")) {\r\n            searchParams.append(\"negotiateVersion\", this._negotiateVersion.toString());\r\n        }\r\n        if (searchParams.has(\"useStatefulReconnect\")) {\r\n            if (searchParams.get(\"useStatefulReconnect\") === \"true\") {\r\n                this._options._useStatefulReconnect = true;\r\n            }\r\n        }\r\n        else if (this._options._useStatefulReconnect === true) {\r\n            searchParams.append(\"useStatefulReconnect\", \"true\");\r\n        }\r\n        negotiateUrl.search = searchParams.toString();\r\n        return negotiateUrl.toString();\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 2;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                case MessageType.Ack:\r\n                    this._isAckMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Sequence:\r\n                    this._isSequenceMessage(parsedMessage);\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _isAckMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Ack message.\");\r\n        }\r\n    }\r\n    _isSequenceMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Sequence message.\");\r\n        }\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withServerTimeout(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._serverTimeoutInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withKeepAliveInterval(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._keepAliveIntervalInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Enables and configures options for the Stateful Reconnect feature.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withStatefulReconnect(options) {\r\n        if (this.httpConnectionOptions === undefined) {\r\n            this.httpConnectionOptions = {};\r\n        }\r\n        this.httpConnectionOptions._useStatefulReconnect = true;\r\n        this._statefulReconnectBufferSize = options === null || options === void 0 ? void 0 : options.bufferSize;\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy, this._serverTimeoutInMilliseconds, this._keepAliveIntervalInMilliseconds, this._statefulReconnectBufferSize);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport {\r\n\tuSyncActionDataSource,\r\n\tUSyncSettingsDataSource,\r\n\tuSyncMigrationDataSource,\r\n} from '@jumoo/uSync';\r\n\r\n/**\r\n * Request object when peforming an action.\r\n */\r\nexport type SyncPerformRequest = {\r\n\t/** Id of the request */\r\n\tid: string;\r\n\r\n\t/** group (e.g settings, content) */\r\n\tgroup: string;\r\n\r\n\t/** action (report, export, etc) */\r\n\taction: string;\r\n\r\n\t/** current step number */\r\n\tstep: number;\r\n\r\n\t/** force (import) */\r\n\tforce?: boolean;\r\n\r\n\t/** clean disk first (export) */\r\n\tclean?: boolean;\r\n\r\n\t/** produces or expects a file */\r\n\tfile?: boolean;\r\n\r\n\t/** name of the set to use */\r\n\tset?: string;\r\n\r\n\t/** signalR client id */\r\n\tclientId: string;\r\n};\r\n\r\n/**\r\n * Repository for all things actions.\r\n */\r\nexport class uSyncActionRepository extends UmbControllerBase {\r\n\t#actionDataSource: uSyncActionDataSource;\r\n\t#settingsDataSource: USyncSettingsDataSource;\r\n\t#migrartionDataSource: uSyncMigrationDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#actionDataSource = new uSyncActionDataSource(this);\r\n\t\tthis.#settingsDataSource = new USyncSettingsDataSource(this);\r\n\t\tthis.#migrartionDataSource = new uSyncMigrationDataSource(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the list of possible actions from the server\r\n\t * @returns Promise\r\n\t */\r\n\tasync getActions(setName: string) {\r\n\t\treturn this.#actionDataSource.getActionsBySet(setName);\r\n\t}\r\n\r\n\t/**\r\n\t * Request of the action to perform\r\n\t * @returns PerformActionResponse.\r\n\t */\r\n\tasync performAction(request: SyncPerformRequest) {\r\n\t\treturn this.#actionDataSource.performAction({\r\n\t\t\trequestId: request.id,\r\n\t\t\taction: request.action,\r\n\t\t\toptions: {\r\n\t\t\t\tgroup: request.group,\r\n\t\t\t\tforce: request.force ?? false,\r\n\t\t\t\tclean: request.clean ?? false,\r\n\t\t\t\tfiles: request.file ?? false,\r\n\t\t\t\tclientId: request.clientId,\r\n\t\t\t\tset: request.set ?? 'Default',\r\n\t\t\t},\r\n\t\t\tstepNumber: request.step,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Retreives the current uSync settings\r\n\t * @returns the current uSync settings\r\n\t */\r\n\tasync getSettings() {\r\n\t\treturn await this.#settingsDataSource.getSettings();\r\n\t}\r\n\r\n\tasync getAddons() {\r\n\t\treturn await this.#settingsDataSource.getAddons();\r\n\t}\r\n\r\n\t/**\r\n\t * Get the handler settings based on the set.\r\n\t * @param setName name of the handler set in the configuration\r\n\t * @returns the settings for the named handler set.\r\n\t */\r\n\tasync getHandlerSettings(setName: string) {\r\n\t\treturn await this.#settingsDataSource.getHandlerSettings(setName);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks to see if there are legacy datatypes on disk.\r\n\t * @returns results of a check for legacy files\r\n\t */\r\n\tasync checkLegacy() {\r\n\t\treturn await this.#migrartionDataSource.checkLegacy();\r\n\t}\r\n\r\n\t/**\r\n\t * sets a .ignore folder in the legacy folder so we don't detect it next time.\r\n\t * @returns true if the legacy folder is ignored.\r\n\t */\r\n\tasync ignoreLegacy() {\r\n\t\treturn await this.#migrartionDataSource.ignoreLegacy();\r\n\t}\r\n\r\n\t/**\r\n\t * copies the legacy folder to the new v14 folder.\r\n\t * @returns true if the legacy folder is copied to the new folder.\r\n\t */\r\n\tasync copyLegacy() {\r\n\t\treturn await this.#migrartionDataSource.copyLegacy();\r\n\t}\r\n\r\n\tasync downloadFile(requestId: string) {\r\n\t\treturn (await this.#actionDataSource.downloadFile(requestId)).data;\r\n\t}\r\n\r\n\tasync processUpload(fileId: string) {\r\n\t\treturn (await this.#actionDataSource.processUpload(fileId)).data;\r\n\t}\r\n\r\n\tasync getSets() {\r\n\t\treturn await this.#settingsDataSource.getSets();\r\n\t}\r\n}\r\n","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbDataSourceResponse } from '@umbraco-cms/backoffice/repository';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport {\r\n\tActionsService,\r\n\tPerformActionRequest,\r\n\tPerformActionResponse,\r\n\tSyncActionGroup,\r\n} from '@jumoo/uSync';\r\n\r\nexport interface SyncActionDataSource {\r\n\tgetActionsBySet(setName: string): Promise<UmbDataSourceResponse<unknown>>;\r\n\tperformAction(\r\n\t\trequest: PerformActionRequest,\r\n\t): Promise<UmbDataSourceResponse<PerformActionResponse>>;\r\n}\r\n\r\nexport class uSyncActionDataSource implements SyncActionDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\tasync getActionsBySet(\r\n\t\tsetName: string,\r\n\t): Promise<UmbDataSourceResponse<Array<SyncActionGroup>>> {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tActionsService.getActionsBySet({\r\n\t\t\t\tquery: { setName: setName },\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\tasync performAction(\r\n\t\trequest: PerformActionRequest,\r\n\t): Promise<UmbDataSourceResponse<PerformActionResponse>> {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tActionsService.performAction({\r\n\t\t\t\tbody: request,\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\tasync downloadFile(requestId: string) {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tActionsService.download({\r\n\t\t\t\tquery: {\r\n\t\t\t\t\trequestId: requestId,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\tasync processUpload(fileId: string) {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tActionsService.processUpload({\r\n\t\t\t\tquery: {\r\n\t\t\t\t\ttempKey: fileId,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbDataSourceResponse } from '@umbraco-cms/backoffice/repository';\r\nimport { MigrationsService, SyncLegacyCheckResponse } from '@jumoo/uSync';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\n\r\nexport interface SyncMigrationDataSource {\r\n\tcheckLegacy(): Promise<UmbDataSourceResponse<SyncLegacyCheckResponse>>;\r\n}\r\n\r\nexport class uSyncMigrationDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\tasync checkLegacy(): Promise<UmbDataSourceResponse<SyncLegacyCheckResponse>> {\r\n\t\treturn await tryExecute(this.#host, MigrationsService.checkLegacy());\r\n\t}\r\n\r\n\tasync ignoreLegacy(): Promise<UmbDataSourceResponse<boolean>> {\r\n\t\treturn await tryExecute(this.#host, MigrationsService.ignoreLegacy());\r\n\t}\r\n\r\n\tasync copyLegacy(): Promise<UmbDataSourceResponse<boolean>> {\r\n\t\treturn await tryExecute(this.#host, MigrationsService.copyLegacy());\r\n\t}\r\n}\r\n","import { UmbDataSourceResponse } from '@umbraco-cms/backoffice/repository';\r\nimport { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport { SettingsService, USyncHandlerSetSettings, USyncSettings } from '@jumoo/uSync';\r\n\r\nexport interface SyncSettingsDataSource {\r\n\tgetSettings(): Promise<UmbDataSourceResponse<USyncSettings>>;\r\n\tgetHandlerSettings(\r\n\t\tsetName: string,\r\n\t): Promise<UmbDataSourceResponse<USyncHandlerSetSettings>>;\r\n}\r\n\r\nexport class USyncSettingsDataSource implements SyncSettingsDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\tasync getSettings(): Promise<UmbDataSourceResponse<USyncSettings>> {\r\n\t\treturn await tryExecute(this.#host, SettingsService.getSettings());\r\n\t}\r\n\r\n\tasync getHandlerSettings(\r\n\t\tsetName: string,\r\n\t): Promise<UmbDataSourceResponse<USyncHandlerSetSettings>> {\r\n\t\treturn await tryExecute(\r\n\t\t\tthis.#host,\r\n\t\t\tSettingsService.getHandlerSetSettings({ query: { id: setName } }),\r\n\t\t);\r\n\t}\r\n\r\n\tasync getAddons() {\r\n\t\treturn await tryExecute(this.#host, SettingsService.getAddOns());\r\n\t}\r\n\r\n\tasync getSets() {\r\n\t\treturn await tryExecute(this.#host, SettingsService.getSets());\r\n\t}\r\n}\r\n","import { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport interface uSyncImportModalData {}\r\nexport interface uSyncImportModalValue {}\r\n\r\nexport const USYNC_IMPORT_MODAL = new UmbModalToken<\r\n\tuSyncImportModalData,\r\n\tuSyncImportModalValue\r\n>('usync.import.modal', {\r\n\tmodal: {\r\n\t\ttype: 'dialog',\r\n\t},\r\n});\r\n","import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tstate,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UploadImportResult } from '../../api';\r\nimport { uSyncFilePickerUploadedEvent } from '../components/events';\r\n\r\n@customElement('usync-import-dialog')\r\nexport class uSyncImportModalDialog extends UmbModalBaseElement<any, any> {\r\n\t@state()\r\n\tresult: UploadImportResult | undefined;\r\n\r\n\t#onClose() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n\t#onImport() {\r\n\t\tthis.value = this.result?.success;\r\n\t\tthis.modalContext?.submit();\r\n\t}\r\n\r\n\t#onUploaded(e: uSyncFilePickerUploadedEvent) {\r\n\t\tthis.result = e.result;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout .headline=${this.localize.term('uSync_importHeader')}>\r\n\t\t\t\t${this.renderForm()} ${this.renderResult()}\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderForm() {\r\n\t\tif (this.result !== undefined) return;\r\n\r\n\t\treturn html` ${this.localize.term('uSync_uploadIntro')}\r\n\t\t\t<usync-file-upload @uploaded=${this.#onUploaded}></usync-file-upload>\r\n\t\t\t<div slot=\"actions\">\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tid=\"cancel\"\r\n\t\t\t\t\t.label=${this.localize.term('general_close')}\r\n\t\t\t\t\t@click=\"${this.#onClose}\"></uui-button>\r\n\t\t\t</div>`;\r\n\t}\r\n\r\n\trenderResult() {\r\n\t\tif (this.result == undefined) return;\r\n\r\n\t\treturn html`${when(\r\n\t\t\t\tthis.result.success,\r\n\t\t\t\t() => html`${this.localize.term('uSync_uploadSuccess')}`,\r\n\t\t\t\t() => html`${this.localize.term('uSync_uploadError')} ${this.result?.errors}`,\r\n\t\t\t)}\r\n\t\t\t<div slot=\"actions\">\r\n\t\t\t\t<uui-button id=\"continue\" label=\"Import\" @click=\"${this.#onImport}\"></uui-button>\r\n\t\t\t</div>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\tumb-body-layout {\r\n\t\t\tmax-width: 450px;\r\n\t\t}\r\n\r\n\t\tusync-file-upload {\r\n\t\t\tpadding: 10px 0;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncImportModalDialog;\r\n","import {\r\n\tUmbArrayState,\r\n\tUmbBooleanState,\r\n\tUmbObjectState,\r\n} from '@umbraco-cms/backoffice/observable-api';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\nimport { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport {\r\n\tSyncActionGroup,\r\n\tSyncHandlerSummary,\r\n\tSyncLegacyCheckResponse,\r\n\tUSyncActionView,\r\n\tUSyncHandlerSetSettings,\r\n\tUSyncSettings,\r\n\tuSyncActionRepository,\r\n\tuSyncConstants,\r\n\tSyncPerformActionOptions,\r\n\tSyncSelectableSet,\r\n} from '@jumoo/uSync';\r\nimport uSyncSignalRContext from '../signalr/signalr.context';\r\nimport {\r\n\tUMB_WORKSPACE_CONTEXT,\r\n\tUmbWorkspaceContext,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { USYNC_IMPORT_MODAL } from './dialogs';\r\n\r\n/**\r\n * Context for getting and seting up actions.\r\n */\r\nexport class uSyncWorkspaceContext\r\n\textends UmbControllerBase\r\n\timplements UmbWorkspaceContext\r\n{\r\n\tpublic readonly workspaceAlias: string = uSyncConstants.workspace.alias;\r\n\r\n\tgetEntityType(): string {\r\n\t\treturn uSyncConstants.workspace.rootElement;\r\n\t}\r\n\r\n\t#repository: uSyncActionRepository;\r\n\t#signalRContext: uSyncSignalRContext | null = null;\r\n\r\n\t/**\r\n\t * list of actions that have been returned from the process\r\n\t */\r\n\t#actions = new UmbArrayState<SyncActionGroup>([], (x) => x.key);\r\n\tpublic readonly actions = this.#actions.asObservable();\r\n\r\n\t/**\r\n\t * The summary objects that show the handler boxes\r\n\t */\r\n\t#workingActions = new UmbArrayState<SyncHandlerSummary>([], (x) => x.name);\r\n\tpublic readonly currentAction = this.#workingActions.asObservable();\r\n\r\n\t/**\r\n\t * Flag to say if things are currently being processed\r\n\t */\r\n\t#working = new UmbBooleanState(false);\r\n\tpublic readonly working = this.#working.asObservable();\r\n\r\n\t/**\r\n\t * Flag to say that the last run has been completed (so results will show)\r\n\t */\r\n\t#completed = new UmbBooleanState(false);\r\n\tpublic readonly completed = this.#completed.asObservable();\r\n\r\n\t/**\r\n\t * The results of a run.\r\n\t */\r\n\t#results = new UmbArrayState<USyncActionView>([], (x) => x.name);\r\n\tpublic readonly results = this.#results.asObservable();\r\n\r\n\t/**\r\n\t * Current settings for uSync\r\n\t */\r\n\t#settings = new UmbObjectState<USyncSettings | undefined>(undefined);\r\n\tpublic readonly settings = this.#settings?.asObservable();\r\n\r\n\t/**\r\n\t * Handler settings object\r\n\t */\r\n\t#handlerSettings = new UmbObjectState<USyncHandlerSetSettings | undefined>(undefined);\r\n\tpublic readonly handlerSettings = this.#handlerSettings?.asObservable();\r\n\r\n\t#handlerSets = new UmbArrayState<SyncSelectableSet>([], (x) => x);\r\n\tpublic readonly sets = this.#handlerSets.asObservable();\r\n\r\n\t#legacy = new UmbObjectState<SyncLegacyCheckResponse | undefined>(undefined);\r\n\tpublic readonly legacy = this.#legacy?.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.provideContext(USYNC_CORE_CONTEXT_TOKEN, this);\r\n\t\tthis.provideContext(UMB_WORKSPACE_CONTEXT, this);\r\n\r\n\t\tthis.#repository = new uSyncActionRepository(this);\r\n\r\n\t\tthis.#signalRContext = new uSyncSignalRContext(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return the current actions from the repository\r\n\t */\r\n\tasync getActions(setName: string) {\r\n\t\tconst { data } = await this.#repository.getActions(setName);\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#actions.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get the current uSync settings\r\n\t */\r\n\tasync getSettings() {\r\n\t\tconst { data } = await this.#repository.getSettings();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#settings.setValue(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync getAddons() {\r\n\t\tconst { data } = await this.#repository.getAddons();\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * Check to see if there is a legacy uSync folder on disk.\r\n\t */\r\n\tasync checkLegacy() {\r\n\t\tconst { data } = await this.#repository.checkLegacy();\r\n\t\tif (data) {\r\n\t\t\tthis.#legacy.setValue(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync ignoreLegacy() {\r\n\t\tconst { data } = await this.#repository.ignoreLegacy();\r\n\t\treturn data ?? false;\r\n\t}\r\n\r\n\tasync copyLegacy() {\r\n\t\tconst { data } = await this.#repository.copyLegacy();\r\n\t\treturn data ?? false;\r\n\t}\r\n\r\n\t/**\r\n\t * Get handler defaults.\r\n\t */\r\n\tasync getDefaultHandlerSetSettings(setName: string) {\r\n\t\tconst { data } = await this.#repository.getHandlerSettings(setName);\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#handlerSettings.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getHandlerSets() {\r\n\t\tconst { data } = await this.#repository.getSets();\r\n\t\tif (data) {\r\n\t\t\tthis.#handlerSets.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Perform an action (e.g import, export, etc) with options\r\n\t * @param options options for the action\r\n\t */\r\n\tasync performAction(options: SyncPerformActionOptions) {\r\n\t\tvar clientId = this.#signalRContext?.getClientId() ?? '';\r\n\r\n\t\tthis.#working.setValue(true);\r\n\t\tthis.#completed.setValue(false);\r\n\t\tthis.#results.setValue([]);\r\n\r\n\t\tvar complete = false;\r\n\t\tvar id = '';\r\n\t\tvar step: number = 0;\r\n\r\n\t\t// pre-action checks, for files.\r\n\t\tif (options.file && options.action === 'Import') {\r\n\t\t\t// imports need to open the file dialog to get the file first.\r\n\t\t\tconst uploadResult = await this.uploadFile();\r\n\t\t\tif (!uploadResult) {\r\n\t\t\t\tthis.#completed.setValue(true);\r\n\t\t\t\tthis.#working.setValue(false);\r\n\t\t\t\tthis.#results.setValue([]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdo {\r\n\t\t\tconst { data } = await this.#repository.performAction({\r\n\t\t\t\tid: id,\r\n\t\t\t\tset: options.setName,\r\n\t\t\t\taction: options.action,\r\n\t\t\t\tgroup: options.group.key,\r\n\t\t\t\tforce: options.force,\r\n\t\t\t\tclean: options.clean,\r\n\t\t\t\tfile: options.file,\r\n\t\t\t\tstep: step,\r\n\t\t\t\tclientId: clientId,\r\n\t\t\t});\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tstep++;\r\n\r\n\t\t\t\tlet summary = data.status ?? [];\r\n\r\n\t\t\t\tthis.#workingActions.setValue(summary);\r\n\r\n\t\t\t\tid = data.requestId;\r\n\t\t\t\tcomplete = data.complete;\r\n\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tthis.#results.setValue(data?.actions ?? []);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcomplete = true;\r\n\t\t\t}\r\n\t\t} while (!complete);\r\n\r\n\t\t// post action\r\n\t\tif (options.file && options.action === 'Export') {\r\n\t\t\t// post export , open the dialog offer the download.\r\n\t\t\tawait this.downloadFile(id);\r\n\t\t}\r\n\r\n\t\tthis.#completed.setValue(true);\r\n\t\tthis.#working.setValue(false);\r\n\t}\r\n\r\n\tasync uploadFile() {\r\n\t\tconst modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tif (!modalManager) return;\r\n\r\n\t\tconst importModal = modalManager.open(this, USYNC_IMPORT_MODAL, {\r\n\t\t\tdata: {},\r\n\t\t});\r\n\r\n\t\tconst data = await importModal.onSubmit().catch(() => {\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\tif (!data) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tasync downloadFile(requestId: string) {\r\n\t\tconst response = await this.#repository.downloadFile(requestId);\r\n\r\n\t\tif (!response) return;\r\n\r\n\t\tconst url = window.URL.createObjectURL(response);\r\n\r\n\t\tconst download = document.createElement('a');\r\n\t\tdownload.href = url;\r\n\t\tdownload.download = 'usync-export.zip';\r\n\t\tdocument.body.appendChild(download);\r\n\t\tdownload.dispatchEvent(new MouseEvent('click'));\r\n\t\tdownload.remove();\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t}\r\n}\r\n\r\nexport default uSyncWorkspaceContext;\r\n\r\nexport const USYNC_CORE_CONTEXT_TOKEN = new UmbContextToken<uSyncWorkspaceContext>(\r\n\t'uSyncWorkspaceContext',\r\n);\r\n","import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nimport {\r\n\tUSYNC_CORE_CONTEXT_TOKEN,\r\n\tuSyncWorkspaceContext,\r\n\tSyncActionGroup,\r\n\tSyncHandlerSummary,\r\n\tSyncLegacyCheckResponse,\r\n\tUSyncActionView,\r\n\tSyncSelectableSet,\r\n} from '@jumoo/uSync';\r\nimport { uSyncActionPerformEvent } from '../../components/events';\r\n\r\n@customElement('usync-default-view')\r\nexport class uSyncDefaultViewElement extends UmbLitElement {\r\n\t#actionContext?: uSyncWorkspaceContext;\r\n\r\n\t@state()\r\n\t_actions?: Array<SyncActionGroup>;\r\n\r\n\t@state()\r\n\t_workingActions?: Array<SyncHandlerSummary>;\r\n\r\n\t@state()\r\n\t_loaded: Boolean = false;\r\n\r\n\t@state()\r\n\t_legacy?: SyncLegacyCheckResponse;\r\n\r\n\t@state()\r\n\t_buttonState: UUIButtonState;\r\n\r\n\t@state()\r\n\t_working: boolean = false;\r\n\r\n\t@state()\r\n\t_completed: boolean = false;\r\n\r\n\t@state()\r\n\t_showProgress: boolean = false;\r\n\r\n\t@state()\r\n\t_group?: SyncActionGroup;\r\n\r\n\t@state()\r\n\t_results: Array<USyncActionView> = [];\r\n\r\n\t@state()\r\n\t_disabled: boolean = false;\r\n\r\n\t@state()\r\n\t_setName: string = 'Default';\r\n\r\n\t@state()\r\n\t_sets: Array<SyncSelectableSet> = [];\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(USYNC_CORE_CONTEXT_TOKEN, (_instance) => {\r\n\t\t\tif (!_instance) return;\r\n\t\t\tthis.#actionContext = _instance;\r\n\r\n\t\t\t_instance.getSettings();\r\n\r\n\t\t\tthis.observe(_instance.settings, (_settings) => {\r\n\t\t\t\tif (!_settings) return;\r\n\r\n\t\t\t\tthis._setName = _settings.defaultSet ?? 'Default';\r\n\r\n\t\t\t\tthis.#actionContext?.checkLegacy();\r\n\t\t\t\tthis.#actionContext?.getHandlerSets();\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.sets, (sets) => {\r\n\t\t\t\tif (!sets) return;\r\n\t\t\t\tthis._sets = sets;\r\n\t\t\t\tthis.#actionContext?.getActions(this._setName);\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.actions, (_actions) => {\r\n\t\t\t\tif (!_actions || _actions.length == 0) return;\r\n\t\t\t\tthis._actions = _actions;\r\n\t\t\t\tthis._loaded = this._actions !== null;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.currentAction, (_currentAction) => {\r\n\t\t\t\tthis._workingActions = _currentAction;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.working, (_working) => {\r\n\t\t\t\tthis._working = _working;\r\n\r\n\t\t\t\tif (this._working) {\r\n\t\t\t\t\tthis._buttonState = 'waiting';\r\n\t\t\t\t\tthis._disabled = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._disabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.results, (_results) => {\r\n\t\t\t\tthis._results = _results;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.completed, (_completed) => {\r\n\t\t\t\tthis._completed = _completed;\r\n\t\t\t\tif (this._completed) {\r\n\t\t\t\t\tthis._buttonState = 'success';\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.legacy, (_legacy) => {\r\n\t\t\t\tthis._legacy = _legacy;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @method performAction\r\n\t * @param {uSyncActionPerformEvent} event\r\n\t * @description do a thing, (report, import, export)\r\n\t */\r\n\t#performAction(event: uSyncActionPerformEvent) {\r\n\t\tif (!event) return;\r\n\r\n\t\tthis._showProgress = true;\r\n\t\tthis._group = event.group;\r\n\t\tthis.#actionContext?.performAction({\r\n\t\t\tsetName: this._setName,\r\n\t\t\tgroup: event.group,\r\n\t\t\taction: event.key,\r\n\t\t\tforce: event.force ?? false,\r\n\t\t\tclean: event.clean ?? false,\r\n\t\t\tfile: event.file ?? false,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this._loaded == false) {\r\n\t\t\treturn html`<uui-loader></uui-loader>`;\r\n\t\t} else {\r\n\t\t\treturn html`\r\n\t\t\t\t<umb-body-layout>\r\n\t\t\t\t\t${this.#renderLegacyBanner()} ${this.#renderSetPicker()}\r\n\t\t\t\t\t<div class=\"wrapper\">\r\n\t\t\t\t\t\t${this.#renderActions()} ${this.#renderBanner()} ${this.#renderProcessBox()}\r\n\t\t\t\t\t\t${this.#renderReport()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</umb-body-layout>\r\n\t\t\t`;\r\n\t\t}\r\n\t}\r\n\r\n\t#renderSetPicker() {\r\n\t\tif (this._sets.length < 2) return nothing;\r\n\r\n\t\tvar options = this._sets.map((set) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: set.name,\r\n\t\t\t\tvalue: set.name,\r\n\t\t\t\tselected: set.name === this._setName,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn html`<div class=\"set-picker\">\r\n\t\t\t<label for=\"set-select\"\r\n\t\t\t\t>${this.localize.term('USyncSettings_currentHandlerSet')}</label\r\n\t\t\t>\r\n\t\t\t<uui-select\r\n\t\t\t\tid=\"set-select\"\r\n\t\t\t\t.label=${this.localize.term('USyncSettings_currentHandlerSet')}\r\n\t\t\t\t.options=${options}\r\n\t\t\t\t@change=${(e: Event) => {\r\n\t\t\t\t\tconst select = e.target as HTMLSelectElement;\r\n\t\t\t\t\tthis._setName = select.value;\r\n\t\t\t\t\tthis.#actionContext?.getActions(this._setName);\r\n\t\t\t\t}}>\r\n\t\t\t</uui-select>\r\n\t\t</div> `;\r\n\t}\r\n\r\n\t#renderLegacyBanner() {\r\n\t\treturn !this._legacy?.hasLegacy\r\n\t\t\t? nothing\r\n\t\t\t: html`\r\n\t\t\t\t\t<div class=\"legacy-banner\">\r\n\t\t\t\t\t\t<umb-icon name=\"icon-alert\"></umb-icon>\r\n\t\t\t\t\t\t${this.localize.term('uSync_legacyBanner')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`;\r\n\t}\r\n\r\n\t#renderActions() {\r\n\t\tif (!this._actions || !Array.isArray(this._actions)) return nothing;\r\n\r\n\t\tvar actions = this._actions?.map((group) => {\r\n\t\t\treturn html`\r\n\t\t\t\t<usync-action-box\r\n\t\t\t\t\t.disabled=${this._disabled}\r\n\t\t\t\t\t.group=\"${group}\"\r\n\t\t\t\t\t.state=${this._buttonState}\r\n\t\t\t\t\t@perform-action=${this.#performAction}>\r\n\t\t\t\t</usync-action-box>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn html` <div class=\"action-buttons-box\">${actions}</div> `;\r\n\t}\r\n\r\n\t#renderBanner() {\r\n\t\tif (this._showProgress === true || this._completed === true) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<umb-empty-state>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\t<uui-icon name=\"usync-logo\"></uui-icon>\r\n\t\t\t\t\t<umb-localize key=\"uSync_banner\"></umb-localize>\r\n\t\t\t\t</h2>\r\n\t\t\t</umb-empty-state>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderProcessBox() {\r\n\t\tif (this._showProgress == false && this._completed == false) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<usync-progress-box\r\n\t\t\t\t.title=${this._group?.groupName ?? 'doh!'}\r\n\t\t\t\t.actions=${this._workingActions}\r\n\t\t\t\t.complete=${this._completed}></usync-progress-box>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderReport() {\r\n\t\tif (!this._completed) return nothing;\r\n\r\n\t\treturn html`<usync-results .results=${this._results}></usync-results>`;\r\n\t}\r\n\r\n\tstatic styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin-top: calc(var(--uui-size-space-4) * -1);\r\n\t\t\t}\r\n\r\n\t\t\t.wrapper {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tgap: var(--uui-size-space-4);\r\n\t\t\t}\r\n\r\n\t\t\t.legacy-banner {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t\tpadding: var(--uui-size-space-4);\r\n\t\t\t\tmargin: var(--uui-size-space-4) 0;\r\n\t\t\t\tbackground-color: var(--uui-color-warning);\r\n\t\t\t\tcolor: var(--uui-color-warning-contrast);\r\n\t\t\t}\r\n\r\n\t\t\t.results-box {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t}\r\n\r\n\t\t\t.action-buttons-box {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-4);\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\talign-content: stretch;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t}\r\n\r\n\t\t\tumb-empty-state {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 50%;\r\n\t\t\t\ttransform: translateY(-50%);\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tright: 0;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tcolor: var(--uui-color-border);\r\n\t\t\t\tz-index: 0;\r\n\t\t\t}\r\n\r\n\t\t\tumb-empty-state h2 {\r\n\t\t\t\tfont-size: var(--uui-type-h2-size);\r\n\t\t\t}\r\n\r\n\t\t\tumb-empty-state uui-icon {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\ttop: var(--uui-size-2);\r\n\t\t\t}\r\n\r\n\t\t\t.set-picker {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: row;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-4);\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t\tpadding: var(--uui-size-space-4);\r\n\t\t\t}\r\n\r\n\t\t\t.set-picker label {\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t}\r\n\r\n\t\t\t.set-picker label::after {\r\n\t\t\t\tcontent: ':';\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default uSyncDefaultViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-default-view': uSyncDefaultViewElement;\r\n\t}\r\n}\r\n","import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport {\r\n\tLitElement,\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\n\r\nimport { uSyncWorkspaceContext, uSyncConstants } from '@jumoo/uSync';\r\n\r\nimport './views/default/default.element.js';\r\n\r\n@customElement('usync-workspace-root')\r\nexport class uSyncWorkspaceRootElement extends UmbElementMixin(LitElement) {\r\n\t#workspaceContext: uSyncWorkspaceContext;\r\n\r\n\t@state()\r\n\tversion: string = uSyncConstants.version;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#workspaceContext = new uSyncWorkspaceContext(this);\r\n\r\n\t\tthis.observe(this.#workspaceContext.completed, (_completed) => {\r\n\t\t\t// console.log('completed', _completed);\r\n\t\t});\r\n\t}\r\n\r\n\tasync connectedCallback() {\r\n\t\tsuper.connectedCallback();\r\n\t\tconst addons = await this.#workspaceContext.getAddons();\r\n\t\tthis.version = `v${addons?.version ?? uSyncConstants.version}`;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<umb-workspace-editor .enforceNoFooter=${true}>\r\n\t\t\t\t<div slot=\"header\" class=\"header\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<strong><umb-localize key=\"uSync_name\"></umb-localize></strong><br /><em\r\n\t\t\t\t\t\t\t>${this.version}</em\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-workspace-editor>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\tumb-workspace-editor > div.header {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\talign-content: center;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default uSyncWorkspaceRootElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-workspace-root': uSyncWorkspaceRootElement;\r\n\t}\r\n}\r\n","const _constants = {\r\n\tname: 'uSync',\r\n\tpath: 'usync',\r\n\ticon: 'icon-infinity',\r\n\tmenuName: 'Syncronisation',\r\n\tmenuAlias: 'usync.menu',\r\n\tversion: '16.0.0',\r\n\r\n\tconditions: {\r\n\t\tlegacy: 'usync.legacy.condition',\r\n\t},\r\n\r\n\tworkspace: {\r\n\t\talias: 'usync.workspace',\r\n\t\trootElement: 'usync-root',\r\n\t\telementName: 'usync-workspace-root',\r\n\t\tcontextAlias: 'usync.workspace.context',\r\n\r\n\t\tdefaultView: {\r\n\t\t\talias: 'usync.workspace.default',\r\n\t\t},\r\n\r\n\t\tsettingView: {\r\n\t\t\talias: 'usync.workspace.settings',\r\n\t\t},\r\n\r\n\t\taddOnView: {\r\n\t\t\talias: 'usync.workspace.addons',\r\n\t\t},\r\n\t\tlegacyView: {\r\n\t\t\talais: 'usync.workspace.legacy',\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport const uSyncConstants = _constants;\r\n","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport {\r\n\tUmbConditionConfigBase,\r\n\tUmbConditionControllerArguments,\r\n} from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbConditionBase } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { USYNC_CORE_CONTEXT_TOKEN } from '@jumoo/uSync';\r\n\r\nexport type SyncLegacyFilesConditionConfig = UmbConditionConfigBase & {\r\n\thasLegacyFiles: boolean;\r\n};\r\n\r\nexport class SyncLegacyFilesCondition extends UmbConditionBase<SyncLegacyFilesConditionConfig> {\r\n\tconfig: SyncLegacyFilesConditionConfig;\r\n\r\n\tconstructor(\r\n\t\thost: UmbControllerHost,\r\n\t\targs: UmbConditionControllerArguments<SyncLegacyFilesConditionConfig>,\r\n\t) {\r\n\t\tsuper(host, args);\r\n\t\tthis.config = args.config;\r\n\r\n\t\tthis.consumeContext(USYNC_CORE_CONTEXT_TOKEN, (_instance) => {\r\n\t\t\tif (!_instance) return;\r\n\r\n\t\t\t// consuming the context means it only happens when the context exists.\r\n\t\t\t_instance.checkLegacy().then((response) => {\r\n\t\t\t\tthis.permitted = response?.hasLegacy ?? false;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n","export const USYNC_SECTION_ALIAS = 'usync.section';\r\n","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport {\r\n\tUmbConditionConfigBase,\r\n\tUmbConditionControllerArguments,\r\n\tUmbExtensionsManifestInitializer,\r\n} from '@umbraco-cms/backoffice/extension-api';\r\nimport {\r\n\tUmbConditionBase,\r\n\tumbExtensionsRegistry,\r\n} from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UMB_SECTION_CONTEXT } from '@umbraco-cms/backoffice/section';\r\nimport { USYNC_SECTION_ALIAS } from '../tree/constants';\r\n\r\nexport type SyncNewSectionConditionConfig = UmbConditionConfigBase & {};\r\n\r\nexport class SyncNewSectionCondition extends UmbConditionBase<SyncNewSectionConditionConfig> {\r\n\t#currentSection: string | undefined;\r\n\t#allSections: string[] | undefined;\r\n\r\n\tconstructor(\r\n\t\thost: UmbControllerHost,\r\n\t\targs: UmbConditionControllerArguments<SyncNewSectionConditionConfig>,\r\n\t) {\r\n\t\tsuper(host, args);\r\n\r\n\t\tnew UmbExtensionsManifestInitializer(\r\n\t\t\tthis,\r\n\t\t\tumbExtensionsRegistry,\r\n\t\t\t'section',\r\n\t\t\t() => true,\r\n\t\t\tasync (sections) => {\r\n\t\t\t\tthis.#allSections = sections.map((section) => section.alias);\r\n\t\t\t\tthis.permitted = this.#checkPermission();\r\n\t\t\t},\r\n\t\t\t'uSyncAllSectionsManifestFilter',\r\n\t\t);\r\n\r\n\t\tthis.consumeContext(UMB_SECTION_CONTEXT, (_context) => {\r\n\t\t\tif (!_context) return;\r\n\r\n\t\t\tthis.observe(_context.alias, (_alias) => {\r\n\t\t\t\tthis.#currentSection = _alias;\r\n\t\t\t\tthis.permitted = this.#checkPermission();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t#checkPermission() {\r\n\t\tif (!this.#currentSection) return false;\r\n\t\tif (!this.#allSections) return false;\r\n\r\n\t\t// if the new section isn't defined, this will still show in settings.\r\n\t\tif (!this.#allSections.includes(USYNC_SECTION_ALIAS)) return true;\r\n\r\n\t\tif (this.#currentSection === USYNC_SECTION_ALIAS) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport {\r\n\tLitElement,\r\n\tcustomElement,\r\n\thtml,\r\n\tproperty,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { ManifestMenuItem } from '@umbraco-cms/backoffice/menu';\r\nimport { UMB_SECTION_CONTEXT } from '@umbraco-cms/backoffice/section';\r\n\r\n@customElement('usync-menu')\r\nexport class uSyncMenuElement extends UmbElementMixin(LitElement) {\r\n\t#pathName?: string;\r\n\r\n\t@property({ type: Object, attribute: false })\r\n\tmanifest!: ManifestMenuItem;\r\n\r\n\t@state()\r\n\thasChildren: boolean = false;\r\n\r\n\t@state()\r\n\titemPath?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tumbExtensionsRegistry.byType('usync-menuItem').subscribe((_items) => {\r\n\t\t\tthis.hasChildren = _items.length > 0;\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_SECTION_CONTEXT, (sectionContext) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tsectionContext?.pathname,\r\n\t\t\t\t(pathName) => {\r\n\t\t\t\t\tthis.#pathName = pathName;\r\n\t\t\t\t\tthis.#constructHref();\r\n\t\t\t\t},\r\n\t\t\t\t'observePathname',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#constructHref() {\r\n\t\tif (!this.#pathName) return;\r\n\t\tthis.itemPath = `section/${this.#pathName}/workspace/${this.manifest.meta.entityType}`;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`<umb-menu-item-layout\r\n\t\t\tlabel=${this.manifest.meta.label ?? this.manifest.name}\r\n\t\t\ticon-name=${this.manifest.meta.icon ?? 'icon-bug'}\r\n\t\t\t.href=${this.itemPath}\r\n\t\t\t?has-Children=${this.hasChildren}\r\n\t\t\t>${this.renderChildren()}\r\n\t\t</umb-menu-item-layout>`;\r\n\t}\r\n\r\n\trenderChildren() {\r\n\t\treturn html`<umb-extension-slot\r\n\t\t\ttype=\"usync-menuItem\"\r\n\t\t\tdefault-element=\"umb-menu-item-default\"></umb-extension-slot>`;\r\n\t}\r\n}\r\n\r\nexport default uSyncMenuElement;\r\n","export const USYNC_CONDITION_NEW_SECTION = 'usync.condition.new-section';\r\n","import { uSyncConstants, uSyncMenuElement } from '@jumoo/uSync';\r\nimport { USYNC_CONDITION_NEW_SECTION } from '../conditions/constants';\r\nimport { USYNC_SECTION_ALIAS } from './constants';\r\n\r\nconst sectionAlias = 'Umb.Section.Settings';\r\n\r\n/*\r\n * config slight of hand: This manifest is added in c#\r\n * via a manaifestreader, that only adds it if a setting\r\n * is true in the appsettings.json file.\r\n *\r\n * we can then use conditional code that will only allow\r\n * the tree to show in settings when this section doesn't\r\n * exist globally.\r\n */\r\n/*\r\nconst uSyncSection: UmbExtensionManifest = {\r\n\ttype: 'section',\r\n\talias: USYNC_SECTION_ALIAS,\r\n\tname: 'uSync',\r\n\tweight: 350,\r\n\tmeta: {\r\n\t\tlabel: '#uSync_section',\r\n\t\tpathname: 'sync',\r\n\t},\r\n};\r\n*/\r\n\r\nconst menuConstants = {\r\n\talias: 'usync.menu',\r\n\tname: 'uSync',\r\n\ticon: 'icon-infinity',\r\n\trootElement: uSyncConstants.workspace.rootElement,\r\n};\r\n\r\nconst menu: UmbExtensionManifest = {\r\n\ttype: 'menu',\r\n\talias: menuConstants.alias,\r\n\tname: menuConstants.name,\r\n\tmeta: {\r\n\t\tlabel: menuConstants.name,\r\n\t\ticon: menuConstants.icon,\r\n\t\tentityType: menuConstants.rootElement,\r\n\t},\r\n};\r\n\r\nconst menuItem: UmbExtensionManifest = {\r\n\ttype: 'menuItem',\r\n\talias: 'usync.menu.item',\r\n\tname: 'uSync menu item',\r\n\telement: uSyncMenuElement,\r\n\tmeta: {\r\n\t\tlabel: 'uSync',\r\n\t\ticon: 'usync-logo',\r\n\t\tentityType: uSyncConstants.workspace.rootElement,\r\n\t\tmenus: [menuConstants.alias],\r\n\t},\r\n};\r\n\r\nconst menuSidebarApp: UmbExtensionManifest = {\r\n\ttype: 'sectionSidebarApp',\r\n\tkind: 'menu',\r\n\talias: 'usync.sidebarapp',\r\n\tname: 'uSync section sidebar menu',\r\n\tweight: 150,\r\n\tmeta: {\r\n\t\tlabel: 'Synchronisation',\r\n\t\tmenu: menu.alias,\r\n\t},\r\n\tconditions: [\r\n\t\t{\r\n\t\t\talias: 'Umb.Condition.SectionAlias',\r\n\t\t\toneOf: [sectionAlias, USYNC_SECTION_ALIAS],\r\n\t\t},\r\n\t\t{\r\n\t\t\talias: USYNC_CONDITION_NEW_SECTION,\r\n\t\t},\r\n\t],\r\n};\r\n\r\n/// example of how to extend uSync menus.\r\n\r\n// const subMenuItem : ManifestuSyncMenuItem = {\r\n//     type: 'usync-menuItem',\r\n//     alias: 'usync.menu.sub.item',\r\n//     name: 'uSync core menu item',\r\n//     meta: {\r\n//         label: 'uSync Extension',\r\n//         icon: 'icon-brick',\r\n//         entityType: 'usync-root',\r\n//         menus: [uSyncConstants.menuAlias],\r\n//     }\r\n// }\r\n\r\nexport const manifests = [\r\n\t// uSyncSection,\r\n\tmenu,\r\n\tmenuSidebarApp,\r\n\tmenuItem,\r\n\t// subMenuItem\r\n];\r\n","const modal: UmbExtensionManifest = {\r\n\ttype: 'modal',\r\n\talias: 'usync.import.modal',\r\n\tname: 'uSync import modal',\r\n\tjs: () => import('./import-modal.element.js'),\r\n};\r\n\r\nexport const manifests = [modal];\r\n","import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tifDefined,\r\n\tnothing,\r\n\tproperty,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { SyncActionButton } from '@jumoo/uSync';\r\nimport {\r\n\tUUIButtonState,\r\n\tUUIInterfaceColor,\r\n\tUUIInterfaceLook,\r\n} from '@umbraco-cms/backoffice/external/uui';\r\nimport { uSyncActionButtonClickEvent } from './events';\r\n\r\n@customElement('usync-action-button')\r\nexport class SyncActionButtonElement extends UmbLitElement {\r\n\t@property({ type: Object })\r\n\tbutton?: SyncActionButton;\r\n\r\n\t@property({ type: String })\r\n\tstate?: UUIButtonState;\r\n\r\n\t@property({ type: Boolean })\r\n\tdisabled: boolean = false;\r\n\r\n\t@state()\r\n\t_popoverOpen: boolean = false;\r\n\r\n\t#onClick(item?: SyncActionButton) {\r\n\t\tif (!item) return;\r\n\r\n\t\tthis.dispatchEvent(new uSyncActionButtonClickEvent(item));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<uui-button-group>\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tclass=\"action-button\"\r\n\t\t\t\t\t.disabled=${this.disabled}\r\n\t\t\t\t\tlabel=${this.localize.term(`uSync_${this.button?.label}`)}\r\n\t\t\t\t\tcolor=${<UUIInterfaceColor>this.button?.color}\r\n\t\t\t\t\tlook=${<UUIInterfaceLook>this.button?.look}\r\n\t\t\t\t\tstate=${ifDefined(this.state)}\r\n\t\t\t\t\t@click=${() => this.#onClick(this.button)}></uui-button>\r\n\r\n\t\t\t\t${this.renderDropdown(this.button)}\r\n\t\t\t</uui-button-group>\r\n\t\t`;\r\n\t}\r\n\r\n\t#onPopoverToggle(e: ToggleEvent) {\r\n\t\tthis._popoverOpen = e.newState === 'open';\r\n\t}\r\n\r\n\trenderDropdown(parent?: SyncActionButton) {\r\n\t\tif (!this.button?.children) return nothing;\r\n\r\n\t\tconst buttons = this.button?.children.map((item: SyncActionButton) => {\r\n\t\t\treturn html` <uui-menu-item\r\n\t\t\t\t.disabled=${this.disabled}\r\n\t\t\t\t.label=${this.localize.term(`uSync_${item.label}`)}\r\n\t\t\t\t@click-label=${() => this.#onClick(item)}></uui-menu-item>`;\r\n\t\t});\r\n\r\n\t\tif (buttons.length == 0) return nothing;\r\n\r\n\t\tconst popoverId = `popover_${parent?.key}`;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\t.disabled=${this.disabled}\r\n\t\t\t\tpopovertarget=${popoverId}\r\n\t\t\t\t.label=${this.button.label}\r\n\t\t\t\tcolor=${<UUIInterfaceColor>parent?.color}\r\n\t\t\t\tlook=${<UUIInterfaceLook>parent?.look}\r\n\t\t\t\tcompact>\r\n\t\t\t\t<uui-symbol-expand\r\n\t\t\t\t\tclass=\"expand-symbol\"\r\n\t\t\t\t\t.open=${this._popoverOpen}></uui-symbol-expand>\r\n\t\t\t</uui-button>\r\n\r\n\t\t\t<uui-popover-container\r\n\t\t\t\tid=${popoverId}\r\n\t\t\t\tmargin=\"6\"\r\n\t\t\t\tplacement=\"bottom-end\"\r\n\t\t\t\t@toggle=${this.#onPopoverToggle}>\r\n\t\t\t\t<umb-popover-layout>\r\n\t\t\t\t\t<uui-scroll-container> ${buttons} </uui-scroll-container>\r\n\t\t\t\t</umb-popover-layout>\r\n\t\t\t</uui-popover-container>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t.action-button {\r\n\t\t\tmin-width: 110px;\r\n\t\t}\r\n\r\n\t\t.expand-symbol {\r\n\t\t\ttransform: rotate(90deg);\r\n\t\t}\r\n\r\n\t\t.expand-symbol[open] {\r\n\t\t\ttransform: rotate(180deg);\r\n\t\t}\r\n\t`;\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-action-button': SyncActionButtonElement;\r\n\t}\r\n}\r\n","import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tproperty,\r\n\tquery,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { uSyncFilePickerChangeEvent } from './events';\r\n\r\n@customElement('usync-upload-file-picker')\r\nexport class uSyncFilePicker extends UmbLitElement {\r\n\t@property({ type: String })\r\n\tlabel: string = 'Upload';\r\n\r\n\t@property({ type: String })\r\n\taccept: string = '';\r\n\r\n\t@query('#file')\r\n\t_input!: HTMLInputElement;\r\n\r\n\t@state()\r\n\tprivate _file: File | undefined;\r\n\r\n\tprivate async _getFile(fileEntry: FileSystemFileEntry) {\r\n\t\treturn await new Promise<File>((resolve, reject) => {\r\n\t\t\tfileEntry.file(resolve, reject);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _onFilePickerChange() {\r\n\t\tconst files = this._input.files ? Array.from(this._input.files) : [];\r\n\r\n\t\tconst entry = files[0];\r\n\t\tconst isFile = entry instanceof File;\r\n\t\tconst file = isFile ? entry : await this._getFile(entry);\r\n\r\n\t\tthis._file = file;\r\n\t\tthis._dispachChangeEvent();\r\n\t}\r\n\r\n\tprivate async _removeFile() {\r\n\t\tthis._file = undefined;\r\n\t\tthis._input.value = '';\r\n\t\tthis._dispachChangeEvent();\r\n\t}\r\n\r\n\tprivate _onUpload() {\r\n\t\tthis._input.click();\r\n\t}\r\n\r\n\tprivate _dispachChangeEvent() {\r\n\t\tthis.dispatchEvent(new uSyncFilePickerChangeEvent(this._file));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`<input\r\n\t\t\t\t@click=${(e: Event) => e.stopPropagation()}\r\n\t\t\t\ttype=\"file\"\r\n\t\t\t\tid=\"file\"\r\n\t\t\t\tthis.accept=${this.accept}\r\n\t\t\t\t@change=${this._onFilePickerChange} />\r\n\t\t\t${this._renderFile()} ${this._renderButton()}`;\r\n\t}\r\n\r\n\t_renderFile() {\r\n\t\tif (!this._file) return nothing;\r\n\r\n\t\treturn html` <div class=\"file\">\r\n\t\t\t<div>${this._file.name}</div>\r\n\t\t\t<uui-button\r\n\t\t\t\t@click=\"${() => this._removeFile()}\"\r\n\t\t\t\tcompact\r\n\t\t\t\tcolor=\"danger\"\r\n\t\t\t\tlabel=\"Remove\">\r\n\t\t\t\t<umb-icon name=\"icon-trash\"></umb-icon>\r\n\t\t\t</uui-button>\r\n\t\t</div>`;\r\n\t}\r\n\r\n\t_renderButton() {\r\n\t\treturn this._file\r\n\t\t\t? nothing\r\n\t\t\t: html` <uui-button\r\n\t\t\t\t\tid=\"add-button\"\r\n\t\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t\tlabel=${this.label}\r\n\t\t\t\t\t@click=\"${this._onUpload}\"></uui-button>`;\r\n\t}\r\n\r\n\tstatic styles = [\r\n\t\tcss`\r\n\t\t\t.file {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t}\r\n\r\n\t\t\t#file {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\r\n\t\t\t#add-button {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default uSyncFilePicker;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-upload-file-picker': uSyncFilePicker;\r\n\t}\r\n}\r\n","import { uSyncActionRepository } from '@jumoo/uSync';\r\nimport {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport {\r\n\tTemporaryFileStatus,\r\n\tUmbTemporaryFileManager,\r\n\tUmbTemporaryFileModel,\r\n} from '@umbraco-cms/backoffice/temporary-file';\r\nimport { uSyncFilePickerChangeEvent, uSyncFilePickerUploadedEvent } from './events';\r\n\r\n@customElement('usync-file-upload')\r\nexport class uSyncFileUploadElement extends UmbLitElement {\r\n\t#fileManager: UmbTemporaryFileManager;\r\n\t#repository: uSyncActionRepository;\r\n\r\n\t@state()\r\n\tselected: File | null | undefined;\r\n\r\n\t@state()\r\n\tresult: string | undefined;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#fileManager = new UmbTemporaryFileManager(this);\r\n\t\tthis.#repository = new uSyncActionRepository(this);\r\n\r\n\t\tthis.observe(this.#fileManager.queue, (value) => {\r\n\t\t\tvalue.forEach((file) => {\r\n\t\t\t\tif (file.status === TemporaryFileStatus.SUCCESS) {\r\n\t\t\t\t\tthis.#uploadComplete(file.temporaryUnique);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t#onUpload() {\r\n\t\tif (!this.selected) return;\r\n\r\n\t\tconst upload: UmbTemporaryFileModel = {\r\n\t\t\ttemporaryUnique: UmbId.new(),\r\n\t\t\tfile: this.selected,\r\n\t\t\tstatus: TemporaryFileStatus.WAITING,\r\n\t\t};\r\n\r\n\t\tthis.#fileManager.upload([upload]);\r\n\t}\r\n\r\n\tasync #uploadComplete(temporaryUnique: string) {\r\n\t\tconst result = await this.#repository.processUpload(temporaryUnique);\r\n\r\n\t\tif (!result?.success) {\r\n\t\t\tconsole.log('upload error', result);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new uSyncFilePickerUploadedEvent(result));\r\n\t}\r\n\r\n\t#onFileChange(e: uSyncFilePickerChangeEvent) {\r\n\t\tthis.selected = e.file;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`${this.renderUploadForm()}`;\r\n\t}\r\n\r\n\trenderUploadForm() {\r\n\t\treturn html` ${this.renderFile()} ${this.renderUploadButton()} `;\r\n\t}\r\n\r\n\trenderFile() {\r\n\t\treturn html`\r\n\t\t\t<div class=\"upload-box\">\r\n\t\t\t\t<usync-upload-file-picker\r\n\t\t\t\t\tlabel=\"Select uSync Zip file\"\r\n\t\t\t\t\t@change=${this.#onFileChange}></usync-upload-file-picker>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderUploadButton() {\r\n\t\tif (!this.selected) return nothing;\r\n\r\n\t\treturn html`<uui-button\r\n\t\t\ttype=\"button\"\r\n\t\t\tlook=\"primary\"\r\n\t\t\t@click=\"${this.#onUpload}\"\r\n\t\t\tlabel=\"Upload\"></uui-button>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\r\n\t\t.upload-box {\r\n\t\t\tflex-grow: 2;\r\n\t\t}\r\n\r\n\t\tusync-upload-file-picker {\r\n\t\t\twidth: 100%;\r\n\t\t\tflex-grow: 2;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncFileUploadElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-file-upload': uSyncFileUploadElement;\r\n\t}\r\n}\r\n","import { uSyncConstants, SyncLegacyFilesConditionConfig } from '@jumoo/uSync';\r\n\r\nimport { manifests as dialogManifests } from './dialogs/manifest.js';\r\n\r\nimport './components/index.js';\r\nimport './dialogs/index.js';\r\n\r\nconst workspaceAlias = uSyncConstants.workspace.alias;\r\n\r\nconst workspace: UmbExtensionManifest = {\r\n\ttype: 'workspace',\r\n\talias: workspaceAlias,\r\n\tname: 'uSync core workspace',\r\n\tjs: () => import('./workspace.element.js'),\r\n\tmeta: {\r\n\t\tentityType: uSyncConstants.workspace.rootElement,\r\n\t},\r\n};\r\n\r\nconst context: UmbExtensionManifest = {\r\n\ttype: 'workspaceContext',\r\n\talias: uSyncConstants.workspace.contextAlias,\r\n\tname: 'uSync workspace context',\r\n\tjs: () => import('./workspace.context.js'),\r\n\tconditions: [\r\n\t\t{\r\n\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\tmatch: workspaceAlias,\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst workspaceViews: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: uSyncConstants.workspace.defaultView.alias,\r\n\t\tname: 'uSync workspace default view',\r\n\t\tjs: () => import('./views/default/default.element.js'),\r\n\t\tweight: 300,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Default',\r\n\t\t\tpathname: 'default',\r\n\t\t\ticon: 'usync-logo',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspaceAlias,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: uSyncConstants.workspace.settingView.alias,\r\n\t\tname: 'uSync workspace settings view',\r\n\t\tjs: () => import('./views/settings/settings.element.js'),\r\n\t\tweight: 200,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Settings',\r\n\t\t\tpathname: 'settings',\r\n\t\t\ticon: 'icon-settings',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspaceAlias,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: uSyncConstants.workspace.addOnView.alias,\r\n\t\tname: 'uSync addons',\r\n\t\tjs: () => import('./views/addons/addons.element.js'),\r\n\t\tweight: 100,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'AddOns',\r\n\t\t\tpathname: 'addons',\r\n\t\t\ticon: 'icon-box',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspaceAlias,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: uSyncConstants.workspace.legacyView.alais,\r\n\t\tname: 'uSync legacy',\r\n\t\tjs: () => import('./views/legacy/legacy.element.js'),\r\n\t\tweight: 150,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Legacy',\r\n\t\t\tpathname: 'legacy',\r\n\t\t\ticon: 'icon-dock-connector color-red',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspaceAlias,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\talias: uSyncConstants.conditions.legacy,\r\n\t\t\t\thasLegacyFiles: true,\r\n\t\t\t} as SyncLegacyFilesConditionConfig,\r\n\t\t],\r\n\t},\r\n];\r\n\r\nconst workspaceActions: Array<UmbExtensionManifest> = [];\r\n\r\nexport const manifests = [\r\n\tcontext,\r\n\tworkspace,\r\n\t...workspaceViews,\r\n\t...workspaceActions,\r\n\t...dialogManifests,\r\n];\r\n","const localizations: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'localization',\r\n\t\talias: 'usync.lang.enus',\r\n\t\tname: 'English',\r\n\t\tweight: 0,\r\n\t\tmeta: {\r\n\t\t\tculture: 'en',\r\n\t\t},\r\n\t\tjs: () => import('./files/en-us'),\r\n\t},\r\n];\r\n\r\nexport const manifests: UmbExtensionManifest[] = [...localizations];\r\n","const modal: UmbExtensionManifest = {\r\n\ttype: 'modal',\r\n\talias: 'usync.details.modal',\r\n\tname: 'usync details modal',\r\n\tjs: () => import('./details-modal-element.js'),\r\n};\r\n\r\nconst legacyModal: UmbExtensionManifest = {\r\n\ttype: 'modal',\r\n\talias: 'usync.legacy.modal',\r\n\tname: 'uSync legacy modal',\r\n\tjs: () => import('./legacy-modal-element.js'),\r\n};\r\n\r\nconst errorModal: UmbExtensionManifest = {\r\n\ttype: 'modal',\r\n\talias: 'usync.error.modal',\r\n\tname: 'uSync error modal',\r\n\tjs: () => import('./error-modal-element.js'),\r\n};\r\n\r\nexport const manifests = [modal, legacyModal, errorModal];\r\n","import { SyncLegacyFilesCondition } from '@jumoo/uSync';\r\nimport { uSyncConstants } from '@jumoo/uSync';\r\nimport { USYNC_CONDITION_NEW_SECTION } from './constants';\r\nimport { SyncNewSectionCondition } from './new-section.condition';\r\n\r\nexport const manifests: UmbExtensionManifest[] = [\r\n\t{\r\n\t\ttype: 'condition',\r\n\t\talias: uSyncConstants.conditions.legacy,\r\n\t\tname: 'uSync Legacy Files Condition',\r\n\t\tapi: SyncLegacyFilesCondition,\r\n\t},\r\n\t{\r\n\t\ttype: 'condition',\r\n\t\talias: USYNC_CONDITION_NEW_SECTION,\r\n\t\tname: 'uSync New Section Condition',\r\n\t\tapi: SyncNewSectionCondition,\r\n\t},\r\n];\r\n","const icons: UmbExtensionManifest = {\r\n\ttype: 'icons',\r\n\talias: 'usync.icons',\r\n\tname: 'uSync Icons',\r\n\tjs: () => import('./icons.js'),\r\n};\r\n\r\nexport const manifests = [icons];\r\n","import { manifests as trees } from './tree/manifest.js';\r\nimport { manifests as workspace } from './workspace/manifest.js';\r\nimport { manifests as localization } from './lang/manifest.js';\r\nimport { manifests as dialogs } from './dialogs/manifest.js';\r\nimport { manifests as conditions } from './conditions/manifest.js';\r\nimport { manifests as icons } from './icons/manifest.js';\r\n\r\nexport const manifests = [\r\n\t...localization,\r\n\t...trees,\r\n\t...workspace,\r\n\t...dialogs,\r\n\t...conditions,\r\n\t...icons,\r\n];\r\n","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\n\r\nimport './components/index.js';\r\nimport './dialogs/index.js';\r\nimport './signalr/index.js';\r\n\r\nimport './external/signalr/index.js';\r\nimport './api/index.js';\r\n\r\nexport * from './exports.js';\r\n\r\nimport { manifests } from './manifests.js';\r\nimport { client } from './api/client.gen.js';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n\t// register the manifests\r\n\textensionRegistry.registerMany(manifests);\r\n\r\n\t_host.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\r\n\t\tif (!_auth) return;\r\n\r\n\t\tvar config = _auth.getOpenApiConfiguration();\r\n\r\n\t\tclient.setConfig({\r\n\t\t\tauth: config.token,\r\n\t\t\tbaseUrl: config.base,\r\n\t\t\tcredentials: config.credentials,\r\n\t\t});\r\n\r\n\t\tclient.interceptors.request.use(async (request, _options) => {\r\n\t\t\tconst token = await _auth.getLatestToken();\r\n\t\t\trequest.headers.set('Authorization', `Bearer ${token}`);\r\n\t\t\treturn request;\r\n\t\t});\r\n\t});\r\n};\r\n"],"names":["USYNC_FILE_PICKER_CHANGE_EVENT","USYNC_FILE_PICKER_UPLOADED_EVENT","uSyncFilePickerChangeEvent","file","uSyncFilePickerUploadedEvent","result","USYNC_ACTION_BUTTON_CLICK_EVENT","uSyncActionButtonClickEvent","button","USYNC_ACTION_PERFORM_EVENT","uSyncActionPerformEvent","group","key","force","clean","_uSyncActionBox_instances","onAction_fn","uSyncActionBox","LitElement","__privateAdd","dropdownButtons","b","html","ifDefined","e","__privateMethod","_a","_b","css","__decorateClass","property","customElement","uSyncProcessBox","UmbElementMixin","USYNC_SIGNALR_CONTEXT_TOKEN","_signalR","_update","_add","nothing","actionHtml","action","HandlerStatus","color","label","state","_modalContext","_uSyncResultsView_instances","toggleShowAll_fn","showDetail_fn","uSyncResultsView","UMB_MODAL_MANAGER_CONTEXT","_instance","__privateSet","arr","fn","prev","curr","groupKey","ChangeType","groups","groupsHtml","r","groupHtml","_c","count","changes","localKey","detailsModal","__privateGet","USYNC_DETAILS_MODAL","_uSyncChangeView_instances","getJsonOrString_fn","uSyncChangeView","when","changesHtml","detail","oldValue","newValue","changeHtml","diffWords","change","value","ChangeDetailType","EventMessageTypeModel","A","t","R","U","_","D","O","a","i","s","o","n","y","q","f","u","H","B","E","P","I","S","W","C","x","h","__publicField","T","N","Q","w","J","p","k","c","m","g","d","client","createClient","createConfig","ActionsService","options","_heyApiClient","MigrationsService","SettingsService","_uSyncDetailsModalElement_instances","onClose_fn","uSyncDetailsModalElement","UmbModalBaseElement","uSyncDetailsModalElement$1","UmbModalToken","_uSyncErrorModalElement_instances","uSyncErrorModalElement","headline","USYNC_ERROR_MODAL","USYNC_SHOW_DETAIL_EVENT","uSyncShowDetailEvent","_uSyncResultGroupView_instances","viewError_fn","uSyncResultGroupView","UmbLitElement","changeCount","classMap","results","rowsHtml","icon","isChange","modalContext","modal","uSyncSignalRContext","UmbControllerBase","host","_uSyncSignalRContext_instances","_connection","UmbObjectState","UMB_AUTH_CONTEXT","auth","setupConnection_fn","url","token","signalR","data","UmbContextToken","HttpError","errorMessage","statusCode","trueProto","TimeoutError","AbortError","UnsupportedTransportError","message","transport","DisabledTransportError","FailedToStartTransportError","FailedToNegotiateWithServerError","AggregateErrors","innerErrors","HttpResponse","statusText","content","HttpClient","LogLevel","NullLogger","_logLevel","_message","VERSION","Arg","val","name","values","Platform","getDataDetail","includeContent","isArrayBuffer","formatArrayBuffer","view","str","num","pad","sendMessage","logger","transportName","httpClient","headers","getUserAgentHeader","responseType","response","createLogger","ConsoleLogger","SubjectSubscription","subject","observer","index","minimumLogLevel","logLevel","msg","userAgentHeaderName","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","version","os","runtime","runtimeVersion","userAgent","majorAndMinor","getErrorString","getGlobalThis","FetchHttpClient","requireFunc","request","abortController","error","timeoutId","msTimeout","deserializeContent","payload","cookies","XhrHttpClient","resolve","reject","xhr","header","DefaultHttpClient","TextMessageFormat","output","input","messages","HandshakeProtocol","handshakeRequest","messageData","remainingData","binaryData","separatorIndex","responseLength","textData","MessageType","Subject","item","err","MessageBuffer","protocol","connection","bufferSize","serializedMessage","backpressurePromise","backpressurePromiseResolver","backpressurePromiseRejector","BufferedItem","ackMessage","newestAckedMessage","element","currentId","sequenceId","id","resolver","rejector","DEFAULT_TIMEOUT_IN_MS","DEFAULT_PING_INTERVAL_IN_MS","DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE","HubConnectionState","HubConnection","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","statefulReconnectBufferSize","handshakePromise","startPromise","methodName","args","streams","streamIds","invocationDescriptor","promiseQueue","cancelInvocation","invocationEvent","sendPromise","newMethod","method","handlers","removeIdx","callback","responseMessage","nextPing","invocationMessage","methods","methodsCopy","expectsResponse","res","exception","completionMessage","prevRes","reconnectStartTime","previousReconnectAttempts","retryError","nextRetryDelay","previousRetryCount","elapsedMilliseconds","retryReason","callbacks","nonblocking","invocationId","streamId","argument","arg","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","retryContext","HeaderNames","AccessTokenHttpClient","innerClient","accessTokenFactory","allowRetry","HttpTransportType","TransferFormat","AbortController$1","LongPollingTransport","AbortController","transferFormat","pollOptions","pollUrl","deleteOptions","logMessage","ServerSentEventsTransport","accessToken","opened","eventSource","WebSocketTransport","logMessageContent","webSocketConstructor","webSocket","_event","event","MAX_REDIRECTS","HttpConnection","webSocketModule","eventSourceModule","TransportSendQueue","negotiateResponse","redirects","negotiateUrl","connectionToken","requestedTransport","requestedTransferFormat","connectUrl","transportExceptions","transports","negotiate","endpoint","transportOrError","ex","callStop","useStatefulReconnect","transportMatches","aTag","searchParams","actualTransport","_transport","PromiseSource","transportResult","arrayBuffers","totalLength","offset","reason","JSON_HUB_PROTOCOL_NAME","JsonHubProtocol","hubMessages","parsedMessage","LogLevelNameMapping","parseLogLevel","mapping","HubConnectionBuilder","logging","isLogger","transportTypeOrOptions","retryDelaysOrReconnectPolicy","milliseconds","httpConnectionOptions","uSyncActionRepository","_actionDataSource","_settingsDataSource","_migrartionDataSource","uSyncActionDataSource","USyncSettingsDataSource","uSyncMigrationDataSource","setName","requestId","fileId","_host","tryExecute","USYNC_IMPORT_MODAL","_uSyncImportModalDialog_instances","onImport_fn","onUploaded_fn","uSyncImportModalDialog","uSyncImportModalDialog$1","uSyncWorkspaceContext","_repository","_signalRContext","_actions","_workingActions","_working","_completed","_results","_settings","_handlerSettings","_handlerSets","_legacy","uSyncConstants","UmbArrayState","UmbBooleanState","USYNC_CORE_CONTEXT_TOKEN","UMB_WORKSPACE_CONTEXT","clientId","complete","step","summary","modalManager","download","_actionContext","_uSyncDefaultViewElement_instances","performAction_fn","renderSetPicker_fn","renderLegacyBanner_fn","renderActions_fn","renderBanner_fn","renderProcessBox_fn","renderReport_fn","uSyncDefaultViewElement","sets","_currentAction","set","select","actions","uSyncDefaultViewElement$1","_workspaceContext","uSyncWorkspaceRootElement","addons","UmbTextStyles","uSyncWorkspaceRootElement$1","_constants","SyncLegacyFilesCondition","UmbConditionBase","USYNC_SECTION_ALIAS","SyncNewSectionCondition","_SyncNewSectionCondition_instances","_currentSection","_allSections","UmbExtensionsManifestInitializer","umbExtensionsRegistry","sections","section","checkPermission_fn","UMB_SECTION_CONTEXT","_context","_alias","_pathName","_uSyncMenuElement_instances","constructHref_fn","uSyncMenuElement","_items","sectionContext","pathName","USYNC_CONDITION_NEW_SECTION","sectionAlias","menuConstants","menu","menuItem","menuSidebarApp","manifests","importModal_element","_SyncActionButtonElement_instances","onClick_fn","onPopoverToggle_fn","SyncActionButtonElement","parent","buttons","popoverId","uSyncFilePicker","fileEntry","entry","query","_fileManager","_uSyncFileUploadElement_instances","onUpload_fn","uploadComplete_fn","onFileChange_fn","uSyncFileUploadElement","UmbTemporaryFileManager","TemporaryFileStatus","upload","UmbId","temporaryUnique","workspaceAlias","workspace","workspace_element","context","workspace_context","workspaceViews","default_element","workspaceActions","dialogManifests","localizations","detailsModalElement","legacyModal","errorModal","errorModalElement","icons","localization","trees","dialogs","conditions","onInit","extensionRegistry","_auth","config","_options"],"mappings":"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","x_google_ignoreList":[6,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}